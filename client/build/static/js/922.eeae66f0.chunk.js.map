{"version":3,"file":"static/js/922.eeae66f0.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/ProfileMobileSlider.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/EPCMatcher/LeadGenerator.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list!</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState()\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index]) {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setLoading(true)\n    setSearch(false)\n    setMatchingProperties({})\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                  {expandedItems.has(index) ? '-' : '+'}\n                                </button>\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>❤️</h3>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>⭐️</h3>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nexport default ManualMatcher","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            console.log('saved properties ->', savedProperties)\n            setArchivedProperties(archivedFavourites)\n            setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n\n          } else {\n            const allFavouriteIds = []\n            loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n\n          }\n\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        handleSavedActionShow()\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {  // Adjusted to take an array of IDs\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n        // Optionally, refresh data or update UI accordingly\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, favouriteIds, dateFilter) => {\n    setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, favouriteIds, dateFilter) => {\n    setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setLeadGenSection('Explore properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setLeadGenSection('Explore properties')\n    }\n\n\n    // setRentalLoading(true)\n    // setSalesLoading(true)\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    const days = dateFilter === '1day' ? 2 :\n      dateFilter === '2days' ? 3 :\n        dateFilter === '3days' ? 4 :\n          dateFilter === '7days' ? 8 :\n            dateFilter === '4weeks' ? 28 :\n              dateFilter === '8weeks' ? 56 :\n                dateFilter === '12weeks' ? 84 :\n                  dateFilter === '16weeks' ? 112 : 0\n    // dateFilter === 'all' ? 10000 : 0\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      let mostRecentDate\n      if (addedDate && reducedDate) {\n        mostRecentDate = addedDate > reducedDate ? addedDate : reducedDate\n      } else {\n        mostRecentDate = addedDate || reducedDate // Use the non-null date\n      }\n\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      const isWithin = isWithinLastDays(mostRecentDate, days)\n\n      return isWithin\n    })\n  }\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    const pastDate = new Date()\n    pastDate.setDate(now.getDate() - days)\n    // console.log(`Comparing ${date} with ${pastDate}`)\n    return date >= pastDate\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n              <section className='property-finder'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Explore properties')} style={{ borderBottom: leadGenSection === 'Explore properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore properties' ? '700' : '400' }}>Explore properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Archived properties')} style={{ borderBottom: leadGenSection === 'Archived properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived properties' ? '700' : '400' }}>Archived properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                  </div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n\n\n                </div>\n                <hr className='title-line' />\n\n                <div className='lead-generator'>\n\n                  <div className='property-results'>\n                    {leadGenSection === 'Home' ?\n                      <>\n                        <div className='lead-gen-inputs'>\n                          <h3 className='sub-title'>Set your search criteria</h3>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Postcode(s)</h3>\n                              <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                              <input\n                                type=\"text\"\n                                value={leadGenDetails.postcode}\n                                onChange={inputPostcode}\n                                placeholder=\"Enter postcode...\"\n                              />\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Channel</h3>\n                              <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                <option>Lettings</option>\n                                <option>Sales</option>\n                                <option>Both</option>\n\n                              </select>\n                            </div>\n                          </div>\n                          <div>\n\n                            <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                              <h3 className='sub-title'>Add some more detail</h3>\n\n                              {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                            </div>\n                            {expand ?\n                              <>\n                                <div className='single-title-double'>\n                                  <h3>Bedrooms</h3>\n                                  <div className='double-dropdowns'>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_min || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No min</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                    </select>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_max || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No max</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                      <option value=\"7\">7</option>\n                                    </select>\n                                  </div>\n\n                                </div>\n                                {\n                                  leadGenDetails.channel === 'Lettings' ?\n                                    <>\n                                      <div className='single-title-double'>\n                                        <h3>Price</h3>\n                                        <div className='double-dropdowns'>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_min || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                          >\n                                            <option value={0}>No min</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_max || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                          >\n                                            <option value={10000000}>No max</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n\n                                        </div>\n\n                                      </div>\n                                      <div className='single-input-block'>\n                                        <div className='input-block large'>\n                                          <h3>Furnishing status</h3>\n                                          <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                            <option>Either furnished or unfurnished</option>\n                                            <option>Furnished</option>\n                                            <option>Unfurnished</option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                    </>\n                                    :\n                                    leadGenDetails.channel === 'Sales' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                            >\n                                              <option value={100000000}>No max</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Both' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Rental price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                              >\n                                                <option value={10000000}>No max</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                          <div className='single-input-block'>\n                                            <div className='input-block large'>\n                                              <h3>Rental furnishing status</h3>\n                                              <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                <option>Either furnished or unfurnished</option>\n                                                <option>Furnished</option>\n                                                <option>Unfurnished</option>\n                                              </select>\n                                            </div>\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Sales price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n\n\n                                        : ''}\n\n                              </>\n                              : ''}\n                          </div>\n                          <div className='lead-gen-save'>\n                            <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                          </div>\n                        </div>\n\n                      </>\n                      :\n                      leadGenSection === 'Explore properties' && !rentalLoading ?\n                        <>\n                          <div className='results-block'>\n                            <div className=\"property-insight-nav\">\n                              <div className=\"property-insight-buttons\">\n                                <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                              </div>\n                              <div className='save-section'>\n                                <div className=\"print-icon\"></div>\n\n                                <h3 onClick={addFavourite}>Save selection</h3>\n                              </div>\n                            </div>\n                            {channelView === 'Lettings' ?\n                              <>\n                                <div className='filter-section'>\n                                  <h3>Filter properties</h3>\n                                  <select\n                                    className='dropdown'\n                                    value={dateFilter}\n                                    onChange={(e) => setDateFilter(e.target.value)}\n                                  >\n                                    <option value=\"1day\">Updated in the last 24 hours</option>\n                                    <option value=\"2days\">Updated in the last 48 hours</option>\n                                    <option value=\"3days\">Updated in the last 72 hours</option>\n                                    <option value=\"7days\">Updated in the last week</option>\n                                    <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                    <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                    <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                    <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                    <option value=\"all\">All matching properties</option>\n                                  </select>\n                                </div>\n                                {rentalLoading ?\n                                  <div className='property-table-loading'>\n                                    <Loading />\n                                  </div>\n                                  : !rentalLoading ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                        <div className='select-all-box'>\n                                          <h5>Select all</h5>\n                                          <div className='custom-checkbox'>\n                                            <input\n                                              className='checkbox'\n                                              type=\"checkbox\"\n                                              checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                              onChange={handleSelectAllChange}\n                                            />\n                                            <label className='label'>\n\n                                            </label>\n\n                                          </div>\n                                        </div>\n                                      </div>\n\n                                      <div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column' >\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column' onClick={sortByPostcode}>\n                                          <h5>Postcode</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column' onClick={sortByPrice}>\n                                          <h5>Price</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Select</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details'>\n                                        {filteredProperties ? filteredProperties.map((item, index) => {\n                                          const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                          return (\n                                            <>\n                                              <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.epc_data_list[0].address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.propertyType}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                    <div className='saved-message'>\n                                                      <h3>❤️</h3>\n                                                      <h3>Saved</h3>\n                                                    </div>\n                                                    :\n                                                    archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>⭐️</h3>\n                                                        <h3>Archived</h3>\n                                                      </div>\n                                                      :\n                                                      <div className='custom-checkbox'>\n\n                                                        <input\n                                                          className='checkbox'\n                                                          type=\"checkbox\"\n                                                          checked={checkboxStatus[index]}\n                                                          onChange={(e) => handleCheckboxChange(e, index)}\n                                                        />\n                                                        <label className='label'>\n\n                                                        </label>\n                                                      </div>\n                                                  }\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n\n\n                                    </>\n                                    : ''}\n                              </>\n                              : channelView === 'Sales' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All matching properties</option>\n                                    </select>\n                                  </div>\n                                  {salesLoading ?\n                                    <div className='property-table-loading'>\n                                      <Loading />\n                                    </div>\n                                    : !salesLoading ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n                                          <div className='select-all-box'>\n                                            <h5>Select all</h5>\n                                            <div className='custom-checkbox'>\n                                              <input\n                                                className='checkbox'\n                                                type=\"checkbox\"\n                                                checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                onChange={handleSelectAllSalesChange}\n                                              />\n                                              <label className='label'>\n\n                                              </label>\n\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details'>\n                                          {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                            const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.epc_data_list[0].address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n                                                        <div className='custom-checkbox'>\n\n                                                          <input\n                                                            className='checkbox'\n                                                            type=\"checkbox\"\n                                                            checked={salesCheckboxStatus[index]}\n                                                            onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                          />\n                                                          <label className='label'>\n\n                                                          </label>\n                                                        </div>\n                                                    }\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n\n\n                                      </>\n                                      : ''}\n                                </>\n                                :\n\n                                ''}\n                          </div>\n                        </>\n                        : leadGenSection === 'Explore properties' && rentalLoading ?\n                          <div className='property-table-loading'>\n                            <Loading />\n                          </div>\n                          : leadGenSection === 'Saved properties' ?\n                            <>\n                              <div className='results-block'>\n                                {savedProperties && savedProperties.length > 0 ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                      {userData && userData.epc_favourites && (\n                                        <>\n                                          <CSVLink\n                                            data={csvData}\n                                            className='export'\n                                            filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                                            style={{ textDecoration: 'none' }}\n                                          >\n                                            <div className='header-cta' onClick={() => archiveFavourite(userData.epc_favourites.map(fav => fav.rightmove_id))}>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        </>\n                                      )}\n                                    </div><div className='results-headers'>\n                                      <h5 id='column1' className='column'>#</h5>\n                                      <div id='column2' className='column'>\n                                        <h5>Address</h5>\n                                      </div>\n                                      <div id='column3' className='column'>\n                                        <h5>Postcode</h5>\n                                      </div>\n                                      <div id='column4' className='column'>\n                                        <h5>Added</h5>\n                                      </div>\n                                      <div id='column5' className='column'>\n                                        <h5>Reduced</h5>\n                                      </div>\n                                      <div id='column6' className='column'>\n                                        <h5>Channel</h5>\n                                      </div>\n                                      <div id='column7' className='column'>\n                                        <h5>Price</h5>\n                                      </div>\n                                      <div id='column8' className='column'>\n                                        <h5>Bedrooms</h5>\n                                      </div>\n                                      <div id='column9' className='column'>\n                                        <h5>Agent</h5>\n                                      </div>\n                                      <div id='column10' className='column'>\n                                        <h5></h5>\n                                      </div>\n                                    </div>\n                                    <hr className='property-divider' />\n                                    <div className='saved-properties'>\n\n                                      <div className='results-details'>\n                                        {savedProperties ? savedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  <button className='minus' onClick={() => deleteFavourite(item.rightmove_id)}>-</button>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n\n                                          : ' '}\n                                      </div>\n                                    </div>\n\n                                  </>\n                                  : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                }\n                              </div>\n\n\n                            </>\n                            : leadGenSection === 'Archived properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {archivedProperties && archivedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n\n\n                                      </div><div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details archive'>\n                                        {archivedProperties ? archivedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.property_type}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              : leadGenSection === 'Manual matcher' ?\n                                <ManualMatcher\n                                  increaseUsageCount={increaseUsageCount}\n                                  setErrors={setErrors}\n                                  userData={userData}\n                                  loadUserData={loadUserData}\n                                  savedProperties={savedProperties}\n                                  archivedProperties={archivedProperties}\n                                  handleVisitUrl={handleVisitUrl}\n                                />\n                                :\n                                ''\n                    }\n                  </div>\n                </div>\n\n\n              </section>\n\n\n            </>\n\n          </section>\n        </section>\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","_Fragment","_jsxs","onClick","style","fontWeight","backgroundColor","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","Modal","show","onHide","backdrop","Body","closeAndLeave","increaseUsageCount","setErrors","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","loading","setLoading","useState","navigate","useNavigate","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","some","rightmove_id","epcData","isUserAuth","newFavourites","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","response","post","headers","Authorization","getAccessToken","addFavourite","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","errors","setUserData","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","variableSide","setVariableSide","favouritedProperties","setFavouritedProperties","setSavedProperties","setArchivedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedRows","setSelectedRows","selectedSalesRows","setSelectedSalesRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","favouriteIds","setFavouriteIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","setLatestFavourites","getUserToken","lead_gen_details","filteredFavourites","epc_favourites","fav","action","archivedFavourites","newFavouriteIds","dataCsv","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","allFavouriteIds","getUser","useEffect","deselectAllRows","deselectAllSalesRows","addressPostcode","property_type","date_added","postcodeValue","bedroomsMin","bedroomsMax","priceMin","priceMax","additionalRental","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","window","open","salesPrices","rentalPrices","filterPropertiesByDate","properties","days","addedDate","parseDate","property_data","reducedDate","mostRecentDate","isWithinLastDays","filtered","dateStr","day","month","year","split","date","now","pastDate","setDate","getDate","sortByPrice","sorted","priceA","parseInt","priceB","salesSorted","sortByPostcode","localeCompare","setSavedActionShow","handleSavedActionShow","status","message","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","borderBottom","textUnderlineOffset","token","localStorage","removeItem","prevData","NumericFormat","displayType","thousandSeparator","prefix","put","CSVLink","filename","getCurrentDate","getFullYear","String","getMonth","padStart","textDecoration","favourite_ids","archiveFavourite","deleteFavourite","ManualMatcher","existingFavouriteIds","row","checked","every","Boolean","selectAllRows","existingCombinations","allRows","isRowSelected","selectedRow","handleCheckboxChange","updatedStatus","selectedProperty","prevRows","selectAllSalesRows","salesCheckboxChange","SavedProperties"],"sourceRoot":""}