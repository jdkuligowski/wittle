{"version":3,"file":"static/js/844.a73c8abb.chunk.js","mappings":"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","sources":["components/tools/NavBarRevised.js","components/tools/ProfileMobileSlider.js","components/tools/WhiteNavbar.js","components/whiteLabel/WhiteSidebar.js","components/whiteLabel/propertyList.js/ListingGenerator.js"],"sourcesContent":["import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide, userData }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo'>\n          <h2 onClick={() => navigate('/')}>Wittle</h2>\n        </div>\n        <div className='profile-buttons'>\n          <div className='profile-button-title' >\n            <h2 onClick={() => {\n              setProfileDetail('Home')\n              setProfileContent('Home')\n              navigate('/agents/profile')\n            }}>🧘‍♂️ Wittle home</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('My properties')\n              setProfileContent('My properties')\n              navigate('/agents/properties')\n            }}>🏡 My property list</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>🧠 Listing generator</h2>\n          </div>\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Variables')\n              setProfileDetail('Variables')\n              setVariableSide(!variableSide)\n              navigate('/agents/explore')\n            }\n            }>🔎 Explore</h2>\n            {variableSide ? <h4>v</h4> : <h4>^</h4>}\n          </div> */}\n\n          {/* <div className='profile-button-sub'>\n            <h3 onClick={() => setProfileDetail('Primary schools')}>🏫 Primary schools</h3>\n            <h3 onClick={() => setProfileDetail('Secondary schools')}>👨‍🏫 Secondary schools</h3>\n            <h3 onClick={() => setProfileDetail('Restaurants')}>🍽 Restaurants </h3>\n            <h3 onClick={() => setProfileDetail('Pubs')}>🍺 Pubs </h3>\n            <h3 onClick={() => setProfileDetail('Fitness')}>🏋️‍♂️ Fitness </h3>\n            <h3 onClick={() => setProfileDetail('Supermarkets')}>🛒 Supermarkets </h3>\n            <h3 onClick={() => setProfileDetail('EVs')}>⛽️ EVs </h3>\n\n          </div> */}\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Comparison')\n              setProfileDetail('Comparison')\n              navigate('/agents/compare')\n            }}>↔️ Comparison</h2>\n          </div> */}\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Property finder')\n              setProfileDetail('Property finder')\n              navigate('/agents/finder')\n            }}>🔎 Property finder</h2>\n          </div>\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Account')\n              setProfileDetail('Account')\n            }}>🖥 Account details</h2>\n          </div> */}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst ListingGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n  \n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Listing generator')\n  const [profileDetail, setProfileDetail] = useState('Listing generator')  \n  \n  // lisrting options\n  const [listingSelection, setListingSelection] = useState('Property insights')\n  \n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          setProfileContent={setProfileContent} \n          userData={userData}\n        />    \n\n        <section className='listing-generator'> \n          {/* <h1>Wittle listing generator</h1> */}\n          {/* <h1>Insert your property details to build a listing or explore insights</h1> */}\n\n          <div className='listing-options'>\n            <h5 className='no-print' onClick={() => setListingSelection('Property insights')} style={{ textDecoration: listingSelection === 'Property insights' ? 'underline 3px #FFA7E5' : 'none', textUnderlineOffset: listingSelection === 'Property insights' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Property insights' ? '700' : '400' }}>Property insights</h5>\n            <h5 className='no-print' onClick={() => setListingSelection('Listing generator')} style={{ textDecoration: listingSelection === 'Listing generator' ? 'underline 3px #FFA7E5' : 'none', textUnderlineOffset: listingSelection === 'Listing generator' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Listing generator' ? '700' : '400'  }}>Listing generator</h5>\n          \n          </div>\n\n          <div className='insight-inputs'>\n            {listingSelection === 'Property insights' ? \n              <>\n                <h3>Insert full postcode to extract details about property</h3>\n                <div className='input-block'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <button onClick={() => navigate(`/agents/property/${postcodeSubstring}`)}>See insights</button>\n              </>\n              : listingSelection === 'Listing generator' ?\n                <>\n                  {/* <h3>Input details and select features you want to include your listing</h3>\n                  <div className='input-block'>\n                    <h3>Postcode</h3>\n                    <input\n                      type=\"text\"\n                      value={postcodeSubstring}\n                      onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                      placeholder=\"Enter postcode...\"></input>\n                  </div>\n                  <div className='input-block'>\n                    <h3>Bedrooms</h3>\n                    <input\n                      type=\"text\"\n                      value={postcodeSubstring}\n                      onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                      placeholder=\"Enter postcode...\"></input>\n                  </div> */}\n                  {/* <button onClick={() => navigate(`/agents/property/${postcodeSubstring}`)}>See insights</button> */}\n                </>\n\n                : '' }\n\n          </div>\n\n\n          \n        </section>\n\n\n      </section> \n\n\n\n    </>\n  )\n}\n\nexport default ListingGenerator"],"names":["setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","className","style","backgroundColor","color","onClick","textDecoration","textUnderlineOffset","fontWeight","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","variableSide","setVariableSide","userData","id","axios","setUserData","loading","setLoading","search","setSearch","listingSelection","setListingSelection","postcodeSubstring","setPostcodeSubstring","useEffect","async","data","getUserToken","headers","Authorization","getAccessToken","console","log","error","getUser","type","value","onChange","e","target","toUpperCase","replace","placeholder"],"sourceRoot":""}