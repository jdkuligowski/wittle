{"version":3,"file":"static/js/74.1f5a58d3.chunk.js","mappings":"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","sources":["components/tools/Footer.js","components/tools/NavBar.js","components/tools/NavBarRevised.js","components/tools/WhiteNavbar.js","components/whiteLabel/WhiteSidebar.js","components/whiteLabel/propertyDetails/variableDetails/SinglePrimarySchool.js"],"sourcesContent":["\n\n\nconst Footer = ({ textColour, pageType }) => {\n\n\n\n  return (\n    <>\n      <section className='website-footer no-print' id={pageType}>\n        <p style={{ color: textColour }}>Wittle Technology Limited is a registered company in England and Wales with corporation number 14326945.</p>\n        <p style={{ color: textColour }}>Copyright Â© Wittle Technology Limited. All rights reserved.</p>\n      </section>\n    </>\n  )\n}\n\nexport default Footer","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst NavBar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state to manage navbar colour depending on page\n  // const [navbarColour, setNavBarColour] = useState('#051885')\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  const responseMessage = (response) => {\n    console.log(response)\n  }\n\n  const errorMessage = (error) => {\n    console.log(error)\n  }\n\n\n  // post google information for authentication\n  const googleLogin = async (response) => {\n    try {\n      // await axios.post('/api/auth/google/', registerData)\n      const auth = { 'auth_token': response.credential }\n      console.log(auth)\n      const { data } = await axios.post('/api/auth/google/', {\n        body: JSON.stringify(auth),\n      })\n      console.log(data)\n    } catch (err) {\n      setErrors(err)\n      console.log(err)\n      console.log(err.response.data)\n    }\n  }\n\n  return (\n    <>\n      <section className='nav-section' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n          <h4 onClick={() => navigate('/agents')} className='agent-button'>For agents</h4>\n          <h4 onClick={() => navigate('/blogs/school-search-simplified')} className='agent-button'>Insights</h4>\n        </div>\n        <div className='menu-container' onClick={handleMenuShow}>\n          <div className=\"menu-trigger\">\n            <span>\n              <div className='burger-icon'>\n                <hr className='burger-icon-line' />\n                <hr className='burger-icon-line' />\n                <hr className='burger-icon-line' />\n              </div>\n            </span>\n          </div>\n        </div>\n        <button onClick={() => navigate('/login')} className='agent-login'>Agent login</button>\n      </section>\n      <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      />\n    </>\n  )\n\n}\n\nexport default NavBar","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide, userData }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo'>\n          <h2 onClick={() => navigate('/')}>Wittle</h2>\n        </div>\n        <div className='profile-buttons'>\n          <div className='profile-button-title'>\n            <h2 onClick={() => {\n              setProfileDetail('My properties')\n              setProfileContent('My properties')\n              navigate('/agents/profile')\n            }}>ð§ââï¸ My properties</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Variables')\n              setProfileDetail('Variables')\n              setVariableSide(!variableSide)\n              navigate('/agents/explore')\n            }\n            }>ð Explore</h2>\n            {variableSide ? <h4>v</h4> : <h4>^</h4>}\n          </div>\n          {variableSide ?\n            <div className='profile-button-sub'>\n              <h3 onClick={() => setProfileDetail('Primary schools')}>ð« Primary schools</h3>\n              <h3 onClick={() => setProfileDetail('Secondary schools')}>ð¨âð« Secondary schools</h3>\n              <h3 onClick={() => setProfileDetail('Restaurants')}>ð½ Restaurants </h3>\n              <h3 onClick={() => setProfileDetail('Pubs')}>ðº Pubs </h3>\n              <h3 onClick={() => setProfileDetail('Fitness')}>ðï¸ââï¸ Fitness </h3>\n              <h3 onClick={() => setProfileDetail('Supermarkets')}>ð Supermarkets </h3>\n              <h3 onClick={() => setProfileDetail('EVs')}>â½ï¸ EVs </h3>\n              {/* <h3 onClick={() => setProfileDetail('6th forms')}>ð 6th forms</h3> */}\n              {/* <h3 onClick={() => setProfileDetail('Saved searches')}>ð Saved searches</h3>\n              <h3 onClick={() => setProfileDetail('Property comparison')}>ð§ Property comparison</h3> */}\n            </div>\n            :\n            ''}\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Comparison')\n              setProfileDetail('Comparison')\n              navigate('/agents/compare')\n            }}>âï¸ Comparison</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Account')\n              setProfileDetail('Account')\n            }}>ð¥ Account details</h2>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar","import React, { useState, useEffect, useInsertionEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken , getAccessToken } from '../../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Footer from '../../../tools/Footer'\nimport WhiteSidebar from '../../WhiteSidebar'\nimport WhiteNavbar from '../../../tools/WhiteNavbar'\nimport NavBarRevised from '../../../tools/NavBarRevised'\n\n\n\n\n\nconst SinglePrimarySchool = () => {\n\n  // state for errors\n  const [errors, setErrors] = useState()\n\n  // state for navigateion\n  const navigate = useNavigate()\n\n  // state for school information\n  const [primaryData, setPrimaryData] = useState()\n\n  // id for searching for property\n  const { id } = useParams()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('My properties')\n  const [profileDetail, setProfileDetail] = useState('My properties')  \n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  // load in specfic secondary school\n  const loadPrimaryData = () => {\n    const getPrimaries = async () => {\n      try {\n        const { data } = await axios.get(`/api/primaries/${id}`)\n        console.log('single primary data ->', data)\n        setPrimaryData(data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getPrimaries()\n  }\n\n  // carry out calculation\n  useEffect(() =>{\n    loadPrimaryData()\n  }, [])\n\n\n  return (\n\n    <>\n      <section className='agent-specific-property'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <div className='go-back-button'>\n          <h5 onClick={() =>  navigate('/agents/profile')}>&lt;- back to profile</h5>\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n        />\n        {primaryData ? \n          <>\n            <section className=\"single-school-profile\">\n              <div className=\"school-core-info\">\n                <div className=\"info-left\">\n                  <h1>{primaryData[0].school_name}</h1>\n                  <h3 className='normal'>ð Ofsted: {primaryData[0].ofsted_results === null ? 'N/a' : primaryData[0].ofsted_results}</h3>\n                  <h3 className='normal'>ð {primaryData[0].students} students per year</h3>\n                  <h3 className='normal'>ð¨âð§ Gender: {primaryData[0].gender}</h3>\n                  <h3 className='normal'>ð Faith: {primaryData[0].religion === null ? 'All' : primaryData[0].religion}</h3>\n                  {/* <h3 className='website'>ð» {primaryData[0].school_url}</h3> */}\n                  <a href={primaryData[0].school_url} target='_blank' className='website' rel=\"noreferrer\">ð» {primaryData[0].school_url}</a>\n\n                </div>\n                <div className=\"info-right\">\n                  <div className='school-image' id='primary' style={{ backgroundImage: primaryData[0].image_url === null ? undefined : `url(${primaryData[0].image_url})` }}></div>\n                </div>\n              </div>\n              <div className='school-academic-highlights'>\n                <h1>Academic highlights</h1>\n                <div className='row'>\n                  <div className='item'>\n                    <div className='circle'>\n                      <h1>{Math.round(primaryData[0].percentile * 100) + 1}%</h1>\n                    </div>\n                    <p>In the top {Math.round(primaryData[0].percentile * 100) + 1}% of primary schools in London</p>\n                  </div>\n                  <div className='item'>\n                    <div className='circle'>\n                      <h1>{Math.round(primaryData[0].borough_percentile * 100) + 1}%</h1>\n                    </div>\n                    <p>In the top {Math.round(primaryData[0].borough_percentile * 100) + 1}% of schools in {primaryData[0].local_authority}</p>\n                  </div>\n                </div>\n              </div>\n              <div className='school-results'>\n                <h1>KS3 Results</h1>\n\n                {primaryData && primaryData[0].school_type === 'Independent school' ? \n                  <h5 className='no-results'>No KS3 results for Independent schools</h5>\n                  : primaryData ?\n                    <>\n                      <div className='school-table-headers'>\n                        <h5 id='column1'>#</h5>\n                        <h5 id='column2'>Subject</h5>\n                        <h5 id='column3'>At standard (%)</h5>\n                        <h5 id='column4'>Exceeding standard (%)</h5>\n                      </div><div className='school-table-details'>\n\n                        <div className='school-content'>\n                          <div className='column' id='column1'>\n                            <h5>{1}</h5>\n                          </div>\n                          <div className='column' id='column2'>\n                            <h5>Reading</h5>\n                          </div>\n                          <div className='column' id='column3'>\n                            <h5>{primaryData[0].at_standard_reading}</h5>\n                          </div>\n                          <div className='column' id='column4'>\n                            <h5>{primaryData[0].exceeding_standard_reading}</h5>\n                          </div>\n                        </div>\n                        <hr className='dividing-line' />\n\n                      </div><div className='school-table-details'>\n\n                        <div className='school-content'>\n                          <div className='column' id='column1'>\n                            <h5>{2}</h5>\n                          </div>\n                          <div className='column' id='column2'>\n                            <h5>Writing</h5>\n                          </div>\n                          <div className='column' id='column3'>\n                            <h5>{primaryData[0].at_standard_writing}</h5>\n                          </div>\n                          <div className='column' id='column4'>\n                            <h5>{primaryData[0].exceeding_standard_writing}</h5>\n                          </div>\n                        </div>\n                        <hr className='dividing-line' />\n\n                      </div><div className='school-table-details'>\n\n                        <div className='school-content'>\n                          <div className='column' id='column1'>\n                            <h5>{3}</h5>\n                          </div>\n                          <div className='column' id='column2'>\n                            <h5>Maths</h5>\n                          </div>\n                          <div className='column' id='column3'>\n                            <h5>{primaryData[0].at_standard_maths}</h5>\n                          </div>\n                          <div className='column' id='column4'>\n                            <h5>{primaryData[0].exceeding_standard_maths}</h5>\n                          </div>\n                        </div>\n                        <hr className='dividing-line' />\n\n                      </div><div className='school-table-details'>\n\n                        <div className='school-content'>\n                          <div className='column' id='column1'>\n                            <h5>{4}</h5>\n                          </div>\n                          <div className='column' id='column2'>\n                            <h5>Grammar, punctuation and spelling</h5>\n                          </div>\n                          <div className='column' id='column3'>\n                            <h5>{primaryData[0].at_standard_gps}</h5>\n                          </div>\n                          <div className='column' id='column4'>\n                            <h5>{primaryData[0].exceeding_standard_gps}</h5>\n                          </div>\n                        </div>\n                        <hr className='dividing-line' />\n\n                      </div><div className='school-table-details'>\n\n                        <div className='school-content'>\n                          <div className='column' id='column1'>\n                            <h5>{5}</h5>\n                          </div>\n                          <div className='column' id='column2'>\n                            <h5>Science</h5>\n                          </div>\n                          <div className='column' id='column3'>\n                            <h5>{primaryData[0].at_standard_science}</h5>\n                          </div>\n                          <div className='column' id='column4'>\n                            <h5>{primaryData[0].exceeding_standard_science}</h5>\n                          </div>\n                        </div>\n                        <hr className='dividing-line' />\n\n                      </div>\n                    </>\n                    : '' }\n              </div>\n\n            </section>\n          </>\n          : '' }\n      </section> \n\n    \n    </>\n  )\n}\n\nexport default SinglePrimarySchool"],"names":["textColour","pageType","className","id","style","color","navbarColour","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","backgroundColor","onClick","handleMenuClose","removeItemFromStorage","token","localStorage","removeItem","window","location","reload","setProfileContent","profileContent","profileDetail","setProfileDetail","navColour","setNavColour","titleColour","setTitleColour","setTextColour","textDecoration","textUnderlineOffset","isUserAuth","variableSide","setVariableSide","userData","primaryData","setPrimaryData","useParams","useEffect","async","data","axios","console","log","error","getPrimaries","school_name","ofsted_results","students","gender","religion","href","school_url","target","rel","backgroundImage","image_url","undefined","Math","round","percentile","borough_percentile","local_authority","school_type","at_standard_reading","exceeding_standard_reading","at_standard_writing","exceeding_standard_writing","at_standard_maths","exceeding_standard_maths","at_standard_gps","exceeding_standard_gps","at_standard_science","exceeding_standard_science"],"sourceRoot":""}