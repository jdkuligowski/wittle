{"version":3,"file":"static/js/453.62188908.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/NavBarRevised.js","components/tools/ProfileMobileSlider.js","components/tools/WhiteNavbar.js","components/whiteLabel/EPCMatcher/PropertyFinder.js","components/whiteLabel/WhiteSidebar.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/loading-gif-2.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst PropertyFinder = ( ) => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n  \n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')  \n  \n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n  \n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setLoading(true)\n    setSearch(false)\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    \n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property => \n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n                    (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n                    (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property => \n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n                    (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n                    (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n    \n    setSearch(true)\n  }\n\n\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function for adding favourites based on relevant row\n  const addFavourite = async (property) => {\n    if (isUserAuth()) {\n      try {\n        const { data } = await axios.post('/api/epc_favourite/', {\n          postcode: property.postcode,\n          address: property.address,\n          category: sessionName,\n        }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('session name->', sessionName)\n      \n        if (data.message && !isFavourited(property)) {\n          setFavouritedProperties(prevState => [...prevState, { postcode: property.postcode, address: property.address, category: sessionName }])\n        }\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to delete favourites\n  const deleteFavourite = async (property) => {\n    if (isUserAuth()) {\n\n      try {\n        const { data } = await axios.delete('/api/epc_favourite/', {\n          data: { \n            postcode: property.postcode,\n            address: property.address,\n          },\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        if (data.message) {\n          setFavouritedProperties(prevState => prevState.filter(fav => fav.postcode !== property.postcode || fav.address !== property.address))\n        }\n      } catch (error) {\n        console.error('Error deleting favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n  \n  \n\n\n  \n\n  function isFavourited(item) {\n    return favouritedProperties.some(fav => fav.postcode === item.postcode && fav.address === item.address)\n  }\n  \n\n  const fetchFavourites = async () => {\n    try {\n      const { data } = await axios.get('/api/epc_favourite/', {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setFavouritedProperties(data)\n    } catch (error) {\n      console.error('Error fetching favourites:', error)\n    }\n  }\n\n  useEffect(() => {\n    fetchFavourites()\n  }, [])\n\n\n\n\n  useEffect(() => {\n    if (sessionName) {\n      sessionStorage.setItem('sessionName', sessionName)\n    }\n  }, [sessionName])\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n          userData={userData}\n        />    \n\n        <>\n          {userData && userData.usage_stats[0] &&\n          ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n          (userData.usage_stats[0].package === 'Unlimited') ||\n          (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ?\n            <section className='property-finder'>\n              <h1>Find the full address of properties listed on the market</h1>\n              <div className='epc-matcher'>\n                <div className='input-section'>\n                  <h3 className='sub-title'>Add property details</h3>\n                  {!loading ?\n                    <>\n                      <div className='input-block'>\n                        <h3>Property category</h3>\n                        <input  \n                          type=\"text\" \n                          value={sessionName} \n                          onChange={e => setSessionName(e.target.value)} \n                          placeholder=\"Enter category...\"\n                        />\n                      </div>\n\n                      <div className='input-block'>\n                        <h3>Postcode</h3>\n                        <input  \n                          type=\"text\" \n                          value={postcodeSubstring} \n                          onChange={e => setPostcodeSubstring(e.target.value)} \n                          placeholder=\"Enter postcode...\"></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>Road name</h3>\n                        <input  \n                          type=\"text\" \n                          value={roadSubstring} \n                          onChange={e => setRoadSubstring(e.target.value)} \n                        ></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>Efficiency (numbers) or Rating (letters)</h3>\n                        <select onChange={(e) => setInputType(e.target.value)}>\n                          <option>Efficiency</option>\n                          <option>Rating</option>\n                        </select>\n                      </div>\n                      {inputType === 'Efficiency' ?\n                        <>\n                          <div className='input-block'>\n                            <h3>Current Energy Efficiency</h3>\n                            <input\n                              type=\"number\" \n                              value={currentEnergy} \n                              onChange={e => setCurrentEnergy(e.target.value)} \n                            ></input>\n                          </div>\n                          <div className='input-block'>\n                            <h3>Potential Energy Efficiency</h3>\n                            <input\n                              type=\"number\" \n                              value={potentialEnergy} \n                              onChange={e => setPotentialEnergy(e.target.value)} \n                            ></input>\n                          </div>\n                        </>\n                        :\n                        <>\n                          <div className='input-block'>\n                            <h3>Current Energy Rating</h3>\n                            <input\n                              type=\"text\" \n                              value={currentEnergy} \n                              onChange={e => setCurrentEnergy(e.target.value)} \n                            ></input>\n                          </div>\n                          <div className='input-block'>\n                            <h3>Potential Energy Rating</h3>\n                            <input\n                              type=\"text\" \n                              value={potentialEnergy} \n                              onChange={e => setPotentialEnergy(e.target.value)} \n                            ></input>\n                          </div>\n                        </>\n                      }\n                      <button onClick={loadProperties}>Load Properties</button>  \n                    </>\n                    :\n                    <Loading /> }    \n                  {/* <div className='tracking-results'>\n                    <h3 className='sub-title'>💻 Current plan: {userData && userData.usage_stats[0].epc_tier === 1 ? 'Limited pilot' : userData && userData.usage_stats[0].epc_tier === 2 ? 'Advanced pilot' : 'Unlimited' }</h3>\n                    <h3 className='sub-title'>🔎 Searches this month: {userData ? userData.usage_stats[0].epc_monthly_count : ''}</h3>\n                    <p>🤝 {userData && userData.usage_stats[0].epc_tier === 1 ? 'Upgrade to the advanced pilot for up to 100 searches per month' : userData && userData.usage_stats[0].epc_tier === 0 ? 'You have unlimited use of this tool' : 'Your search limit for this month is 100' }</p>\n                  </div> */}\n                </div>\n      \n\n                <div className='property-results'>\n                  <h3 className='sub-title'>Matching properties</h3>\n                  <div className='results-block'>\n                    {longPropertyList.length === 0 && !search ? <h3 className='response'>🔎 Start new search to see results</h3> :\n                      search && propertyList.length === 0 ? <h3 className='response'>🤦‍♀️ we couldn&apos;t find anything that matched your search</h3> :\n                        search && propertyList.length > 0 ?\n                          <>\n                            <div className='results-headers'>\n                              <h5 id='column1' className='column'>#</h5>\n                              <div id='column2' className='column'>\n                                <h5>Address</h5>\n                              </div>\n                              <div id='column3' className='column'>\n                                <h5>Postcode</h5>\n                              </div>\n                              <div id='column4' className='column'>\n                                <h5>Last inspection</h5>\n                              </div>\n                              <div id='column5' className='column'>\n                                <h5></h5>\n                              </div>\n                            </div>\n                            <hr className='property-divider' />\n                            <div className='results-details'>\n                              {propertyList ? propertyList\n                                .map((item, index) => {\n                                  return (\n                                    <>\n                                      <div className='results-content' key={index}>\n                                        <div className='column' id='column1'>\n                                          <h5>{index + 1}</h5>\n                                        </div>\n                                        <div className='column' id='column2'>\n                                          <h5>{item.address}</h5>\n                                        </div>\n                                        <div className='column' id='column3'>\n                                          <h5>{item.postcode}</h5>\n                                        </div>\n                                        <div className='column' id='column4'>\n                                          <h5>{item.inspection_date}</h5>\n                                        </div>\n                                        <div className='column' id='column5'>\n                                          {isFavourited(item) ? \n                                            <button className='added' onClick={() => deleteFavourite(item, index)}>✔️</button> : \n                                            <button className='add' onClick={() => addFavourite(item, index)}>+</button>\n                                          }\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                    </>\n                                  )\n                                })\n                                : ''}\n\n                            </div>\n                          </>\n                          : ''}\n                  </div>\n\n\n                </div>\n              </div>\n\n            </section>\n            : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n              <section className='property-finder'>\n                <h1>🙏 Thanks for enjoying Wittle!</h1>\n                <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n              </section>\n\n              : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n                <section className='property-finder'>\n                  <h1>🙏 Thanks for enjoying Wittle!</h1>\n                  <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n                </section>\n\n                : ''}\n        </>\n\n      </section>\n \n\n\n\n    </>\n  )\n}\n\nexport default PropertyFinder","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\nimport axios from 'axios'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // userdata state\n  const [userData, setUserData] = useState()\n\n  // errors\n  const [errors, setErrors] = useState()\n\n\n  const [activeItem, setActiveItem] = useState('')\n\n  // state for changing the view to insights results\n  const [insightView, setInsightView] = useState('Search')\n\n  \n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n  \n  useEffect(() => {\n    setTimeout(() => {\n      if (activeItem === 'Home') {\n        navigate('/agents/profile')\n      } else if (activeItem === 'Saved items') {\n        navigate('/agents/favourites')\n      }\n      // ... other conditions\n    }, 100)\n  },[activeItem])\n\n\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo-section'>\n          <div className='logo' onClick={() => navigate('/')}>\n            {/* <h2 onClick={() => navigate('/')}>Wittle</h2> */}\n          </div>\n        </div>\n\n\n        <div className='profile-buttons'>\n          <div className={`profile-button-title ${activeItem === 'Home' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Home')\n              setTimeout(() => {\n                setProfileDetail('Home')\n                setProfileContent('Home')\n              }, 0)\n            }}>\n            <div className='icon' id='home-icon' ></div>\n            <h2>Wittle home</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Listing generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Listing generator')\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>\n            <div className='icon' id='listing-icon'></div>\n            <h2>Listing generator</h2>\n          </div>\n          {/* <div className={`profile-button-title ${activeItem === 'AI listing generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('AI listing generator')\n              setProfileDetail('AI listing generator')\n              setProfileContent('AI listing generator')\n              navigate('/agents/ai-listing-generator')\n            }}>\n            <div className='icon' id='ai-icon'></div>\n            <h2>AI Listing generator</h2>\n          </div> */}\n          <div className={`profile-button-title ${activeItem === 'Lead generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator')\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Saved items' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Saved items')\n              setTimeout(() => {\n                setProfileDetail('Saved items')\n                setProfileContent('Saved items')\n                // navigate('/agents/favourites')\n              }, 0)\n            }}>\n            <div className='icon' id='saved-icon'></div>\n            <h2 >My saved items</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Account' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Account')\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n            }}>\n            <div className='icon' id='account-icon'></div>\n            <h2>Account details</h2>\n          </div>\n          \n\n        </div>\n\n\n\n\n        {/* <div className='profile-buttons'>\n          <div className='profile-button-title' >\n            <h2 onClick={() => {\n              setProfileDetail('Home')\n              setProfileContent('Home')\n              navigate('/agents/profile')\n            }}>🧘‍♂️ Wittle home</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('Saved items')\n              setProfileContent('Saved items')\n              navigate('/agents/favourites')\n            }}>🏡 Saved items</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>🧠 Listing generator</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('AI listing generator')\n              setProfileContent('AI listing generator')\n              navigate('/agents/ai-listing-generator')\n            }}>🧠 AI Listing generator</h2>\n          </div>\n\n\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>🔎 Lead generator</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n\n            }}>🖥 Account details</h2>\n          </div>\n        </div> */}\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","_Fragment","_jsxs","style","backgroundColor","color","onClick","textDecoration","textUnderlineOffset","homeSelect","searchSelect","lifestyleSelect","accountSelect","fontWeight","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","axios","defaults","xsrfCookieName","xsrfHeaderName","PropertyFinder","userData","setUserData","loading","setLoading","search","setSearch","variableSide","setVariableSide","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","channel","setChannel","inputType","setInputType","favouritedProperties","setFavouritedProperties","sessionName","setSessionName","sessionStorage","getItem","useEffect","async","data","get","getUserToken","headers","Authorization","getAccessToken","console","log","error","getUser","increaseUsageCount","status","message","isFavourited","item","some","fav","postcode","address","fetchFavourites","setItem","WhiteNavbar","NavBarRevised","WhiteSidebar","usage_stats","package","epc_monthly_count","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","id","map","index","delete","prevState","deleteFavourite","category","addFavourite","activeItem","setActiveItem","insightView","setInsightView","setTimeout"],"sourceRoot":""}