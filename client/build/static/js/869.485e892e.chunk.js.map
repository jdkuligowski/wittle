{"version":3,"file":"static/js/869.485e892e.chunk.js","mappings":"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","sources":["components/tools/Timeline3.js","components/tools/WhiteNavbar.js","components/wittleSearch/formBlocks/travel/TrainsRight.js","components/wittleSearch/Travel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst Timeline3 = () => {\n\n\n\n\n  return (\n    <section className='property-search-wrapper'>\n      <div className='timeline-bar-3'>\n        <div className='progress-circles-3'>\n          <div className='milestone-1'>\n            <h1></h1>\n          </div>\n          <div className='milestone-2'>\n            <h1></h1>\n          </div>\n          <div className='milestone-3'>\n            <h1></h1>\n          </div>\n          <div className='milestone-4'>\n            <h1></h1>\n          </div>\n          <div className='milestone-5'>\n            <h1></h1>\n          </div>\n        </div>\n      </div>\n      <div className='timeline-background-3'>\n        {/* <h1>.</h1> */}\n      </div>\n    </section>\n  )\n\n}\n\nexport default Timeline3","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst TrainsRight = () => {\n\n  // states for filling out the form\n  const [formData, setFormData] = useState({\n    start_search: true,\n    search_name: '',\n    restaurant_selection: false,\n    restaurant_decision: '',\n    restaurant_distance: '',\n    restaurant_cuisine_1: '',\n    restaurant_cuisine_2: '',\n    takeaway_selection: false,\n    takeaway_decision: '',\n    takeaway_distance: '',\n    takeaway_cuisine_1: '',\n    takeaway_cuisine_2: '',\n    pubs_selection: false,\n    pubs_distance: '',\n    cafes_selection: '',\n    cafes_decision: '',\n    cafes_detail: '',\n    cafes_distance: '',\n    tube_selection: false,\n    tube_decision: '',\n    tube_detail: '',\n    tube_distance: '',\n    train_selection: false,\n    train_decision: '',\n    train_detail: '',\n    train_distance: '',\n    primary_selection: false,\n    primary_religion: '',\n    primary_mode: '',\n    primary_distance: '',\n    college_selection: false,\n    college_religion: '',\n    college_mode: '',\n    college_distance: '',\n    secondary_selection: false,\n    secondary_religion: '',\n    secondary_mode: '',\n    secondary_distance: '',\n    supermarket_selection: false,\n    supermarket_decision: '',\n    supermarket_segment: '',\n    supermarket_size: '',\n    supermarket_distance: '',\n    gym_selection: false,\n    gym_studio_name: '',\n    gym_class_type: '',\n    gym_distance: '',\n    park_selection: false,\n    park_type: '',\n    park_distance: '',\n    workplace_selection: false,\n    workplace_detail: '',\n    workplace_transport: '',\n    workplace_distance: '',\n    family_selection: false,\n    family_detail_1: '',\n    family_distance_1: '',\n    family_detail_2: '',\n    family_distance_2: '',\n    family_detail_3: '',\n    family_distance_3: '',\n  })\n\n  // get form data from storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('wittle-form-input'))\n    if (data) setFormData(data)\n  }, [])\n\n  // handling the slider states\n\n  // general update for drop down menus\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n\n\n\n  return (\n\n    <div className='form-filling-section-2' id='cafe-grid'>\n      <div className='form-filling-grid'>\n        <div className='form-filling-detail-right'>\n          <h3>Trains</h3>\n          <p>Do you want to generally be close to any train stations or a specific station?</p>\n          <div className='button-selectors' name='train_decision'>\n            <select className='form-control' placeholder='Select option' name='train_decision' onChange={handleChange}>Select option\n              <option>Select option</option>\n              <option>General train station</option>\n              <option>Specific train station</option>\n            </select>\n          </div>\n          {formData.train_decision === '' ? <h4></h4> :\n            formData.train_decision === 'General train station' ? <h4></h4>\n              :\n              <>\n                <p className='cuisine-choice'>Select your train station</p>\n                <div className='cuisine-dropdowns'>\n                  <select className='form-control' id='cuisine-drop-1' placeholder='Select station' name='train_detail' onChange={handleChange}>Select station\n                    <option>Select station</option>\n                    <option>Station 1</option>\n                    <option>Station 2</option>\n                    <option>Station 3</option>\n                  </select>\n                </div>\n              </>\n          }\n          <p className='distance-text'>What is the furthest distance you would like to walk to get there?</p><div className='slider-container'>\n            <input\n              type='range'\n              onChange={(e) => setFormData({ ...formData, tube_distance: e.target.value })}\n              name={formData.tube_distance}\n              className='slider'\n              defaultValue='20'\n              min='1'\n              max='100'\n              step='1'>\n            </input>\n          </div>\n          <p>{formData.tube_distance} minutes</p>\n        </div>\n        <div className='form-filling-image-right' id='train-image'>\n\n        </div>\n      </div>\n    </div>\n\n  )\n\n}\n\nexport default TrainsRight","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport Modal from 'react-modal'\n// import Button from 'react-native-button'\n// import Form from 'react-bootstrap/Form'\n\n\nimport Timeline3 from '../tools/Timeline3'\nimport TubesLeft from './formBlocks/travel/TubesLeft'\nimport TubesRight from './formBlocks/travel/TubesRight'\nimport TrainsLeft from './formBlocks/travel/TrainsLeft'\nimport TrainsRight from './formBlocks/travel/TrainsRight'\nimport NavBar from '../tools/NavBar'\nimport WhiteNavbar from '../tools/WhiteNavbar'\n\n\nconst Travel = () => {\n\n  // states for holding the tube information\n  const [tubeDataset, setTubeDataset] = useState([])\n  const [stations, setStations] = useState([])\n  const [lines, setLines] = useState([])\n\n  // states for holding the train information\n  const [trains, setTrains] = useState([])\n  const [trainStations, setTrainStations] = useState([])\n\n  const [errors, setErrors] = useState()\n\n  // states for filling out the form\n  const [formData, setFormData] = useState({\n    start_search: true,\n    search_name: '',\n    search_type: 'Wittle',\n    search_channel: 'Buying',\n    restaurant_selection: false,\n    restaurant_decision: '',\n    restaurant_distance: 10,\n    restaurant_cuisine_1: '',\n    restaurant_cuisine_2: '',\n    takeaway_selection: false,\n    takeaway_decision: '',\n    takeaway_distance: 10,\n    takeaway_cuisine_1: '',\n    takeaway_cuisine_2: '',\n    pubs_selection: false,\n    pubs_distance: 10,\n    cafes_selection: '',\n    cafes_decision: '',\n    cafes_detail: '',\n    cafes_distance: 10,\n    tube_selection: false,\n    tube_decision: '',\n    tube_detail: '',\n    tube_distance: 10,\n    train_selection: false,\n    train_decision: '',\n    train_detail: '',\n    train_distance: 10,\n    primary_selection: false,\n    primary_religion: '',\n    primary_mode: '',\n    primary_distance: 10,\n    college_selection: false,\n    college_religion: '',\n    college_mode: '',\n    college_distance: 10,\n    secondary_selection: false,\n    secondary_religion: '',\n    secondary_mode: '',\n    secondary_distance: 10,\n    supermarket_selection: false,\n    supermarket_decision: '',\n    supermarket_segment: '',\n    supermarket_size: '',\n    supermarket_distance: 10,\n    gym_selection: false,\n    gym_studio_name: '',\n    gym_class_type: '',\n    gym_distance: 10,\n    park_selection: false,\n    park_type: '',\n    park_distance: 10,\n    workplace_selection: false,\n    workplace_detail: '',\n    workplace_transport: '',\n    workplace_distance: 10,\n    family_selection: false,\n    family_detail_1: '',\n    family_distance_1: 10,\n    family_detail_2: '',\n    family_distance_2: 0,\n    family_detail_3: '',\n    family_distance_3: 0,\n    family_mode_1: '',\n    family_mode_2: '',\n    family_mode_3: '',\n    property_price_min: '0',\n    property_price_max: '10000000',\n    property_bed_min: '0',\n    property_bed_max: '5',\n    property_type: 'Any',\n    owner: 31,\n  })\n\n  // get form data from storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('wittle-form-input'))\n    if (data) setFormData(data)\n  }, [])\n\n  // handling the slider states\n\n  // general update for drop down menus\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  // define function to set state to storage\n  const setStateToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-form-input', JSON.stringify(formData))\n  }\n\n  // execute setting state to local storage\n  useEffect(() => {\n    // if (formData) {\n    setStateToLocalStorage()\n    // }\n  }, [formData])\n\n\n  // ? Managing states for the drop down menus of stations and lines\n  // ectract tube data from the database\n  useEffect(() => {\n    const getTubes = async () => {\n      try {\n        const { data } = await axios.get('/api/tubes/')\n        setTubeDataset(data)\n        console.log('tube data ->', data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getTubes()\n  }, [])\n\n  // extract train data from the database\n  useEffect(() => {\n    const getTrains = async () => {\n      try {\n        const { data } = await axios.get('/api/trains/')\n        setTrains(data)\n        console.log('train data ->', data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getTrains()\n  }, [])\n\n  // create lsits so we have a dropdown\n  useEffect(() => {\n    if (trains.length) {\n      const stationList = []\n      trains.forEach(station => stationList.includes(station.station_name) ? '' : stationList.push(station.station_name))\n      setTrainStations(stationList)\n    }\n  }, [trains])\n\n  // create lsits so we have a dropdown\n  useEffect(() => {\n    if (tubeDataset.length) {\n      const stationList = []\n      const lineList = []\n      tubeDataset.forEach(station => stationList.includes(station.station_name) ? '' : stationList.push(station.station_name))\n      tubeDataset.forEach(line => lineList.includes(line.line) ? '' : lineList.push(line.line))\n      setStations(stationList)\n      setLines(lineList)\n    }\n  }, [tubeDataset])\n\n\n  return (\n    <><section className='main-form-pages'>\n      <WhiteNavbar />\n      <section className='form-input-page'>\n        {/* Top section of the page with header and timeline bar */}\n        <section className='title-section'>\n          <h1>Now for the detail</h1>\n          <Timeline3 />\n          <div className='form-selections-large'>\n            {formData.restaurant_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Restaurants</button> : ''}\n            {formData.cafes_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Cafes</button> : ''}\n            {formData.takeaway_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Takeaways</button> : ''}\n            {formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Pubs & Bars</button> : ''}\n            {formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Tubes</button> : ''}\n            {formData.train_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Trains</button> : ''}\n            {formData.supermarket_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Supermarkets</button> : ''}\n            {formData.gym_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Gyms</button> : ''}\n            {formData.park_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Parks</button> : ''}\n            {formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Workplace</button> : ''}\n            {formData.primary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Primary Schools</button> : ''}\n            {formData.secondary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Secondary Schools</button> : ''}\n            {formData.college_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>6th Forms</button> : ''}\n            {formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Friends & Family</button> : ''}\n          </div>\n          <div className='form-selections-small'>\n            {formData.restaurant_selection || formData.cafes_selection || formData.takeaway_selection || formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Hospitality</button> : ''}\n            {formData.train_selection || formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Travel</button> : ''}\n            {formData.supermarket_selection || formData.gym_selection || formData.park_selection || formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Lifestyle</button> : ''}\n            {formData.primary_selection || formData.secondary_selection || formData.college_selection || formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Family</button> : ''}\n          </div>\n        </section>\n        <section className='main-content-detail'>\n          <div className='form-selection'>\n            <h1>Travel</h1>\n            {(formData.tube_selection & formData.train_selection) ?\n              <><div className='form-filling-section-1'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Tubes</h3>\n                    <p>Do you need to be on a certain line for work? Or do you just want to be close to any station for convenience?</p>\n                    <div className='button-selectors' name='tube_decision'>\n                      <select className='form-control' placeholder='Select option' name='tube_decision' onChange={handleChange}>Select option\n                        <option>Select option</option>\n                        <option>General tube station</option>\n                        <option>Specific tube station</option>\n                        <option>Specific tube line</option>\n                      </select>\n                    </div>\n                    {formData.tube_decision === '' ? <h4></h4> :\n                      formData.tube_decision === 'General tube station' ? <h4></h4> :\n                        formData.tube_decision === 'Select option' ? <h4></h4> :\n                          formData.tube_decision === 'Specific tube station' ?\n                            <>\n                              <p className='cuisine-choice'>Select your tube station</p>\n                              <div className='cuisine-dropdowns'>\n                                <select className='form-control' id='cuisine-drop-1' placeholder='Select station' name='tube_detail' onChange={handleChange}>Select station\n                                  <option>Select station</option>\n                                  {stations ? stations.map(station => <option key={station} value={station}>{station}</option>) : ''}\n                                </select>\n                              </div>\n                            </>\n                            :\n                            <>\n                              <p className='cuisine-choice'>Select your tube line</p>\n                              <div className='cuisine-dropdowns'>\n                                <select className='form-control' id='cuisine-drop-1' placeholder='Select line' name='tube_detail' onChange={handleChange}>Select line\n                                  <option>Select line</option>\n                                  {lines.map(line => <option key={line} value={line}>{line}</option>)}\n                                </select>\n                              </div>\n                            </>}\n                    <p className='distance-text'>How far do you want to walk to get there?</p><div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, tube_distance: e.target.value })}\n                        name={formData.tube_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div><p>{formData.tube_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='tube-image'>\n                  </div>\n                </div>\n              </div>\n              <div className='form-filling-section-2' id='cafe-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right'>\n                    <h3>Trains</h3>\n                    <p>Do you want to be close to any train station or a specific station?</p>\n                    <div className='button-selectors' name='train_decision'>\n                      <select className='form-control' placeholder='Select option' name='train_decision' onChange={handleChange}>Select option\n                        <option>Select option</option>\n                        <option>General train station</option>\n                        <option>Specific train station</option>\n                      </select>\n                    </div>\n                    {formData.train_decision === '' ? <h4></h4> :\n                      formData.train_decision === 'General train station' ? <h4></h4> :\n                        formData.train_decision === 'Select option' ? <h4></h4>\n                          :\n                          <>\n                            <p className='cuisine-choice'>Select your train station</p>\n                            <div className='cuisine-dropdowns'>\n                              <select className='form-control' id='cuisine-drop-1' placeholder='Select station' name='train_detail' onChange={handleChange}>Select station\n                                <option>Select station</option>\n                                {trainStations.map(station => <option key={station} value={station}>{station}</option>)}\n                              </select>\n                            </div>\n                          </>}\n                    <p className='distance-text'>How far do you want to walk to get there?</p><div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, train_distance: e.target.value })}\n                        name={formData.train_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.train_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='train-image'>\n\n                  </div>\n                </div>\n\n              </div></>\n              : ''}\n\n            {/* Tubes but no trains */}\n            {(formData.tube_selection & !formData.train_selection) ?\n              <><div className='form-filling-section-1'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Tubes</h3>\n                    <p>Do you need to be on a certain line for work? Or do you just want to be close to any station for convenience?</p>\n                    <div className='button-selectors' name='tube_decision'>\n                      <select className='form-control' placeholder='Select option' name='tube_decision' onChange={handleChange}>Select option\n                        <option>Select option</option>\n                        <option>General tube station</option>\n                        <option>Specific tube station</option>\n                        <option>Specific tube line</option>\n                      </select>\n                    </div>\n                    {formData.tube_decision === '' ? <h4></h4> :\n                      formData.tube_decision === 'General tube station' ? <h4></h4> :\n                        formData.tube_decision === 'Select option' ? <h4></h4> :\n                          formData.tube_decision === 'Specific tube station' ?\n                            <>\n                              <p className='cuisine-choice'>Select your tube station</p>\n                              <div className='cuisine-dropdowns'>\n                                <select className='form-control' id='cuisine-drop-1' placeholder='Select station' name='tube_detail' onChange={handleChange}>Select station\n                                  <option>Select station</option>\n                                  {stations ? stations.map(station => <option key={station} value={station}>{station}</option>) : ''}\n                                </select>\n                              </div>\n                            </>\n                            :\n                            <>\n                              <p className='cuisine-choice'>Select your tube line</p>\n                              <div className='cuisine-dropdowns'>\n                                <select className='form-control' id='cuisine-drop-1' placeholder='Select line' name='tube_detail' onChange={handleChange}>Select line\n                                  <option>Select line</option>\n                                  {lines.map(line => <option key={line} value={line}>{line}</option>)}\n                                </select>\n                              </div>\n                            </>}\n                    <p className='distance-text'>How far do you want to walk to get there?</p><div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, tube_distance: e.target.value })}\n                        name={formData.tube_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div><p>{formData.tube_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='tube-image'>\n\n                  </div>\n                </div>\n              </div>\n              </>\n              : ''}\n\n            {/* Trains but no tubes */}\n            {(!formData.tube_selection & formData.train_selection) ?\n              <>\n                <div className='form-filling-section-1' id='cafe-grid'>\n                  <div className='form-filling-grid'>\n                    <div className='form-filling-detail-left'>\n                      <h3>Trains</h3>\n                      <p>Do you want to generally be close to any train stations or a specific station?</p>\n                      <div className='button-selectors' name='train_decision'>\n                        <select className='form-control' placeholder='Select option' name='train_decision' onChange={handleChange}>Select option\n                          <option>Select option</option>\n                          <option>General train station</option>\n                          <option>Specific train station</option>\n                        </select>\n                      </div>\n                      {formData.train_decision === '' ? <h4></h4> :\n                        formData.train_decision === 'General train station' ? <h4></h4> :\n                          formData.train_decision === 'Select option' ? <h4></h4>\n                            :\n                            <>\n                              <p className='cuisine-choice'>Select your train station</p>\n                              <div className='cuisine-dropdowns'>\n                                <select className='form-control' id='cuisine-drop-1' placeholder='Select station' name='train_detail' onChange={handleChange}>Select station\n                                  <option>Select station</option>\n                                  {trainStations.map(station => <option key={station} value={station}>{station}</option>)}\n                                </select>\n                              </div>\n                            </>}\n                      <p className='distance-text'>What is the furthest distance you would like to walk to get there?</p><div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setFormData({ ...formData, train_distance: e.target.value })}\n                          name={formData.train_distance}\n                          className='slider'\n                          defaultValue='20'\n                          min='1'\n                          max='100'\n                          step='1'>\n                        </input>\n                      </div>\n                      <p>{formData.train_distance} minutes</p>\n                    </div>\n                    <div className='form-filling-image-right' id='train-image'>\n\n                    </div>\n                  </div>\n\n                </div></>\n              : ''}\n            {formData.supermarket_selection || formData.gym_selection || formData.park_selection || formData.workplace_selection ?\n              <Link to={'/wittle-search/lifestyle'}><button className='next' >Next</button></Link>\n              :\n              formData.primary_selection || formData.secondary_selection || formData.college_selection || formData.family_selection ?\n                <Link to={'/wittle-search/family'}><button className='next' >Next</button></Link>\n                :\n                <Link to={'/wittle-search/property'}><button className='next' >Next</button></Link>\n            }\n          </div>\n        </section >\n      </section>\n    </section ></>\n  )\n\n}\n\nexport default Travel"],"names":["className","navbarColour","navigate","useNavigate","style","backgroundColor","onClick","isUserAuth","token","localStorage","removeItem","window","location","reload","tubeDataset","setTubeDataset","useState","stations","setStations","lines","setLines","trains","setTrains","trainStations","setTrainStations","errors","setErrors","formData","setFormData","start_search","search_name","search_type","search_channel","restaurant_selection","restaurant_decision","restaurant_distance","restaurant_cuisine_1","restaurant_cuisine_2","takeaway_selection","takeaway_decision","takeaway_distance","takeaway_cuisine_1","takeaway_cuisine_2","pubs_selection","pubs_distance","cafes_selection","cafes_decision","cafes_detail","cafes_distance","tube_selection","tube_decision","tube_detail","tube_distance","train_selection","train_decision","train_detail","train_distance","primary_selection","primary_religion","primary_mode","primary_distance","college_selection","college_religion","college_mode","college_distance","secondary_selection","secondary_religion","secondary_mode","secondary_distance","supermarket_selection","supermarket_decision","supermarket_segment","supermarket_size","supermarket_distance","gym_selection","gym_studio_name","gym_class_type","gym_distance","park_selection","park_type","park_distance","workplace_selection","workplace_detail","workplace_transport","workplace_distance","family_selection","family_detail_1","family_distance_1","family_detail_2","family_distance_2","family_detail_3","family_distance_3","family_mode_1","family_mode_2","family_mode_3","property_price_min","property_price_max","property_bed_min","property_bed_max","property_type","owner","useEffect","data","JSON","parse","getItem","handleChange","e","target","name","value","setItem","stringify","async","axios","console","log","error","getTubes","getTrains","length","stationList","forEach","station","includes","station_name","push","lineList","line","WhiteNavbar","Timeline3","placeholder","onChange","id","map","type","defaultValue","min","max","step","to"],"sourceRoot":""}