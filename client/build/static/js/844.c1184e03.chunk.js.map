{"version":3,"file":"static/js/844.c1184e03.chunk.js","mappings":"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","sources":["components/tools/NavBarRevised.js","components/tools/ProfileMobileSlider.js","components/tools/WhiteNavbar.js","components/whiteLabel/WhiteSidebar.js","components/whiteLabel/propertyList.js/ListingGenerator.js","../node_modules/react-switch/dist/index.prod.mjs"],"sourcesContent":["import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\nimport axios from 'axios'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // userdata state\n  const [userData, setUserData] = useState()\n\n  // errors\n  const [errors, setErrors] = useState()\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n  \n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo'>\n          <h2 onClick={() => navigate('/')}>Wittle</h2>\n        </div>\n        <div className='profile-buttons'>\n          <div className='profile-button-title' >\n            <h2 onClick={() => {\n              setProfileDetail('Home')\n              setProfileContent('Home')\n              navigate('/agents/profile')\n            }}>🧘‍♂️ Wittle home</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('My things')\n              setProfileContent('My things')\n              navigate('/agents/favourites')\n            }}>🏡 My things</h2>\n          </div>\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('My properties')\n              setProfileContent('My properties')\n              navigate('/agents/properties')\n            }}>🏡 My property list</h2>\n          </div> */}\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>🧠 Listing generator</h2>\n          </div>\n          {userData && (userData.id === 1 || userData.id === 55) ?\n            <div className='profile-button-title' id='second-title'>\n              <h2 onClick={() => {\n                setProfileDetail('AI listing generator')\n                setProfileContent('AI listing generator')\n                navigate('/agents/ai-listing-generator')\n              }}>🧠 AI Listing generator</h2>\n            </div>\n            : ''\n          }\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Variables')\n              setProfileDetail('Variables')\n              setVariableSide(!variableSide)\n              navigate('/agents/explore')\n            }\n            }>🔎 Explore</h2>\n            {variableSide ? <h4>v</h4> : <h4>^</h4>}\n          </div> */}\n\n          {/* <div className='profile-button-sub'>\n            <h3 onClick={() => setProfileDetail('Primary schools')}>🏫 Primary schools</h3>\n            <h3 onClick={() => setProfileDetail('Secondary schools')}>👨‍🏫 Secondary schools</h3>\n            <h3 onClick={() => setProfileDetail('Restaurants')}>🍽 Restaurants </h3>\n            <h3 onClick={() => setProfileDetail('Pubs')}>🍺 Pubs </h3>\n            <h3 onClick={() => setProfileDetail('Fitness')}>🏋️‍♂️ Fitness </h3>\n            <h3 onClick={() => setProfileDetail('Supermarkets')}>🛒 Supermarkets </h3>\n            <h3 onClick={() => setProfileDetail('EVs')}>⛽️ EVs </h3>\n\n          </div> */}\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Comparison')\n              setProfileDetail('Comparison')\n              navigate('/agents/compare')\n            }}>↔️ Comparison</h2>\n          </div> */}\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Property finder')\n              setProfileDetail('Property finder')\n              navigate('/agents/finder')\n            }}>🔎 Property finder</h2>\n          </div>\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Account')\n              setProfileDetail('Account')\n            }}>🖥 Account details</h2>\n          </div> */}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport ReactSwitch from 'react-switch'\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst ListingGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // Create a reference to the div\n  const textDivRef = useRef(null)\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n  \n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Listing generator')\n  const [profileDetail, setProfileDetail] = useState('Listing generator')  \n  \n  // lisrting options\n  const [listingSelection, setListingSelection] = useState('Property insights')\n  \n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n\n  const [addressSubstring, setAddressSubstring] = useState('')\n\n\n  // listing generator form\n  const [listingFields, setListingFields] = useState({\n    postcode: '',\n    address: '',\n    description: '',\n    channel: '',\n    bedrooms: '',\n    bathrooms: '',\n    property_type: '',\n    tenure: '',\n    size: '',\n    on_road_parking: '',\n    off_road_parking: '',\n    balcony: '',\n    primary_schools: 0,\n    secondary_schools: 0,\n    tubes: 0,\n    trains: 0,\n    restaurants: 0,\n    pubs: 0,\n    supermarkets: 0,\n    gyms: 0,\n    parks: 0,\n    evs: 0,\n    crime: 0,\n  })\n\n\n  // ai listing fields\n  const [aiFields, setAiFields] = useState({ \n    'location': '',\n    'size': '',\n    'property_type': '',\n    'bedrooms': '',\n    'bathrooms': '',\n    'en_suites': '',\n    'amenities': [],\n    'channel': '',\n    'additional_info': '',\n    'price': '',\n    'restaurants': '',\n    'pubs': '',\n    'supermarkets': '',\n    'tube': '',\n    'trains': '',\n    'parks': '',\n    'evs': '',\n    'primary_schools': '',\n    'secondary_schools': '',\n    'gyms': '',\n  })\n\n  // features to include in checkbox: \n  const features = [\n    'balcony', 'on-road parking', 'off-road parking', \n    'private gated', 'private garage', 'shared garage', \n    'lift', 'open-plan', 'concierge', 'gym', \n    'pool & spa', 'penthouse', 'duplex', 'garden'\n  ]\n\n\n\n  // set state for user data\n  const [postcodeData, setPostcodes] = useState()\n\n  // set state for schools data\n  const [primaryData, setPrimaryData] = useState()\n  const [primaryData1, setPrimaryData1] = useState()\n  const [secondaryData, setSecondaryData] = useState()\n  const [secondaryData1, setSecondaryData1] = useState()\n\n  // additional scvhool states\n  const [topPrimaries, setTopPrimaries] = useState()\n  const [topSecondaries, setTopSecondaries] = useState()\n\n  // set states for lifestyle information\n  const [restaurants, setRestaurants] = useState()\n  const [gyms, setGyms] = useState()\n  const [pubs, setPubs] = useState()\n  const [supermarkets, setSupermarkets] = useState()\n  const [ev, setEv] = useState()\n\n  // set states for first calculations\n  const [restaurants1, setRestaurants1] = useState()\n  const [gyms1, setGyms1] = useState()\n  const [pubs1, setPubs1] = useState()\n  const [supermarkets1, setSupermarkets1] = useState()\n  const [ev1, setEv1] = useState()\n\n  // additional restaurant states\n  const [cuisines, setCuisines] = useState()\n  const [topRestaurants, setTopRestaurants]  = useState([])\n  const [topPubs, setTopPubs] = useState([])\n\n  // additional gym states\n  const [mainGyms, setMainGyms] = useState([])\n\n  // additional supermarket states\n  const [mainSupermarkets, setMainSupermarkets] = useState([])\n\n  // set states for lifestyle information\n  const [tubes, setTubes] = useState()\n  const [trains, setTrains] = useState()\n\n  // set states for first calculations\n  const [tubes1, setTubes1] = useState()\n  const [trains1, setTrains1] = useState()\n\n  const [aiSearch, setAiSearch] = useState()\n\n  const [aiReady, setAiReady] = useState(false)\n\n  // start ai seearch\n  const [searchGo, setSearchGo] = useState(false)\n\n\n\n  // Section 2: Load postcode and user data\n  const loadPostcodeData = async (listingType) => {\n    try {\n\n      // if its an ai load, then we need to set a state to organise the loading of the dataset\n      if (listingType === 'listing_ai_total') {\n        setAiReady(false) // Before loading the data for AI\n      }\n\n      // we need to access the postcode data in all eventualities\n      const { data } = await axios.post('/api/postcodes/', { postcode: postcodeSubstring })\n      console.log('postcode data ->', data)\n      setPostcodes(data)\n\n      increaseUsageCount(listingType) // Pass the listing type to the increaseUsageCount function\n\n      // if the postcode data arrives and its an ai search, we want to load the rest of the data\n      if (listingType === 'listing_ai_total') {\n        setSearchGo(true)\n      }\n\n      // if its just an insights load, wee want to add this to th db then navigate to the insights page\n      if (listingType === 'listing_insight_total') {\n        // const { data } = await axios.get(`/api/postcodes/${postcodeSubstring}`)\n        const modifiedData = {\n          ...listingFields,\n          postcode: postcodeSubstring,\n          request_type: 'Insights',\n        }\n        const response = await axios.post('/api/listing_favourites/', modifiedData, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        }) \n        setResultsToLocalStorage()\n        navigate('/agents/property')\n        // navigate(`/agents/property/${postcodeSubstring}`)\n      }\n\n      // if its a normal listing build, then we want to run the code for that\n      if (listingType === 'listing_normal_total') {\n        const modifiedData = {\n          ...listingFields,\n          postcode: postcodeSubstring,\n          request_type: 'Listing',\n        }\n        const response = await axios.post('/api/listing_favourites/', modifiedData, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        }) \n      }\n\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  // define function for setting results to storage\n  const setResultsToLocalStorage = (token) => {\n    window.localStorage.setItem('listing-postcode', JSON.stringify(postcodeSubstring))\n  }\n\n\n\n  // ? Section 3: Load primaries data\n  const loadPrimaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getPrimaries = async () => {\n        const { data } = await axios.get('/api/primaries/')\n        // console.log('primaries data ->', data)\n        setPrimaryData(data)\n      }\n      getPrimaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n  \n  useEffect(() =>{\n    if (postcodeData) {\n      loadPrimaryData()\n    }\n  }, [postcodeData])\n  \n\n  // set distance\n  const walkDistanceKm20 = 5 * (20 / 60) // updated for 20 mins\n  \n  const R = 6371 // Radius of the earth in km\n  const toRad = (value) => value * Math.PI / 180 // Convert degrees to radians\n  const kmPerMinute = 5 / 60 // average walking speed is 5 km per hour\n    \n  // function for restaurants with least walking distance\n  const getNearbyPrimaries = () => {\n    // filter out restaurants firther than 20 mins walk away and add distanceKm and walkTimeMin to each item\n    const nearbyPrimaries = primaryData.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n          Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n    \n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n  \n      // logic to determine whether school is in the catchment area\n      const distancePercent = distanceKm / item.max_distance\n  \n      // handle independent schools\n      if (item.school_type ===  'Independent school') {\n        item.within_catchment =  'N/a'\n  \n        // handle special schools\n      } else if (item.school_type === 'Special school') {\n        item.within_catchment = 'N/a'\n      } else if (item.max_distance === 'On request') {\n        item.within_catchment = 'N/a'\n  \n        // handle schools with a map catchment\n      } else if (item.additional_status === 'Based on map') {\n        item.within_catchment = 'Check catchment map'\n  \n        // handle schools that have religioius requirement and have no distane measurement\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.6) {\n        item.within_catchment = 'Very likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.8) {\n        item.within_catchment = 'Likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 1) {\n        item.within_catchment = 'Probably if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n        item.within_catchment = 'Unlikely, even if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n        item.within_catchment = 'Very unlikely, even if religious critera met'\n  \n        // handle schools that have not specified their catchment\n      } else if (item.max_distance === 'Not specified' & item.distance_between < 0.4) {\n        item.within_catchment = 'Very likely but no distance specified'\n      } else if (item.max_distance === 'Not specified' & item.distance_between < 0.7) {\n        item.within_catchment = 'Likely but no distance specified'\n      } else if (item.max_distance === 'Not specified' & item.distance_between < 1) {\n        item.within_catchment = 'Probably but no distance specified'\n      } else if (item.max_distance === 'Not specified' & item.distance_between > 1) {\n        item.within_catchment = 'Unlikely, but no distance specified'\n        \n        // handle schools that have not been incliuded in the catchment extract\n      } else if (item.max_distance === null & item.distance_between < 0.6) {\n        item.within_catchment = 'Very likely, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between < 0.8) {\n        item.within_catchment = 'Likely, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between < 1) {\n        item.within_catchment = 'Probably, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between < 1.5) {\n        item.within_catchment = 'Unlikely, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between > 1.5) {\n        item.within_catchment = 'Very unlikely, but no distance data available'\n  \n        // handle schools with actual distance measurements\n      } else if (distancePercent <= 0.6) {\n        item.within_catchment = 'Yes'\n      } else if (distancePercent <= 0.8) {\n        item.within_catchment = 'Very likely'\n      } else if (distancePercent <= 1.0) {\n        item.within_catchment = 'Probably'\n      } else if (distancePercent <= 1.2) {\n        item.within_catchment = 'Probably not'\n  \n        // handle schools that have no catchment\n      } else if (item.max_distance === 'Does not apply') {\n        item.within_catchment = 'Yes'\n        \n        // handle any other schools\n      } else {\n        item.within_catchment = 'No'\n      }\n      \n      return distanceKm <= walkDistanceKm20\n  \n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n  \n    const firstSchoolNames = nearbyPrimaries.slice(0, 8)\n  \n  \n    setTopPrimaries(firstSchoolNames)\n    setPrimaryData1(nearbyPrimaries)\n    \n    console.log('nearby primaries ->', nearbyPrimaries)\n  }\n  \n  \n  // load data \n  useEffect(() => {\n    if (primaryData) {\n      getNearbyPrimaries()\n    }\n  }, [primaryData])\n\n\n\n\n  // ? Section 4: Load secondary school data  \n  const loadSecondaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getSecondaries = async () => {\n        const { data } = await axios.get('/api/secondaries/')\n        // console.log('secondaries data ->', data)\n        setSecondaryData(data)\n      }\n      getSecondaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadSecondaryData()\n    }\n  }, [postcodeData])\n\n  // function for restaurants with least walking distance\n\n  const walkDistanceKm30 = 5 * (30 / 60) // updated for 20 mins\n\n  const getNearbySecondaries = () => {\n    // filter out restaurants firther than 20 mins walk away and add distanceKm and walkTimeMin to each item\n    const nearbySecondaries = secondaryData.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n  \n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      // logic to determine whether school is in the catchment area\n      const maxDistancePercent = distanceKm / item.max_distance\n      const minDistancePercent = distanceKm / item.min_distance\n\n      // handle independent schools, special schools and examination requirements\n      if (item.school_type.includes('independent')) {\n        item.within_catchment = 'N/a'\n      }  else if (item.school_type.includes('special')) {\n        item.within_catchment = 'N/a'\n      } else if (item.max_distance === 'Exam' || item.max_distance === 'Test score') {\n        item.within_catchment = 'Dependent on test results'\n      } else if (item.max_distance === 'Random') {\n        item.within_catchment = 'Random selection based on performance'\n      } else if (item.max_distance === 'Catchment score') {\n        item.within_catchment = 'School uses catchment score - check'\n\n      // handle schools with a map catchment\n      } else if (item.max_distance === 'Based on map') {\n        item.within_catchment = 'Check catchment map'\n\n      // handle schools with religious requirements and no specified distance\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.7) {\n        item.within_catchment = 'Very likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.9) {\n        item.within_catchment = 'Likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n        item.within_catchment = 'Probably if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n        item.within_catchment = 'Unlikely, even if religious critera met'\n\n      // handle schools without a catchment\n      } else if (item.max_distance === 'Does not apply') {\n        item.within_catchment = 'Yes'\n\n      // handle schools with a lower and an upper catchment\n      } else if (item.min_distance !== null & minDistancePercent <= 1) {\n        item.within_catchment = 'Yes'\n      } else if (item.min_distance !== null & maxDistancePercent <= 0.5) {\n        item.within_catchment = 'Very likely'\n      } else if (item.min_distance !== null & maxDistancePercent <= 0.7) {\n        item.within_catchment = 'Probably'\n\n      // handle schools with only uppeer catchment\n      } else if (maxDistancePercent <= 0.6) {\n        item.within_catchment = 'Yes'\n      } else if (maxDistancePercent <= 0.8) {\n        item.within_catchment = 'Very likely'\n      } else if (maxDistancePercent <= 1.0) {\n        item.within_catchment = 'Probably'\n      } else if (maxDistancePercent <= 1.2) {\n        item.within_catchment = 'Probably not'\n      } else {\n        item.within_catchment = 'No'\n      }\n    \n      return distanceKm <= walkDistanceKm30\n\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n    const firstSchoolNames = nearbySecondaries.slice(0, 8)\n\n\n    setTopSecondaries(firstSchoolNames)\n    setSecondaryData1(nearbySecondaries)\n\n    console.log('nearby secondaries ->', nearbySecondaries)\n  }\n\n  // load data \n  useEffect(() => {\n    if (secondaryData) {\n      getNearbySecondaries()\n    }\n  }, [secondaryData])\n\n\n\n  // ? Section 5: Load and sort restaurant data\n  const loadRestaurantData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/restaurants/')\n        // console.log('restaurant data ->', data)\n        setRestaurants(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadRestaurantData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n  const walkDistanceKm15 = 5 * (15 / 60)\n  \n  // function for restaurants with least walking distance\n  const getNearbyRestaurants = () => {\n    \n    // filter out restaurants firther than 15 mins walk away\n    const nearbyRestaurants = restaurants.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n  \n      return distanceKm <= walkDistanceKm15\n    }).sort((a, b) => b.rating - a.rating)\n    \n    // count the number of cuisines in the area\n    const countUniqueCuisines = (restaurants) => {\n      const cuisines = new Set(restaurants.map(restaurant => restaurant.cuisine))\n      return cuisines.size\n    }\n\n    // extract the top 3 restaurants\n    const topThreeRestaurants = nearbyRestaurants\n      .filter(restaurant => restaurant.cuisine !== 'No Cuisine Data')\n      .slice(0, 3)\n      .map(restaurant => restaurant.restaurant_name)\n\n    setCuisines(countUniqueCuisines(nearbyRestaurants))\n    setRestaurants1(nearbyRestaurants)\n    setTopRestaurants(topThreeRestaurants)\n    // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n    console.log('Nearby restaurants ->', nearbyRestaurants)\n    // console.log('Top restaurants ->', topThreeRestaurants)\n    if (listingFields.restaurants === 1) {\n      setAiFields(prevState => ({ \n        ...prevState, \n        restaurants: `${nearbyRestaurants.length} restaurants within 15 min walk, with more than ${cuisines} cuisines available`  }))\n    }\n  }\n  \n  // load data for nearest restaurants\n  useEffect(() => {\n    if (restaurants) {\n      getNearbyRestaurants()\n    }\n  }, [restaurants])\n\n\n\n\n\n  // ? Section 6: Load and sort fitness data\n  const loadFitnessData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/gyms/')\n        console.log('gyms data ->', data)\n        setGyms(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadFitnessData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n  \n  // function for restaurants with least walking distance\n  const getNearbyStudios = () => {\n\n    const specificGyms = ['third space', 'pure gym', '1 rebel', 'virgin', 'barry\\'s', 'the gym group']\n    const uniqueGyms = new Set() // Used to store unique gym names\n\n\n    \n    // filter out restaurants firther than 15 mins walk away\n    const nearbyStudios = gyms.filter(item => {\n      const dLat = toRad(parseFloat(item.Lat) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.Lat))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n  \n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm15\n    }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n    \n    // extract the key studios\n    const topThreeStudios = []\n  \n    for (let i = 0; i < nearbyStudios.length; i++) {\n      const gym = nearbyStudios[i]\n      if (gym.gym_group && specificGyms.includes(gym.gym_group.toLowerCase()) && !uniqueGyms.has(gym.gym_group)) {\n        topThreeStudios.push(gym.gym_group)\n        uniqueGyms.add(gym.gym_group)\n        \n        if (topThreeStudios.length === 3) {\n          break\n        }\n      }\n    }\n\n    setGyms1(nearbyStudios)\n    setMainGyms(topThreeStudios)\n    // console.log('Nearby gyms ->', nearbyStudios)\n    // console.log('Main gyms ->', topThreeStudios)\n    if (listingFields.gyms === 1) {\n      setAiFields(prevState => ({ \n        ...prevState, \n        gyms: `${nearbyStudios.length} gyms within 15 min walk, including ${topThreeStudios[0]} and  ${topThreeStudios[1]}`  }))\n    }\n  }\n  \n  // load data for nearest restaurants\n  useEffect(() => {\n    if (gyms) {\n      getNearbyStudios()\n    }\n  }, [gyms])\n\n\n\n\n  // ? Section 7: Load and sort supermarket data\n  const loadSupermarketData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/supermarkets/')\n        // console.log('supermarkets data ->', data)\n        setSupermarkets(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadSupermarketData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n  \n  // function for restaurants with least walking distance\n  const getNearbySupermatkets = () => {\n\n    const specificSupermarkets = ['m&s', 'waitrose', 'aldi', 'lidl', 'sainsburys', 'tesco', 'asda']\n    const uniqueSupermarkets = new Set() // Used to store unique gym names\n\n\n    \n    // filter out restaurants firther than 15 mins walk away\n    const allSupermarkets = supermarkets.map(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n  \n      return { ...item, distance: distanceKm }\n    })\n\n    const nearbySupermarkets = allSupermarkets\n      .filter(item => item.distance <= walkDistanceKm15)\n    \n    // extract the key studios\n    const topThreeSupermarkets = []\n  \n    for (let i = 0; i < nearbySupermarkets.length; i++) {\n      const supermarket = nearbySupermarkets[i]\n      if (specificSupermarkets.includes(supermarket.supermarket_brand.toLowerCase()) && !uniqueSupermarkets.has(supermarket.supermarket_store_name)) {\n        topThreeSupermarkets.push(supermarket.supermarket_store_name)\n        uniqueSupermarkets.add(supermarket.supermarket_store_name)\n        \n        if (topThreeSupermarkets.length === 3) {\n          break\n        }\n      }\n    }\n\n    setSupermarkets1(nearbySupermarkets)\n    setMainSupermarkets(topThreeSupermarkets)\n    console.log('Nearby supermarkets ->', nearbySupermarkets)\n    if (listingFields.supermarkets === 1) {\n      setAiFields(prevState => ({ \n        ...prevState, \n        supermarkets: `${nearbySupermarkets.length} supermarkets within 15 min walk, including ${topThreeSupermarkets[0]} and ${topThreeSupermarkets[1]}`  }))\n    }\n    // console.log('Main supermarktets ->', topThreeSupermarkets)\n  }\n  \n  // load data for nearest restaurants\n  useEffect(() => {\n    if (supermarkets) {\n      getNearbySupermatkets()\n    }\n  }, [supermarkets])\n\n  \n\n  // ? Section 8: Load and sort tubes data\n  const loadTubesData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/tubes/')\n        // console.log('tubes data ->', data)\n        setTubes(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadTubesData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates  \n  // function for restaurants with least walking distance\n  const getNearbyTubes = () => {\n    \n    // filter out restaurants firther than 15 mins walk away\n    const nearbyTubes = tubes.filter(item => {\n      const dLat = toRad(parseFloat(item.lat) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.lat))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n  \n      return distanceKm <= walkDistanceKm20\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n    \n\n    setTubes1(nearbyTubes)\n    console.log('Nearby tubes ->', nearbyTubes)\n\n    if (listingFields.tubes === 1) {\n      setAiFields(prevState => ({ \n        ...prevState, \n        tubes: `${nearbyTubes.length} within 15 min walk, including ${nearbyTubes[0].station_name} and ${nearbyTubes[1].station_name}`  }))\n    }\n    \n  }\n  \n  // load data for nearest restaurants\n  useEffect(() => {\n    if (tubes) {\n      getNearbyTubes()\n    }\n  }, [tubes])\n\n\n\n  // ? Section 9: Load and sort EV data\n  const loadEVdata = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/evs/')\n        console.log('ev data ->', data)\n        setEv(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadEVdata()\n    }\n  }, [postcodeData])\n\n\n  \n  // function for restaurants with least walking distance\n  const getNearbyChargers = () => {\n\n    // Average walking speed is 5km/h. \n    const walkDistanceKm10 = 5 * (10 / 60)\n    \n    // filter out restaurants firther than 15 mins walk away\n    const nearbyChargers = ev.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n  \n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm10\n    }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n    \n\n    setEv1(nearbyChargers)\n    // console.log('Nearby gyms ->', nearbyStudios)\n    // console.log('Main gyms ->', topThreeStudios)\n  }\n  \n  // load data for nearest restaurants\n  useEffect(() => {\n    if (ev) {\n      getNearbyChargers()\n    }\n  }, [ev])\n\n\n  // ? Section 10: Load in pubs data\n  const loadPubsData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/pubs/')\n        console.log('pub data ->', data)\n        setPubs(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadPubsData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  \n  // function for restaurants with least walking distance\n  const getNearbyPubs = () => {\n    \n    // filter out restaurants firther than 15 mins walk away\n    const nearbyPubs = pubs.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n  \n      return distanceKm <= walkDistanceKm15\n    }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n  \n\n    // extract the top 3 restaurants\n    const topThreePubs = nearbyPubs\n      .slice(0, 3)\n      .map(pub => pub.name)\n\n    setPubs1(nearbyPubs)\n    setTopPubs(topThreePubs)\n    // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n    console.log('Nearby pubs ->', nearbyPubs)\n    // console.log('Top restaurants ->', topThreeRestaurants)\n  }\n  \n  // load data for nearest restaurants\n  useEffect(() => {\n    if (pubs) {\n      getNearbyPubs()\n    }\n  }, [pubs])\n\n\n\n  // ? Section 11: Load and sort tubes data\n  const loadTrainsData = () => {\n  // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/trains/')\n        console.log('trains data ->', data)\n        setTrains(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData) {\n      loadTrainsData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates  \n  // function for restaurants with least walking distance\n  const getNearbyTrains = () => {\n  \n    // filter out restaurants firther than 15 mins walk away\n    const nearbyTrains = trains.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a = \n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n      Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm20\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n  \n\n    setTrains1(nearbyTrains)\n    console.log('Nearby trains ->', nearbyTrains)\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (trains) {\n      getNearbyTrains()\n    }\n  }, [trains])\n\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setListingFields(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === 1 ? 0 : 1,\n    }))\n  }\n\n\n  // Copy function\n  const handleCopyText = () => {\n    const text = textDivRef.current.innerText\n\n    // Copy text to clipboard\n    const textarea = document.createElement('textarea')\n    textarea.value = text\n    document.body.appendChild(textarea)\n    textarea.select()\n    document.execCommand('copy')\n    document.body.removeChild(textarea)\n  }\n\n\n\n  // Increase value in db based on successful response\n  const increaseUsageCount = async (listingType) => {\n    console.log('trying to increase')\n    try {\n      const { data } = await axios.post('/api/usage/listing/', { column: listingType }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log(data)\n      if (data.status === 'success') {\n        console.log('Usage count increased successfully')\n      } else {\n        console.error('Failed to increase usage count:', data.message)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n    }\n  }\n\n\n\n  const handleCheckboxChange = (feature) => {\n    setAiFields(prev => {\n      // Check if the feature is already in the amenities array\n      if (prev.amenities.includes(feature)) {\n        // If it is, remove it\n        return { \n          ...prev, \n          amenities: prev.amenities.filter(a => a !== feature),\n        }\n      } else {\n        // If it isn’t, add it\n        return { \n          ...prev, \n          amenities: [...prev.amenities, feature],\n        }\n      }\n    })\n  }\n\n\n  const handleInsightClick = () => {\n    loadPostcodeData('listing_insight_total')\n    setListingFields(prevState => ({ ...prevState, request_type: 'insights' }))\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          setProfileContent={setProfileContent} \n          userData={userData}\n        />    \n\n        <section className='listing-generator'> \n          {/* <h1>Wittle listing generator</h1> */}\n          {/* <h1>Insert your property details to build a listing or explore insights</h1> */}\n\n          <div className='listing-options'>\n            <h5 className='no-print' onClick={() => setListingSelection('Property insights')} style={{ textDecoration: listingSelection === 'Property insights' ? 'underline 3px #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'Property insights' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Property insights' ? '700' : '400' }}>Property insights</h5>\n            <h5 className='no-print' onClick={() => setListingSelection('Listing generator')} style={{ textDecoration: listingSelection === 'Listing generator' ? 'underline 3px #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'Listing generator' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Listing generator' ? '700' : '400'  }}>Listing generator</h5>\n            {/* <h5 className='no-print' onClick={() => setListingSelection('AI listing generator')} style={{ textDecoration: listingSelection === 'AI listing generator' ? 'underline 3px #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'AI listing generator' ? '0.5em' : 'initial', fontWeight: listingSelection === 'AI listing generator' ? '700' : '400'  }}>AI listing generator</h5> */}\n          \n          </div>\n          <div className='listing-wrapper'>\n\n            <div className='insight-inputs'>\n              {listingSelection === 'Property insights' ? \n                <>\n                  <h3>Insert full postcode to extract details about property</h3>\n                  <div className='input-block'>\n                    <h3>📍 Postcode</h3>\n                    <input\n                      type=\"text\"\n                      value={postcodeSubstring}\n                      onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                      placeholder=\"Enter postcode...\"></input>\n                  </div>\n                  <div className='input-block'>\n                    <h3>📍 Address</h3>\n                    <input\n                      type=\"text\"\n                      value={addressSubstring}\n                      onChange={e => {\n                        const value = e.target.value\n                        setAddressSubstring(value)\n                        setListingFields(prevData => ({ ...prevData, address: value }))\n                      }}\n                      placeholder=\"Enter address...\"></input>\n                  </div>\n                  <div className='input-block'>\n                    <h3>🏷 Channel</h3>\n\n                    <select className='listing-dropdown'onChange={e => setListingFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option>Sales</option>\n                      <option>Rental</option>\n                    </select>\n                  </div>\n                  <button onClick={handleInsightClick}>See insights</button>\n                </>\n                : listingSelection === 'Listing generator' ?\n                  <>\n                    <h3>Input details and select features you want to include your listing</h3>\n                    <div className='input-block'>\n                      <h3>📍 Postcode</h3>\n                      <input\n                        type=\"text\"\n                        value={postcodeSubstring}\n                        onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                        placeholder=\"Enter postcode...\"></input>\n                    </div>\n                    <div className='input-block'>\n                      <h3>📍 Address</h3>\n                      <input\n                        type=\"text\"\n                        value={addressSubstring}\n                        onChange={e => {\n                          const value = e.target.value\n                          setAddressSubstring(value)\n                          setListingFields(prevData => ({ ...prevData, address: value }))\n                        }}\n                        placeholder=\"Enter address...\"></input>\n                    </div>\n                    <div className='input-block'>\n                      <h3>🏷 Channel</h3>\n\n                      <select className='listing-dropdown'onChange={e => setListingFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                        <option>--- Select ---</option>\n                        <option>Sales</option>\n                        <option>Rental</option>\n                      </select>\n                    </div>\n                    <div className='input-block'>\n                      <h3>✍🏼 Description</h3>\n                      <textarea id=\"description\" value={listingFields.description} rows=\"5\" placeholder='Enter your description here...' onChange={e => setListingFields(prevState => ({ ...prevState, description: e.target.value }))}></textarea>\n                    </div>\n                    <h3 className='lifestyle-indicator'>Lifestyle elements to include</h3>\n                    <div className='input-block'>\n                      <h3>👶 Primary schools</h3>\n                      <ReactSwitch\n                        checked={listingFields.primary_schools === 1}\n                        onChange={() => toggleStatus('primary_schools')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🎓 Secondary schools</h3>\n                      <ReactSwitch\n                        checked={listingFields.secondary_schools === 1}\n                        onChange={() => toggleStatus('secondary_schools')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🚇 Tubes</h3>\n                      <ReactSwitch\n                        checked={listingFields.tubes === 1}\n                        onChange={() => toggleStatus('tubes')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🚈 Trains</h3>\n                      <ReactSwitch\n                        checked={listingFields.trains === 1}\n                        onChange={() => toggleStatus('trains')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>⛽️ Electric vehicles</h3>\n                      <ReactSwitch\n                        checked={listingFields.evs === 1}\n                        onChange={() => toggleStatus('evs')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🍽 Restaurants</h3>\n                      <ReactSwitch\n                        checked={listingFields.restaurants === 1}\n                        onChange={() => toggleStatus('restaurants')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🍺 Pubs</h3>\n                      <ReactSwitch\n                        checked={listingFields.pubs === 1}\n                        onChange={() => toggleStatus('pubs')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🌳 Parks</h3>\n                      <ReactSwitch\n                        checked={listingFields.parks === 1}\n                        onChange={() => toggleStatus('parks')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🏋️‍♂️ Gyms</h3>\n                      <ReactSwitch\n                        checked={listingFields.gyms === 1}\n                        onChange={() => toggleStatus('gyms')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🛒 Supermarkets</h3>\n                      <ReactSwitch\n                        checked={listingFields.supermarkets === 1}\n                        onChange={() => toggleStatus('supermarkets')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n                    <div className='input-block'>\n                      <h3>🚔 Crime</h3>\n                      <ReactSwitch\n                        checked={listingFields.crime === 1}\n                        onChange={() => toggleStatus('crime')}\n                        onColor='#ED6B86'\n                        offColor='#051885'  \n                      />\n                    </div>\n\n                    <button onClick={() => loadPostcodeData('listing_normal_total')}>Load description</button>\n\n                  </>\n\n                  : listingSelection === 'AI listing generator' ?\n\n                    <>\n                      <h3>Input details and select features you want to include your listing</h3>\n                      <div className='input-block'>\n                        <h3>📍 Postcode</h3>\n                        <input\n                          type=\"text\"\n                          value={postcodeSubstring}\n                          onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                          placeholder=\"Enter postcode...\"></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>📍 Location</h3>\n                        <input\n                          type=\"text\"\n                          value={aiFields.location}\n                          onChange={e => setAiFields(prevState => ({ ...prevState, location: e.target.value }))}\n                        ></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>🌍 Size</h3>\n                        <input\n                          type=\"number\"\n                          value={aiFields.size}\n                          onChange={e => setAiFields(prevState => ({ ...prevState, size: e.target.value }))}\n                        ></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>🛌 Bedrooms</h3>\n                        <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, bedrooms: e.target.value }))}>\n                          <option value={0}>Studio</option>\n                          <option>1</option>\n                          <option>2</option>\n                          <option>3</option>\n                          <option>4</option>\n                          <option>5</option>\n                          <option>6</option>\n                          <option>7</option>\n                        </select>\n                      </div>\n                      <div className='input-block'>\n                        <h3>🛁 Bathrooms</h3>\n                        <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, bathrooms: e.target.value }))}>\n                          <option>0</option>\n                          <option>1</option>\n                          <option>2</option>\n                          <option>3</option>\n                          <option>4</option>\n                          <option>5</option>\n                          <option>6</option>\n                          <option>7</option>\n                        </select>\n                      </div>\n                      <div className='input-block'>\n                        <h3>🏡 Property type</h3>\n                        <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, property_type: e.target.value }))}>\n                          <option>Flat</option>\n                          <option>Bungalow</option>\n                          <option>Terraced house</option>\n                          <option>Semi-detached house</option>\n                          <option>Detached house</option>\n                        </select>\n                      </div>\n                      <div className='input-block' >\n                        <h3>🏷 Channel</h3>\n                        <select className='listing-dropdown'onChange={e => setAiFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                          <option>Sales</option>\n                          <option>Rental</option>\n                        </select>\n                      </div>\n                      <div className='input-block' >\n                        <h3>🏷 Additional info</h3>\n                        {aiFields.channel === 'Sales' ? \n                          <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, additional_info: e.target.value }))}>\n                            <option>Freehold</option>\n                            <option>Share of Freehold</option>\n                            <option>Leasehold</option>\n                          </select>\n                          : aiFields.channel === 'Rental' ? \n                            <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, additional_info: e.target.value }))}>\n                              <option>Furnished</option>\n                              <option>Unfurnished</option>\n                              <option>Part furnished</option>\n                              <option>Furnished or unfurnished</option>\n                            </select>\n                            : ''}\n                      </div>\n                      <div className='input-block' onChange={e => setAiFields(prevState => ({ ...prevState, price: e.target.value }))}>\n                        <h3>💷 Price</h3>\n                        <input\n                          type=\"number\"\n                          value={aiFields.price}\n                          onChange={e => setAiFields(prevState => ({ ...prevState, price: e.target.value }))}\n                        ></input>\n                      </div>\n\n                      <div className='input-block' id='features'>\n                        <h3>Feature Selector</h3>\n                        <div className='feature-section'>\n                          {features.map(feature => (\n                            <div key={feature}>\n                              <label>\n                                <input className='checkbox'\n                                  type=\"checkbox\"\n                                  checked={aiFields.amenities.includes(feature)}\n                                  onChange={() => handleCheckboxChange(feature)}\n                                />\n                                {feature}\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n\n                    \n                      <h3 className='lifestyle-indicator'>Lifestyle elements to include</h3>\n                      <div className='input-block'>\n                        <h3>👶 Primary schools</h3>\n                        <ReactSwitch\n                          checked={listingFields.primary_schools === 1}\n                          onChange={() => toggleStatus('primary_schools')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🎓 Secondary schools</h3>\n                        <ReactSwitch\n                          checked={listingFields.secondary_schools === 1}\n                          onChange={() => toggleStatus('secondary_schools')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🚇 Tubes</h3>\n                        <ReactSwitch\n                          checked={listingFields.tubes === 1}\n                          onChange={() => toggleStatus('tubes')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🚈 Trains</h3>\n                        <ReactSwitch\n                          checked={listingFields.trains === 1}\n                          onChange={() => toggleStatus('trains')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>⛽️ Electric vehicles</h3>\n                        <ReactSwitch\n                          checked={listingFields.evs === 1}\n                          onChange={() => toggleStatus('evs')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🍽 Restaurants</h3>\n                        <ReactSwitch\n                          checked={listingFields.restaurants === 1}\n                          onChange={() => toggleStatus('restaurants')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🍺 Pubs</h3>\n                        <ReactSwitch\n                          checked={listingFields.pubs === 1}\n                          onChange={() => toggleStatus('pubs')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🌳 Parks</h3>\n                        <ReactSwitch\n                          checked={listingFields.parks === 1}\n                          onChange={() => toggleStatus('parks')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🏋️‍♂️ Gyms</h3>\n                        <ReactSwitch\n                          checked={listingFields.gyms === 1}\n                          onChange={() => toggleStatus('gyms')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🛒 Supermarkets</h3>\n                        <ReactSwitch\n                          checked={listingFields.supermarkets === 1}\n                          onChange={() => toggleStatus('supermarkets')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n                      <div className='input-block'>\n                        <h3>🚔 Crime</h3>\n                        <ReactSwitch\n                          checked={listingFields.crime === 1}\n                          onChange={() => toggleStatus('crime')}\n                          onColor='#ED6B86'\n                          offColor='#051885'  \n                        />\n                      </div>\n\n                      <button onClick={loadPostcodeData}>Load description</button>\n                    </>\n                  \n                  \n                  \n                    : '' }\n\n\n\n\n\n\n            </div>\n            <div className='insight-inputs'>\n              {postcodeData ? \n                <div className='results-header'>\n                  <h3 className='results-title'>Your listing</h3>\n                  <h3 onClick={handleCopyText} className='copy-button'>📑</h3>\n                </div>\n                : '' }\n\n              <div className='input-block' ref={textDivRef}>\n                <div className='results-box' name=\"description\">\n                  {/* Description title */}\n                  {postcodeData && listingFields.description !== '' ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h1>About this property</h1>\n                        <p>{listingFields.description}</p>\n                      </div>\n                    </>\n\n                    : '' }\n\n\n\n                  {/* Lifestyle */}\n                  {postcodeData ? \n                    <h1>What you should know about this area</h1>\n                    : '' }\n                  {/* Restaurants */}\n                  {restaurants1 && listingFields.restaurants === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h4>Restaurants</h4>\n                        <h5>🍽 {restaurants1.length} restaurants within 15 mins walk</h5>\n                        <h5>🍽 more than {cuisines} cuisines available</h5>\n                        <h5>🍽 {topRestaurants[0]}, {topRestaurants[1]} & {topRestaurants[2]} are well rated</h5>\n                      </div>\n                    </>\n                    : '' }\n                  {/* Pubs */}\n                  {pubs1 && listingFields.pubs === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n\n                        <h4>Pubs</h4>\n                        <h5>🍺 {pubs1.length} pubs within 15 mins walk</h5>\n                        <h5>🍺 {topPubs[0]}, {topPubs[1]} & {topPubs[2]} are well rated</h5>\n                      </div>\n                    </>\n                    : '' }\n                  {/* Gyms */}\n                  {gyms1 && listingFields.gyms === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n\n                        <h4>Gyms</h4>\n                        <h5>🏋️‍♂️ {gyms1.length} gyms within 15 mins walk</h5>\n                        {mainGyms.length === 3 ? <h5>🏋️‍♂️ includes {mainGyms[0]}, {mainGyms[1]} & {mainGyms[2]}</h5> : mainGyms.length === 2 ? <h5>🏋️‍♂️ includes {mainGyms[0]} & {mainGyms[1]} </h5> : mainGyms.length === 1 ? <h5>🏋️‍♂️ includes {mainGyms[0]}</h5> : '' }\n                      </div>\n                    </>\n                    : '' }\n                  {/* Supermarkets */}\n                  {supermarkets1 && listingFields.supermarkets === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n\n                        <h4>Supermarkets</h4>\n                        <h5>🛒 {supermarkets1.length} supermarkets within 15 mins walk</h5>\n                        {mainSupermarkets.length === 3 ? <h5>🛒 includes {mainSupermarkets[0]}, {mainSupermarkets[1]} & {mainSupermarkets[2]}</h5> : mainSupermarkets.length === 2 ? <h5>🛒 includes {mainSupermarkets[0]} & {mainSupermarkets[1]} </h5> : mainSupermarkets.length === 1 ? <h5>🛒 includes {mainSupermarkets[0]}</h5> : '' }\n                      </div>\n                    </>\n                    : '' }\n                  {/* Tubes */}\n                  {tubes1 && listingFields.tubes === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h4>Tube stations</h4>\n                        <h5>🚇 {tubes1.length} stations within 20 mins walk</h5>\n                        {\n                          tubes1.slice(0, 5).map((train, index) => (\n                            <h5 key={index}>🚇 {train.station_name} - {train.line} - {train.walkTimeMin} mins walk</h5>\n                          ))\n                        }\n                      </div>\n                    </>\n                    : '' }\n                  {/* Trains */}\n                  {trains1 && listingFields.trains === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h4>Train stations</h4>\n                        <h5>🚈 {trains1.length} stations within 20 mins walk</h5>\n                        {\n                          trains1.slice(0, 5).map((train, index) => (\n                            <h5 key={index}>🚈 {train.station} - {train.walkTimeMin} mins walk</h5>\n                          ))\n                        }\n                      </div>\n                    </>\n                    : '' }\n                  {/* Parks */}\n                  {postcodeData && listingFields.parks === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h4>Green space</h4>\n                        <h5>🌳 within top {100 - postcodeData[0].parks_lsoa[0].london_percentile}% of areas in london for access to greenspace</h5>\n                        <h5>🌳 {postcodeData[0].parks_postcode.park_name0} - {Math.ceil((((postcodeData[0].parks_postcode.distance0) / 1000) / 5) * 60)} mins walk</h5>\n                        <h5>🌳 {postcodeData[0].parks_postcode.park_name1} - {Math.ceil((((postcodeData[0].parks_postcode.distance1) / 1000) / 5) * 60)} mins walk</h5>\n                        <h5>🌳 {postcodeData[0].parks_postcode.park_name2} - {Math.ceil((((postcodeData[0].parks_postcode.distance2) / 1000) / 5) * 60)} mins walk</h5>\n                      </div>\n                    </>\n                    : '' }\n                  {/* EVs */}\n                  {postcodeData && listingFields.evs === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h4>Electric vehicles</h4>\n                        <h5>🚇 {postcodeData[0].ev.ev_10_mins} charging points within 10 mins walk</h5>\n                        <h5>🚇 in the top {Math.round((1 - postcodeData[0].ev.percentile) * 100)}% of areas in London for ev charging access</h5>\n                      </div>\n                    </>\n                    : '' }\n                  {/* Primary schools */}\n                  {primaryData1 && listingFields.primary_schools === 1 ? \n                    <>\n                      <div className='lifestyle-block'>\n                        <h4>Primary schools</h4>\n                        {\n                          primaryData1.slice(0, 5).map((school, index) => (\n                            <h5 key={index}>👶 {school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</h5>\n                          ))\n                        }\n                      </div>\n                    </>\n                    : '' }\n\n\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n\n          \n        </section>\n\n\n      </section> \n\n\n\n    </>\n  )\n}\n\nexport default ListingGenerator","import t,{Component as i}from\"react\";function s(){return s=Object.assign?Object.assign.bind():function(t){for(var i=1;i<arguments.length;i++){var s=arguments[i];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},s.apply(this,arguments)}var n=t.createElement(\"svg\",{viewBox:\"-2 -5 14 20\",height:\"100%\",width:\"100%\",style:{position:\"absolute\",top:0}},t.createElement(\"path\",{d:\"M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12\",fill:\"#fff\",fillRule:\"evenodd\"})),o=t.createElement(\"svg\",{height:\"100%\",width:\"100%\",viewBox:\"-2 -5 17 21\",style:{position:\"absolute\",top:0}},t.createElement(\"path\",{d:\"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\",fill:\"#fff\",fillRule:\"evenodd\"}));function h(t){if(7===t.length)return t;for(var i=\"#\",s=1;s<4;s+=1)i+=t[s]+t[s];return i}function e(t,i,s,n,o){return function(t,i,s,n,o){var h=(t-s)/(i-s);if(0===h)return n;if(1===h)return o;for(var e=\"#\",a=1;a<6;a+=2){var r=parseInt(n.substr(a,2),16),l=parseInt(o.substr(a,2),16),c=Math.round((1-h)*r+h*l).toString(16);1===c.length&&(c=\"0\"+c),e+=c}return e}(t,i,s,h(n),h(o))}var a=function(i){function n(t){i.call(this,t);var s=t.height,n=t.width,o=t.checked;this.t=t.handleDiameter||s-2,this.i=Math.max(n-s,n-(s+this.t)/2),this.o=Math.max(0,(s-this.t)/2),this.state={h:o?this.i:this.o},this.l=0,this.u=0,this.p=this.p.bind(this),this.v=this.v.bind(this),this.g=this.g.bind(this),this.k=this.k.bind(this),this.m=this.m.bind(this),this.M=this.M.bind(this),this.T=this.T.bind(this),this.$=this.$.bind(this),this.C=this.C.bind(this),this.D=this.D.bind(this),this.O=this.O.bind(this),this.S=this.S.bind(this)}return i&&(n.__proto__=i),(n.prototype=Object.create(i&&i.prototype)).constructor=n,n.prototype.componentDidMount=function(){this.W=!0},n.prototype.componentDidUpdate=function(t){t.checked!==this.props.checked&&this.setState({h:this.props.checked?this.i:this.o})},n.prototype.componentWillUnmount=function(){this.W=!1},n.prototype.I=function(t){this.H.focus(),this.setState({R:t,j:!0,B:Date.now()})},n.prototype.L=function(t){var i=this.state,s=i.R,n=i.h,o=(this.props.checked?this.i:this.o)+t-s;i.N||t===s||this.setState({N:!0});var h=Math.min(this.i,Math.max(this.o,o));h!==n&&this.setState({h:h})},n.prototype.U=function(t){var i=this.state,s=i.h,n=i.N,o=i.B,h=this.props.checked,e=(this.i+this.o)/2;this.setState({h:this.props.checked?this.i:this.o});var a=Date.now()-o;(!n||a<250||(h&&s<=e||!h&&s>=e))&&this.A(t),this.W&&this.setState({N:!1,j:!1}),this.l=Date.now()},n.prototype.p=function(t){t.preventDefault(),\"number\"==typeof t.button&&0!==t.button||(this.I(t.clientX),window.addEventListener(\"mousemove\",this.v),window.addEventListener(\"mouseup\",this.g))},n.prototype.v=function(t){t.preventDefault(),this.L(t.clientX)},n.prototype.g=function(t){this.U(t),window.removeEventListener(\"mousemove\",this.v),window.removeEventListener(\"mouseup\",this.g)},n.prototype.k=function(t){this.X=null,this.I(t.touches[0].clientX)},n.prototype.m=function(t){this.L(t.touches[0].clientX)},n.prototype.M=function(t){t.preventDefault(),this.U(t)},n.prototype.$=function(t){Date.now()-this.l>50&&(this.A(t),Date.now()-this.u>50&&this.W&&this.setState({j:!1}))},n.prototype.C=function(){this.u=Date.now()},n.prototype.D=function(){this.setState({j:!0})},n.prototype.O=function(){this.setState({j:!1})},n.prototype.S=function(t){this.H=t},n.prototype.T=function(t){t.preventDefault(),this.H.focus(),this.A(t),this.W&&this.setState({j:!1})},n.prototype.A=function(t){var i=this.props;(0,i.onChange)(!i.checked,t,i.id)},n.prototype.render=function(){var i=this.props,n=i.checked,o=i.disabled,h=i.className,a=i.offColor,r=i.onColor,l=i.offHandleColor,c=i.onHandleColor,u=i.checkedIcon,d=i.uncheckedIcon,f=i.checkedHandleIcon,p=i.uncheckedHandleIcon,b=i.boxShadow,v=i.activeBoxShadow,g=i.height,y=i.width,w=i.borderRadius,k=function(t,i){var s={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&-1===i.indexOf(n)&&(s[n]=t[n]);return s}(i,[\"checked\",\"disabled\",\"className\",\"offColor\",\"onColor\",\"offHandleColor\",\"onHandleColor\",\"checkedIcon\",\"uncheckedIcon\",\"checkedHandleIcon\",\"uncheckedHandleIcon\",\"boxShadow\",\"activeBoxShadow\",\"height\",\"width\",\"borderRadius\",\"handleDiameter\"]),m=this.state,M=m.h,T=m.N,x=m.j,$={position:\"relative\",display:\"inline-block\",textAlign:\"left\",opacity:o?.5:1,direction:\"ltr\",borderRadius:g/2,WebkitTransition:\"opacity 0.25s\",MozTransition:\"opacity 0.25s\",transition:\"opacity 0.25s\",touchAction:\"none\",WebkitTapHighlightColor:\"rgba(0, 0, 0, 0)\",WebkitUserSelect:\"none\",MozUserSelect:\"none\",msUserSelect:\"none\",userSelect:\"none\"},C={height:g,width:y,margin:Math.max(0,(this.t-g)/2),position:\"relative\",background:e(M,this.i,this.o,a,r),borderRadius:\"number\"==typeof w?w:g/2,cursor:o?\"default\":\"pointer\",WebkitTransition:T?null:\"background 0.25s\",MozTransition:T?null:\"background 0.25s\",transition:T?null:\"background 0.25s\"},D={height:g,width:Math.min(1.5*g,y-(this.t+g)/2+1),position:\"relative\",opacity:(M-this.o)/(this.i-this.o),pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},O={height:g,width:Math.min(1.5*g,y-(this.t+g)/2+1),position:\"absolute\",opacity:1-(M-this.o)/(this.i-this.o),right:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},S={height:this.t,width:this.t,background:e(M,this.i,this.o,l,c),display:\"inline-block\",cursor:o?\"default\":\"pointer\",borderRadius:\"number\"==typeof w?w-1:\"50%\",position:\"absolute\",transform:\"translateX(\"+M+\"px)\",top:Math.max(0,(g-this.t)/2),outline:0,boxShadow:x?v:b,border:0,WebkitTransition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",MozTransition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",transition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\"},W={height:this.t,width:this.t,opacity:Math.max(2*(1-(M-this.o)/(this.i-this.o)-.5),0),position:\"absolute\",left:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},z={height:this.t,width:this.t,opacity:Math.max(2*((M-this.o)/(this.i-this.o)-.5),0),position:\"absolute\",left:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"};return t.createElement(\"div\",{className:h,style:$},t.createElement(\"div\",{className:\"react-switch-bg\",style:C,onClick:o?null:this.T,onMouseDown:function(t){return t.preventDefault()}},u&&t.createElement(\"div\",{style:D},u),d&&t.createElement(\"div\",{style:O},d)),t.createElement(\"div\",{className:\"react-switch-handle\",style:S,onClick:function(t){return t.preventDefault()},onMouseDown:o?null:this.p,onTouchStart:o?null:this.k,onTouchMove:o?null:this.m,onTouchEnd:o?null:this.M,onTouchCancel:o?null:this.O},p&&t.createElement(\"div\",{style:W},p),f&&t.createElement(\"div\",{style:z},f)),t.createElement(\"input\",s({},{type:\"checkbox\",role:\"switch\",\"aria-checked\":n,checked:n,disabled:o,style:{border:0,clip:\"rect(0 0 0 0)\",height:1,margin:-1,overflow:\"hidden\",padding:0,position:\"absolute\",width:1}},k,{ref:this.S,onFocus:this.D,onBlur:this.O,onKeyUp:this.C,onChange:this.$})))},n}(i);a.defaultProps={disabled:!1,offColor:\"#888\",onColor:\"#080\",offHandleColor:\"#fff\",onHandleColor:\"#fff\",uncheckedIcon:n,checkedIcon:o,boxShadow:null,activeBoxShadow:\"0 0 2px 3px #3bf\",height:28,width:56};export{a as default};\n"],"names":["setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","className","style","backgroundColor","color","onClick","textDecoration","textUnderlineOffset","fontWeight","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","variableSide","setVariableSide","userData","setUserData","useEffect","async","data","axios","getUserToken","headers","Authorization","getAccessToken","console","log","error","getUser","id","loading","setLoading","textDivRef","search","setSearch","listingSelection","setListingSelection","postcodeSubstring","setPostcodeSubstring","addressSubstring","setAddressSubstring","listingFields","setListingFields","postcode","address","description","channel","bedrooms","bathrooms","property_type","tenure","size","on_road_parking","off_road_parking","balcony","primary_schools","secondary_schools","tubes","trains","restaurants","pubs","supermarkets","gyms","parks","evs","crime","aiFields","setAiFields","postcodeData","setPostcodes","primaryData","setPrimaryData","primaryData1","setPrimaryData1","secondaryData","setSecondaryData","secondaryData1","setSecondaryData1","topPrimaries","setTopPrimaries","topSecondaries","setTopSecondaries","setRestaurants","setGyms","setPubs","setSupermarkets","ev","setEv","restaurants1","setRestaurants1","gyms1","setGyms1","pubs1","setPubs1","supermarkets1","setSupermarkets1","ev1","setEv1","cuisines","setCuisines","topRestaurants","setTopRestaurants","topPubs","setTopPubs","mainGyms","setMainGyms","mainSupermarkets","setMainSupermarkets","setTubes","setTrains","tubes1","setTubes1","trains1","setTrains1","aiSearch","setAiSearch","aiReady","setAiReady","searchGo","setSearchGo","loadPostcodeData","listingType","increaseUsageCount","modifiedData","request_type","setResultsToLocalStorage","setItem","JSON","stringify","getPrimaries","loadPrimaryData","walkDistanceKm20","R","toRad","value","Math","PI","kmPerMinute","nearbyPrimaries","filter","item","dLat","parseFloat","latitude","longitude","dLon","a","sin","cos","c","atan2","sqrt","distanceKm","distance_between","walkTimeMin","round","distancePercent","max_distance","school_type","within_catchment","additional_status","sort","b","firstSchoolNames","slice","getNearbyPrimaries","getSecondaries","loadSecondaryData","nearbySecondaries","maxDistancePercent","minDistancePercent","min_distance","includes","getNearbySecondaries","getData","loadRestaurantData","walkDistanceKm15","nearbyRestaurants","rating","topThreeRestaurants","restaurant","cuisine","map","restaurant_name","Set","countUniqueCuisines","prevState","length","getNearbyRestaurants","loadFitnessData","specificGyms","uniqueGyms","nearbyStudios","Lat","long","topThreeStudios","i","gym","gym_group","toLowerCase","has","push","add","getNearbyStudios","loadSupermarketData","specificSupermarkets","uniqueSupermarkets","nearbySupermarkets","distance","topThreeSupermarkets","supermarket","supermarket_brand","supermarket_store_name","getNearbySupermatkets","loadTubesData","nearbyTubes","lat","station_name","getNearbyTubes","loadEVdata","nearbyChargers","getNearbyChargers","loadPubsData","nearbyPubs","topThreePubs","pub","name","getNearbyPubs","loadTrainsData","nearbyTrains","getNearbyTrains","toggleStatus","key","prevData","column","status","message","type","onChange","e","target","toUpperCase","replace","placeholder","rows","checked","onColor","offColor","additional_info","price","feature","amenities","prev","handleCheckboxChange","text","current","innerText","textarea","document","createElement","body","appendChild","select","execCommand","removeChild","ref","train","index","line","station","parks_lsoa","london_percentile","parks_postcode","park_name0","ceil","distance0","park_name1","distance1","park_name2","distance2","ev_10_mins","percentile","school","school_name","ofsted_results","s","Object","assign","bind","t","arguments","n","prototype","hasOwnProperty","call","apply","this","viewBox","height","width","position","top","d","fill","fillRule","o","h","r","parseInt","substr","l","toString","handleDiameter","max","state","u","p","v","g","k","m","M","T","$","C","D","O","S","__proto__","create","constructor","componentDidMount","W","componentDidUpdate","props","setState","componentWillUnmount","I","H","focus","j","B","Date","now","L","N","min","U","A","preventDefault","button","clientX","addEventListener","removeEventListener","X","touches","render","disabled","offHandleColor","onHandleColor","checkedIcon","uncheckedIcon","f","checkedHandleIcon","uncheckedHandleIcon","boxShadow","activeBoxShadow","y","w","borderRadius","indexOf","x","display","textAlign","opacity","direction","WebkitTransition","MozTransition","transition","touchAction","WebkitTapHighlightColor","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","margin","background","cursor","pointerEvents","right","transform","outline","border","left","z","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","role","clip","overflow","padding","onFocus","onBlur","onKeyUp","defaultProps"],"sourceRoot":""}