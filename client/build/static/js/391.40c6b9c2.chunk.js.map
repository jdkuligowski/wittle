{"version":3,"file":"static/js/391.40c6b9c2.chunk.js","mappings":"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","sources":["components/tools/Timeline3.js","components/wittleSearch/formBlocks/family/FriendsLeft.js","components/wittleSearch/formBlocks/family/Family.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst Timeline3 = () => {\n\n\n\n\n  return (\n    <section className='property-search-wrapper'>\n      <div className='timeline-bar-3'>\n        <div className='progress-circles-3'>\n          <div className='milestone-1'>\n            <h1></h1>\n          </div>\n          <div className='milestone-2'>\n            <h1></h1>\n          </div>\n          <div className='milestone-3'>\n            <h1></h1>\n          </div>\n          <div className='milestone-4'>\n            <h1></h1>\n          </div>\n          <div className='milestone-5'>\n            <h1></h1>\n          </div>\n        </div>\n      </div>\n      <div className='timeline-background-3'>\n        {/* <h1>.</h1> */}\n      </div>\n    </section>\n  )\n\n}\n\nexport default Timeline3","\n\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { Slider } from 'material-ui-slider'\n\n\n\n\nconst FriendsLeft = () => {\n\n\n  // states for filling out the form\n  const [formData, setFormData] = useState({\n    start_search: true,\n    search_name: '',\n    restaurant_selection: false,\n    restaurant_decision: '',\n    restaurant_distance: '',\n    restaurant_cuisine_1: '',\n    restaurant_cuisine_2: '',\n    takeaway_selection: false,\n    takeaway_decision: '',\n    takeaway_distance: '',\n    takeaway_cuisine_1: '',\n    takeaway_cuisine_2: '',\n    pubs_selection: false,\n    pubs_distance: '',\n    cafes_selection: '',\n    cafes_decision: '',\n    cafes_detail: '',\n    cafes_distance: '',\n    tube_selection: false,\n    tube_decision: '',\n    tube_detail: '',\n    tube_distance: '',\n    train_selection: false,\n    train_decision: '',\n    train_detail: '',\n    train_distance: '',\n    primary_selection: false,\n    primary_religion: '',\n    primary_mode: '',\n    primary_distance: '',\n    college_selection: false,\n    college_religion: '',\n    college_mode: '',\n    college_distance: '',\n    secondary_selection: false,\n    secondary_religion: '',\n    secondary_mode: '',\n    secondary_distance: '',\n    supermarket_selection: false,\n    supermarket_decision: '',\n    supermarket_segment: '',\n    supermarket_size: '',\n    supermarket_distance: '',\n    gym_selection: false,\n    gym_studio_name: '',\n    gym_class_type: '',\n    gym_distance: '',\n    park_selection: false,\n    park_type: '',\n    park_distance: '',\n    workplace_selection: false,\n    workplace_detail: '',\n    workplace_transport: '',\n    workplace_distance: '',\n    family_selection: false,\n    family_detail_1: '',\n    family_distance_1: '',\n    family_detail_2: '',\n    family_distance_2: '',\n    family_detail_3: '',\n    family_distance_3: '',\n  })\n  \n  // get form data from storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('wittle-form-input'))\n    if (data) setFormData(data)\n  }, [])\n\n\n  // handling the slider states\n\n  // general update for drop down menus\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n\n\n  return (\n    <div className='form-filling-section-1' id='restaurant-grid'>\n      <div className='form-filling-grid'>\n        <div className='form-filling-detail-left'>\n          <h3>Friends & Family</h3>\n          <div className='form-detail'>\n            <div className='form-detail-address' id='name'>\n              <h4>Name</h4>\n              <input type=\"text\" name='family_detail_1' onChange={handleChange} />\n            </div>\n            <div className='form-detail-address'>\n              <h4>Postcode</h4>\n              <input type=\"text\" name='family_distance_1' onChange={handleChange} />\n            </div>\n          </div>\n          <p className='distance-text'>How far away from this person do you want to be?</p>\n          <div className='slider-container'>\n            <input\n              type='range'\n              onChange={(e) => setFormData({ ...formData, family_distance_1: e.target.value })}\n              name={formData.family_distance_1}\n              className='slider'\n              defaultValue='20'\n              min='1'\n              max='100'\n              step='1'>\n            </input>\n          </div>\n          <p>{formData.family_distance_1} minutes</p>\n          <div className='form-detail'>\n            <div className='form-detail-address' id='name'>\n              <h4>Name</h4>\n              <input type=\"text\" name='family_detail_2' onChange={handleChange} />\n            </div>\n            <div className='form-detail-address'>\n              <h4>Postcode</h4>\n              <input type=\"text\" name='family_distance_2' onChange={handleChange} />\n            </div>\n          </div>\n          <p className='distance-text'>How far away from this person do you want to be?</p>\n          <div className='slider-container'>\n            <input\n              type='range'\n              onChange={(e) => setFormData({ ...formData, family_distance_2: e.target.value })}\n              name={formData.family_distance_2}\n              className='slider'\n              defaultValue='20'\n              min='1'\n              max='100'\n              step='1'>\n            </input>\n          </div>\n          <p>{formData.family_distance_2} minutes</p>\n          <div className='form-detail'>\n            <div className='form-detail-address' id='name'>\n              <h4>Name</h4>\n              <input type=\"text\" name='family_detail_3' onChange={handleChange} />\n            </div>\n            <div className='form-detail-address'>\n              <h4>Postcode</h4>\n              <input type=\"text\" name='family_distance_3' onChange={handleChange} />\n            </div>\n          </div>\n          <p className='distance-text'>How far away from this person do you want to be?</p>\n          <div className='slider-container'>\n            <input\n              type='range'\n              onChange={(e) => setFormData({ ...formData, family_distance_3: e.target.value })}\n              name={formData.family_distance_3}\n              className='slider'\n              defaultValue='20'\n              min='1'\n              max='100'\n              step='1'>\n            </input>\n          </div>\n          <p>{formData.family_distance_3} minutes</p>\n        </div>\n        <div className='form-filling-image-right' id='friends-image'>\n\n        </div>\n      </div>\n    </div>\n\n  )\n\n\n\n}\n\nexport default FriendsLeft","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport Modal from 'react-modal'\n// import Button from 'react-native-button'\n// import Form from 'react-bootstrap/Form'\n\n\nimport Timeline3 from '../../../tools/Timeline3'\nimport Primaries from './Primaries'\nimport SecondariesRight from './SecondariesRight'\nimport SecondariesLeft from './SecondariesLeft'\nimport CollegesLeft from './CollegesLeft'\nimport CollegesRight from './CollegesRight'\nimport FriendsRight from './FriendsRight'\nimport FriendsLeft from './FriendsLeft'\nimport NavBar from '../../../tools/NavBar'\n\n\n\nconst Family = () => {\n\n\n  // set state for the number of true values in hospitality\n  const [truths, setTruths] = useState()\n\n  // states for filling out the form\n  const [formData, setFormData] = useState({\n    start_search: true,\n    search_name: '',\n    search_type: 'Wittle',\n    search_channel: 'Buying',\n    restaurant_selection: false,\n    restaurant_decision: '',\n    restaurant_distance: 10,\n    restaurant_cuisine_1: '',\n    restaurant_cuisine_2: '',\n    takeaway_selection: false,\n    takeaway_decision: '',\n    takeaway_distance: 10,\n    takeaway_cuisine_1: '',\n    takeaway_cuisine_2: '',\n    pubs_selection: false,\n    pubs_distance: 10,\n    cafes_selection: '',\n    cafes_decision: '',\n    cafes_detail: '',\n    cafes_distance: 10,\n    tube_selection: false,\n    tube_decision: '',\n    tube_detail: '',\n    tube_distance: 10,\n    train_selection: false,\n    train_decision: '',\n    train_detail: '',\n    train_distance: 10,\n    primary_selection: false,\n    primary_religion: '',\n    primary_mode: '',\n    primary_distance: 10,\n    college_selection: false,\n    college_religion: '',\n    college_mode: '',\n    college_distance: 10,\n    secondary_selection: false,\n    secondary_religion: '',\n    secondary_mode: '',\n    secondary_distance: 10,\n    supermarket_selection: false,\n    supermarket_decision: '',\n    supermarket_segment: '',\n    supermarket_size: '',\n    supermarket_distance: 10,\n    gym_selection: false,\n    gym_studio_name: '',\n    gym_class_type: '',\n    gym_distance: 10,\n    park_selection: false,\n    park_type: '',\n    park_distance: 10,\n    workplace_selection: false,\n    workplace_detail: '',\n    workplace_transport: '',\n    workplace_distance: 10,\n    family_selection: false,\n    family_detail_1: '',\n    family_distance_1: 10,\n    family_detail_2: '',\n    family_distance_2: 0,\n    family_detail_3: '',\n    family_distance_3: 0,\n    family_mode_1: '',\n    family_mode_2: '',\n    family_mode_3: '',\n    property_price_min: '0',\n    property_price_max: '10000000',\n    property_bed_min: '0',\n    property_bed_max: '5',\n    property_type: 'Any',\n    owner: 31,\n  })\n\n  // get form data from storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('wittle-form-input'))\n    if (data) setFormData(data)\n  }, [])\n\n\n  // check the number of elements populated - to be used in the logic to fill the page\n  const checkingState = () => {\n    const array = [formData.primary_selection, formData.secondary_selection, formData.college_selection, formData.family_selection]\n    const count = array.filter(Boolean).length\n    setTruths(count)\n  }\n\n  // carry out the calculation for checking the number of true elements populated\n  useEffect(() => {\n    checkingState()\n  })\n\n  // general update for drop down menus\n  const handleChange = e => {\n    if (e.target.name === 'family_detail_1') {\n      const removeSpace = e.target.value.replace(/\\s+/g, '')\n      setFormData({ ...formData, [e.target.name]: removeSpace })\n    } else if (e.target.name === 'family_detail_2') {\n      const removeSpace = e.target.value.replace(/\\s+/g, '')\n      setFormData({ ...formData, [e.target.name]: removeSpace })\n    } else {\n      setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n  }\n\n\n\n  // define function to set state to storage\n  const setStateToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-form-input', JSON.stringify(formData))\n  }\n\n  // execute setting state to local storage\n  useEffect(() => {\n    // if (formData) {\n    setStateToLocalStorage()\n    // }\n  }, [formData])\n\n\n  return (\n    <section className='main-form-pages'>\n      <NavBar />\n      <section className='form-input-page'>\n        {/* Top section of the page with header and timeline bar */}\n        <section className='title-section'>\n          <h1>Now for the detail</h1>\n          <Timeline3 />\n          <div className='form-selections-large'>\n            {formData.restaurant_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Restaurants</button> : ''}\n            {formData.cafes_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Cafes</button> : ''}\n            {formData.takeaway_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Takeaways</button> : ''}\n            {formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Pubs & Bars</button> : ''}\n            {formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Tubes</button> : ''}\n            {formData.train_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Trains</button> : ''}\n            {formData.supermarket_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Supermarkets</button> : ''}\n            {formData.gym_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Gyms</button> : ''}\n            {formData.park_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Parks</button> : ''}\n            {formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Workplace</button> : ''}\n            {formData.primary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Primary Schools</button> : ''}\n            {formData.secondary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Secondary Schools</button> : ''}\n            {formData.college_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>6th Forms</button> : ''}\n            {formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Friends & Family</button> : ''}\n          </div>\n          <div className='form-selections-small'>\n            {formData.restaurant_selection || formData.cafes_selection || formData.takeaway_selection || formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Hospitality</button> : ''}\n            {formData.train_selection || formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Travel</button> : ''}\n            {formData.supermarket_selection || formData.gym_selection || formData.park_selection || formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Lifestyle</button> : ''}\n            {formData.primary_selection || formData.secondary_selection || formData.college_selection || formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Family</button> : ''}\n\n          </div>\n        </section>\n        <section className='main-content-detail'>\n          <div className='form-selection'>\n            <h1>Family</h1>\n            {/* Split out logic for when different lifestyle options are selected */}\n            {/* Supermarkets selected or not */}\n            {formData.primary_selection ?\n              <div className='form-filling-section-1' id='restaurant-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Primary Schools</h3>\n                    <p>Do you normally to drop your them off at school or walk them there?</p>\n                    <select className='form-control' id='cuisine-drop-1' placeholder='Pick transport' name='primary_mode' onChange={handleChange} >Choose mode\n                      <option>Choose mode</option>\n                      <option>Walk</option>\n                      <option>Cycle</option>\n                      <option>Drive/ transport</option>\n                    </select>\n                    <p className='distance-text'>What is the furthest you&apos;re happy to travel on the school run?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, primary_distance: e.target.value })}\n                        name={formData.primary_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.primary_distance} minutes</p>\n\n                    <p className='cuisine-choice'>Do you have any religious requirements for the school?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick relgious requirement' name='primary_religion' onChange={handleChange} >Pick relgion\n                        <option>No requirement</option>\n                        <option>Anglican/ Church of England</option>\n                        <option>Islam</option>\n                        <option>Jewish</option>\n                        <option>Roman Catholic</option>\n                      </select>\n                    </div>\n\n                  </div>\n                  <div className='form-filling-image-right' id='primary-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n\n            {/* Gyms selected or not */}\n            {/* Gyms and supermarkets selected - gym needs to sit on right */}\n            {formData.secondary_selection & formData.primary_selection ?\n              <div className='form-filling-section-2' id='restaurant-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right'>\n                    <h3>Secondary Schools</h3>\n                    <p>How do they get to secondary school?</p>\n                    <select className='form-control' id='cuisine-drop-1' placeholder='Pick transport' name='secondary_mode' onChange={handleChange} >Choose mode\n                      <option>Choose mode</option>\n                      <option>Walk</option>\n                      <option>Cycle</option>\n                      <option>Drive/ transport</option>\n                    </select>\n                    <p className='distance-text'>What is the furthest you&apos;re happy to travel on the school run?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, secondary_distance: e.target.value })}\n                        name={formData.secondary_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.secondary_distance} minutes</p>\n                    <p className='cuisine-choice'>Do you have any religious requirements for the school?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick relgious requirement' name='secondary_relgion' onChange={handleChange} >Pick relgion\n                        <option>No requirement</option>\n                        <option>Anglican/ Church of England</option>\n                        <option>Islam</option>\n                        <option>Jewish</option>\n                        <option>Roman Catholic</option>\n                      </select>\n                    </div>\n\n                  </div>\n                  <div className='form-filling-image-right' id='secondary-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {/* Otherwise gyms should sit on the left */}\n            {(formData.secondary_selection & !formData.primary_selection) ?\n              <div className='form-filling-section-1' id='restaurant-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Secondary Schools</h3>\n                    <p>How do they get to secondary school?</p>\n                    <select className='form-control' id='cuisine-drop-1' placeholder='Pick transport' name='secondary_mode' onChange={handleChange} >Choose mode\n                      <option>Choose mode</option>\n                      <option>Walk</option>\n                      <option>Cycle</option>\n                      <option>Drive/ transport</option>\n                    </select>\n                    <p className='distance-text'>What is the furthest you&apos;re happy to travel on the school run?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, secondary_distance: e.target.value })}\n                        name={formData.secondary_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.secondary_distance} minutes</p>\n\n                    <p className='cuisine-choice'>Do you have any religious requirements for the school?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick relgious requirement' name='secondary_relgion' onChange={handleChange} >Pick relgion\n                        <option>No requirement</option>\n                        <option>Anglican/ Church of England</option>\n                        <option>Islam</option>\n                        <option>Jewish</option>\n                        <option>Roman Catholic</option>\n                      </select>\n                    </div>\n\n                  </div>\n                  <div className='form-filling-image-right' id='secondary-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n\n            {/* Are parks selected or not */}\n            {/* Either two things selected or none - parks sits on the left */}\n            {(formData.college_selection & (truths === 1 || truths === 4 || (formData.primary_selection & formData.secondary_selection) || (formData.family_selection & truths === 2))) ?\n              <div className='form-filling-section-1' id='college-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Sixth Forms</h3>\n                    <p>Now they&apos;re in 6th form, how do they usually get to school?</p>\n                    <select className='form-control' id='cuisine-drop-1' placeholder='Pick transport' name='college_mode' onChange={handleChange} >Choose mode\n                      <option>Choose mode</option>\n                      <option>Walk</option>\n                      <option>Cycle</option>\n                      <option>Drive/ transport</option>\n                    </select>\n                    <p className='distance-text'>How far do you expect them to travel to school?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, college_distance: e.target.value })}\n                        name={formData.college_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.college_distance} minutes</p>\n\n                    <p className='cuisine-choice'>Do you have any religious requirements for the school?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick relgious requirement' name='college_religion' onChange={handleChange} >Pick relgion\n                        <option>No requirement</option>\n                        <option>Anglican/ Church of England</option>\n                        <option>Islam</option>\n                        <option>Jewish</option>\n                        <option>Roman Catholic</option>\n                      </select>\n                    </div>\n\n                  </div>\n                  <div className='form-filling-image-right' id='college-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {/* Otherwise parks sit on the right */}\n            {(formData.college_selection & (((!formData.secondary_selection) & truths === 3) || (formData.secondary_selection & formData.family_selection & truths === 3) || (!formData.secondary_selection & formData.primary_selection & truths === 2) || (formData.secondary_selection & truths === 2))) ?\n              <div className='form-filling-section-2' id='college-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right'>\n                    <h3>Sixth Forms</h3>\n                    <p>Now they&apos;re in 6th form, how do they usually get to school?</p>\n                    <select className='form-control' id='cuisine-drop-1' placeholder='Pick transport' name='college_mode' onChange={handleChange} >Choose mode\n                      <option>Choose mode</option>\n                      <option>Walk</option>\n                      <option>Cycle</option>\n                      <option>Drive/ transport</option>\n                    </select>\n                    <p className='distance-text'>How far do you expect them to travel to school?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, college_distance: e.target.value })}\n                        name={formData.college_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.college_distance} minutes</p>\n                    <p className='cuisine-choice'>Do you have any religious requirements for the school?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick relgious requirement' name='college_religion' onChange={handleChange} >Pick relgion\n                        <option>No requirement</option>\n                        <option>Anglican/ Church of England</option>\n                        <option>Islam</option>\n                        <option>Jewish</option>\n                        <option>Roman Catholic</option>\n                      </select>\n                    </div>\n\n                  </div>\n                  <div className='form-filling-image-right' id='college-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n\n            {/* Is workplace selected or not */}\n            {/* Either 3 things selected or one - workplace will sit on the right */}\n            {(formData.family_selection & (truths === 2 || truths === 4)) ?\n              <div className='form-filling-section-2' id='restaurant-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right'>\n                    <h3>Friends & Family</h3>\n                    <p>Choose up to two friends and family you want to be close to.</p>\n                    <div className='form-detail'>\n                      <div className='form-detail-address' id='name'>\n                        <h4>Name</h4>\n                        <input type=\"text\" name='family_name_1' onChange={handleChange} />\n                      </div>\n                      <div className='form-detail-address'>\n                        <h4>Postcode</h4>\n                        <input type=\"text\" name='family_detail_1' onChange={handleChange} style={{ textTransform: 'uppercase' }} />\n                      </div>\n                    </div>\n                    <p className='distance-text'>How would you like to travel to get there?</p>\n\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select transport' name='family_mode_1' onChange={handleChange}>Choose mode of transport\n                        <option>Choose mode of transport</option>\n                        <option>Walking</option>\n                        <option>Cycling</option>\n                        <option>Driving/ transport</option>\n                      </select>\n                    </div>\n                    <p className='distance-text'>How far away from this person do you want to be?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, family_distance_1: e.target.value })}\n                        name={formData.family_distance_1}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='60'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.family_distance_1} minutes</p>\n\n                    <div className='form-detail'>\n                      <div className='form-detail-address' id='name'>\n                        <h4>Name</h4>\n                        <input type=\"text\" name='family_name_2' onChange={handleChange} />\n                      </div>\n                      <div className='form-detail-address'>\n                        <h4>Postcode</h4>\n                        <input type=\"text\" name='family_detail_2' onChange={handleChange} style={{ textTransform: 'uppercase' }} />\n                      </div>\n                    </div>\n                    <p className='distance-text'>How would you like to travel to get there?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select transport' name='family_mode_2' onChange={handleChange}>Choose mode of transport\n                        <option>Choose mode of transport</option>\n                        <option>Walking</option>\n                        <option>Cycling</option>\n                        <option>Driving/ transport</option>\n                      </select>\n                    </div>\n                    <p className='distance-text'>How far away from this person do you want to be?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, family_distance_2: e.target.value })}\n                        name={formData.family_distance_2}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='60'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.family_distance_2} minutes</p>\n\n                  </div>\n                  <div className='form-filling-image-right' id='friends-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {(formData.family_selection & (truths === 1 || truths === 3)) ?\n              // Only 2 things or no things selected\n              <div className='form-filling-section-1' id='restaurant-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Friends & Family</h3>\n                    <p>Choose up to two friends and family you want to be close to.</p>\n                    <div className='form-detail'>\n                      <div className='form-detail-address' id='name'>\n                        <h4>Name</h4>\n                        <input type=\"text\" name='family_name_1' onChange={handleChange} />\n                      </div>\n                      <div className='form-detail-address'>\n                        <h4>Postcode</h4>\n                        <input type=\"text\" name='family_detail_1' onChange={handleChange} style={{ textTransform: 'uppercase' }} />\n                      </div>\n                    </div>\n                    <p className='distance-text'>How would you like to travel to get there?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select transport' name='family_mode_1' onChange={handleChange}>Choose mode of transport\n                        <option>Choose mode of transport</option>\n                        <option>Walking</option>\n                        <option>Cycling</option>\n                        <option>Driving/ transport</option>\n                      </select>\n                    </div>\n                    <p className='distance-text'>How far away from this person do you want to be?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, family_distance_1: e.target.value })}\n                        name={formData.family_distance_1}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='60'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.family_distance_1} minutes</p>\n\n                    <div className='form-detail'>\n                      <div className='form-detail-address' id='name'>\n                        <h4>Name</h4>\n                        <input type=\"text\" name='family_name_2' onChange={handleChange} />\n                      </div>\n                      <div className='form-detail-address'>\n                        <h4>Postcode</h4>\n                        <input type=\"text\" name='family_detail_2' onChange={handleChange} style={{ textTransform: 'uppercase' }} />\n                      </div>\n                    </div>\n                    <p className='distance-text'>How would you like to travel to get there?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select transport' name='family_mode_1' onChange={handleChange}>Choose mode of transport\n                        <option>Choose mode of transport</option>\n                        <option>Walking</option>\n                        <option>Cycling</option>\n                        <option>Driving/ transport</option>\n                      </select>\n                    </div>\n                    <p className='distance-text'>How far away from this person do you want to be?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, family_distance_2: e.target.value })}\n                        name={formData.family_distance_2}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='60'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.family_distance_2} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='friends-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            <Link to={'/wittle-search/property'}><button className='next' >Next</button></Link>\n          </div>\n\n\n        </section>\n      </section>\n    </section>\n  )\n\n}\n\nexport default Family"],"names":["className","truths","setTruths","useState","formData","setFormData","start_search","search_name","search_type","search_channel","restaurant_selection","restaurant_decision","restaurant_distance","restaurant_cuisine_1","restaurant_cuisine_2","takeaway_selection","takeaway_decision","takeaway_distance","takeaway_cuisine_1","takeaway_cuisine_2","pubs_selection","pubs_distance","cafes_selection","cafes_decision","cafes_detail","cafes_distance","tube_selection","tube_decision","tube_detail","tube_distance","train_selection","train_decision","train_detail","train_distance","primary_selection","primary_religion","primary_mode","primary_distance","college_selection","college_religion","college_mode","college_distance","secondary_selection","secondary_religion","secondary_mode","secondary_distance","supermarket_selection","supermarket_decision","supermarket_segment","supermarket_size","supermarket_distance","gym_selection","gym_studio_name","gym_class_type","gym_distance","park_selection","park_type","park_distance","workplace_selection","workplace_detail","workplace_transport","workplace_distance","family_selection","family_detail_1","family_distance_1","family_detail_2","family_distance_2","family_detail_3","family_distance_3","family_mode_1","family_mode_2","family_mode_3","property_price_min","property_price_max","property_bed_min","property_bed_max","property_type","owner","useEffect","data","JSON","parse","localStorage","getItem","count","filter","Boolean","length","checkingState","handleChange","e","target","name","removeSpace","value","replace","window","setItem","stringify","NavBar","Timeline3","style","backgroundColor","id","placeholder","onChange","type","defaultValue","min","max","step","textTransform","to"],"sourceRoot":""}