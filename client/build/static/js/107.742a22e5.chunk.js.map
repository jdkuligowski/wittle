{"version":3,"file":"static/js/107.742a22e5.chunk.js","mappings":"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","sources":["components/tools/Footer.js","components/whiteLabel/propertyDetails/variableDetails/SingleSecondarySchool.js"],"sourcesContent":["\n\n\nconst Footer = ({ textColour, pageType }) => {\n\n\n\n  return (\n    <>\n      <section className='website-footer no-print' id={pageType}>\n        <p style={{ color: textColour }}>Wittle Technology Limited is a registered company in England and Wales with corporation number 14326945.</p>\n        <p style={{ color: textColour }}>Copyright © Wittle Technology Limited. All rights reserved.</p>\n      </section>\n    </>\n  )\n}\n\nexport default Footer","import React, { useState, useEffect, useInsertionEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken , getAccessToken } from '../../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Footer from '../../../tools/Footer'\nimport WhiteSidebar from '../../WhiteSidebar'\nimport WhiteNavbar from '../../../tools/WhiteNavbar'\nimport NavBarRevised from '../../../tools/NavBarRevised'\n\n\n\n\n\nconst SingleSecondarySchool = () => {\n\n  // state for errors\n  const [errors, setErrors] = useState()\n\n  // state for navigateion\n  const navigate = useNavigate()\n\n  // state for school information\n  const [secondaryData, setSecondaryData] = useState()\n\n  // id for searching for property\n  const { id } = useParams()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('My properties')\n  const [profileDetail, setProfileDetail] = useState('My properties')  \n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  // load in specfic secondary school\n  const loadSecondaryData = () => {\n    const getSecondaries = async () => {\n      try {\n        const { data } = await axios.get(`/api/secondaries/${id}`)\n        console.log('secondaries data ->', data)\n        setSecondaryData(data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getSecondaries()\n  }\n\n  // carry out calculation\n  useEffect(() =>{\n    loadSecondaryData()\n  }, [])\n\n\n  return (\n\n    <>\n      <section className='agent-specific-property'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <div className='go-back-button'>\n          {/* <h5 onClick={() =>  navigate('/agents/profile')}>&lt;- back to profile</h5> */}\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n        />\n        {secondaryData ? \n          <><section className=\"single-school-profile\">\n            <div className=\"school-core-info\">\n              <div className=\"info-left\">\n                <h1>{secondaryData[0].school_name}</h1>\n                <h3 className='normal'>📈 Ofsted: {secondaryData[0].ofsted_results}</h3>\n                <h3 className='normal'>🎓 {secondaryData[0].students} students per year</h3>\n                <h3 className='normal'>👨‍👧 Gender: {secondaryData[0].gender}</h3>\n                <h3 className='normal'>🙏 Faith: {secondaryData[0].religion === null ? 'All' : secondaryData[0].religion}</h3>\n                {/* <h3 className='website'>💻 {secondaryData[0].school_url}</h3> */}\n                <a href={secondaryData[0].school_url} target='_blank' className='website' rel=\"noreferrer\">💻 {secondaryData[0].school_url}</a>\n\n              </div>\n              <div className=\"info-right\">\n                <div className='school-image' id='secondary' style={{ backgroundImage: secondaryData[0].image_url === null ? undefined : `url(${secondaryData[0].image_url})` }}></div>\n              </div>\n            </div>\n            <div className='school-academic-highlights'>\n              <h1>Academic highlights</h1>\n              <div className='row'>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{Math.round((1 - secondaryData[0].percentile) * 100) + 1}%</h1>\n                  </div>\n                  <p>In the top {Math.round((1 - secondaryData[0].percentile) * 100) + 1}% of schools in London</p>\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{Math.round((1 - secondaryData[0].borough_percentile) * 100) + 1}%</h1>\n                  </div>\n                  <p>In the top {Math.round((1 - secondaryData[0].borough_percentile) * 100) + 1}% of schools in {secondaryData[0].local_authority}</p>\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{secondaryData[0].results.length}</h1>\n                  </div>\n                  <p>Good curriculum with {secondaryData[0].results.length} subjects</p>\n                </div>\n              </div>\n            </div>\n            <div className='school-results'>\n              <h1>GCSE Results</h1>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <h5 id='column2'>Subject</h5>\n                <h5 id='column3'>Pass rate (%)</h5>\n                <h5 id='column4'>A/ A* (%)</h5>\n              </div>\n              <div className='school-table-details'>\n                {secondaryData[0].results.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>{item.subject}</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          <h5>{Math.round(item.pass_rate)}</h5>\n                        </div>\n                        <div className='column' id='column4'>\n                          <h5>{Math.round(item.top_rate)}</h5>\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n          </>\n          : '' }\n      </section> \n\n    \n    </>\n  )\n}\n\nexport default SingleSecondarySchool"],"names":["_ref","textColour","pageType","_jsx","_Fragment","children","_jsxs","className","id","style","color","SingleSecondarySchool","errors","setErrors","useState","secondaryData","setSecondaryData","useNavigate","useParams","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","useEffect","async","data","axios","get","console","log","error","getSecondaries","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","school_name","ofsted_results","students","gender","religion","href","school_url","target","rel","backgroundImage","image_url","undefined","Math","round","percentile","borough_percentile","local_authority","results","length","map","item","index","subject","pass_rate","top_rate"],"sourceRoot":""}