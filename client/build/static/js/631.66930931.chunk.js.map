{"version":3,"file":"static/js/631.66930931.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/NavBarRevised.js","components/tools/ProfileMobileSlider.js","components/tools/WhiteNavbar.js","components/whiteLabel/EPCMatcher/PropertyFinder.js","components/whiteLabel/WhiteSidebar.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/loading-gif-2.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst PropertyFinder = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n  \n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')  \n  \n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n  \n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setLoading(true)\n    setSearch(false)\n    try {\n      const { data } = await axios.get(`/api/epc/${postcodeSubstring}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n  \n      if (data && Array.isArray(data) && data.length > 0) {\n        const filteredData = data.filter(property => \n          property.address.toLowerCase().includes(roadSubstring.toLowerCase()) &&\n          property.current_energy_efficiency === Number(currentEnergy) &&\n          property.potential_energy_efficiency === Number(potentialEnergy)\n        ).sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n        \n        \n        setPropertyList(filteredData)\n        console.log('filtered data->', filteredData)\n        if (filteredData.length > 0) {\n          increaseUsageCount()\n        }\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n    setSearch(true)\n    loadUserData()\n  }\n\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    console.log('trying to increase')\n    try {\n      const { data } = await axios.post('/api/usage/', {}, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log(data)\n      if (data.status === 'success') {\n        console.log('Usage count increased successfully')\n      } else {\n        console.error('Failed to increase usage count:', data.message)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n    }\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n          userData={userData}\n        />    \n\n        <>\n          {userData && userData.usage_stats[0] &&\n          ((userData.usage_stats[0].epc_tier === 1 && userData.usage_stats[0].epc_monthly_count < 11) ||\n          (userData.usage_stats[0].epc_tier === 0) ||\n          (userData.usage_stats[0].epc_tier === 2 && userData.usage_stats[0].epc_monthly_count < 101)) ?\n            <section className='property-finder'>\n              <h1>Find the full address of properties listed on the market</h1>\n              <div className='epc-matcher'>\n                <div className='input-section'>\n                  <h3 className='sub-title'>Add property details</h3>\n                  {!loading ?\n                    <>\n                      <div className='input-block'>\n                        <h3>Postcode</h3>\n                        <input  \n                          type=\"text\" \n                          value={postcodeSubstring} \n                          onChange={e => setPostcodeSubstring(e.target.value)} \n                          placeholder=\"Enter postcode...\"></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>Road name</h3>\n                        <input  \n                          type=\"text\" \n                          value={roadSubstring} \n                          onChange={e => setRoadSubstring(e.target.value)} \n                        ></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>Current Energy Efficiency</h3>\n                        <input\n                          type=\"number\" \n                          value={currentEnergy} \n                          onChange={e => setCurrentEnergy(e.target.value)} \n                        ></input>\n                      </div>\n                      <div className='input-block'>\n                        <h3>Potential Energy Efficiency</h3>\n                        <input\n                          type=\"number\" \n                          value={potentialEnergy} \n                          onChange={e => setPotentialEnergy(e.target.value)} \n                        ></input>\n                      </div>\n                      <button onClick={loadProperties}>Load Properties</button>  \n                    </>\n                    :\n                    <Loading /> }    \n                  <div className='tracking-results'>\n                    <h3 className='sub-title'>💻 Current plan: {userData && userData.usage_stats[0].epc_tier === 1 ? 'Limited pilot' : userData && userData.usage_stats[0].epc_tier === 2 ? 'Advanced pilot' : 'Unlimited' }</h3>\n                    <h3 className='sub-title'>🔎 Searches this month: {userData ? userData.usage_stats[0].epc_monthly_count : ''}</h3>\n                    <p>🤝 {userData && userData.usage_stats[0].epc_tier === 1 ? 'Upgrade to the advanced pilot for up to 100 searches per month' : userData && userData.usage_stats[0].epc_tier === 0 ? 'You have unlimited use of this tool' : 'Your search limit for this month is 100' }</p>\n                  </div>\n                </div>\n      \n\n                <div className='property-results'>\n                  <h3 className='sub-title'>Matching properties</h3>\n                  <div className='results-block'>\n                    {longPropertyList.length === 0 && !search ? <h3 className='response'>🔎 Start new search to see results</h3> :\n                      search && propertyList.length === 0 ? <h3 className='response'>🤦‍♀️ we couldn&apos;t find anything that matched your search</h3> :\n                        search && propertyList.length > 0 ?\n                          <>\n                            <div className='results-headers'>\n                              <h5 id='column1' className='column'>#</h5>\n                              <div id='column2' className='column'>\n                                <h5>Address</h5>\n                              </div>\n                              <div id='column3' className='column'>\n                                <h5>Postcode</h5>\n                              </div>\n                              <div id='column4' className='column'>\n                                <h5>Last inspection</h5>\n                              </div>\n                            </div>\n                            <hr className='property-divider' />\n                            <div className='results-details'>\n                              {propertyList ? propertyList\n                                .map((item, index) => {\n                                  return (\n                                    <>\n                                      <div className='results-content' key={index}>\n                                        <div className='column' id='column1'>\n                                          <h5>{index + 1}</h5>\n                                        </div>\n                                        <div className='column' id='column2'>\n                                          <h5>{item.address}</h5>\n                                        </div>\n                                        <div className='column' id='column3'>\n                                          <h5>{item.postcode}</h5>\n                                        </div>\n                                        <div className='column' id='column4'>\n                                          <h5>{item.inspection_date}</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                    </>\n                                  )\n                                })\n                                : ''}\n\n                            </div>\n                          </>\n                          : ''}\n                  </div>\n\n\n                </div>\n              </div>\n\n            </section>\n            : userData && userData.usage_stats[0].epc_tier === 1 && userData.usage_stats[0].epc_monthly_count >= 11 ?\n              <section className='property-finder'>\n                <h1>🙏 Thanks for enjoying Wittle!</h1>\n                <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n              </section>\n\n              : userData && userData.usage_stats[0].epc_tier === 2 && userData.usage_stats[0].epc_monthly_count >= 101 ?\n                <section className='property-finder'>\n                  <h1>🙏 Thanks for enjoying Wittle!</h1>\n                  <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n                </section>\n\n                : ''}\n        </>\n\n      </section>\n \n\n\n\n    </>\n  )\n}\n\nexport default PropertyFinder","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide, userData }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo'>\n          <h2 onClick={() => navigate('/')}>Wittle</h2>\n        </div>\n        <div className='profile-buttons'>\n          <div className='profile-button-title' >\n            <h2 onClick={() => {\n              setProfileDetail('Home')\n              setProfileContent('Home')\n              navigate('/agents/profile')\n            }}>🧘‍♂️ Wittle home</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('My properties')\n              setProfileContent('My properties')\n              navigate('/agents/properties')\n            }}>🏡 My properties</h2>\n          </div>\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Variables')\n              setProfileDetail('Variables')\n              setVariableSide(!variableSide)\n              navigate('/agents/explore')\n            }\n            }>🔎 Explore</h2>\n            {variableSide ? <h4>v</h4> : <h4>^</h4>}\n          </div> */}\n\n          {/* <div className='profile-button-sub'>\n            <h3 onClick={() => setProfileDetail('Primary schools')}>🏫 Primary schools</h3>\n            <h3 onClick={() => setProfileDetail('Secondary schools')}>👨‍🏫 Secondary schools</h3>\n            <h3 onClick={() => setProfileDetail('Restaurants')}>🍽 Restaurants </h3>\n            <h3 onClick={() => setProfileDetail('Pubs')}>🍺 Pubs </h3>\n            <h3 onClick={() => setProfileDetail('Fitness')}>🏋️‍♂️ Fitness </h3>\n            <h3 onClick={() => setProfileDetail('Supermarkets')}>🛒 Supermarkets </h3>\n            <h3 onClick={() => setProfileDetail('EVs')}>⛽️ EVs </h3>\n\n          </div> */}\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Comparison')\n              setProfileDetail('Comparison')\n              navigate('/agents/compare')\n            }}>↔️ Comparison</h2>\n          </div> */}\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Property finder')\n              setProfileDetail('Property finder')\n              navigate('/agents/finder')\n            }}>🔎 Property finder</h2>\n          </div>\n          {/* <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Account')\n              setProfileDetail('Account')\n            }}>🖥 Account details</h2>\n          </div> */}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar"],"names":["className","src","require","alt","setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","style","backgroundColor","color","onClick","textDecoration","textUnderlineOffset","fontWeight","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","axios","userData","setUserData","loading","setLoading","search","setSearch","variableSide","setVariableSide","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","channel","setChannel","loadUserData","async","data","getUserToken","headers","Authorization","getAccessToken","console","log","error","getUser","useEffect","increaseUsageCount","status","message","usage_stats","epc_tier","epc_monthly_count","type","value","onChange","e","target","placeholder","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","sort","a","b","Date","inspection_date","id","map","item","index","postcode"],"sourceRoot":""}