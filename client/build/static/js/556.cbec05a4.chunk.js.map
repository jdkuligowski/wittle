{"version":3,"file":"static/js/556.cbec05a4.chunk.js","mappings":"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","sources":["components/whiteLabel/propertyDetails/PropertyInsightsOverview.js","components/whiteLabel/propertyList.js/SavedListings.js","components/whiteLabel/b2bModals/KYCInput.js","components/whiteLabel/propertyList.js/TopProperties.js","components/whiteLabel/propertyList.js/ListingGenerator.js"],"sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport PropertySummary from './componentHighlights/PropertySummary'\nimport SchoolHighlights from './componentHighlights/SchoolHighlights'\nimport LifestyleHighlights from './componentHighlights/LifestyleHighlights'\nimport TransportHighlights from './componentHighlights/TransportHighlights'\nimport NeighbourhoodHighlights from './componentHighlights/NeighbourhoodHighlights'\nimport PropertyDetailSlider from './helpers/PropertyDetailSlider'\nimport PrimaryDetails from './componentDetails/PrimaryDetails'\nimport SecondaryDetails from './componentDetails/SecondaryDetails'\nimport TubeDetails from './componentDetails/TubeDetails'\nimport RestaurantDetails from './componentDetails/RestaurantDetails'\nimport PubDetails from './componentDetails/PubDetails'\nimport SupermarketDetails from './componentDetails/SupermarketDetails'\nimport FitnessDetails from './componentDetails/FitnessDetails'\nimport EVDetails from './componentDetails/EVDetails'\n\n\n\n\nconst PropertyInsightsOverview = ({ addressSubstring, postcodeSubstring, listingFields, postcodeData, topPrimaries, topSecondaries,\n  restaurants1, cuisines, topRestaurants, gyms1, mainGyms, supermarkets1, mainSupermarkets, pubs1, topPubs, tubes1, trains1, setInsightView,\n  primaryData1, setPrimaryData1, secondaryData1, setSecondaryData1, setTubes1, setRestaurants1, setPubs1, setSupermarkets1, setGyms1,\n  ev1, setEv1, secondaryDetail, setSecondaryDetail, primaryDetail, setPrimaryDetail }) => {\n\n  const [propertyView, setPropertyView] = useState('Overview')\n\n\n\n  const [neighbourhoodScore, setNeighbourhoodScore] = useState()\n\n  const [schoolSection, setSchoolSection] = useState(false)\n  const [lifestyleSection, setLifestyleSection] = useState(false)\n  const [transportSection, setTransportSection] = useState(false)\n  const [neighbourhoodSection, setNeighbourhoodSection] = useState(false)\n\n  const [sliderSelection, setSliderSelection] = useState('Primary schools')\n\n  const [tableMapView, setTableMapView] = useState('Table')\n\n\n  // neighbourhood score calculation\n  const calculateScore = () => {\n    const calculation = Math.ceil((((1 - postcodeData[0].crime[0].percentile) +\n      postcodeData[0].ev.percentile +\n      postcodeData[0].fitness.percentile +\n      (1 - (postcodeData[0].parks_lsoa[0].london_percentile / 100)) +\n      postcodeData[0].restaurants.normal_percentile +\n      postcodeData[0].supermarkets.percentile +\n      postcodeData[0].tubes.percentile) / 7) * 100)\n    setNeighbourhoodScore(calculation)\n    // console.log('neighbourhood score ->', calculation)\n  }\n\n\n  // run calculation\n  useEffect(() => {\n    if (postcodeData) {\n      calculateScore()\n    }\n  })\n\n  // overview navigation\n  const goToOverview = () => {\n    setPropertyView('Overview')\n    setPrimaryDetail('Table')\n    setSecondaryDetail('Table')\n  }\n\n  return (\n    <>\n      <section className=\"insights-results-wrapper remove-margin\">\n        <section className=\"insights-navigation remove-some-margin\">\n          <div className=\"direction-arrow no-print\" onClick={() => setInsightView('Search')}></div>\n          <div className=\"navigation-input\">\n            <h3 className=\"title\">Postcode</h3>\n            <h3 className=\"result\">{postcodeSubstring}</h3>\n          </div>\n          <div className=\"navigation-input\">\n            <h3 className=\"title\">Address</h3>\n            <h3 className=\"result\">{addressSubstring}</h3>\n          </div>\n          <div className=\"navigation-input no-print\">\n            <h3 className=\"title\">Channel</h3>\n            <h3 className=\"result\">{listingFields.channel}</h3>\n          </div>\n        </section>\n\n        <section className=\"property-insights-wrapper\">\n          <div className=\"property-insight-nav no-print remove-margin\">\n            <div className=\"property-insight-buttons no-print remove-margin\">\n              <h3 className={`insight-button ${propertyView === 'Overview' ? 'active' : 'inactive'}`} id='left' onClick={() => goToOverview()}>Property overview</h3>\n              <h3 className={`insight-button ${propertyView === 'Details' ? 'active' : 'inactive'}`} id='right' onClick={() => setPropertyView('Details')}>Property details</h3>\n            </div>\n            <div className='print-section' onClick={() => window.print()}>\n              <div className=\"print-icon\"></div>\n              <h3 >Print</h3>\n\n            </div>\n          </div>\n          {propertyView === 'Overview' ?\n            <div className='insight-dropdowns'>\n              <div className='summary-header'>\n                <h3>Property Summary</h3>\n                <hr className='header-line' />\n              </div>\n              <PropertySummary\n                neighbourhoodScore={neighbourhoodScore}\n                postcodeData={postcodeData}\n              />\n              <div className='summary-header' onClick={() => setSchoolSection(!schoolSection)}>\n                <h3>School highlights</h3>\n                <hr className='header-line' />\n              </div>\n              {schoolSection ?\n                <SchoolHighlights\n                  topPrimaries={topPrimaries}\n                  topSecondaries={topSecondaries}\n                  setPropertyView={setPropertyView}\n                  setSecondaryDetail={setSecondaryDetail}\n                  setPrimaryDetail={setPrimaryDetail}\n                  setSliderSelection={setSliderSelection}\n                />\n                : ''\n              }\n              <div className='summary-header' onClick={() => setLifestyleSection(!lifestyleSection)}>\n                <h3>Lifestyle highlights</h3>\n                <hr className='header-line' />\n              </div>\n              {lifestyleSection ?\n                <LifestyleHighlights\n                  restaurants1={restaurants1}\n                  cuisines={cuisines}\n                  topRestaurants={topRestaurants}\n                  gyms1={gyms1}\n                  mainGyms={mainGyms}\n                  supermarkets1={supermarkets1}\n                  mainSupermarkets={mainSupermarkets}\n                  pubs1={pubs1}\n                  topPubs={topPubs}\n                />\n                : ''\n              }\n              <div className='summary-header' onClick={() => setTransportSection(!transportSection)}>\n                <h3>Transport highlights</h3>\n                <hr className='header-line' />\n              </div>\n              {transportSection ?\n                <TransportHighlights\n                  postcodeData={postcodeData}\n                  tubes1={tubes1}\n                  trains1={trains1}\n                />\n                : ''\n              }\n              <div className='summary-header' onClick={() => setNeighbourhoodSection(!neighbourhoodSection)}>\n                <h3>Neighbourhoood highlights</h3>\n                <hr className='header-line' />\n              </div>\n              {neighbourhoodSection ?\n                <NeighbourhoodHighlights\n                  postcodeData={postcodeData}\n                />\n                : ''\n              }\n            </div>\n\n            : propertyView === 'Details' ?\n              <>\n\n                <div className='property-details-wrapper'>\n                  <PropertyDetailSlider\n                    sliderSelection={sliderSelection}\n                    setSliderSelection={setSliderSelection}\n                    setSecondaryDetail={setSecondaryDetail}\n                    setPrimaryDetail={setPrimaryDetail}\n                  />\n                  {secondaryDetail === 'School' ?\n                    <h3 className='go-back' onClick={() => setSecondaryDetail('Table')}>&lt;- Back to secondary school long list</h3>\n                    :\n                    primaryDetail === 'School' ?\n                      <h3 className='go-back' onClick={() => setPrimaryDetail('Table')}>&lt;- Back to primary school long list</h3>\n                      :\n                      <div className='detail-table-title'>\n                        <h3>{sliderSelection} list</h3>\n                        <hr className='table-title-line' />\n                        <input placeholder='Explore the data'></input>\n                        <div className={`icon-box ${tableMapView === 'Table' ? 'active' : 'inactive'}`} onClick={() => setTableMapView('Table')}>\n                          <div className='icon' id='table'></div>\n                        </div>\n                        <div className={`icon-box ${tableMapView === 'Map' ? 'active' : 'inactive'}`} onClick={() => setTableMapView('Map')}>\n                          <div className='icon' id='map'></div>\n                        </div>\n\n                      </div>\n                  }\n                  <div className='insight-tables'>\n                    {sliderSelection === 'Primary schools' ?\n                      <PrimaryDetails\n                        primaryData1={primaryData1}\n                        setPrimaryData1={setPrimaryData1}\n                        postcodeData={postcodeData}\n                        tableMapView={tableMapView}\n                        listType={'short list'}\n                        primaryDetail={primaryDetail}\n                        setPrimaryDetail={setPrimaryDetail}\n                        setSliderSelection={setSliderSelection}\n                        setPropertyView={setPropertyView}\n                      />\n\n                      : sliderSelection === 'Secondary schools' ?\n\n                        <SecondaryDetails\n                          secondaryData1={secondaryData1}\n                          setSecondaryData1={setSecondaryData1}\n                          postcodeData={postcodeData}\n                          tableMapView={tableMapView}\n                          listType={'short list'}\n                          secondaryDetail={secondaryDetail}\n                          setSecondaryDetail={setSecondaryDetail}\n                          setSliderSelection={setSliderSelection}\n                          setPropertyView={setPropertyView}\n                        />\n\n                        : sliderSelection === 'Tubes' ?\n                          <TubeDetails\n                            tubes1={tubes1}\n                            setTubes1={setTubes1}\n                            listType={'short list'}\n                            postcodeData={postcodeData}\n                            tableMapView={tableMapView}\n                          />\n\n                          : sliderSelection === 'Restaurants' ?\n                            <RestaurantDetails\n                              restaurants1={restaurants1}\n                              setRestaurants1={setRestaurants1}\n                              listType={'short list'}\n                              postcodeData={postcodeData}\n                              tableMapView={tableMapView}\n                            />\n\n                            : sliderSelection === 'Pubs' ?\n                              <PubDetails\n                                pubs1={pubs1}\n                                setPubs1={setPubs1}\n                                listType={'short list'}\n                                postcodeData={postcodeData}\n                                tableMapView={tableMapView}\n\n                              />\n\n                              : sliderSelection === 'Supermarkets' ?\n                                <SupermarketDetails\n                                  supermarkets1={supermarkets1}\n                                  setSupermarkets1={setSupermarkets1}\n                                  listType={'short list'}\n                                  postcodeData={postcodeData}\n                                  tableMapView={tableMapView}\n\n                                />\n\n                                : sliderSelection === 'Fitness' ?\n                                  <FitnessDetails\n                                    gyms1={gyms1}\n                                    setGyms1={setGyms1}\n                                    listType={'short list'}\n                                    postcodeData={postcodeData}\n                                    tableMapView={tableMapView}\n\n                                  />\n\n                                  : sliderSelection === 'EVs' ?\n                                    <EVDetails\n                                      ev1={ev1}\n                                      setEv1={setEv1}\n                                      listType={'short list'}\n                                      postcodeData={postcodeData}\n                                      tableMapView={tableMapView}\n\n                                    />\n                                    :\n                                    ''}\n                  </div>\n\n\n\n                </div>\n\n\n\n              </>\n\n              : ''}\n        </section>\n\n      </section>\n\n    </>\n\n  )\n}\n\n\nexport default PropertyInsightsOverview","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\n\n\n\n\n\nconst SavedListings = ({ userData, loadUserData, setListingSelection }) => {\n\n  // ? Section 1: Define states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for handling locations\n  const location = useLocation()\n\n  // set state for determineing which favourites you see\n  const [favouriteTab, setFavouriteTab] = useState('Property prospects')\n\n\n\n  // ? Section 2: Functions to access\n  // function to delete favourites\n  const deleteListingFavourite = async (property) => {\n    if (isUserAuth()) {\n      try {\n        // Use the ID in the endpoint URL\n        const { data } = await axios.delete(`/api/listing_favourites/${property.id}/`, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error deleting favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to move to the listings\n  const goToListing = (item) => {\n    console.log('postcode ->', item.postcode)\n    window.localStorage.setItem('listing-postcode', JSON.stringify(item.postcode))\n    window.localStorage.setItem('listing-route', JSON.stringify('On'))\n    setListingSelection('Property insights')\n    navigate('/agents/listing-generator')\n  }\n\n\n\n  return (\n    <>\n      <section className='saved-listings'>\n        {userData && userData.listing_favourites.length > 0 ?\n          <>\n            <div className='favourite-count'>\n              <h3>You have {userData ? userData.listing_favourites.length : ''} {userData && userData.listing_favourites.length === 1 ? 'listing' : 'listings'} saved</h3>\n\n            </div>\n\n            <div className='table-section'>\n              <div className='table-headers'>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Date saved</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Action</h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              <div className='table-details'>\n                {userData ? userData.listing_favourites\n                  .map((item, index) => {\n                    return (\n                      <>\n                        <div key={index}\n                          className='results-content'\n                        >\n                          <div className='column' id='column1'>\n                            <h5>{index + 1}</h5>\n                          </div>\n                          <div className='column' id='column2' onClick={() => goToListing(item)}>\n                            <h5>{item.address === '' ? 'N/a' : item.address}</h5>\n                          </div>\n                          <div className='column' id='column3'>\n                            <h5>{item.postcode === '' ? 'N/a' : item.postcode}</h5>\n                          </div>\n                          <div className='column' id='column4'>\n                            <h5>{item.channel}</h5>\n                          </div>\n                          <div className='column' id='column5'>\n                            <h5>{item.date_added}</h5>\n                          </div>\n                          <div className='column' id='column6' onClick={() => deleteListingFavourite(item)}>\n                            <h5 className='remove'>🗑</h5>\n                          </div>\n                        </div>\n                        <hr className='property-divider' />\n                      </>\n                    )\n                  })\n                  : ''}\n\n              </div>\n\n            </div>\n          </>\n          : favouriteTab === 'Listings' && userData && userData.listing_favourites.length === 0 ?\n            <>\n              <div className='favourite-count'>\n                <h3>😕 You don&apos;t have any properties saved here. Head to the listing generator tab to get started!</h3>\n              </div>\n            </>\n            : ''}\n      </section>\n    </>\n  )\n}\n\nexport default SavedListings","/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport { Modal } from 'react-bootstrap'\nimport ReactSwitch from 'react-switch'\n\n\nconst KYCInput = ({ propertyInputShow, handlePropertyInputClose, propertyFilters, setPropertyFilters, boroughs, rentalPrices, salesPrices,\n  propertyTypeList, loadProperties, toggleStatus }) => {\n\n\n\n  return (\n\n    <>\n      <Modal show={propertyInputShow} onHide={handlePropertyInputClose} backdrop='static' className='KYC-input-modal'>\n        <Modal.Body>\n          <section className='overall-body'>\n            <section className='input-header'>\n              <div className='input-title'>\n                <h1>Find a property based on what matters to you</h1>\n                <h1 className='close-modal' onClick={handlePropertyInputClose}>X</h1>\n              </div>\n            </section>\n\n            <section className='input-main'>\n              <div className='input-section'>\n                <h2 className='section-sub-title'>Search details</h2>\n                <div className='selection-block-single'>\n                  <h3>Channel</h3>\n                  <select className='dropdown' value={propertyFilters.channel || 'Sales'} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, channel: e.target.value }))}>\n                    <option>Sales</option>\n                    <option>Rental</option>\n                  </select>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Area</h3>\n                  <select className='dropdown' value={propertyFilters.area || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, area: e.target.value }))}>\n                    <option value=''>All</option>\n                    {boroughs.map((borough, index) => (\n                      <option key={index} value={borough}>{borough}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className='input-section'>\n                <h2 className='section-sub-title'>Property details</h2>\n                <div className='selection-block-double'>\n                  <h3>Price</h3>\n                  {propertyFilters.channel === 'Rental' ?\n                    <div className='double-dropdowns'>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.rental_price_min || ''}\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                      >\n                        <option value={0}>No min</option>\n                        {rentalPrices.map((price, index) => (\n                          <option key={index} value={price}>\n                            <NumericFormat\n                              value={price}\n                              displayType={'text'}\n                              thousandSeparator={true}\n                              prefix={'£'}\n                            />\n                          </option>\n                        ))}\n                      </select>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.rental_price_max || ''}\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                      >\n                        <option value={10000000}>No max</option>\n                        {rentalPrices.map((price, index) => (\n                          <option key={index} value={price}>\n                            <NumericFormat\n                              value={price}\n                              displayType={'text'}\n                              thousandSeparator={true}\n                              prefix={'£'}\n                            />\n                          </option>\n                        ))}\n                      </select>\n\n                    </div>\n                    : propertyFilters.channel === 'Sales' ?\n                      <div className='double-dropdowns'>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_min || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                        >\n                          <option value={0}>No min</option>\n                          {salesPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_max || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                        >\n                          <option value={10000000}>No max</option>\n                          {salesPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n\n                      </div>\n                      : ''}\n                </div>\n                <div className='selection-block-double'>\n                  <h3>Bedrooms</h3>\n                  <div className='double-dropdowns'>\n                    <select\n                      className='dropdown'\n                      value={propertyFilters.bedrooms_min || ''}\n                      onChange={(e) => setPropertyFilters(prevData => ({\n                        ...prevData,\n                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                      }))}\n                    >\n                      <option value=''>No min</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                    </select>\n                    <select\n                      className='dropdown'\n                      value={propertyFilters.bedrooms_max || ''}\n                      onChange={(e) => setPropertyFilters(prevData => ({\n                        ...prevData,\n                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                      }))}\n                    >\n                      <option value=''>No max</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                    </select>\n                  </div>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Property type</h3>\n                  <select className='dropdown' value={propertyFilters.propertyType || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, propertyType: e.target.value }))}>\n                    <option value=''>All</option>\n                    {propertyTypeList.map((property, index) => (\n                      <option key={index} value={property}>{property}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Features</h3>\n                  <div className='select-box'>\n                    <input type=\"checkbox\" id=\"myCheckbox\" name=\"myCheckbox\" checked={propertyFilters.garden} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, garden: e.target.checked }))} />\n                    <label htmlFor=\"myCheckbox\">Garden</label>\n                  </div>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Size</h3>\n                  <input placeholder='Input min size' className='dropdown' value={propertyFilters.size || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, size: e.target.value }))}></input>\n                </div>\n              </div>\n              <div className='input-section'>\n                <h2 className='section-sub-title'>Lifestyle details</h2>\n                <p className='explanation'>Select what you want to include as part of your search and how much they matter</p>\n                <div className='selection-block-single lifestyle'>\n                  <h3>Primary schools</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.primaries === true}\n                    onChange={() => toggleStatus('primaries')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.primaries === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, primaries_score: e.target.value }))}\n                      name={propertyFilters.primaries_score}\n                      className='slider'\n                      defaultValue={propertyFilters.primaries_score ? propertyFilters.primaries_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.primaries_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Secondary schools</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.secondaries === true}\n                    onChange={() => toggleStatus('secondaries')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.secondaries === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, secondaries_score: e.target.value }))}\n                      name={propertyFilters.secondaries_score}\n                      className='slider'\n                      defaultValue={propertyFilters.secondaries_score ? propertyFilters.secondaries_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.secondaries_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Parks</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.parks === true}\n                    onChange={() => toggleStatus('parks')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.parks === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, parks_score: e.target.value }))}\n                      name={propertyFilters.parks_score}\n                      className='slider'\n                      defaultValue={propertyFilters.parks_score ? propertyFilters.parks_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.parks_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Playgrounds</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.playgrounds === true}\n                    onChange={() => toggleStatus('playgrounds')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.playgrounds === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, playgrounds_score: e.target.value }))}\n                      name={propertyFilters.playgrounds_score}\n                      className='slider'\n                      defaultValue={propertyFilters.playgrounds_score ? propertyFilters.playgrounds_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.playgrounds_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Gyms</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.gyms === true}\n                    onChange={() => toggleStatus('gyms')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.gyms === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, gyms_score: e.target.value }))}\n                      name={propertyFilters.gyms_score}\n                      className='slider'\n                      defaultValue={propertyFilters.gyms_score ? propertyFilters.gyms_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.gyms_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Restaurants</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.restaurants === true}\n                    onChange={() => toggleStatus('restaurants')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.restaurants === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, restaurants_score: e.target.value }))}\n                      name={propertyFilters.restaurants_score}\n                      className='slider'\n                      defaultValue={propertyFilters.restaurants_score ? propertyFilters.restaurants_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.restaurants_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Pubs</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.pubs === true}\n                    onChange={() => toggleStatus('pubs')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.pubs === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, pubs_score: e.target.value }))}\n                      name={propertyFilters.pubs_score}\n                      className='slider'\n                      defaultValue={propertyFilters.pubs_score ? propertyFilters.pubs_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.pubs_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Tubes</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.tubes === true}\n                    onChange={() => toggleStatus('tubes')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.tubes === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, tubes_score: e.target.value }))}\n                      name={propertyFilters.tubes_score}\n                      className='slider'\n                      defaultValue={propertyFilters.tubes_score ? propertyFilters.tubes_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.tubes_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Supermarkets</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.supermarkets === true}\n                    onChange={() => toggleStatus('supermarkets')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.supermarkets === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, supermarkets_score: e.target.value }))}\n                      name={propertyFilters.supermarkets_score}\n                      className='slider'\n                      defaultValue={propertyFilters.supermarkets_score ? propertyFilters.supermarkets_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.supermarkets_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>EVs</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.ev === true}\n                    onChange={() => toggleStatus('ev')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.ev === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, ev_score: e.target.value }))}\n                      name={propertyFilters.ev_score}\n                      className='slider'\n                      defaultValue={propertyFilters.ev_score ? propertyFilters.ev_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.ev_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Crime</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.crime === true}\n                    onChange={() => toggleStatus('crime')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.crime === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, crime_score: e.target.value }))}\n                      name={propertyFilters.crime_score}\n                      className='slider'\n                      defaultValue={propertyFilters.crime_score ? propertyFilters.crime_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.crime_score}</h3>\n                  </div> : ''}\n              </div>\n\n            </section>\n\n            <section className='input-footer'>\n              <button className='load-properties' onClick={loadProperties}>Load results</button>\n            </section>\n          </section>\n\n\n        </Modal.Body>\n      </Modal >\n\n    </>\n\n  )\n}\n\nexport default KYCInput","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport KYCInput from '../b2bModals/KYCInput'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\n\nconst TopProperties = ({ setListingSelection, fetchData }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [loading, setLoading] = useState(false)\n\n  const [properties, setProperties] = useState()\n\n  // managing modal for properties to be removed from list\n  const [propertyInputShow, setPropertyInputShow] = useState(false)\n\n  // set view for the table\n  const [propertyViewFormat, setPropertyViewFormat] = useState('Table')\n\n  const [selectedProperties, setSelectedProperties] = useState(null)\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // filter array for proeprties to search\n  const [propertyFilters, setPropertyFilters] = useState({\n    channel: 'Sales',\n    area: '',\n    persona: 'Young families',\n    propertyType: '',\n    garden: false,\n    size: '',\n    bedrooms_min: '',\n    bedrooms_max: '',\n    rental_price_min: '',\n    rental_price_max: '',\n    primaries: false,\n    primaries_score: null,\n    secondaries: false,\n    secondaries_score: null,\n    parks: false,\n    parks_score: null,\n    playgrounds: false,\n    playgrounds_score: null,\n    gyms: false,\n    gyms_score: null,\n    restaurants: false,\n    restaurants_score: null,\n    pubs: false,\n    pubs_score: null,\n    tubes: false,\n    tubes_score: null,\n    supermarkets: false,\n    supermarkets_score: null,\n    ev: false,\n    ev_score: null,\n    crime: false,\n    crime_score: null,\n  })\n\n\n  // create \n  useEffect(() => {\n    const filters = JSON.parse(localStorage.getItem('top-property-filters'))\n    const propertyData = JSON.parse(localStorage.getItem('top-properties'))\n    if (filters) {\n      setPropertyFilters(filters)\n      setProperties(propertyData)\n    }\n  }, [])\n\n\n  const loadProperties = async () => {\n    setLoading(true)\n    handlePropertyInputClose()\n\n    // Create the query string from propertyFilters state\n    const queryParams = new URLSearchParams()\n    Object.entries(propertyFilters).forEach(([key, value]) => {\n      // Exclude null or undefined values and the 'channel' key\n      if (value !== null && value !== undefined && key !== 'channel') {\n        queryParams.append(key, value)\n      }\n    })\n\n    try {\n      let url = ''\n      if (propertyFilters.channel === 'Rental') {\n        url = `/api/personas/rental/?${queryParams.toString()}`\n      } else if (propertyFilters.channel === 'Sales') {\n        url = `/api/personas/sales/?${queryParams.toString()}`\n      }\n\n      // Extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n\n      data.sort((a, b) => b.overall_lifestyle_score - a.overall_lifestyle_score)\n\n\n      console.log('combined data ->', data)\n      setProperties(data)\n      window.localStorage.setItem('top-properties', JSON.stringify(data))\n\n      window.localStorage.setItem('top-property-filters', JSON.stringify(propertyFilters))\n      setLoading(false)\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n  const handleVisitUrl = (url) => {\n    // Create a new anchor element\n    const link = document.createElement('a')\n\n    // Set the URL\n    link.href = url\n\n    // Set the target\n    link.target = '_blank'\n\n    // Set rel to noreferrer to prevent sending the referrer\n    link.rel = 'noreferrer'\n\n    // Set window features\n    link.windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Append the link to the body\n    document.body.appendChild(link)\n\n    // Simulate a click on the link\n    link.click()\n\n    // Remove the link from the body\n    document.body.removeChild(link)\n  }\n\n  // function to move to the listings\n  const goToListing = (item) => {\n    console.log('postcode ->', item.property_data.postcode)\n    window.localStorage.setItem('listing-postcode', JSON.stringify(item.property_data.postcode))\n    window.localStorage.setItem('listing-route', JSON.stringify('On'))\n    fetchData()\n    setListingSelection('Property insights')\n    navigate('/agents/listing-generator')\n  }\n\n  // close modal\n  const handlePropertyInputShow = () => {\n    setPropertyInputShow(true)\n  }\n\n  // show the modal\n  const handlePropertyInputClose = (e) => {\n    setPropertyInputShow(false)\n  }\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 50\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 10.5,\n  })\n\n\n  // set current page when you click icon\n  const handlePropertyClick = (property) => {\n    console.log('selectd property ->', property)\n    setSelectedProperties(property)\n  }\n\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n  // borough list\n  const boroughs = ['Barking and Dagenham', 'Barnet', 'Bexley', 'Brent', 'Camden', 'Croydon', 'Ealing', 'Enfield', 'Greenwich', 'Havering', 'Kensington and Chelsea',\n    'Hertfordshire', 'Hillingdon', 'Hounslow', 'Islington', 'Lambeth', 'Lewisham', 'Merton', 'Southwark', 'Sutton', 'Waltham Forest', 'Westminster',\n    'Hackney', 'City of London', 'Hammersmith and Fulham', 'Wandsworth', 'Tower Hamlets', 'Bromley', 'Haringey', 'Kingston upon Thames', 'Newham', 'Redbridge', 'Richmond upon Thames']\n\n  // property type list\n  const propertyTypeList = ['Flat', 'Apartment', 'Terraced', 'Semi-Detached', 'Detached', 'House', 'End of Terrace', 'Maisonette', 'Studio', 'Retirement Property', 'Ground Flat',\n    'Penthouse', 'Bungalow', 'Town House', 'Detached Bungalow', 'Duplex']\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setPropertyFilters(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === true ? false : true,\n    }))\n  }\n\n\n\n\n  return (\n\n    <>\n      <section className='top-properties'>\n\n        <section className='top-properties-filters'>\n          <div className='filter-block'>\n            <button onClick={handlePropertyInputShow}>Edit search</button>\n          </div>\n\n        </section>\n\n        {!loading ?\n          <section className='top-property-results'>\n            <div className='top-property-title'>\n              <h3>{properties ? `${properties.length} matching properties` : ''}</h3>\n              <div className='view-selectors'>\n                <div className={`icon-box ${propertyViewFormat === 'Table' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Table')}>\n                  <div className='icon' id='table'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Map' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Map')}>\n                  <div className='icon' id='map'></div>\n                </div>\n              </div>\n            </div>\n            {propertyViewFormat === 'Table' ?\n              <div className='property-table-view'>\n                <div className='top-property-table'>\n                  <div className='table-headers'>\n                    <div id='column1' className='column'>\n                      <h5>#</h5>\n                    </div>\n                    <div id='column2' className='column' >\n                      <h5>Address</h5>\n                    </div>\n                    <div id='column3' className='column'>\n                      <h5>Postcode</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column4' className='column'>\n                      <h5>Area</h5>\n                    </div>\n                    <div id='column5' className='column'>\n                      <h5>Added</h5>\n                    </div>\n                    <div id='column6' className='column'>\n                      <h5>Price</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column7' className='column'>\n                      <h5>Bedrooms</h5>\n                    </div>\n                    <div id='column8' className='column'>\n                      <h5>Agent</h5>\n                    </div>\n                    <div id='column9' className='column'>\n                      <h5>Score</h5>\n                    </div>\n                  </div>\n                  <hr className='property-divider' />\n                  <div className='table-detail'>\n                    {properties ? properties.map((item, index) => {\n                      return (\n                        <>\n                          <div className='table-content'>\n                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{index + 1}</h5>\n                            </div>\n                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.displayAddress}</h5>\n                            </div>\n                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.postcode}</h5>\n                            </div>\n                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.persona_data_list[0].district}</h5>\n                            </div>\n                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.added_revised === null ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised}</h5>\n                            </div>\n                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.price}</h5>\n                            </div>\n                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.bedrooms}</h5>\n                            </div>\n                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.agent}</h5>\n                            </div>\n                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                            </div>\n                            <div id='column10' className='column'>\n                              <button onClick={() => goToListing(item)}>Go</button>\n                            </div>\n                          </div>\n                          <hr className='property-divider' />\n\n                        </>\n                      )\n                    }) : ''}\n                  </div>\n                </div>\n              </div>\n              : propertyViewFormat === 'Map' ?\n                <div className='property-map-view'>\n                  <div className='map-block'>\n\n                    <div className='grid-list'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-content'>\n                              <div className='grid-left'>\n                                <div className='property-image' onClick={() => handleVisitUrl(item.property_data.url)} style={{ backgroundImage: `url(${item.property_data.images})` }}></div>\n                              </div>\n                              <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                                <h5 className='title' onClick={() => handleVisitUrl(item.property_data.url)}>{index + 1}. {item.property_data.displayAddress}</h5>\n                                {/* <div className='details'>\n                                  <div className='icon' id='catchment'></div>\n                                  <h5>{item.rating > 4.8 ? 'Excellent' : item.rating > 4.5 ? 'Very good' : item.rating > 4.2 ? 'Good' : item.rating > 3.9 ? 'Average' : item.rating > 0 ? 'Poor' : 'N/a'}</h5>\n                                </div> */}\n                                <h5 className='sub-title'>Bedrooms: {item.property_data.bedrooms}</h5>\n                                <h5 className='sub-title'>Price: {item.property_data.price}</h5>\n                                <h5 className='sub-title'>Score: {(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                              </div>\n                            </div>\n                            <hr className=\"dividing-line\" />\n\n                          </>\n                        )\n                      }).slice(startIndex, endIndex) : ''}\n\n\n                    </div>\n\n                    <div className=\"map-section\">\n                      <ReactMapGL\n                        {...viewport}\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                        mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                        onViewportChange={viewport => {\n                          setViewport(viewport)\n                        }}\n                        center={viewport}\n                        onMove={evt => setViewport(evt.viewport)}\n                        className=\"profile-map\"\n                      >\n                        {properties &&\n                          properties.map((item, index) => (\n                            <Marker\n                              key={index}\n                              id={item.id}\n                              longitude={item.property_data.longitude}\n                              latitude={item.property_data.latitude}\n                              onClick={() => handlePropertyClick(item)}\n                            >\n                              <div className=\"poi-background\">{index + 1}</div>\n                            </Marker>\n                          )).slice(startIndex, endIndex)}\n\n                        {selectedProperties ?\n                          <Popup\n                            longitude={selectedProperties.property_data.longitude}\n                            latitude={selectedProperties.property_data.latitude}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedProperties(null)}\n\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>{selectedProperties.property_data.displayAddress}</h5>\n                                {/* <p>{selectedProperties.master_cuisine}</p> */}\n                                {/* <p>{selectedProperties.rating} /5</p> */}\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                        }\n                      </ReactMapGL>\n                    </div>\n                  </div>\n                  {properties ?\n                    <ReactPaginate\n                      pageCount={Math.ceil(properties.length / 50)}\n                      onPageChange={handlePageClick}\n                      containerClassName={'pagination'}\n                      activeClassName={'active'}\n                      previousLabel={'<'}\n                      nextLabel={'>'}\n                      pageRangeDisplayed={0}\n                      breakLabel={'...'}\n                    />\n                    : ''}\n                </div>\n\n                : ''}\n\n\n          </section>\n          : loading ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </section>\n      <KYCInput\n        propertyInputShow={propertyInputShow}\n        handlePropertyInputClose={handlePropertyInputClose}\n        propertyFilters={propertyFilters}\n        setPropertyFilters={setPropertyFilters}\n        boroughs={boroughs}\n        salesPrices={salesPrices}\n        rentalPrices={rentalPrices}\n        propertyTypeList={propertyTypeList}\n        loadProperties={loadProperties}\n        toggleStatus={toggleStatus}\n      />\n\n\n    </>\n\n  )\n}\n\nexport default TopProperties","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport ReactSwitch from 'react-switch'\nimport AIListingGenrator from './AIListingGenrator'\nimport PropertyInsightsOverview from '../propertyDetails/PropertyInsightsOverview'\nimport SavedListings from './SavedListings'\nimport TopProperties from './TopProperties'\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst ListingGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n\n  // Create a reference to the div\n  const textDivRef = useRef(null)\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Listing generator')\n  const [profileDetail, setProfileDetail] = useState('Listing generator')\n\n  // state for changing the view to insights results\n  const [insightView, setInsightView] = useState('Search')\n\n  // lisrting options\n  const [listingSelection, setListingSelection] = useState('Property insights')\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n\n  const [addressSubstring, setAddressSubstring] = useState('')\n\n  const [listingRoute, setListingRoute] = useState('Off')\n\n  // listing generator form\n  const [listingFields, setListingFields] = useState({\n    postcode: '',\n    address: '',\n    description: '',\n    channel: '',\n    bedrooms: '',\n    bathrooms: '',\n    property_type: '',\n    tenure: '',\n    size: '',\n    on_road_parking: '',\n    off_road_parking: '',\n    balcony: '',\n    primary_schools: 0,\n    secondary_schools: 0,\n    tubes: 0,\n    trains: 0,\n    restaurants: 0,\n    pubs: 0,\n    supermarkets: 0,\n    gyms: 0,\n    parks: 0,\n    evs: 0,\n    crime: 0,\n  })\n\n\n  // ai listing fields\n  const [aiFields, setAiFields] = useState({\n    'location': '',\n    'size': '',\n    'property_type': '',\n    'bedrooms': '',\n    'bathrooms': '',\n    'en_suites': '',\n    'amenities': [],\n    'channel': '',\n    'additional_info': '',\n    'price': '',\n    'restaurants': '',\n    'pubs': '',\n    'supermarkets': '',\n    'tube': '',\n    'trains': '',\n    'parks': '',\n    'evs': '',\n    'primary_schools': '',\n    'secondary_schools': '',\n    'gyms': '',\n  })\n\n  // features to include in checkbox: \n  const features = [\n    'balcony', 'on-road parking', 'off-road parking',\n    'private gated', 'private garage', 'shared garage',\n    'lift', 'open-plan', 'concierge', 'gym',\n    'pool & spa', 'penthouse', 'duplex', 'garden'\n  ]\n\n\n\n  // set state for user data\n  const [postcodeData, setPostcodes] = useState()\n\n  // set state for schools data\n  const [primaryData, setPrimaryData] = useState()\n  const [primaryData1, setPrimaryData1] = useState()\n  const [secondaryData, setSecondaryData] = useState()\n  const [secondaryData1, setSecondaryData1] = useState()\n\n  // additional scvhool states\n  const [topPrimaries, setTopPrimaries] = useState()\n  const [topSecondaries, setTopSecondaries] = useState()\n\n  // set states for lifestyle information\n  const [restaurants, setRestaurants] = useState()\n  const [gyms, setGyms] = useState()\n  const [pubs, setPubs] = useState()\n  const [supermarkets, setSupermarkets] = useState()\n  const [ev, setEv] = useState()\n\n  // set states for first calculations\n  const [restaurants1, setRestaurants1] = useState()\n  const [gyms1, setGyms1] = useState()\n  const [pubs1, setPubs1] = useState()\n  const [supermarkets1, setSupermarkets1] = useState()\n  const [ev1, setEv1] = useState()\n\n  // additional restaurant states\n  const [cuisines, setCuisines] = useState()\n  const [topRestaurants, setTopRestaurants] = useState([])\n  const [topPubs, setTopPubs] = useState([])\n\n  // additional gym states\n  const [mainGyms, setMainGyms] = useState([])\n\n  // additional supermarket states\n  const [mainSupermarkets, setMainSupermarkets] = useState([])\n\n  // set states for lifestyle information\n  const [tubes, setTubes] = useState()\n  const [trains, setTrains] = useState()\n\n  // set states for first calculations\n  const [tubes1, setTubes1] = useState()\n  const [trains1, setTrains1] = useState()\n\n  const [aiSearch, setAiSearch] = useState()\n\n  const [aiReady, setAiReady] = useState(false)\n\n  // start ai seearch\n  const [searchGo, setSearchGo] = useState(false)\n\n  const [secondaryDetail, setSecondaryDetail] = useState('Table')\n  const [primaryDetail, setPrimaryDetail] = useState('Table')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n  // ? Section 2: Load postcode and user data\n  const loadPostcodeData = async (listingType) => {\n    try {\n\n      // if its an ai load, then we need to set a state to organise the loading of the dataset\n      if (listingType === 'listing_ai_total') {\n        setAiReady(false) // Before loading the data for AI\n      }\n\n      // we need to access the postcode data in all eventualities\n      const { data } = await axios.post('/api/postcodes/', { postcode: postcodeSubstring })\n      console.log('postcode data ->', data)\n      setPostcodes(data)\n\n      increaseUsageCount(listingType) // Pass the listing type to the increaseUsageCount function\n\n      // if the postcode data arrives and its an ai search, we want to load the rest of the data\n      if (listingType === 'listing_ai_total') {\n        setSearchGo(true)\n      }\n\n      // if its just an insights load, wee want to add this to th db then navigate to the insights page\n      if (listingType === 'listing_insight_total') {\n        // const { data } = await axios.get(`/api/postcodes/${postcodeSubstring}`)\n        const modifiedData = {\n          ...listingFields,\n          postcode: postcodeSubstring,\n          request_type: 'Insights',\n        }\n        const response = await axios.post('/api/listing_favourites/', modifiedData, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        setResultsToLocalStorage()\n      }\n\n      // if its a normal listing build, then we want to run the code for that\n      if (listingType === 'listing_normal_total') {\n        const modifiedData = {\n          ...listingFields,\n          postcode: postcodeSubstring,\n          request_type: 'Listing',\n        }\n        const response = await axios.post('/api/listing_favourites/', modifiedData, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n      }\n\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  // define function for setting results to storage\n  const setResultsToLocalStorage = (token) => {\n    window.localStorage.setItem('listing-postcode', JSON.stringify(postcodeSubstring))\n  }\n\n\n\n  // ? Section 3: Load primaries data\n  const loadPrimaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getPrimaries = async () => {\n        const { data } = await axios.get('/api/primaries/')\n        // console.log('primaries data ->', data)\n        setPrimaryData(data)\n      }\n      getPrimaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadPrimaryData()\n    }\n  }, [postcodeData])\n\n\n  // set distance\n  const walkDistanceKm20 = 5 * (20 / 60) // updated for 20 mins\n\n  const R = 6371 // Radius of the earth in km\n  const toRad = (value) => value * Math.PI / 180 // Convert degrees to radians\n  const kmPerMinute = 5 / 60 // average walking speed is 5 km per hour\n\n  // function for restaurants with least walking distance\n  const getNearbyPrimaries = () => {\n    // filter out restaurants firther than 20 mins walk away and add distanceKm and walkTimeMin to each item\n    const nearbyPrimaries = primaryData.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      // logic to determine whether school is in the catchment area\n      const distancePercent = distanceKm / item.max_distance\n\n      // handle independent schools\n      if (item.school_type === 'Independent school') {\n        item.within_catchment = 'N/a'\n\n        // handle special schools\n      } else if (item.school_type === 'Special school') {\n        item.within_catchment = 'N/a'\n      } else if (item.max_distance === 'On request') {\n        item.within_catchment = 'N/a'\n\n        // handle schools with a map catchment\n      } else if (item.additional_status === 'Based on map') {\n        item.within_catchment = 'Check catchment map'\n\n        // handle schools that have religioius requirement and have no distane measurement\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.6) {\n        item.within_catchment = 'Very likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.8) {\n        item.within_catchment = 'Likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 1) {\n        item.within_catchment = 'Probably if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n        item.within_catchment = 'Unlikely, even if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n        item.within_catchment = 'Very unlikely, even if religious critera met'\n\n        // handle schools that have not specified their catchment\n      } else if (item.max_distance === 'Not specified' & item.distance_between < 0.4) {\n        item.within_catchment = 'Very likely but no distance specified'\n      } else if (item.max_distance === 'Not specified' & item.distance_between < 0.7) {\n        item.within_catchment = 'Likely but no distance specified'\n      } else if (item.max_distance === 'Not specified' & item.distance_between < 1) {\n        item.within_catchment = 'Probably but no distance specified'\n      } else if (item.max_distance === 'Not specified' & item.distance_between > 1) {\n        item.within_catchment = 'Unlikely, but no distance specified'\n\n        // handle schools that have not been incliuded in the catchment extract\n      } else if (item.max_distance === null & item.distance_between < 0.6) {\n        item.within_catchment = 'Very likely, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between < 0.8) {\n        item.within_catchment = 'Likely, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between < 1) {\n        item.within_catchment = 'Probably, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between < 1.5) {\n        item.within_catchment = 'Unlikely, but no distance data available'\n      } else if (item.max_distance === null & item.distance_between > 1.5) {\n        item.within_catchment = 'Very unlikely, but no distance data available'\n\n        // handle schools with actual distance measurements\n      } else if (distancePercent <= 0.6) {\n        item.within_catchment = 'Yes'\n      } else if (distancePercent <= 0.8) {\n        item.within_catchment = 'Very likely'\n      } else if (distancePercent <= 1.0) {\n        item.within_catchment = 'Probably'\n      } else if (distancePercent <= 1.2) {\n        item.within_catchment = 'Probably not'\n\n        // handle schools that have no catchment\n      } else if (item.max_distance === 'Does not apply') {\n        item.within_catchment = 'Yes'\n\n        // handle any other schools\n      } else {\n        item.within_catchment = 'No'\n      }\n\n      return distanceKm <= walkDistanceKm20\n\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n    const firstSchoolNames = nearbyPrimaries.slice(0, 8)\n\n\n    setTopPrimaries(firstSchoolNames)\n    setPrimaryData1(nearbyPrimaries)\n\n    console.log('nearby primaries ->', nearbyPrimaries)\n  }\n\n\n  // load data \n  useEffect(() => {\n    if (primaryData) {\n      getNearbyPrimaries()\n    }\n  }, [primaryData])\n\n\n\n\n  // ? Section 4: Load secondary school data  \n  const loadSecondaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getSecondaries = async () => {\n        const { data } = await axios.get('/api/secondaries/')\n        // console.log('secondaries data ->', data)\n        setSecondaryData(data)\n      }\n      getSecondaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadSecondaryData()\n    }\n  }, [postcodeData])\n\n  // function for restaurants with least walking distance\n\n  const walkDistanceKm30 = 5 * (30 / 60) // updated for 20 mins\n\n  const getNearbySecondaries = () => {\n    // filter out restaurants firther than 20 mins walk away and add distanceKm and walkTimeMin to each item\n    const nearbySecondaries = secondaryData.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      // logic to determine whether school is in the catchment area\n      const maxDistancePercent = distanceKm / item.max_distance\n      const minDistancePercent = distanceKm / item.min_distance\n\n      // handle independent schools, special schools and examination requirements\n      if (item.school_type.includes('independent')) {\n        item.within_catchment = 'N/a'\n      } else if (item.school_type.includes('special')) {\n        item.within_catchment = 'N/a'\n      } else if (item.max_distance === 'Exam' || item.max_distance === 'Test score') {\n        item.within_catchment = 'Dependent on test results'\n      } else if (item.max_distance === 'Random') {\n        item.within_catchment = 'Random selection based on performance'\n      } else if (item.max_distance === 'Catchment score') {\n        item.within_catchment = 'School uses catchment score - check'\n\n        // handle schools with a map catchment\n      } else if (item.max_distance === 'Based on map') {\n        item.within_catchment = 'Check catchment map'\n\n        // handle schools with religious requirements and no specified distance\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.7) {\n        item.within_catchment = 'Very likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 0.9) {\n        item.within_catchment = 'Likely if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n        item.within_catchment = 'Probably if religious critera met'\n      } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n        item.within_catchment = 'Unlikely, even if religious critera met'\n\n        // handle schools without a catchment\n      } else if (item.max_distance === 'Does not apply') {\n        item.within_catchment = 'Yes'\n\n        // handle schools with a lower and an upper catchment\n      } else if (item.min_distance !== null & minDistancePercent <= 1) {\n        item.within_catchment = 'Yes'\n      } else if (item.min_distance !== null & maxDistancePercent <= 0.5) {\n        item.within_catchment = 'Very likely'\n      } else if (item.min_distance !== null & maxDistancePercent <= 0.7) {\n        item.within_catchment = 'Probably'\n\n        // handle schools with only uppeer catchment\n      } else if (maxDistancePercent <= 0.6) {\n        item.within_catchment = 'Yes'\n      } else if (maxDistancePercent <= 0.8) {\n        item.within_catchment = 'Very likely'\n      } else if (maxDistancePercent <= 1.0) {\n        item.within_catchment = 'Probably'\n      } else if (maxDistancePercent <= 1.2) {\n        item.within_catchment = 'Probably not'\n      } else {\n        item.within_catchment = 'No'\n      }\n\n      return distanceKm <= walkDistanceKm30\n\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n    const firstSchoolNames = nearbySecondaries.slice(0, 8)\n\n\n    setTopSecondaries(firstSchoolNames)\n    setSecondaryData1(nearbySecondaries)\n\n    // console.log('nearby secondaries ->', nearbySecondaries)\n  }\n\n  // load data \n  useEffect(() => {\n    if (secondaryData) {\n      getNearbySecondaries()\n    }\n  }, [secondaryData])\n\n\n\n  // ? Section 5: Load and sort restaurant data\n  const loadRestaurantData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/restaurants/')\n        // console.log('restaurant data ->', data)\n        setRestaurants(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadRestaurantData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n  const walkDistanceKm15 = 5 * (15 / 60)\n\n  // function for restaurants with least walking distance\n  const getNearbyRestaurants = () => {\n\n    // filter out restaurants firther than 15 mins walk away\n    const nearbyRestaurants = restaurants.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm15\n    }).sort((a, b) => b.rating - a.rating)\n\n    // count the number of cuisines in the area\n    const countUniqueCuisines = (restaurants) => {\n      const cuisines = new Set(restaurants.map(restaurant => restaurant.cuisine))\n      return cuisines.size\n    }\n\n    // extract the top 3 restaurants\n    const topThreeRestaurants = nearbyRestaurants\n      .filter(restaurant => restaurant.cuisine !== 'No Cuisine Data')\n      .slice(0, 3)\n      .map(restaurant => restaurant.restaurant_name)\n\n    setCuisines(countUniqueCuisines(nearbyRestaurants))\n    setRestaurants1(nearbyRestaurants)\n    setTopRestaurants(topThreeRestaurants)\n    // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n    // console.log('Nearby restaurants ->', nearbyRestaurants)\n    // console.log('Top restaurants ->', topThreeRestaurants)\n    if (listingFields.restaurants === 1) {\n      setAiFields(prevState => ({\n        ...prevState,\n        restaurants: `${nearbyRestaurants.length} restaurants within 15 min walk, with more than ${cuisines} cuisines available`,\n      }))\n    }\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (restaurants) {\n      getNearbyRestaurants()\n    }\n  }, [restaurants])\n\n\n\n\n\n  // ? Section 6: Load and sort fitness data\n  const loadFitnessData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/gyms/')\n        // console.log('gyms data ->', data)\n        setGyms(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadFitnessData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n\n  // function for restaurants with least walking distance\n  const getNearbyStudios = () => {\n\n    const specificGyms = ['third space', 'pure gym', '1 rebel', 'virgin', 'barry\\'s', 'the gym group']\n    const uniqueGyms = new Set() // Used to store unique gym names\n\n\n\n    // filter out restaurants firther than 15 mins walk away\n    const nearbyStudios = gyms.filter(item => {\n      const dLat = toRad(parseFloat(item.Lat) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.Lat))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm15\n    }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n\n    // extract the key studios\n    const topThreeStudios = []\n\n    for (let i = 0; i < nearbyStudios.length; i++) {\n      const gym = nearbyStudios[i]\n      if (gym.gym_group && specificGyms.includes(gym.gym_group.toLowerCase()) && !uniqueGyms.has(gym.gym_group)) {\n        topThreeStudios.push(gym.gym_group)\n        uniqueGyms.add(gym.gym_group)\n\n        if (topThreeStudios.length === 3) {\n          break\n        }\n      }\n    }\n\n    setGyms1(nearbyStudios)\n    setMainGyms(topThreeStudios)\n    // console.log('Nearby gyms ->', nearbyStudios)\n    // console.log('Main gyms ->', topThreeStudios)\n    if (listingFields.gyms === 1) {\n      setAiFields(prevState => ({\n        ...prevState,\n        gyms: `${nearbyStudios.length} gyms within 15 min walk, including ${topThreeStudios[0]} and  ${topThreeStudios[1]}`,\n      }))\n    }\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (gyms) {\n      getNearbyStudios()\n    }\n  }, [gyms])\n\n\n\n\n  // ? Section 7: Load and sort supermarket data\n  const loadSupermarketData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/supermarkets/')\n        // console.log('supermarkets data ->', data)\n        setSupermarkets(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadSupermarketData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n\n  // function for restaurants with least walking distance\n  const getNearbySupermatkets = () => {\n\n    const specificSupermarkets = ['m&s', 'waitrose', 'aldi', 'lidl', 'sainsburys', 'tesco', 'asda']\n    const uniqueSupermarkets = new Set() // Used to store unique gym names\n\n\n\n    // filter out restaurants firther than 15 mins walk away\n    const allSupermarkets = supermarkets.map(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return { ...item, distance: distanceKm }\n    })\n\n    const nearbySupermarkets = allSupermarkets\n      .filter(item => item.distance <= walkDistanceKm15)\n\n    // extract the key studios\n    const topThreeSupermarkets = []\n\n    for (let i = 0; i < nearbySupermarkets.length; i++) {\n      const supermarket = nearbySupermarkets[i]\n      if (specificSupermarkets.includes(supermarket.supermarket_brand.toLowerCase()) && !uniqueSupermarkets.has(supermarket.supermarket_brand)) {\n        topThreeSupermarkets.push(supermarket.supermarket_brand)\n        uniqueSupermarkets.add(supermarket.supermarket_brand)\n\n        if (topThreeSupermarkets.length === 3) {\n          break\n        }\n      }\n    }\n\n    setSupermarkets1(nearbySupermarkets)\n    setMainSupermarkets(topThreeSupermarkets)\n    // console.log('Nearby supermarkets ->', nearbySupermarkets)\n    if (listingFields.supermarkets === 1) {\n      setAiFields(prevState => ({\n        ...prevState,\n        supermarkets: `${nearbySupermarkets.length} supermarkets within 15 min walk, including ${topThreeSupermarkets[0]} and ${topThreeSupermarkets[1]}`,\n      }))\n    }\n    // console.log('Main supermarktets ->', topThreeSupermarkets)\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (supermarkets) {\n      getNearbySupermatkets()\n    }\n  }, [supermarkets])\n\n\n\n  // ? Section 8: Load and sort tubes data\n  const loadTubesData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/tubes/')\n        // console.log('tubes data ->', data)\n        setTubes(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadTubesData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates  \n  // function for restaurants with least walking distance\n  const getNearbyTubes = () => {\n\n    // filter out restaurants firther than 15 mins walk away\n    const nearbyTubes = tubes.filter(item => {\n      const dLat = toRad(parseFloat(item.lat) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.lat))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm20\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n\n    setTubes1(nearbyTubes)\n    console.log('Nearby tubes ->', nearbyTubes)\n\n    if (listingFields.tubes === 1) {\n      setAiFields(prevState => ({\n        ...prevState,\n        tubes: `${nearbyTubes.length} within 15 min walk, including ${nearbyTubes[0].station_name} and ${nearbyTubes[1].station_name}`,\n      }))\n    }\n\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (tubes) {\n      getNearbyTubes()\n    }\n  }, [tubes])\n\n\n\n  // ? Section 9: Load and sort EV data\n  const loadEVdata = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/evs/')\n        // console.log('ev data ->', data)\n        setEv(data)\n        // Average walking speed is 5km/h. \n        const walkDistanceKm10 = 5 * (10 / 60)\n\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyChargers = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm10\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n\n\n        setEv1(nearbyChargers)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadEVdata()\n    }\n  }, [postcodeData])\n\n\n\n\n  // ? Section 10: Load in pubs data\n  const loadPubsData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/pubs/')\n        // console.log('pub data ->', data)\n        setPubs(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadPubsData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates\n\n  // function for restaurants with least walking distance\n  const getNearbyPubs = () => {\n\n    // filter out restaurants firther than 15 mins walk away\n    const nearbyPubs = pubs.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm15\n    }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n\n\n    // extract the top 3 restaurants\n    const topThreePubs = nearbyPubs\n      .slice(0, 3)\n      .map(pub => pub.name)\n\n    setPubs1(nearbyPubs)\n    setTopPubs(topThreePubs)\n    // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n    // console.log('Nearby pubs ->', nearbyPubs)\n    // console.log('Top restaurants ->', topThreeRestaurants)\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (pubs) {\n      getNearbyPubs()\n    }\n  }, [pubs])\n\n\n\n  // ? Section 11: Load and sort tubes data\n  const loadTrainsData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/trains/')\n        // console.log('trains data ->', data)\n        setTrains(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData) {\n      loadTrainsData()\n    }\n  }, [postcodeData])\n\n  // calculatgion for adding distances to the data based on the input coordinates  \n  // function for restaurants with least walking distance\n  const getNearbyTrains = () => {\n\n    // filter out restaurants firther than 15 mins walk away\n    const nearbyTrains = trains.filter(item => {\n      const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n      const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n      const distanceKm = R * c\n\n      item.distance_between = distanceKm\n      item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n      return distanceKm <= walkDistanceKm20\n    }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n\n    setTrains1(nearbyTrains)\n    // console.log('Nearby trains ->', nearbyTrains)\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (trains) {\n      getNearbyTrains()\n    }\n  }, [trains])\n\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setListingFields(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === 1 ? 0 : 1,\n    }))\n  }\n\n\n  // Copy function\n  const handleCopyText = () => {\n    const htmlContent = textDivRef.current.innerHTML\n    const el = document.createElement('div')\n    el.contentEditable = true\n    el.innerHTML = htmlContent\n    document.body.appendChild(el)\n    const range = document.createRange()\n    range.selectNodeContents(el)\n    const sel = window.getSelection()\n    sel.removeAllRanges()\n    sel.addRange(range)\n    el.focus()\n    document.execCommand('copy')\n    document.body.removeChild(el)\n  }\n\n\n\n  // Increase value in db based on successful response\n  const increaseUsageCount = async (listingType) => {\n    // console.log('trying to increase')\n    try {\n      const { data } = await axios.post('/api/usage/listing/', { column: listingType }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log(data)\n      if (data.status === 'success') {\n        // console.log('Usage count increased successfully')\n      } else {\n        // console.error('Failed to increase usage count:', data.message)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n    }\n  }\n\n\n\n  const handleCheckboxChange = (feature) => {\n    setAiFields(prev => {\n      // Check if the feature is already in the amenities array\n      if (prev.amenities.includes(feature)) {\n        // If it is, remove it\n        return {\n          ...prev,\n          amenities: prev.amenities.filter(a => a !== feature),\n        }\n      } else {\n        // If it isn’t, add it\n        return {\n          ...prev,\n          amenities: [...prev.amenities, feature],\n        }\n      }\n    })\n  }\n\n\n  const handleInsightClick = () => {\n    loadPostcodeData('listing_insight_total')\n    setListingFields(prevState => ({ ...prevState, request_type: 'insights' }))\n    setInsightView('Results')\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // check to see if the user has come from the favourites section\n  // useEffect(() => {\n  //   const listing = JSON.parse(localStorage.getItem('listing-route'))\n  //   setListingRoute(listing)\n  //   console.log(listing)\n  // }, [])\n\n\n  // useEffect(() => {\n  //   const listing = JSON.parse(localStorage.getItem('listing-route'))\n  //   console.log('listing route ->', listing)\n\n  const fetchData = async () => {\n    const listing = JSON.parse(localStorage.getItem('listing-route'))\n    console.log('listing route ->', listing)\n    if (listing === 'On') {\n      setInsightView('Results')\n      const postcodeRoute = JSON.parse(localStorage.getItem('listing-postcode'))\n      console.log('postcode-route', postcodeRoute)\n      try {\n        const { data } = await axios.post('/api/postcodes/', { postcode: postcodeRoute })\n        console.log('postcode data ->', data)\n        setPostcodes(data)\n        window.localStorage.setItem('listing-route', JSON.stringify('Off'))\n        setListingRoute('Off')\n      } catch (error) {\n        console.error('Error fetching postcodes:', error)\n      }\n    }\n  }\n  //   fetchData()\n  // }, [])\n\n\n  // load data to trigger data load if user comes from the favourites section\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     if (listingRoute === 'On') {\n  //       setInsightView('Results')\n  //       const postcodeRoute = JSON.parse(localStorage.getItem('listing-postcode'))\n  //       try {\n  //         const { data } = await axios.post('/api/postcodes/', { postcode: postcodeRoute })\n  //         console.log('postcode data ->', data)\n  //         setPostcodes(data)\n  //         window.localStorage.setItem('listing-route', JSON.stringify('Off'))\n  //         setListingRoute('Off')\n  //       } catch (error) {\n  //         console.error('Error fetching postcodes:', error)\n  //       }\n  //     }\n  //   }\n\n  //   fetchData()\n  // }, [listingRoute])\n\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          setProfileContent={setProfileContent}\n          userData={userData}\n        />\n        {userData && userData.usage_stats[0].package === 'Trial expired' ?\n\n          <section className='main-body remove-margin' style={{ height: insightView === 'Results' ? 'auto' : 'none', marginTop: insightView === 'Results' ? '3%' : 'none' }}>\n            <section className='main-body-details'  >\n              <section className='listing-generator'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'></div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n                </div>\n                <div className='no-access-body'>\n                  <div className='no-access-image'></div>\n                  <h1 className='no-access-title'>Oops! Dead end</h1>\n                  <h3 className='no-access-message'>You no longer have access to this content. Get in touch to upgrade your account and access the Wittle magic.</h3>\n                </div>\n              </section>\n            </section>\n          </section>\n          :\n\n          <section className='main-body remove-margin' style={{ height: insightView === 'Results' ? 'auto' : 'none', marginTop: insightView === 'Results' ? '3%' : 'none' }}>\n            <section className='main-body-details'  >\n              <section className='listing-generator'>\n                {/* <h1>Wittle listing generator</h1> */}\n                {/* <h1>Insert your property details to build a listing or explore insights</h1> */}\n\n                <div className='listing-options'>\n                  <div className='listing-buttons'>\n                    <h5 className='no-print' onClick={() => setListingSelection('Property insights')} style={{ borderBottom: listingSelection === 'Property insights' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'Property insights' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Property insights' ? '700' : '400' }}>Property insights</h5>\n                    <h5 className='no-print' onClick={() => setListingSelection('Listing generator')} style={{ borderBottom: listingSelection === 'Listing generator' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'Listing generator' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Listing generator' ? '700' : '400' }}>Listing generator</h5>\n                    <h5 className='no-print' onClick={() => setListingSelection('AI listing generator')} style={{ borderBottom: listingSelection === 'AI listing generator' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'AI listing generator' ? '0.5em' : 'initial', fontWeight: listingSelection === 'AI listing generator' ? '700' : '400' }}>AI listing generator</h5>\n                    <h5 className='no-print' onClick={() => setListingSelection('Saved searches')} style={{ borderBottom: listingSelection === 'Saved searches' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'Saved searches' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Saved searches' ? '700' : '400' }}>Saved searches</h5>\n                    {userData && (userData.id === 1 || userData.id === 62) ? <h5 className='no-print' onClick={() => setListingSelection('Top properties')} style={{ borderBottom: listingSelection === 'Top properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: listingSelection === 'Top properties' ? '0.5em' : 'initial', fontWeight: listingSelection === 'Top properties' ? '700' : '400' }}>Top properties</h5> : ''}\n                  </div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n\n\n                </div>\n                <hr className='title-line' />\n\n                {listingSelection === 'Property insights' && userData &&\n                  ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].listing_monthly_count < 11) ||\n                    (userData.usage_stats[0].package === 'Unlimited') ||\n                    (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].listing_monthly_count < 101)) ?\n                  <>\n                    {insightView === 'Search' ?\n                      <div className='basic-listing-wrapper'>\n\n                        <div className='property-insight-inputs'>\n                          <h3 className='insight-title'>Insert full postcode to extract details about property</h3>\n                          <div className='double-input-block'>\n                            <div className='input-block small'>\n                              <h3>Postcode</h3>\n                              <input\n                                type=\"text\"\n                                value={postcodeSubstring}\n                                onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                                placeholder=\"Enter postcode\"></input>\n                            </div>\n                            <div className='input-block medium'>\n                              <h3>Address</h3>\n                              <input\n                                type=\"text\"\n                                value={addressSubstring}\n                                onChange={e => {\n                                  const value = e.target.value\n                                  setAddressSubstring(value)\n                                  setListingFields(prevData => ({ ...prevData, address: value }))\n                                }}\n                                placeholder=\"Enter address\"></input>\n                            </div>\n                          </div>\n\n                          <div className='input-block large'>\n                            <h3>Channel</h3>\n\n                            <select className='listing-dropdown' onChange={e => setListingFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                              <option>--- Select ---</option>\n                              <option>Sales</option>\n                              <option>Rental</option>\n                            </select>\n                          </div>\n                          <div className='search-section'>\n                            <button className='load-insights' onClick={handleInsightClick}>See insights</button>\n\n                          </div>\n                        </div>\n                      </div>\n                      : insightView === 'Results' ?\n                        <PropertyInsightsOverview\n                          postcodeSubstring={postcodeSubstring}\n                          addressSubstring={addressSubstring}\n                          listingFields={listingFields}\n                          postcodeData={postcodeData}\n                          topPrimaries={topPrimaries}\n                          topSecondaries={topSecondaries}\n                          restaurants1={restaurants1}\n                          cuisines={cuisines}\n                          topRestaurants={topRestaurants}\n                          setRestaurants1={setRestaurants1}\n                          gyms1={gyms1}\n                          setGyms1={setGyms1}\n                          mainGyms={mainGyms}\n                          supermarkets1={supermarkets1}\n                          setSupermarkets1={setSupermarkets1}\n                          mainSupermarkets={mainSupermarkets}\n                          pubs1={pubs1}\n                          topPubs={topPubs}\n                          tubes1={tubes1}\n                          setTubes1={setTubes1}\n                          trains1={trains1}\n                          insightView={insightView}\n                          setInsightView={setInsightView}\n                          primaryData1={primaryData1}\n                          setPrimaryData1={setPrimaryData1}\n                          secondaryData1={secondaryData1}\n                          setSecondaryData1={setSecondaryData1}\n                          ev1={ev1}\n                          setEv1={setEv1}\n                          secondaryDetail={secondaryDetail}\n                          setSecondaryDetail={setSecondaryDetail}\n                          primaryDetail={primaryDetail}\n                          setPrimaryDetail={setPrimaryDetail}\n                        />\n                        : ''}\n                  </>\n\n\n                  : listingSelection === 'Listing generator' && userData &&\n                    ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].listing_monthly_count < 11) ||\n                      (userData.usage_stats[0].package === 'Unlimited') ||\n                      (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].listing_monthly_count < 101)) ?\n                    <>\n                      <div className='full-listing-wrapper'>\n                        <div className='full-listing-inputs'>\n\n                          <div className='property-insight-inputs'>\n                            <h3 className='insight-title'>Input details and select features you want to include in your listing</h3>\n                            <div className='double-input-block'>\n                              <div className='input-block small'>\n                                <h3>Postcode</h3>\n                                <input\n                                  type=\"text\"\n                                  value={postcodeSubstring}\n                                  onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                                  placeholder=\"Enter postcode...\"></input>\n                              </div>\n                              <div className='input-block medium'>\n                                <h3>Address</h3>\n                                <input\n                                  type=\"text\"\n                                  value={addressSubstring}\n                                  onChange={e => {\n                                    const value = e.target.value\n                                    setAddressSubstring(value)\n                                    setListingFields(prevData => ({ ...prevData, address: value }))\n                                  }}\n                                  placeholder=\"Enter address\"></input>\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n\n                              <div className='input-block large'>\n                                <h3>Channel</h3>\n\n                                <select className='listing-dropdown' onChange={e => setListingFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                                  <option>--- Select ---</option>\n                                  <option>Sales</option>\n                                  <option>Rental</option>\n                                </select>\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n\n                              <div className='input-block large'>\n                                <h3>Description</h3>\n                                <textarea id=\"description\" value={listingFields.description} rows=\"4\" placeholder='Enter description' onChange={e => setListingFields(prevState => ({ ...prevState, description: e.target.value }))}></textarea>\n                              </div>\n                            </div>\n                            <div className='lifestyle-input-block'>\n                              <h3 className='insight-title'>Lifestyle elements to include</h3>\n\n                              <div className='lifestyle-input-wrap'>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='primaries'></div>\n                                  <h3>Primary schools</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.primary_schools === 1}\n                                    onChange={() => toggleStatus('primary_schools')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='secondaries'></div>\n                                  <h3>Secondary schools</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.secondary_schools === 1}\n                                    onChange={() => toggleStatus('secondary_schools')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='tubes'></div>\n                                  <h3>Tubes</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.tubes === 1}\n                                    onChange={() => toggleStatus('tubes')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='trains'></div>\n                                  <h3>Trains</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.trains === 1}\n                                    onChange={() => toggleStatus('trains')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='evs'></div>\n                                  <h3>Electric vehicles</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.evs === 1}\n                                    onChange={() => toggleStatus('evs')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n\n\n                                  <div className='lifestyle-icon' id='restaurants'></div>\n                                  <h3>Restaurants</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.restaurants === 1}\n                                    onChange={() => toggleStatus('restaurants')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n\n                                  <div className='lifestyle-icon' id='pubs'></div>\n                                  <h3>Pubs</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.pubs === 1}\n                                    onChange={() => toggleStatus('pubs')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='parks'></div>\n                                  <h3>Parks</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.parks === 1}\n                                    onChange={() => toggleStatus('parks')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='gyms'></div>\n                                  <h3>Gyms</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.gyms === 1}\n                                    onChange={() => toggleStatus('gyms')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='supermarkets'></div>\n                                  <h3>Supermarkets</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.supermarkets === 1}\n                                    onChange={() => toggleStatus('supermarkets')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                                <div className='input-block-icons'>\n                                  <div className='lifestyle-icon' id='crime'></div>\n                                  <h3>Crime</h3>\n                                  <ReactSwitch\n                                    checked={listingFields.crime === 1}\n                                    onChange={() => toggleStatus('crime')}\n                                    onColor='#ED6B86'\n                                    offColor='#D5D5D5'\n\n                                    uncheckedIcon={null}\n                                    checkedIcon={null}\n                                  />\n                                </div>\n                              </div>\n\n                            </div>\n                            <div className='listing-search-section'>\n                              <button className='load-insights' onClick={() => loadPostcodeData('listing_normal_total')}>Load description</button>\n                            </div>\n                          </div>\n                        </div>\n                        <section className='full-listing-outputs'>\n                          <div className='results-header'>\n                            <div className='header-text'>\n                              <h3 className='results-title'>Your listing</h3>\n                            </div>\n                            <div className='header-cta'>\n                              <div className='copy-button' onClick={handleCopyText}>\n                                <div className='copy-icon'></div>\n                                <h3>Copy</h3>\n                              </div>\n                            </div>\n\n                          </div>\n\n                          {/* Results that you will see on the page */}\n                          <div className='results-section'>\n                            <div className='results-description'>\n                              {postcodeData && listingFields.description !== '' ? <h3>{listingFields.description}</h3> : ''}\n\n                            </div>\n                            {postcodeData ? <h3 className='results-sub-title'>What you should know about this area</h3> : ''}\n\n                            {restaurants1 && listingFields.restaurants === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='restaurants'></div>\n                                    <h3>Restaurants</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{restaurants1.length} restaurants within 15 mins walk</li>\n                                      <li>more than {cuisines} cuisines available</li>\n                                      <li>{topRestaurants[0]}, {topRestaurants[1]} & {topRestaurants[2]} are well rated</li>\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {pubs1 && listingFields.pubs === 1 ?\n\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='pubs'></div>\n                                    <h3>Pubs</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{pubs1.length} pubs within 15 mins walk</li>\n                                      <li>{topPubs[0]}, {topPubs[1]} & {topPubs[2]} are well rated</li>\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {primaryData1 && listingFields.primary_schools === 1 ?\n\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='primaries'></div>\n                                    <h3>Primary schools</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      {primaryData1.slice(0, 5).map((school, index) => (\n                                        <li key={index}>{school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</li>\n                                      ))}\n                                    </ul>\n\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n\n                            {secondaryData1 && listingFields.secondary_schools === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='secondaries'></div>\n                                    <h3>Secondary schools</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      {secondaryData1.slice(0, 5).map((school, index) => (\n                                        <li key={index}>{school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</li>\n                                      ))}\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {gyms1 && listingFields.gyms === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='gyms'></div>\n                                    <h3>Gyms</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{gyms1.length} gyms within 15 mins walk</li>\n                                      {mainGyms.length === 3 ? <li>includes {mainGyms[0]}, {mainGyms[1]} & {mainGyms[2]}</li> : mainGyms.length === 2 ? <li>includes {mainGyms[0]} & {mainGyms[1]} </li> : mainGyms.length === 1 ? <li>includes {mainGyms[0]}</li> : ''}\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {supermarkets1 && listingFields.supermarkets === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='supermarkets'></div>\n                                    <h3>Supermarkets</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>🛒 {supermarkets1.length} supermarkets within 15 mins walk</li>\n                                      {mainSupermarkets.length === 3 ? <li>🛒 includes {mainSupermarkets[0]}, {mainSupermarkets[1]} & {mainSupermarkets[2]}</li> : mainSupermarkets.length === 2 ? <li>🛒 includes {mainSupermarkets[0]} & {mainSupermarkets[1]} </li> : mainSupermarkets.length === 1 ? <li>🛒 includes {mainSupermarkets[0]}</li> : ''}\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {tubes1 && listingFields.tubes === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='tubes'></div>\n                                    <h3>Tubes</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{tubes1.length} stations within 20 mins walk</li>\n                                      {\n                                        tubes1.slice(0, 3).map((train, index) => (\n                                          <li key={index}>{train.station_name} - {train.line} - {train.walkTimeMin} mins walk</li>\n                                        ))\n                                      } </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {trains1 && listingFields.trains === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='trains'></div>\n                                    <h3>Trains</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{trains1.length} stations within 20 mins walk</li>\n                                      {\n                                        trains1.slice(0, 3).map((train, index) => (\n                                          <li key={index}>{train.station} - {train.walkTimeMin} mins walk</li>\n                                        ))\n                                      }\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {postcodeData && listingFields.parks === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='parks'></div>\n                                    <h3>Parks</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>within top {100 - postcodeData[0].parks_lsoa[0].london_percentile}% of areas in london for access to greenspace</li>\n                                      <li>{postcodeData[0].parks_postcode.park_name0} - {Math.ceil((((postcodeData[0].parks_postcode.distance0) / 1000) / 5) * 60)} mins walk</li>\n                                      <li>{postcodeData[0].parks_postcode.park_name1} - {Math.ceil((((postcodeData[0].parks_postcode.distance1) / 1000) / 5) * 60)} mins walk</li>\n                                      <li>{postcodeData[0].parks_postcode.park_name2} - {Math.ceil((((postcodeData[0].parks_postcode.distance2) / 1000) / 5) * 60)} mins walk</li>\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {ev1 && listingFields.evs === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='evs'></div>\n                                    <h3>Electric vehicle charging</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{postcodeData[0].ev.ev_10_mins} charging points within 10 mins walk</li>\n                                      <li>in the top {Math.round((1 - postcodeData[0].ev.percentile) * 100)}% of areas in London for ev charging access</li>\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                          </div>\n\n\n                          {/* Results that you will get when you click export */}\n                          <div className='results-section-icons' ref={textDivRef}>\n                            <div className='results-description'>\n                              {postcodeData && listingFields.description !== '' ? <h3>{listingFields.description}</h3> : ''}\n\n                            </div>\n                            {postcodeData ? <h3 className='results-sub-title'>What you should know about this area</h3> : ''}\n\n                            {restaurants1 && listingFields.restaurants === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='restaurants'></div>\n                                    <h3>🥘 Restaurants</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      {/* <li>{restaurants1.length} restaurants within 15 mins walk</li> */}\n                                      <li>more than {cuisines} cuisines available</li>\n                                      <li>{topRestaurants[0]}, {topRestaurants[1]} & {topRestaurants[2]} are well rated</li>\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {pubs1 && listingFields.pubs === 1 ?\n\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='pubs'></div>\n                                    <h3>🍺 Pubs</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{pubs1.length} pubs within 15 mins walk</li>\n                                      <li>{topPubs[0]}, {topPubs[1]} & {topPubs[2]} are well rated</li>\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {primaryData1 && listingFields.primary_schools === 1 ?\n\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='primaries'></div>\n                                    <h3>👶 Primary schools</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      {primaryData1.slice(0, 5).map((school, index) => (\n                                        <li key={index}>{school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</li>\n                                      ))}\n                                    </ul>\n\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n\n                            {secondaryData1 && listingFields.secondary_schools === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='secondaries'></div>\n                                    <h3>🎓 Secondary schools</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      {secondaryData1.slice(0, 5).map((school, index) => (\n                                        <li key={index}>{school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</li>\n                                      ))}\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {gyms1 && listingFields.gyms === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='gyms'></div>\n                                    <h3>🏋️‍♂️ Gyms</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{gyms1.length} gyms within 15 mins walk</li>\n                                      {mainGyms.length === 3 ? <li>includes {mainGyms[0]}, {mainGyms[1]} & {mainGyms[2]}</li> : mainGyms.length === 2 ? <li>includes {mainGyms[0]} & {mainGyms[1]} </li> : mainGyms.length === 1 ? <li>includes {mainGyms[0]}</li> : ''}\n                                    </ul>\n                                  </>\n                                </div><hr className='results-divider' />\n                              </>\n                              : ''}\n                            {supermarkets1 && listingFields.supermarkets === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='supermarkets'></div>\n                                    <h3>🛒 Supermarkets</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{supermarkets1.length} supermarkets within 15 mins walk</li>\n                                      {mainSupermarkets.length === 3 ? <li>includes {mainSupermarkets[0]}, {mainSupermarkets[1]} & {mainSupermarkets[2]}</li> : mainSupermarkets.length === 2 ? <li>Includes {mainSupermarkets[0]} & {mainSupermarkets[1]} </li> : mainSupermarkets.length === 1 ? <li>Iincludes {mainSupermarkets[0]}</li> : ''}\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {tubes1 && listingFields.tubes === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='tubes'></div>\n                                    <h3>🚇 Tubes</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{tubes1.length} stations within 20 mins walk</li>\n                                      {\n                                        tubes1.slice(0, 3).map((train, index) => (\n                                          <li key={index}>{train.station_name} - {train.line} - {train.walkTimeMin} mins walk</li>\n                                        ))\n                                      } </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {trains1 && listingFields.trains === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='trains'></div>\n                                    <h3>🚈 Trains</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{trains1.length} stations within 20 mins walk</li>\n                                      {\n                                        trains1.slice(0, 3).map((train, index) => (\n                                          <li key={index}>{train.station} - {train.walkTimeMin} mins walk</li>\n                                        ))\n                                      }\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {postcodeData && listingFields.parks === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='parks'></div>\n                                    <h3>🌳 Parks</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>within top {100 - postcodeData[0].parks_lsoa[0].london_percentile}% of areas in london for access to greenspace</li>\n                                      <li>{postcodeData[0].parks_postcode.park_name0} - {Math.ceil((((postcodeData[0].parks_postcode.distance0) / 1000) / 5) * 60)} mins walk</li>\n                                      <li>{postcodeData[0].parks_postcode.park_name1} - {Math.ceil((((postcodeData[0].parks_postcode.distance1) / 1000) / 5) * 60)} mins walk</li>\n                                      <li>{postcodeData[0].parks_postcode.park_name2} - {Math.ceil((((postcodeData[0].parks_postcode.distance2) / 1000) / 5) * 60)} mins walk</li>\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                            {ev1 && listingFields.evs === 1 ?\n                              <>\n                                <div className='results-block'>\n                                  <div className='result-block-header'>\n                                    <div className='lifestyle-icon' id='evs'></div>\n                                    <h3>⛽️ Electric vehicle charging</h3>\n                                  </div>\n                                  <>\n                                    <ul className='results-details'>\n                                      <li>{postcodeData[0].ev.ev_10_mins} charging points within 10 mins walk</li>\n                                      <li>in the top {Math.round((1 - postcodeData[0].ev.percentile) * 100)}% of areas in London for ev charging access</li>\n                                    </ul>\n                                  </>\n                                </div>\n                                <hr className='results-divider' />\n                              </>\n                              : ''}\n                          </div>\n                        </section>\n                      </div>\n                    </>\n\n                    : listingSelection === 'AI listing generator' && userData &&\n                      ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].listing_monthly_count < 11) ||\n                        (userData.usage_stats[0].package === 'Unlimited') ||\n                        (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].listing_monthly_count < 101)) ?\n\n                      <>\n                        <AIListingGenrator />\n                      </>\n\n\n                      : listingSelection === 'Saved searches' && userData && userData.listing_favourites.length > 0 ?\n\n                        <SavedListings\n                          userData={userData}\n                          loadUserData={loadUserData}\n                          setListingSelection={setListingSelection}\n                        />\n\n\n                        : listingSelection === 'Top properties' && userData ?\n\n                          <TopProperties\n                            userData={userData}\n                            loadUserData={loadUserData}\n                            setListingSelection={setListingSelection}\n                            fetchData={fetchData}\n                          />\n                          : ''}\n\n\n              </section>\n            </section>\n          </section>\n        }\n\n\n      </section>\n\n\n\n    </>\n  )\n}\n\nexport default ListingGenerator\n\n\n\n"],"names":["_ref","addressSubstring","postcodeSubstring","listingFields","postcodeData","topPrimaries","topSecondaries","restaurants1","cuisines","topRestaurants","gyms1","mainGyms","supermarkets1","mainSupermarkets","pubs1","topPubs","tubes1","trains1","setInsightView","primaryData1","setPrimaryData1","secondaryData1","setSecondaryData1","setTubes1","setRestaurants1","setPubs1","setSupermarkets1","setGyms1","ev1","setEv1","secondaryDetail","setSecondaryDetail","primaryDetail","setPrimaryDetail","propertyView","setPropertyView","useState","neighbourhoodScore","setNeighbourhoodScore","schoolSection","setSchoolSection","lifestyleSection","setLifestyleSection","transportSection","setTransportSection","neighbourhoodSection","setNeighbourhoodSection","sliderSelection","setSliderSelection","tableMapView","setTableMapView","useEffect","calculateScore","calculation","Math","ceil","crime","percentile","ev","fitness","parks_lsoa","london_percentile","restaurants","normal_percentile","supermarkets","tubes","_jsx","_Fragment","children","_jsxs","className","onClick","channel","id","window","print","PropertySummary","SchoolHighlights","LifestyleHighlights","TransportHighlights","NeighbourhoodHighlights","PropertyDetailSlider","placeholder","PrimaryDetails","listType","SecondaryDetails","TubeDetails","RestaurantDetails","PubDetails","SupermarketDetails","FitnessDetails","EVDetails","userData","loadUserData","setListingSelection","navigate","useNavigate","favouriteTab","setFavouriteTab","useLocation","listing_favourites","length","map","item","index","console","log","postcode","localStorage","setItem","JSON","stringify","goToListing","address","date_added","async","isUserAuth","data","axios","delete","property","headers","Authorization","getAccessToken","error","deleteListingFavourite","propertyInputShow","handlePropertyInputClose","propertyFilters","setPropertyFilters","boroughs","rentalPrices","salesPrices","propertyTypeList","loadProperties","toggleStatus","Modal","show","onHide","backdrop","Body","value","onChange","e","prevData","target","area","borough","rental_price_min","price","NumericFormat","displayType","thousandSeparator","prefix","rental_price_max","bedrooms_min","bedrooms_max","propertyType","type","name","checked","garden","htmlFor","size","ReactSwitch","primaries","onColor","offColor","uncheckedIcon","checkedIcon","primaries_score","defaultValue","min","max","step","secondaries","secondaries_score","parks","parks_score","playgrounds","playgrounds_score","gyms","gyms_score","restaurants_score","pubs","pubs_score","tubes_score","supermarkets_score","ev_score","crime_score","fetchData","loading","setLoading","properties","setProperties","setPropertyInputShow","propertyViewFormat","setPropertyViewFormat","selectedProperties","setSelectedProperties","showPopup","setShowPopup","iconId","setIconId","persona","filters","parse","getItem","propertyData","handleVisitUrl","url","link","document","createElement","href","rel","windowFeatures","body","appendChild","click","removeChild","currentPage","setCurrentPage","startIndex","endIndex","viewport","setViewport","latitude","longitude","zoom","iconSetting","parseInt","handlePropertyInputShow","Loading","property_data","displayAddress","persona_data_list","district","added_revised","reduced_revised","bedrooms","agent","overall_lifestyle_score","toFixed","style","backgroundImage","images","onMouseEnter","slice","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","handlePropertyClick","Popup","closeOnClick","onClose","ReactPaginate","pageCount","onPageChange","selected","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","KYCInput","queryParams","URLSearchParams","Object","entries","forEach","_ref2","key","undefined","append","toString","get","sort","a","b","defaults","xsrfCookieName","xsrfHeaderName","ListingGenerator","errors","setErrors","setUserData","textDivRef","useRef","search","setSearch","profileContent","setProfileContent","profileDetail","setProfileDetail","insightView","listingSelection","setPostcodeSubstring","setAddressSubstring","listingRoute","setListingRoute","setListingFields","description","bathrooms","property_type","tenure","on_road_parking","off_road_parking","balcony","primary_schools","secondary_schools","trains","evs","aiFields","setAiFields","setPostcodes","primaryData","setPrimaryData","secondaryData","setSecondaryData","setTopPrimaries","setTopSecondaries","setRestaurants","setGyms","setPubs","setSupermarkets","setEv","setCuisines","setTopRestaurants","setTopPubs","setMainGyms","setMainSupermarkets","setTubes","setTrains","setTrains1","aiSearch","setAiSearch","aiReady","setAiReady","searchGo","setSearchGo","getUserToken","getUser","loadPostcodeData","listingType","post","increaseUsageCount","modifiedData","request_type","setResultsToLocalStorage","token","loadPrimaryData","getPrimaries","walkDistanceKm20","R","toRad","PI","kmPerMinute","getNearbyPrimaries","nearbyPrimaries","filter","dLat","parseFloat","dLon","sin","cos","c","atan2","sqrt","distanceKm","distance_between","walkTimeMin","round","distancePercent","max_distance","school_type","within_catchment","additional_status","firstSchoolNames","loadSecondaryData","getSecondaries","getNearbySecondaries","nearbySecondaries","maxDistancePercent","minDistancePercent","min_distance","includes","loadRestaurantData","getData","walkDistanceKm15","getNearbyRestaurants","nearbyRestaurants","rating","topThreeRestaurants","restaurant","cuisine","restaurant_name","Set","countUniqueCuisines","prevState","loadFitnessData","getNearbyStudios","specificGyms","uniqueGyms","nearbyStudios","Lat","long","topThreeStudios","i","gym","gym_group","toLowerCase","has","push","add","loadSupermarketData","getNearbySupermatkets","specificSupermarkets","uniqueSupermarkets","nearbySupermarkets","distance","topThreeSupermarkets","supermarket","supermarket_brand","loadTubesData","getNearbyTubes","nearbyTubes","lat","station_name","loadEVdata","nearbyChargers","loadPubsData","getNearbyPubs","nearbyPubs","topThreePubs","pub","loadTrainsData","getNearbyTrains","nearbyTrains","column","status","removeItemFromStorage","removeItem","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","usage_stats","package","height","marginTop","borderBottom","textUnderlineOffset","fontWeight","listing_monthly_count","toUpperCase","replace","handleInsightClick","PropertyInsightsOverview","rows","handleCopyText","htmlContent","current","innerHTML","el","contentEditable","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","focus","execCommand","school","school_name","ofsted_results","train","line","station","parks_postcode","park_name0","distance0","park_name1","distance1","park_name2","distance2","ev_10_mins","ref","AIListingGenrator","SavedListings","TopProperties","listing","postcodeRoute"],"sourceRoot":""}