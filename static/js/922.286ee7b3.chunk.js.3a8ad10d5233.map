{"version":3,"file":"static/js/922.286ee7b3.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/NavBarRevised.js","components/tools/ProfileMobileSlider.js","components/tools/WhiteNavbar.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/EPCMatcher/LeadGenerator.js","components/whiteLabel/WhiteSidebar.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/metaProps.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list!</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport { CarouselItem } from 'react-bootstrap'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl,\n  savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites, handleSavedActionShow, setLatestFavourites, setSavedActionShow }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState()\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index]) {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setMatchingProperties({})\n    setExpandedItems(new Set())\n    setLoading(true)\n    setSearch(false)\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function for adding favourites based on relevant row\n  const addPartialFavourite = async (epcData) => {\n    if (isUserAuth()) {\n      const random12DigitNumber = Math.floor(Math.random() * 1e12)\n      const newFavourites = [{\n        'rightmove_id': random12DigitNumber.toString(),\n        'postcode': epcData.postcode,\n        'address': epcData.address,\n        'agent': '',\n        'type': '',\n        'addedOn': '',\n        'propertyType': '',\n        'price': null,\n        'bathrooms': null,\n        'bedrooms': null,\n        'let_available_date': null,\n        'date_added_db': null,\n        'url': '',\n        'current_epc': epcData.current_energy_efficiency,\n        'potential_epc': epcData.potential_energy_efficiency,\n        'action': 'Saved',\n        'added_revised': null,\n        'reduced_revised': null,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setExpandedItems(new Set())\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className='buttons'>\n                                  {savedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                    <div className='saved-message'>\n                                      <h3>❤️</h3>\n                                      <h3>Saved</h3>\n                                    </div>\n                                    :\n                                    archivedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                      <div className='saved-message'>\n                                        <h3>⭐️</h3>\n                                        <h3>Archived</h3>\n                                      </div>\n                                      :\n                                      <>\n                                        <div className='heart-icon' onClick={() => addPartialFavourite(item)} ></div>\n                                        <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                          {expandedItems.has(index) ? '-' : '+'}\n                                        </button>\n                                      </>\n                                  }\n                                </div>\n\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>❤️</h3>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>⭐️</h3>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n      <SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\n\nexport default ManualMatcher","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n  const [filteredMatchingProperties, setFilteredMatchingProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n  const [matchType, setMatchType] = useState('Matching')\n  const [expandedMultipleMatches, setExpandedMultpleMatches] = useState(new Set()) // State to keep track of expanded items\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            console.log('saved properties ->', savedProperties)\n            setArchivedProperties(archivedFavourites)\n            setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n\n          } else {\n            const allFavouriteIds = []\n            loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n\n          }\n\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        handleSavedActionShow()\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {  // Adjusted to take an array of IDs\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n        // Optionally, refresh data or update UI accordingly\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, favouriteIds, dateFilter) => {\n    setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, favouriteIds, dateFilter) => {\n    setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n    }\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    const days = dateFilter === '1day' ? 2 :\n      dateFilter === '2days' ? 3 :\n        dateFilter === '3days' ? 4 :\n          dateFilter === '7days' ? 8 :\n            dateFilter === '4weeks' ? 28 :\n              dateFilter === '8weeks' ? 56 :\n                dateFilter === '12weeks' ? 84 :\n                  dateFilter === '16weeks' ? 112 : 0\n    // dateFilter === 'all' ? 10000 : 0\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      let mostRecentDate\n      if (addedDate && reducedDate) {\n        mostRecentDate = addedDate > reducedDate ? addedDate : reducedDate\n      } else {\n        mostRecentDate = addedDate || reducedDate // Use the non-null date\n      }\n\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      const isWithin = isWithinLastDays(mostRecentDate, days)\n\n      return isWithin\n    })\n  }\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(multipleMatches, dateFilter)\n    setFilteredMatchingProperties(filtered)\n  }, [multipleMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    const pastDate = new Date()\n    pastDate.setDate(now.getDate() - days)\n    // console.log(`Comparing ${date} with ${pastDate}`)\n    return date >= pastDate\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  const toggleRowExpansion = (index) => {\n    setExpandedMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const addManualFavourite = async (matchingProperties, epcData, index) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.property_data.rightmove_id,\n        'postcode': matchingProperties.property_data.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.property_data.agent,\n        'type': matchingProperties.property_data.type,\n        'addedOn': matchingProperties.property_data.addedOn,\n        'propertyType': matchingProperties.property_data.propertyType,\n        'price': matchingProperties.property_data.price,\n        'bathrooms': matchingProperties.property_data.bathrooms,\n        'bedrooms': matchingProperties.property_data.bedrooms,\n        'let_available_date': matchingProperties.property_data.let_available_date,\n        'date_added_db': matchingProperties.property_data.date_added_db,\n        'url': matchingProperties.property_data.url,\n        'current_epc': matchingProperties.property_data.current_epc,\n        'potential_epc': matchingProperties.property_data.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.property_data.added_revised,\n        'reduced_revised': matchingProperties.property_data.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        toggleRowExpansion(index)\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n              <section className='property-finder'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Explore properties')} style={{ borderBottom: leadGenSection === 'Explore properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore properties' ? '700' : '400' }}>Explore properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Archived properties')} style={{ borderBottom: leadGenSection === 'Archived properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived properties' ? '700' : '400' }}>Archived properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                  </div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n\n\n                </div>\n                <hr className='title-line' />\n\n                <div className='lead-generator'>\n\n                  <div className='property-results'>\n                    {leadGenSection === 'Home' ?\n                      <>\n                        <div className='lead-gen-inputs'>\n                          <h3 className='sub-title'>Set your search criteria</h3>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Postcode(s)</h3>\n                              <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                              <input\n                                type=\"text\"\n                                value={leadGenDetails.postcode}\n                                onChange={inputPostcode}\n                                placeholder=\"Enter postcode...\"\n                              />\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Channel</h3>\n                              <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                <option>Lettings</option>\n                                <option>Sales</option>\n                                <option>Both</option>\n\n                              </select>\n                            </div>\n                          </div>\n                          <div>\n\n                            <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                              <h3 className='sub-title'>Add some more detail</h3>\n\n                              {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                            </div>\n                            {expand ?\n                              <>\n                                <div className='single-title-double'>\n                                  <h3>Bedrooms</h3>\n                                  <div className='double-dropdowns'>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_min || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No min</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                    </select>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_max || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No max</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                      <option value=\"7\">7</option>\n                                    </select>\n                                  </div>\n\n                                </div>\n                                {\n                                  leadGenDetails.channel === 'Lettings' ?\n                                    <>\n                                      <div className='single-title-double'>\n                                        <h3>Price</h3>\n                                        <div className='double-dropdowns'>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_min || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                          >\n                                            <option value={0}>No min</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_max || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                          >\n                                            <option value={10000000}>No max</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n\n                                        </div>\n\n                                      </div>\n                                      <div className='single-input-block'>\n                                        <div className='input-block large'>\n                                          <h3>Furnishing status</h3>\n                                          <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                            <option>Either furnished or unfurnished</option>\n                                            <option>Furnished</option>\n                                            <option>Unfurnished</option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                    </>\n                                    :\n                                    leadGenDetails.channel === 'Sales' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                            >\n                                              <option value={100000000}>No max</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Both' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Rental price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                              >\n                                                <option value={10000000}>No max</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                          <div className='single-input-block'>\n                                            <div className='input-block large'>\n                                              <h3>Rental furnishing status</h3>\n                                              <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                <option>Either furnished or unfurnished</option>\n                                                <option>Furnished</option>\n                                                <option>Unfurnished</option>\n                                              </select>\n                                            </div>\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Sales price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n\n\n                                        : ''}\n\n                              </>\n                              : ''}\n                          </div>\n                          <div className='lead-gen-save'>\n                            <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                          </div>\n                        </div>\n\n                      </>\n                      :\n                      leadGenSection === 'Explore properties' && !rentalLoading ?\n                        <>\n                          <div className='results-block'>\n                            <div className=\"property-insight-nav\">\n                              <div className=\"property-insight-buttons\">\n                                <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                              </div>\n                              <div className='save-section'>\n                                <div className=\"print-icon\"></div>\n\n                                <h3 onClick={addFavourite}>Save selection</h3>\n                              </div>\n                            </div>\n                            {channelView === 'Lettings' ?\n                              <>\n                                <div className='filter-section'>\n                                  <h3>Filter properties</h3>\n                                  <select\n                                    className='dropdown'\n                                    value={dateFilter}\n                                    onChange={(e) => setDateFilter(e.target.value)}\n                                  >\n                                    <option value=\"1day\">Updated in the last 24 hours</option>\n                                    <option value=\"2days\">Updated in the last 48 hours</option>\n                                    <option value=\"3days\">Updated in the last 72 hours</option>\n                                    <option value=\"7days\">Updated in the last week</option>\n                                    <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                    <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                    <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                    <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                    <option value=\"all\">All properties</option>\n                                  </select>\n                                </div>\n                                <div className='matching-status'>\n                                  <h3 className='matching-pill' onClick={() => setMatchType('Matching')} style={{ color: matchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: matchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                  <h3 className='matching-pill' onClick={() => setMatchType('Multiple matches')} style={{ color: matchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                  {/* <h3 className='matching-pill' onClick={() => setMatchType('No matches')} style={{ color: matchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3> */}\n                                </div>\n\n                                {matchType === 'Matching' ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                      <div className='select-all-box'>\n                                        {/* <h5>Select all</h5> */}\n                                        <div className='custom-checkbox'>\n                                          <input\n                                            className='checkbox'\n                                            type=\"checkbox\"\n                                            checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                            onChange={handleSelectAllChange}\n                                          />\n                                          <label className='label'>\n\n                                          </label>\n\n                                        </div>\n                                      </div>\n                                    </div>\n\n                                    <div className='results-headers'>\n                                      <h5 id='column1' className='column'>#</h5>\n                                      <div id='column2' className='column' >\n                                        <h5>Address</h5>\n                                      </div>\n                                      <div id='column3' className='column' onClick={sortByPostcode}>\n                                        <h5>Postcode</h5>\n                                        <h5>⬇️</h5>\n                                      </div>\n                                      <div id='column4' className='column'>\n                                        <h5>Added</h5>\n                                      </div>\n                                      <div id='column5' className='column'>\n                                        <h5>Reduced</h5>\n                                      </div>\n                                      <div id='column6' className='column'>\n                                        <h5>Property type</h5>\n                                      </div>\n                                      <div id='column7' className='column' onClick={sortByPrice}>\n                                        <h5>Price</h5>\n                                        <h5>⬇️</h5>\n                                      </div>\n                                      <div id='column8' className='column'>\n                                        <h5>Bedrooms</h5>\n                                      </div>\n                                      <div id='column9' className='column'>\n                                        <h5>Agent</h5>\n                                      </div>\n                                      <div id='column10' className='column'>\n                                        <h5>Select</h5>\n                                      </div>\n                                    </div>\n                                    <hr className='property-divider' />\n                                    <div className='results-details'>\n                                      {filteredProperties ? filteredProperties.map((item, index) => {\n                                        const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                        return (\n                                          <>\n                                            <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                              <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{index + 1}</h5>\n                                              </div>\n                                              <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.epc_data_list[0].address}</h5>\n                                              </div>\n                                              <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.postcode}</h5>\n                                              </div>\n                                              <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                              </div>\n                                              <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                              </div>\n                                              <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.propertyType}</h5>\n                                              </div>\n                                              <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.price}</h5>\n                                              </div>\n                                              <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.bedrooms}</h5>\n                                              </div>\n                                              <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                <h5>{item.property_data.agent}</h5>\n                                              </div>\n                                              <div className='column' id='column10'>\n                                                {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                  <div className='saved-message'>\n                                                    <h3>❤️</h3>\n                                                    <h3>Saved</h3>\n                                                  </div>\n                                                  :\n                                                  archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                    <div className='saved-message'>\n                                                      <h3>⭐️</h3>\n                                                      <h3>Archived</h3>\n                                                    </div>\n                                                    :\n                                                    <div className='custom-checkbox'>\n\n                                                      <input\n                                                        className='checkbox'\n                                                        type=\"checkbox\"\n                                                        checked={checkboxStatus[index]}\n                                                        onChange={(e) => handleCheckboxChange(e, index)}\n                                                      />\n                                                      <label className='label'>\n\n                                                      </label>\n                                                    </div>\n                                                }\n                                              </div>\n                                            </div>\n                                            <hr className='property-divider' />\n\n                                          </>\n                                        )\n                                      })\n                                        : ' '}\n                                    </div>\n\n\n                                  </>\n                                  : matchType === 'Multiple matches' ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredMatchingProperties.length} rental properties that we do not have an exact match for</h3>\n                                      </div>\n                                      <div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column' >\n                                          <h5>Listed address</h5>\n                                        </div>\n                                        <div id='column3' className='column' onClick={sortByPostcode}>\n                                          <h5>Postcode</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column' onClick={sortByPrice}>\n                                          <h5>Price</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Action</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details'>\n                                        {filteredMatchingProperties ? filteredMatchingProperties.map((item, index) => {\n                                          const isExpanded = expandedMultipleMatches.has(index)\n                                          return (\n                                            <>\n                                              <div className={'results-content'}>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.displayAddress}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.propertyType}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                    <div className='saved-message'>\n                                                      <h3>❤️</h3>\n                                                      <h3>Saved</h3>\n                                                    </div>\n                                                    :\n                                                    archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>⭐️</h3>\n                                                        <h3>Archived</h3>\n                                                      </div>\n                                                      :\n\n                                                      <button className='expansion' onClick={() => toggleRowExpansion(index)}>\n                                                        {expandedMultipleMatches.has(index) ? '-' : '+'}\n                                                      </button>}\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n                                              {isExpanded && (\n                                                <>\n                                                  <h3 className='matching-title'>Matching properties</h3>\n                                                  <div className='expanded-section-titles'>\n                                                    <p className='column' id='column1'>#</p>\n                                                    <p className='column' id='column2'>Address</p>\n                                                    <p className='column' id='column3'>Postcode</p>\n                                                    <p className='column' id='column4'>Current EPC</p>\n                                                    <p className='column' id='column5'>Potential EPC</p>\n                                                    <p className='column' id='column6'>Floor</p>\n                                                    <p className='column' id='column7'>Size</p>\n                                                    <p className='column' id='column8'></p>\n                                                  </div>\n\n                                                  {item.epc_data_list.map((epcItem, epcIndex) => (\n\n\n                                                    <div className='expanded-content' key={epcIndex} >\n                                                      <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                      <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                      <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                      <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                      <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                      <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                      <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                      <div className='column' id='column8' >\n                                                        <div className='heart-icon' onClick={() => addManualFavourite(item, epcItem, index)} ></div>\n                                                      </div>\n\n                                                    </div>\n                                                  ))}\n                                                </>\n\n\n\n\n                                              )}\n\n\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n\n                                    </>\n\n                                  // : matchType === 'No matches' ?\n                                  //   <>\n                                  //     <div className='title-section'>\n                                  //       <h3 className='sub-title'>There are {noMatches.length} rental properties that we do not have any match for</h3>\n                                  //     </div>\n                                  //     <div className='results-headers'>\n                                  //       <h5 id='column1' className='column'>#</h5>\n                                  //       <div id='column2' className='column' >\n                                  //         <h5>Listed address</h5>\n                                  //       </div>\n                                  //       <div id='column3' className='column' onClick={sortByPostcode}>\n                                  //         <h5>Postcode</h5>\n                                  //         <h5>⬇️</h5>\n                                  //       </div>\n                                  //       <div id='column4' className='column'>\n                                  //         <h5>Added</h5>\n                                  //       </div>\n                                  //       <div id='column5' className='column'>\n                                  //         <h5>Reduced</h5>\n                                  //       </div>\n                                  //       <div id='column6' className='column'>\n                                  //         <h5>Property type</h5>\n                                  //       </div>\n                                  //       <div id='column7' className='column' onClick={sortByPrice}>\n                                  //         <h5>Price</h5>\n                                  //         <h5>⬇️</h5>\n                                  //       </div>\n                                  //       <div id='column8' className='column'>\n                                  //         <h5>Bedrooms</h5>\n                                  //       </div>\n                                  //       <div id='column9' className='column'>\n                                  //         <h5>Agent</h5>\n                                  //       </div>\n                                  //       <div id='column10' className='column'>\n                                  //         <h5>Select</h5>\n                                  //       </div>\n                                  //     </div>\n                                  //     <hr className='property-divider' />\n                                  //     <div className='results-details'>\n                                  //       {noMatches ? noMatches.map((item, index) => {\n                                  //         const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                  //         return (\n                                  //           <>\n                                  //             <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                  //               <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{index + 1}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.displayAddress}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.postcode}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.propertyType}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.price}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.bedrooms}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                  //                 <h5>{item.property_data.agent}</h5>\n                                  //               </div>\n                                  //               <div className='column' id='column10'>\n                                  //                 {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                  //                   <div className='saved-message'>\n                                  //                     <h3>❤️</h3>\n                                  //                     <h3>Saved</h3>\n                                  //                   </div>\n                                  //                   :\n                                  //                   archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                  //                     <div className='saved-message'>\n                                  //                       <h3>⭐️</h3>\n                                  //                       <h3>Archived</h3>\n                                  //                     </div>\n                                  //                     :\n\n                                  //                     ''\n                                  //                 }\n                                  //               </div>\n                                  //             </div>\n                                  //             <hr className='property-divider' />\n\n                                  //           </>\n                                  //         )\n                                  //       })\n                                  //         : ' '}\n                                  //     </div>\n\n                                  //   </>\n\n                                    : ''\n                                }\n\n\n                              </>\n                              : channelView === 'Sales' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All properties</option>\n                                    </select>\n                                  </div>\n                                  {salesLoading ?\n                                    <div className='property-table-loading'>\n                                      <Loading />\n                                    </div>\n                                    : !salesLoading ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n                                          <div className='select-all-box'>\n                                            {/* <h5>Select all</h5> */}\n                                            <div className='custom-checkbox'>\n                                              <input\n                                                className='checkbox'\n                                                type=\"checkbox\"\n                                                checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                onChange={handleSelectAllSalesChange}\n                                              />\n                                              <label className='label'>\n\n                                              </label>\n\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details'>\n                                          {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                            const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.epc_data_list[0].address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n                                                        <div className='custom-checkbox'>\n\n                                                          <input\n                                                            className='checkbox'\n                                                            type=\"checkbox\"\n                                                            checked={salesCheckboxStatus[index]}\n                                                            onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                          />\n                                                          <label className='label'>\n\n                                                          </label>\n                                                        </div>\n                                                    }\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n\n\n                                      </>\n                                      : ''}\n                                </>\n                                :\n\n                                ''}\n                          </div>\n                        </>\n                        : leadGenSection === 'Explore properties' && rentalLoading ?\n                          <div className='property-table-loading'>\n                            <Loading />\n                          </div>\n                          : leadGenSection === 'Saved properties' ?\n                            <>\n                              <div className='results-block'>\n                                {savedProperties && savedProperties.length > 0 ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                      {userData && userData.epc_favourites && (\n                                        <>\n                                          <CSVLink\n                                            data={csvData}\n                                            className='export'\n                                            filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                                            style={{ textDecoration: 'none' }}\n                                          >\n                                            <div className='header-cta' onClick={() => archiveFavourite(userData.epc_favourites.map(fav => fav.rightmove_id))}>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        </>\n                                      )}\n                                    </div><div className='results-headers'>\n                                      <h5 id='column1' className='column'>#</h5>\n                                      <div id='column2' className='column'>\n                                        <h5>Address</h5>\n                                      </div>\n                                      <div id='column3' className='column'>\n                                        <h5>Postcode</h5>\n                                      </div>\n                                      <div id='column4' className='column'>\n                                        <h5>Added</h5>\n                                      </div>\n                                      <div id='column5' className='column'>\n                                        <h5>Reduced</h5>\n                                      </div>\n                                      <div id='column6' className='column'>\n                                        <h5>Channel</h5>\n                                      </div>\n                                      <div id='column7' className='column'>\n                                        <h5>Price</h5>\n                                      </div>\n                                      <div id='column8' className='column'>\n                                        <h5>Bedrooms</h5>\n                                      </div>\n                                      <div id='column9' className='column'>\n                                        <h5>Agent</h5>\n                                      </div>\n                                      <div id='column10' className='column'>\n                                        <h5></h5>\n                                      </div>\n                                    </div>\n                                    <hr className='property-divider' />\n                                    <div className='saved-properties'>\n\n                                      <div className='results-details'>\n                                        {savedProperties ? savedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  <button className='minus' onClick={() => deleteFavourite(item.rightmove_id)}>-</button>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n\n                                          : ' '}\n                                      </div>\n                                    </div>\n\n                                  </>\n                                  : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                }\n                              </div>\n\n\n                            </>\n                            : leadGenSection === 'Archived properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {archivedProperties && archivedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n\n\n                                      </div><div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details archive'>\n                                        {archivedProperties ? archivedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.property_type}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              : leadGenSection === 'Manual matcher' ?\n                                <ManualMatcher\n                                  increaseUsageCount={increaseUsageCount}\n                                  setErrors={setErrors}\n                                  userData={userData}\n                                  loadUserData={loadUserData}\n                                  savedProperties={savedProperties}\n                                  archivedProperties={archivedProperties}\n                                  handleVisitUrl={handleVisitUrl}\n                                  savedActionShow={savedActionShow}\n                                  setSavedActionShow={setSavedActionShow}\n                                  handleSavedActionClose={handleSavedActionClose}\n                                  setLeadGenSection={setLeadGenSection}\n                                  latestFavourites={latestFavourites}\n                                  handleSavedActionShow={handleSavedActionShow}\n                                  setLatestFavourites={setLatestFavourites}\n                                />\n                                :\n                                ''\n                    }\n                  </div>\n                </div>\n\n\n              </section>\n\n\n            </>\n\n          </section>\n        </section>\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\nimport axios from 'axios'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // userdata state\n  const [userData, setUserData] = useState()\n\n  // errors\n  const [errors, setErrors] = useState()\n\n\n  const [activeItem, setActiveItem] = useState('')\n\n  // state for changing the view to insights results\n  const [insightView, setInsightView] = useState('Search')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (activeItem === 'Home') {\n        navigate('/agents/profile')\n      } else if (activeItem === 'Saved items') {\n        navigate('/agents/favourites')\n      }\n      // ... other conditions\n    }, 100)\n  }, [activeItem])\n\n  // useEffect(() => {\n  //   loadUserData()\n  // }, [])\n\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo-section'>\n          <div className='logo' onClick={() => navigate('/')}>\n            {/* <h2 onClick={() => navigate('/')}>Wittle</h2> */}\n          </div>\n        </div>\n\n\n        <div className='profile-buttons'>\n          <div className={`profile-button-title ${activeItem === 'Home' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Home')\n              setTimeout(() => {\n                setProfileDetail('Home')\n                setProfileContent('Home')\n              }, 0)\n            }}>\n            <div className='icon' id='home-icon' ></div>\n            <h2>Wittle home</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Listing generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Listing generator')\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>\n            <div className='icon' id='listing-icon'></div>\n            <h2>Listing generator</h2>\n          </div>\n          {/* <div className={`profile-button-title ${activeItem === 'Lead generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator')\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div> */}\n          <div className={`profile-button-title ${activeItem === 'Lead generator test' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator test')\n              setProfileContent('Lead generator test')\n              setProfileDetail('Lead generator test')\n              navigate('/agents/lead-gen')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'How to guide' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('How to guide')\n              setProfileContent('How to guide')\n              setProfileDetail('How to guide')\n              navigate('/agents/guide')\n            }}>\n            <div className='icon' id='help-icon'></div>\n            <h2>How-to guide</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Account' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Account')\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n            }}>\n            <div className='icon' id='account-icon'></div>\n            <h2>Account details</h2>\n          </div>\n\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","_Fragment","_jsxs","style","backgroundColor","color","onClick","textDecoration","textUnderlineOffset","homeSelect","searchSelect","lifestyleSelect","accountSelect","fontWeight","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","Modal","show","onHide","backdrop","Body","closeAndLeave","increaseUsageCount","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","handleSavedActionShow","setLatestFavourites","setSavedActionShow","loading","setLoading","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","some","newFavourites","Math","floor","random","toString","epcData","response","headers","Authorization","getAccessToken","addPartialFavourite","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","rightmove_id","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","addFavourite","SavedProperties","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","setUserData","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","variableSide","setVariableSide","favouritedProperties","setFavouritedProperties","setSavedProperties","setArchivedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedRows","setSelectedRows","selectedSalesRows","setSelectedSalesRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","favouriteIds","setFavouriteIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","filteredMatchingProperties","setFilteredMatchingProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","matchType","setMatchType","expandedMultipleMatches","setExpandedMultpleMatches","getUserToken","lead_gen_details","filteredFavourites","epc_favourites","fav","action","archivedFavourites","newFavouriteIds","dataCsv","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","allFavouriteIds","getUser","useEffect","deselectAllRows","deselectAllSalesRows","addressPostcode","property_type","date_added","postcodeValue","bedroomsMin","bedroomsMax","priceMin","priceMax","additionalRental","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","open","salesPrices","rentalPrices","filterPropertiesByDate","properties","days","addedDate","parseDate","property_data","reducedDate","mostRecentDate","isWithinLastDays","filtered","dateStr","day","month","year","split","date","now","pastDate","setDate","getDate","sortByPrice","sorted","priceA","parseInt","priceB","salesSorted","multipleRentalSorted","sortByPostcode","localeCompare","status","message","toggleRowExpansion","prevExpandedRows","newExpandedRows","WhiteNavbar","NavBarRevised","WhiteSidebar","borderBottom","prevData","NumericFormat","displayType","thousandSeparator","prefix","put","CSVLink","filename","getCurrentDate","getFullYear","String","getMonth","padStart","favourite_ids","archiveFavourite","deleteFavourite","ManualMatcher","existingFavouriteIds","row","checked","every","Boolean","selectAllRows","existingCombinations","allRows","isRowSelected","selectedRow","handleCheckboxChange","updatedStatus","selectedProperty","prevRows","isExpanded","epcItem","epcIndex","addManualFavourite","selectAllSalesRows","salesCheckboxChange","activeItem","setActiveItem","insightView","setInsightView","setTimeout","module","exports","Object","defineProperty","obj","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","_react2","__esModule","default","_core","_metaProps","CSVDownload","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","subClass","superClass","create","constructor","setPrototypeOf","_inherits","buildURI","apply","undefined","arguments","_props","separator","enclosingCharacter","uFEFF","specs","page","Component","defaultProps","assign","propTypes","_extends","source","hasOwnProperty","bind","event","isAsync","navigator","msSaveOrOpenBlob","preventDefault","blob","Blob","toCSV","msSaveBlob","_this2","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","rest","keys","indexOf","_objectWithoutProperties","href","createElement","download","ref","link","handleClick","_typeof","Symbol","iterator","_toConsumableArray","arr","arr2","from","isSafari","test","userAgent","isJsons","array","isArrays","jsonsHeaders","json","reduce","concat","jsons2arrays","jsons","headerLabels","headerKeys","header","label","object","getHeaderValue","foundValue","o","p","splice","elementOrEmpty","element","joiner","column","join","arrays2csv","jsons2csv","string2csv","csv","dataURI","URL","webkitURL","createObjectURL","_Download2","_interopRequireDefault","_Link2","PropsNotForwarded","_propTypes","oneOfType","string","func","isRequired","bool"],"sourceRoot":""}