{"version":3,"file":"static/js/962.28211ee3.chunk.js","mappings":"wMA2IA,UA9HgB,KAGd,MAAMA,GAAWC,EAAAA,EAAAA,OAGVC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,mBAC9CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,mBAG5CG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAG1CK,EAAUC,IAAeN,EAAAA,EAAAA,aAGzBO,EAAQC,IAAaR,EAAAA,EAAAA,YAiC5B,OAJAS,EAAAA,EAAAA,YAAU,MAxBJC,EAAAA,EAAAA,MACcC,WACd,IACE,MAAM,KAAEC,SAAeC,EAAAA,GAAAA,IAAW,sBAAoBC,EAAAA,EAAAA,SAAmB,CACvEC,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAG7BC,QAAQC,IAAI,eAAgBP,GAC5BN,EAAYM,EAId,CAHE,MAAOQ,GACPZ,GAAU,GACVU,QAAQC,IAAIC,EACd,GAEFC,IAEAzB,EAAS,kBACTsB,QAAQC,IAAI,cAOA,GACb,KAID,+BACE,qBAASG,UAAU,qBAAoB,WACrC,gBAAKA,UAAU,cAAa,UAC1B,SAAC,IAAW,CACVC,aAAa,eAGjB,gBAAKD,UAAU,aAAY,UACzB,SAAC,IAAa,CACZvB,kBAAmBA,EACnBD,eAAgBA,EAChBG,cAAeA,EACfC,iBAAkBA,OAGtB,SAAC,IAAY,CACXA,iBAAkBA,EAClBC,aAAcA,EACdJ,kBAAmBA,EACnBK,gBAAiBA,KAGnB,qBAASkB,UAAU,kBAAiB,WAClC,gBAAKA,UAAU,gBAAe,UAC5B,2DAEDjB,GACC,iBAAKiB,UAAU,kBAAiB,WAC9B,eAAIA,UAAU,YAAW,2BACzB,iBAAKA,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,qBACrB,gBAAIA,UAAU,SAAQ,UAAEjB,EAASmB,WAAU,IAAGnB,EAASoB,iBAEzD,iBAAKH,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,yBACrB,eAAIA,UAAU,SAAQ,SAAEjB,EAASqB,eAEnC,iBAAKJ,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,sBACrB,eAAIA,UAAU,SAAQ,SAAEjB,EAASsB,YAEnC,iBAAKL,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,wBACrB,eAAIA,UAAU,SAAQ,SAAEjB,EAASuB,YAAY,GAAGC,cAGlD,eAAIP,UAAU,mBAAkB,4BAChC,iBAAKA,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,oDACrB,eAAIA,UAAU,SAAQ,SAAEjB,EAASuB,YAAY,GAAGE,wBAElD,iBAAKR,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,iDACrB,eAAIA,UAAU,SAAQ,SAAsC,cAApCjB,EAASuB,YAAY,GAAGC,QAA0B,WAAiD,mBAApCxB,EAASuB,YAAY,GAAGC,QAA+B,IAAMxB,EAASuB,YAAY,GAAGE,kBAAwD,UAApCzB,EAASuB,YAAY,GAAGC,QAAsB,GAAKxB,EAASuB,YAAY,GAAGE,kBAAoB,SAEjS,iBAAKR,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,oDACrB,eAAIA,UAAU,SAAQ,SAAEjB,EAASuB,YAAY,GAAGG,4BAElD,iBAAKT,UAAU,aAAY,WACzB,eAAIA,UAAU,QAAO,iDACrB,eAAIA,UAAU,SAAQ,SAAsC,cAApCjB,EAASuB,YAAY,GAAGC,QAA0B,WAAiD,mBAApCxB,EAASuB,YAAY,GAAGC,QAA+B,IAAMxB,EAASuB,YAAY,GAAGG,sBAA4D,UAApC1B,EAASuB,YAAY,GAAGC,QAAsB,GAAKxB,EAASuB,YAAY,GAAGG,sBAAwB,WAIzS,UAMP,C","sources":["components/whiteLabel/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport NavBarRevised from '../tools/NavBarRevised'\nimport WhiteNavbar from '../tools/WhiteNavbar'\nimport WhiteSidebar from './WhiteSidebar'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\n\n\n\n\n\n\nconst Account = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('My saved items')\n  const [profileDetail, setProfileDetail] = useState('My saved items')  \n  \n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n  \n  // set state for user data\n  const [userData, setUserData] = useState() \n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n    \n  \n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n        />\n\n        <section className='account-section'>\n          <div className='title-section'>\n            <h3>ðŸ’» Account details</h3>\n          </div>\n          {userData ? \n            <div className='details-section'>\n              <h3 className='sub-title'>Account info</h3>\n              <div className='info-block'>\n                <h5 className='title'>Name: </h5>\n                <h5 className='detail'>{userData.first_name} {userData.last_name}</h5>\n              </div>\n              <div className='info-block'>\n                <h5 className='title'>Username: </h5>\n                <h5 className='detail'>{userData.username}</h5>\n              </div>\n              <div className='info-block'>\n                <h5 className='title'>Email: </h5>\n                <h5 className='detail'>{userData.email}</h5>\n              </div>\n              <div className='info-block'>\n                <h5 className='title'>Package: </h5>\n                <h5 className='detail'>{userData.usage_stats[0].package}</h5>\n              </div>\n\n              <h3 className='sub-title second'>Account stats</h3>\n              <div className='info-block'>\n                <h5 className='title'>Property finder searches this month: </h5>\n                <h5 className='detail'>{userData.usage_stats[0].epc_monthly_count}</h5>\n              </div>\n              <div className='info-block'>\n                <h5 className='title'>Searches until next product tier: </h5>\n                <h5 className='detail'>{userData.usage_stats[0].package === 'Unlimited' ? 'No limit' : userData.usage_stats[0].package === 'Advanced Pilot' ? 100 - userData.usage_stats[0].epc_monthly_count : userData.usage_stats[0].package === 'Basic' ? 10 - userData.usage_stats[0].epc_monthly_count : '' }</h5>\n              </div>\n              <div className='info-block'>\n                <h5 className='title'>Listing related searches this month: </h5>\n                <h5 className='detail'>{userData.usage_stats[0].listing_monthly_count}</h5>\n              </div>\n              <div className='info-block'>\n                <h5 className='title'>Searches until next product tier: </h5>\n                <h5 className='detail'>{userData.usage_stats[0].package === 'Unlimited' ? 'No limit' : userData.usage_stats[0].package === 'Advanced Pilot' ? 100 - userData.usage_stats[0].listing_monthly_count : userData.usage_stats[0].package === 'Basic' ? 10 - userData.usage_stats[0].listing_monthly_count : '' }</h5>\n              </div>\n            </div>\n\n            : '' }\n\n        </section>\n\n      </section>\n    \n    </>\n  )\n}\n\nexport default Account"],"names":["navigate","useNavigate","profileContent","setProfileContent","useState","profileDetail","setProfileDetail","variableSide","setVariableSide","userData","setUserData","errors","setErrors","useEffect","isUserAuth","async","data","axios","getUserToken","headers","Authorization","getAccessToken","console","log","error","getUser","className","navbarColour","first_name","last_name","username","email","usage_stats","package","epc_monthly_count","listing_monthly_count"],"sourceRoot":""}