{"version":3,"file":"static/js/738.c3614cb2.chunk.js","mappings":"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","sources":["components/tools/ProfileMobileSlider.js","components/whiteLabel/comparisonSection/WhiteComparison.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\n\n\n\n\nconst WhiteComparison = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // setting states for property comparison\n  const [property1, setProperty1] = useState()\n  const [property2, setProperty2] = useState()\n\n  // state for user data\n  const [userData, setUserData] = useState()\n  const [propertyList, setPropertyList] = useState()\n\n\n  // define the states to capture the scores of the compared propeerties\n  const [property1Numbers, setProperty1Numbers] = useState([])\n  const [property2Numbers, setProperty2Numbers] = useState([])\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')  \n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n\n  // state to capture the values of the two proeprties that are being compared\n  const [propertyColours, setPropertyColours] = useState({\n    property1_total: '',\n    property2_total: '',\n    property1_restaurant: '',\n    property2_reestaurant: '',\n    property1_pub: '',\n    property2_pub: '',\n    property1_cafe: '',\n    property2_cafe: '',\n    property1_takeaway: '',\n    property2_takeaway: '',\n    property1_tube: '',\n    property2_tube: '',\n    property1_train: '',\n    property2_train: '',\n    property1_supermarket: '',\n    property2_supermarket: '',\n    property1_gym: '',\n    property2_gym: '',\n    property1_park: '',\n    property2_park: '',\n    property1_primary: '',\n    property2_primary: '',\n    property1_secondary: '',\n    property2_secondary: '',\n  })\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      try {\n        const getUser = async () => {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setPropertyList(data.white_properties)\n        }\n        getUser()\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n    console.log('carrying out userData load')\n  }, [])\n\n  // update values for first property comparison\n  const updateComparison1 = (e) => {\n    setProperty1(e.target.value)\n    console.log('property 1 value ->', e.target.value)\n  }\n\n  // function for loading the first property data\n  const loadProperty1 =  () => {\n    try {\n      const getPostcode = async () => {\n        const { data } = await axios.get(`/api/postcodes/${property1}`)\n        console.log('property 1 ->', data[0])\n        setProperty1Numbers(data[0])\n      }\n      getPostcode()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  // load function\n  useEffect(() => {\n    if (property1) {\n      loadProperty1()\n    }\n  }, [property1])\n\n\n  // update values for second property comparison\n  const updateComparison2 = (e) => {\n    setProperty2(e.target.value)\n    console.log('property 2 value ->', e.target.value)\n  }\n\n  // function for loading the first property data\n  const loadProperty2 =  () => {\n    try {\n      const getPostcode = async () => {\n        const { data } = await axios.get(`/api/postcodes/${property2}`)\n        console.log('property 2 ->', data[0])\n        setProperty2Numbers(data[0])\n      }\n      getPostcode()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  // load function\n  useEffect(() => {\n    if (property2) {\n      loadProperty2()\n    }\n  }, [property2])\n\n  return (\n    <>\n      {userData ?\n        <section className='agent-profile-page'>\n          <div className='desktop-nav'>\n            <WhiteNavbar\n              navbarColour='#FDF7F0'\n            />\n          </div>\n          <div className='mobile-nav'>\n            <NavBarRevised\n              setProfileContent={setProfileContent}\n              profileContent={profileContent}\n              profileDetail={profileDetail}\n              setProfileDetail={setProfileDetail}\n            />\n          </div>\n          <WhiteSidebar \n            setProfileDetail={setProfileDetail}\n            variableSide={variableSide} \n            setProfileContent={setProfileContent} \n            setVariableSide={setVariableSide}\n          />    \n          <div className='comparison-grid'>\n            <div className='comparison-title'>\n              <h1>Property 1</h1>\n              <h1 className='desktop-results'>Results</h1>\n              <h1>Property 2</h1>\n            </div>\n            <div className='comparison-subtitle'>\n              <select className='comparison-dropdown' onChange={updateComparison1}>\n                <option>Select property</option>\n                {propertyList.map((property, index) => <option key={index} value={property.postcode}>{property.name}</option>)}\n              </select>\n              <select className='comparison-dropdown' onChange={updateComparison2}>\n                <option>Select property</option>\n                {propertyList.map((property, index) => <option key={index} value={property.postcode}>{property.name}</option>)}\n              </select>\n            </div>\n            {/* {property1 || property2 ?\n        <> */}\n            {/* create section to be used on mobile */}\n            <div className='comparison-properties-mobile'>\n              {userData ? userData.white_properties.filter(property => property.postcode === property1).map((property, index) => {\n                return (\n                  <div className='comparison-property' key={index} onClick={() => navigate(`/agents/property/${property.postcode}`)}>\n                    <>\n                      <div className='comparison-image' style={{ backgroundImage: `url('${property.image}')` }}></div>\n                      <div className='comparison-content'>\n                        <h4>{property.name}</h4>\n                        <h5><NumericFormat value={property.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> offers over</h5>\n                        <h5>Bedrooms: {property.bedrooms}</h5>\n                        <h5>Type: {property.type}</h5>\n                      </div>\n                    </>\n                  </div>\n                )\n              }) : ''}\n              {userData ? userData.white_properties.filter(property => property.postcode === property2).map((property, index) => {\n                return (\n                  <div className='comparison-property' key={index} onClick={() => navigate(`/agents/property/${property.postcode}`)}>\n                    <>\n                      <div className='comparison-image' style={{ backgroundImage: `url('${property.image}')` }}></div>\n                      <div className='comparison-content'>\n                        <h4>{property.name}</h4>\n                        <h5><NumericFormat value={property.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> offers over</h5>\n                        <h5>Bedrooms: {property.bedrooms}</h5>\n                        <h5>Type: {property.type}</h5>\n                      </div>\n                    </>\n                  </div>\n                )\n              }) : ''}\n            </div>\n\n            {/* Main section used on desktop */}\n            {/* Property on the left hand side of the page */}\n            <div className='comparison-body' style={{ justifyContent: !property1 ? 'center' : 'inherit' }}>\n              {userData ? userData.white_properties.filter(property => property.postcode === property1).map((property, index) => {\n                return (\n                  <div className='comparison-property' key={index} onClick={() => navigate(`/agents/property/${property.postcode}`)}>\n                    <>\n                      <div className='comparison-image' style={{ backgroundImage: `url('${property.image}')` }}></div>\n                      <div className='comparison-content'>\n                        <h4>{property.name}</h4>\n                        <h5><NumericFormat value={property.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> offers over</h5>\n                        <h5>Bedrooms: {property.bedrooms}</h5>\n                        <h5>Type: {property.type}</h5>\n                      </div>\n                    </>\n                  </div>\n                )\n              }) : ''}\n              <div className='comparison-results'>\n\n                {/* Secondary schools */}\n                <div className='result-title'>\n                  <h5>Secondary schools</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.secondaries && property1Numbers.secondaries.total_score_percentile && (\n                      [...Array(100 - Math.round((property1Numbers.secondaries.total_score_percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.secondaries && property1Numbers.secondaries.total_score_percentile ? parseInt((property1Numbers.secondaries.total_score_percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.secondaries && property1Numbers.secondaries.total_score_percentile && (\n                      [...Array(parseInt((property1Numbers.secondaries.total_score_percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.secondaries && property1Numbers.secondaries.total_score_percentile) ?  parseInt(property1Numbers.secondaries.total_score_percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.secondaries && property2Numbers.secondaries.total_score_percentile) ? parseInt(property2Numbers.secondaries.total_score_percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.secondaries && property1Numbers.secondaries.total_score_percentile &&  (\n                      [...Array(parseInt(property2Numbers.secondaries.total_score_percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.secondaries && property1Numbers.secondaries.total_score_percentile) ?  parseInt(property1Numbers.secondaries.total_score_percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.secondaries && property2Numbers.secondaries.total_score_percentile) ? parseInt(property2Numbers.secondaries.total_score_percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.secondaries && property2Numbers.secondaries.total_score_percentile ? Math.round(property2Numbers.secondaries.total_score_percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n\n                {/* Green space */}\n                <div className='result-title'>\n                  <h5>Green space</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.parks_lsoa && property1Numbers.parks_lsoa[0] && (\n                      [...Array(100 - property1Numbers.parks_lsoa[0].london_percentile)].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.parks_lsoa && property1Numbers.parks_lsoa[0] ? (property1Numbers.parks_lsoa[0].london_percentile) : ''}%</h5>\n                    {property2Numbers && property2Numbers.parks_lsoa && property2Numbers.parks_lsoa[0] && (\n                      [...Array(property1Numbers.parks_lsoa[0].london_percentile)].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.parks_lsoa && property1Numbers.parks_lsoa[0]) ?  parseInt(property1Numbers.parks_lsoa[0].london_percentile) : 0) \n                            < ((property2Numbers && property2Numbers.parks_lsoa && property2Numbers.parks_lsoa[0]) ? parseInt(property2Numbers.parks_lsoa[0].london_percentile) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.parks_lsoa && property2Numbers.parks_lsoa[0] && (\n                      [...Array(property2Numbers.parks_lsoa[0].london_percentile)].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers) ?  parseInt(property1Numbers.parks_lsoa[0].london_percentile) : 0) \n                          > ((property2Numbers) ? parseInt(property2Numbers.parks_lsoa[0].london_percentile) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.parks_lsoa && property2Numbers.parks_lsoa[0] ? Math.round(property2Numbers.parks_lsoa[0].london_percentile) : ''}%</h5>\n                  </div>\n                </div>\n\n\n                {/* Restaurants */}\n                <div className='result-title'>\n                  <h5>Restaurants</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.restaurants && property1Numbers.restaurants.normal_percentile && (\n                      [...Array(parseInt(100 - Math.round((property1Numbers.restaurants.normal_percentile * 100))))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.restaurants && property1Numbers.restaurants.normal_percentile ? parseInt((property1Numbers.restaurants.normal_percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.restaurants && property1Numbers.restaurants.normal_percentile && (\n                      [...Array(parseInt((property1Numbers.restaurants.normal_percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.restaurants && property1Numbers.restaurants.normal_percentile) ?  parseInt(property1Numbers.restaurants.normal_percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.restaurants && property2Numbers.restaurants.normal_percentile) ? parseInt(property2Numbers.restaurants.normal_percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.restaurants && property1Numbers.restaurants.normal_percentile &&  (\n                      [...Array(parseInt(property2Numbers.restaurants.normal_percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.restaurants && property1Numbers.restaurants.normal_percentile) ?  parseInt(property1Numbers.restaurants.normal_percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.restaurants && property2Numbers.restaurants.normal_percentile) ? parseInt(property2Numbers.restaurants.normal_percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.restaurants && property2Numbers.restaurants.normal_percentile ? Math.round(property2Numbers.restaurants.normal_percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n\n                {/* Pubs */}\n                <div className='result-title'>\n                  <h5>Pubs</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.pubs && property1Numbers.pubs.normal_percentile && (\n                      [...Array(parseInt(100 - Math.round((property1Numbers.pubs.normal_percentile * 100))))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.pubs && property1Numbers.pubs.normal_percentile ? parseInt((property1Numbers.pubs.normal_percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.pubs && property1Numbers.pubs.normal_percentile && (\n                      [...Array(parseInt((property1Numbers.pubs.normal_percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.pubs && property1Numbers.pubs.normal_percentile) ?  parseInt(property1Numbers.pubs.normal_percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.pubs && property2Numbers.pubs.normal_percentile) ? parseInt(property2Numbers.pubs.normal_percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.pubs && property1Numbers.pubs.normal_percentile &&  (\n                      [...Array(parseInt(property2Numbers.pubs.normal_percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.pubs && property1Numbers.pubs.normal_percentile) ?  parseInt(property1Numbers.pubs.normal_percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.pubs && property2Numbers.pubs.normal_percentile) ? parseInt(property2Numbers.pubs.normal_percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.pubs && property2Numbers.pubs.normal_percentile ? Math.round(property2Numbers.pubs.normal_percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n                {/* Fitness */}\n                <div className='result-title'>\n                  <h5>Fitness</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.fitness && property1Numbers.fitness.percentile && (\n                      [...Array(100 - Math.round((property1Numbers.fitness.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.fitness && property1Numbers.fitness.percentile ? parseInt((property1Numbers.fitness.percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.fitness && property1Numbers.fitness.percentile && (\n                      [...Array(parseInt((property1Numbers.fitness.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.fitness && property1Numbers.fitness.percentile) ?  parseInt(property1Numbers.fitness.percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.fitness && property2Numbers.fitness.percentile) ? parseInt(property2Numbers.fitness.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.fitness && property1Numbers.fitness.percentile &&  (\n                      [...Array(parseInt(property2Numbers.fitness.percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.fitness && property1Numbers.fitness.percentile) ?  parseInt(property1Numbers.fitness.percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.fitness && property2Numbers.fitness.percentile) ? parseInt(property2Numbers.fitness.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.fitness && property2Numbers.fitness.percentile ? Math.round(property2Numbers.fitness.percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n                {/* EV */}\n                <div className='result-title'>\n                  <h5>EV</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.ev && property1Numbers.ev.percentile && (\n                      [...Array(100 - Math.round((property1Numbers.ev.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.ev && property1Numbers.ev.percentile ? parseInt((property1Numbers.ev.percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.ev && property1Numbers.ev.percentile && (\n                      [...Array(parseInt((property1Numbers.ev.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.ev && property1Numbers.ev.percentile) ?  parseInt(property1Numbers.ev.percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.ev && property2Numbers.ev.percentile) ? parseInt(property2Numbers.ev.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.ev && property1Numbers.ev.percentile &&  (\n                      [...Array(parseInt(property2Numbers.ev.percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.ev && property1Numbers.ev.percentile) ?  parseInt(property1Numbers.ev.percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.ev && property2Numbers.ev.percentile) ? parseInt(property2Numbers.ev.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.ev && property2Numbers.ev.percentile ? Math.round(property2Numbers.ev.percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n                {/* Tubes */}\n                <div className='result-title'>\n                  <h5>Tubes</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.tubes && property1Numbers.tubes.percentile && (\n                      [...Array(100 - Math.round((property1Numbers.tubes.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.tubes && property1Numbers.tubes.percentile ? parseInt((property1Numbers.tubes.percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.tubes && property1Numbers.tubes.percentile && (\n                      [...Array(parseInt((property1Numbers.tubes.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.tubes && property1Numbers.tubes.percentile) ?  parseInt(property1Numbers.tubes.percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.tubes && property2Numbers.tubes.percentile) ? parseInt(property2Numbers.tubes.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.tubes && property1Numbers.tubes.percentile &&  (\n                      [...Array(parseInt(property2Numbers.tubes.percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.tubes && property1Numbers.tubes.percentile) ?  parseInt(property1Numbers.tubes.percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.tubes && property2Numbers.tubes.percentile) ? parseInt(property2Numbers.tubes.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.tubes && property2Numbers.tubes.percentile ? Math.round(property2Numbers.tubes.percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n\n                {/* Crime */}\n                <div className='result-title'>\n                  <h5>Crime</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.crime && property1Numbers.crime[0] && (\n                      [...Array(parseInt(property1Numbers.crime[0].percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.crime && property1Numbers.crime[0] ? 100 - parseInt(property1Numbers.crime[0].percentile * 100) : ''}%</h5>\n                    {property2Numbers && property2Numbers.crime && property2Numbers.crime[0] && (\n                      [...Array(100 - parseInt(property1Numbers.crime[0].percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.crime && property1Numbers.crime[0]) ?  100 - parseInt(property1Numbers.crime[0].percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.crime && property2Numbers.crime[0]) ? 100 - parseInt(property2Numbers.crime[0].percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.crime && property2Numbers.crime[0] && (\n                      [...Array(100 - parseInt(property2Numbers.crime[0].percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers) ? 100 - parseInt(property1Numbers.crime[0].percentile * 100) : 0) \n                          > ((property2Numbers) ? 100 - parseInt(property2Numbers.crime[0].percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.crime && property2Numbers.crime[0] ? 100 - parseInt(property2Numbers.crime[0].percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n\n\n\n                {/* Supermarkets */}\n                <div className='result-title'>\n                  <h5>Supermarkets</h5>\n                </div>\n\n                <div className='results-rows'>\n                  <div className='results-left'>\n                    {property1Numbers && property1Numbers.supermarkets && property1Numbers.supermarkets.percentile && (\n                      [...Array(100 - Math.round((property1Numbers.supermarkets.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='blank-bars' key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='left-score' >{property1Numbers && property1Numbers.supermarkets && property1Numbers.supermarkets.percentile ? parseInt((property1Numbers.supermarkets.percentile * 100)) : ''}%</h5>\n                    {property1Numbers && property1Numbers.supermarkets && property1Numbers.supermarkets.percentile && (\n                      [...Array(parseInt((property1Numbers.supermarkets.percentile * 100)))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.supermarkets && property1Numbers.supermarkets.percentile) ?  parseInt(property1Numbers.supermarkets.percentile * 100) : 0) \n                            < ((property2Numbers && property2Numbers.supermarkets && property2Numbers.supermarkets.percentile) ? parseInt(property2Numbers.supermarkets.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n\n                  </div>\n                  <div className='results-right'>\n                    {property2Numbers && property2Numbers.supermarkets && property1Numbers.supermarkets.percentile &&  (\n                      [...Array(parseInt(property2Numbers.supermarkets.percentile * 100))].map((choice, index) => {\n                        return (\n                          <div className='bars' style={{\n                            backgroundColor: ((property1Numbers && property1Numbers.supermarkets && property1Numbers.supermarkets.percentile) ?  parseInt(property1Numbers.supermarkets.percentile * 100) : 0) \n                          > ((property2Numbers && property2Numbers.supermarkets && property2Numbers.supermarkets.percentile) ? parseInt(property2Numbers.supermarkets.percentile * 100) : 0) ? '#152BA4' : '#FFA7E5',\n                          }} key={index} >\n                            <div>.</div>\n                          </div>\n                        )\n                      }))}\n                    <h5 className='right-score' >{property2Numbers && property2Numbers.supermarkets && property2Numbers.supermarkets.percentile ? Math.round(property2Numbers.supermarkets.percentile * 100) : ''}%</h5>\n                  </div>\n                </div>\n                  \n              </div>\n\n\n            \n              {userData ? userData.white_properties.filter(property => property.postcode === property2).map((property, index) => {\n                return (\n                  <div className='comparison-property' key={index} onClick={() => navigate(`/agents/property/${property.postcode}`)}>\n                    <>\n                      <div className='comparison-image' style={{ backgroundImage: `url('${property.image}')` }}></div>\n                      <div className='comparison-content'>\n                        <h4>{property.name}</h4>\n                        <h5><NumericFormat value={property.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> offers over</h5>\n                        <h5>Bedrooms: {property.bedrooms}</h5>\n                        <h5>Type: {property.type}</h5>\n                      </div>\n                    </>\n                  </div>\n                )\n              }) : ''}\n            </div>\n            {/* </> */}\n\n          </div>\n        </section>\n        :\n\n        ''\n  \n      }\n    </>\n  )\n}\n\nexport default WhiteComparison\n\n"],"names":["setProfileContent","profileContent","profileDetail","setProfileDetail","className","onClick","style","fontWeight","backgroundColor","navigate","useNavigate","property1","setProperty1","useState","property2","setProperty2","userData","setUserData","propertyList","setPropertyList","property1Numbers","setProperty1Numbers","property2Numbers","setProperty2Numbers","errors","setErrors","variableSide","setVariableSide","propertyColours","setPropertyColours","property1_total","property2_total","property1_restaurant","property2_reestaurant","property1_pub","property2_pub","property1_cafe","property2_cafe","property1_takeaway","property2_takeaway","property1_tube","property2_tube","property1_train","property2_train","property1_supermarket","property2_supermarket","property1_gym","property2_gym","property1_park","property2_park","property1_primary","property2_primary","property1_secondary","property2_secondary","useEffect","isUserAuth","async","data","axios","getUserToken","headers","Authorization","getAccessToken","console","log","white_properties","getUser","error","loadUserData","getPostcode","loadProperty1","loadProperty2","navbarColour","onChange","e","target","value","map","property","index","postcode","name","filter","backgroundImage","image","price","displayType","thousandSeparator","prefix","bedrooms","type","justifyContent","secondaries","total_score_percentile","Array","Math","round","choice","parseInt","parks_lsoa","london_percentile","restaurants","normal_percentile","pubs","fitness","percentile","ev","tubes","crime","supermarkets"],"sourceRoot":""}