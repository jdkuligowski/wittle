{"version":3,"file":"static/js/107.1914e586.chunk.js","mappings":"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","sources":["components/tools/Footer.js","components/tools/NavBarRevised.js","components/tools/WhiteNavbar.js","components/whiteLabel/WhiteSidebar.js","components/whiteLabel/propertyDetails/variableDetails/SingleSecondarySchool.js"],"sourcesContent":["\n\n\nconst Footer = ({ textColour, pageType }) => {\n\n\n\n  return (\n    <>\n      <section className='website-footer no-print' id={pageType}>\n        <p style={{ color: textColour }}>Wittle Technology Limited is a registered company in England and Wales with corporation number 14326945.</p>\n        <p style={{ color: textColour }}>Copyright Â© Wittle Technology Limited. All rights reserved.</p>\n      </section>\n    </>\n  )\n}\n\nexport default Footer","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#1A276C')\n  const [titleColour, setTitleColour] = useState('#FDF7F0')\n  const [textColour, setTextColour] = useState('#ED6B86')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('Home')\n    setProfileDetail('Home')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const listingGeneratorSelect = () => {\n    setProfileDetail('Listing generator')\n    setProfileContent('Listing generator')\n    navigate('/agents/listing-generator')\n  }\n\n  // function for selecting wittle lifestyle\n  const leadGeneratorSelect = () => {\n    setProfileContent('Lead generator test')\n    setProfileDetail('Lead generator test')\n    navigate('/agents/lead-gen')\n  }\n\n  // function for selecting wittle lifestyle\n  const howToSelect = () => {\n    setProfileContent('How to guide')\n    setProfileDetail('How to guide')\n    navigate('/agents/guide')\n  }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n    navigate('/agents/account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <div className='wittle-logo' onClick={() => navigate('/')}></div>\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: profileContent === 'Home' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Home' ? '5px' : '' }} onClick={homeSelect}>HOME</h4>\n          <h4 style={{ color: profileContent === 'Listing generator' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Listing generator' ? '5px' : '' }} onClick={listingGeneratorSelect}>LISTING GENERATOR</h4>\n          <h4 style={{ color: profileContent === 'Lead generator' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Lead generator' ? '5px' : '' }} onClick={leadGeneratorSelect}>LEAD GENERATOR</h4>\n          <h4 style={{ color: profileContent === 'How to guide' ? titleColour : textColour, textUnderlineOffset: profileContent === 'How to guide' ? '5px' : '' }} onClick={howToSelect}>HOW TO GUIDE</h4>\n          <h4 style={{ color: profileContent === 'Account' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n\n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>Home</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}></h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\nimport axios from 'axios'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // userdata state\n  const [userData, setUserData] = useState()\n\n  // errors\n  const [errors, setErrors] = useState()\n\n\n  const [activeItem, setActiveItem] = useState('')\n\n  // state for changing the view to insights results\n  const [insightView, setInsightView] = useState('Search')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (activeItem === 'Home') {\n        navigate('/agents/profile')\n      } else if (activeItem === 'Saved items') {\n        navigate('/agents/favourites')\n      }\n      // ... other conditions\n    }, 100)\n  }, [activeItem])\n\n  // useEffect(() => {\n  //   loadUserData()\n  // }, [])\n\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo-section'>\n          <div className='logo' onClick={() => navigate('/')}>\n            {/* <h2 onClick={() => navigate('/')}>Wittle</h2> */}\n          </div>\n        </div>\n\n\n        <div className='profile-buttons'>\n          <div className={`profile-button-title ${activeItem === 'Home' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Home')\n              setTimeout(() => {\n                setProfileDetail('Home')\n                setProfileContent('Home')\n              }, 0)\n            }}>\n            <div className='icon' id='home-icon' ></div>\n            <h2>Wittle home</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Listing generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Listing generator')\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>\n            <div className='icon' id='listing-icon'></div>\n            <h2>Listing generator</h2>\n          </div>\n          {/* <div className={`profile-button-title ${activeItem === 'Lead generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator')\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div> */}\n          <div className={`profile-button-title ${activeItem === 'Lead generator test' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator test')\n              setProfileContent('Lead generator test')\n              setProfileDetail('Lead generator test')\n              navigate('/agents/lead-gen')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'How to guide' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('How to guide')\n              setProfileContent('How to guide')\n              setProfileDetail('How to guide')\n              navigate('/agents/guide')\n            }}>\n            <div className='icon' id='help-icon'></div>\n            <h2>How-to guide</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Account' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Account')\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n            }}>\n            <div className='icon' id='account-icon'></div>\n            <h2>Account details</h2>\n          </div>\n\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar","import React, { useState, useEffect, useInsertionEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Footer from '../../../tools/Footer'\nimport WhiteSidebar from '../../WhiteSidebar'\nimport WhiteNavbar from '../../../tools/WhiteNavbar'\nimport NavBarRevised from '../../../tools/NavBarRevised'\n\n\n\n\n\nconst SingleSecondarySchool = () => {\n\n  // state for errors\n  const [errors, setErrors] = useState()\n\n  // state for navigateion\n  const navigate = useNavigate()\n\n  // state for school information\n  const [secondaryData, setSecondaryData] = useState()\n\n\n  // load in specfic secondary school\n  const loadSecondaryData = () => {\n    const getSecondaries = async () => {\n      try {\n        const id = JSON.parse(localStorage.getItem('school-id'))\n\n        const { data } = await axios.get(`/api/secondaries/${id}`)\n        console.log('secondaries data ->', data)\n        setSecondaryData(data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getSecondaries()\n  }\n\n  // carry out calculation\n  useEffect(() => {\n    loadSecondaryData()\n  }, [])\n\n\n  return (\n\n    <>\n      {secondaryData ?\n        <>\n          <section className=\"single-school-profile\">\n            <div className=\"school-core-info\">\n              <div className=\"info-left\">\n                <h1>{secondaryData[0].school_name}</h1>\n                <h3 className='normal'>ð Ofsted: {secondaryData[0].ofsted_results}</h3>\n                <h3 className='normal'>ð {secondaryData[0].students} students per year</h3>\n                <h3 className='normal'>ð¨âð§ Gender: {secondaryData[0].gender}</h3>\n                <h3 className='normal'>ð Faith: {secondaryData[0].religion === null ? 'All' : secondaryData[0].religion}</h3>\n                {/* <h3 className='website'>ð» {secondaryData[0].school_url}</h3> */}\n                <a href={secondaryData[0].school_url} target='_blank' className='website' rel=\"noreferrer\">ð» {secondaryData[0].school_url}</a>\n\n              </div>\n              <div className=\"info-right\">\n                <div className='school-image' id='secondary' style={{ backgroundImage: secondaryData[0].image_url === null ? undefined : `url(${secondaryData[0].image_url})` }}></div>\n              </div>\n            </div>\n            <div className='school-academic-highlights'>\n              <h1>Academic highlights</h1>\n              <div className='row'>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{Math.round((1 - secondaryData[0].percentile) * 100) + 1}%</h1>\n                  </div>\n                  <p>In the top {Math.round((1 - secondaryData[0].percentile) * 100) + 1}% of schools in London</p>\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{Math.round((1 - secondaryData[0].borough_percentile) * 100) + 1}%</h1>\n                  </div>\n                  <p>In the top {Math.round((1 - secondaryData[0].borough_percentile) * 100) + 1}% of schools in {secondaryData[0].local_authority}</p>\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{secondaryData[0].results.length}</h1>\n                  </div>\n                  <p>Good curriculum with {secondaryData[0].results.length} subjects</p>\n                </div>\n              </div>\n            </div>\n            <div className='school-results'>\n              <h1>GCSE Results</h1>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <h5 id='column2'>Subject</h5>\n                <h5 id='column3'>Pass rate (%)</h5>\n                <h5 id='column4'>A/ A* (%)</h5>\n              </div>\n              <div className='school-table-details'>\n                {secondaryData[0].results.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>{item.subject}</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          <h5>{Math.round(item.pass_rate)}</h5>\n                        </div>\n                        <div className='column' id='column4'>\n                          <h5>{Math.round(item.top_rate)}</h5>\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n        </>\n        : ''}\n\n\n    </>\n  )\n}\n\nexport default SingleSecondarySchool"],"names":["_ref","textColour","pageType","_jsx","_Fragment","children","_jsxs","className","id","style","color","setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","setTextColour","backgroundColor","onClick","textUnderlineOffset","homeSelect","listingGeneratorSelect","leadGeneratorSelect","howToSelect","accountSelect","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","variableSide","setVariableSide","userData","setUserData","activeItem","setActiveItem","insightView","setInsightView","useEffect","setTimeout","SingleSecondarySchool","secondaryData","setSecondaryData","async","JSON","parse","getItem","data","axios","get","console","log","error","getSecondaries","school_name","ofsted_results","students","gender","religion","href","school_url","target","rel","backgroundImage","image_url","undefined","Math","round","percentile","borough_percentile","local_authority","results","length","map","item","index","subject","pass_rate","top_rate"],"sourceRoot":""}