{"version":3,"file":"static/js/620.611fe7a6.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/ProfileMobileSlider.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/LeadGenerator.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list!</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            setArchivedProperties(archivedFavourites)\n            setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n          } else {\n            const allFavouriteIds = []\n            loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n\n          }\n\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        handleSavedActionShow()\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {  // Adjusted to take an array of IDs\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n        // Optionally, refresh data or update UI accordingly\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, favouriteIds, dateFilter) => {\n    setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      let url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&min_price=${priceMin}&max_price=${priceMax}&rental_additional=${additionalRental}`\n\n      // Append date filter criteria to the URL\n      if (dateFilter) {\n        url += `&date_filter=${dateFilter}`\n      }\n\n      // Append favouriteIds to the URL if present\n      if (favouriteIds && favouriteIds.length > 0) {\n        url += `&exclude_ids=${favouriteIds.join(',')}`\n      }\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      // console.log('no matches ->', noMatchesData)\n      // console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, favouriteIds, dateFilter) => {\n    setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      let url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&min_price=${priceMin}&max_price=${priceMax}`\n\n      // Append date filter criteria to the URL\n      if (dateFilter) {\n        url += `&date_filter=${dateFilter}`\n      }\n\n      // Append favouriteIds to the URL if present\n      if (favouriteIds && favouriteIds.length > 0) {\n        url += `&exclude_ids=${favouriteIds.join(',')}`\n      }\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setLeadGenSection('Explore properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setLeadGenSection('Explore properties')\n    }\n\n\n    // setRentalLoading(true)\n    // setSalesLoading(true)\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    const days = dateFilter === '1day' ? 2 :\n      dateFilter === '2days' ? 3 :\n        dateFilter === '3days' ? 4 :\n          dateFilter === '7days' ? 8 :\n            dateFilter === '4weeks' ? 28 :\n              dateFilter === '8weeks' ? 56 :\n                dateFilter === '12weeks' ? 84 :\n                  dateFilter === '16weeks' ? 112 : 0\n    // dateFilter === 'all' ? 10000 : 0\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      let mostRecentDate\n      if (addedDate && reducedDate) {\n        mostRecentDate = addedDate > reducedDate ? addedDate : reducedDate\n      } else {\n        mostRecentDate = addedDate || reducedDate // Use the non-null date\n      }\n\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      const isWithin = isWithinLastDays(mostRecentDate, days)\n\n      return isWithin\n    })\n  }\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    const pastDate = new Date()\n    pastDate.setDate(now.getDate() - days)\n    // console.log(`Comparing ${date} with ${pastDate}`)\n    return date >= pastDate\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n              <section className='property-finder'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Explore properties')} style={{ borderBottom: leadGenSection === 'Explore properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore properties' ? '700' : '400' }}>Explore properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Archived properties')} style={{ borderBottom: leadGenSection === 'Archived properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived properties' ? '700' : '400' }}>Archived properties</h5>\n                  </div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n\n\n                </div>\n                <hr className='title-line' />\n\n                <div className='lead-generator'>\n\n                  <div className='property-results'>\n                    {leadGenSection === 'Home' ?\n                      <>\n                        <div className='lead-gen-inputs'>\n                          <h3 className='sub-title'>Set your search criteria</h3>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Postcode(s)</h3>\n                              <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                              <input\n                                type=\"text\"\n                                value={leadGenDetails.postcode}\n                                onChange={inputPostcode}\n                                placeholder=\"Enter postcode...\"\n                              />\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Channel</h3>\n                              <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                <option>Lettings</option>\n                                <option>Sales</option>\n                                <option>Both</option>\n\n                              </select>\n                            </div>\n                          </div>\n                          <div>\n\n                            <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                              <h3 className='sub-title'>Add some more detail</h3>\n\n                              {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                            </div>\n                            {expand ?\n                              <>\n                                <div className='single-title-double'>\n                                  <h3>Bedrooms</h3>\n                                  <div className='double-dropdowns'>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_min || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No min</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                    </select>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_max || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No max</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                      <option value=\"7\">7</option>\n                                    </select>\n                                  </div>\n\n                                </div>\n                                {leadGenDetails.channel === 'Sales' ?\n\n                                  <div className='single-title-double'>\n                                    <h3>Price</h3>\n                                    <div className='double-dropdowns'>\n                                      <select\n                                        className='dropdown'\n                                        value={leadGenDetails.price_min || null}\n                                        onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, price_min: e.target.value }))}\n                                      >\n                                        <option value={null}>No min</option>\n                                        {salesPrices.map((price, index) => (\n                                          <option key={index} value={price}>\n                                            <NumericFormat\n                                              value={price}\n                                              displayType={'text'}\n                                              thousandSeparator={true}\n                                              prefix={'£'}\n                                            />\n                                          </option>\n                                        ))}\n                                      </select>\n                                      <select\n                                        className='dropdown'\n                                        value={leadGenDetails.price_max || null}\n                                        onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, price_max: e.target.value }))}\n                                      >\n                                        <option value={null}>No max</option>\n                                        {salesPrices.map((price, index) => (\n                                          <option key={index} value={price}>\n                                            <NumericFormat\n                                              value={price}\n                                              displayType={'text'}\n                                              thousandSeparator={true}\n                                              prefix={'£'}\n                                            />\n                                          </option>\n                                        ))}\n                                      </select>\n                                    </div>\n                                  </div>\n\n\n                                  :\n                                  leadGenDetails.channel === 'Lettings' ?\n                                    <>\n                                      <div className='single-title-double'>\n                                        <h3>Price</h3>\n                                        <div className='double-dropdowns'>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_min || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                          >\n                                            <option value={0}>No min</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_max || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                          >\n                                            <option value={10000000}>No max</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n\n                                        </div>\n\n                                      </div>\n                                      <div className='single-input-block'>\n                                        <div className='input-block large'>\n                                          <h3>Furnishing status</h3>\n                                          <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                            <option>Either furnished or unfurnished</option>\n                                            <option>Furnished</option>\n                                            <option>Unfurnished</option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                    </>\n                                    :\n                                    leadGenDetails.channel === 'Sales' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                            >\n                                              <option value={10000000}>No max</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Both' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Rental price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                              >\n                                                <option value={10000000}>No max</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                          <div className='single-input-block'>\n                                            <div className='input-block large'>\n                                              <h3>Rental furnishing status</h3>\n                                              <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                <option>Either furnished or unfurnished</option>\n                                                <option>Furnished</option>\n                                                <option>Unfurnished</option>\n                                              </select>\n                                            </div>\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Sales price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={10000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n\n\n                                        : ''}\n\n                              </>\n                              : ''}\n                          </div>\n                          <div className='lead-gen-save'>\n                            <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                          </div>\n                        </div>\n\n                      </>\n                      :\n                      leadGenSection === 'Explore properties' && !rentalLoading ?\n                        <>\n                          <div className='results-block'>\n                            <div className=\"property-insight-nav\">\n                              <div className=\"property-insight-buttons\">\n                                <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                              </div>\n                              <div className='save-section'>\n                                <div className=\"print-icon\"></div>\n\n                                <h3 onClick={addFavourite}>Save selection</h3>\n                              </div>\n                            </div>\n                            {channelView === 'Lettings' ?\n                              <>\n                                <div className='filter-section'>\n                                  <h3>Filter properties</h3>\n                                  <select\n                                    className='dropdown'\n                                    value={dateFilter}\n                                    onChange={(e) => setDateFilter(e.target.value)}\n                                  >\n                                    <option value=\"1day\">Updated in the last 24 hours</option>\n                                    <option value=\"2days\">Updated in the last 48 hours</option>\n                                    <option value=\"3days\">Updated in the last 72 hours</option>\n                                    <option value=\"7days\">Updated in the last week</option>\n                                    <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                    <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                    <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                    <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                    <option value=\"all\">All matching properties</option>\n                                  </select>\n                                </div>\n                                {rentalLoading ?\n                                  <div className='property-table-loading'>\n                                    <Loading />\n                                  </div>\n                                  : !rentalLoading ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                        <div className='select-all-box'>\n                                          <h5>Select all</h5>\n                                          <div className='custom-checkbox'>\n                                            <input\n                                              className='checkbox'\n                                              type=\"checkbox\"\n                                              checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                              onChange={handleSelectAllChange}\n                                            />\n                                            <label className='label'>\n\n                                            </label>\n\n                                          </div>\n                                        </div>\n                                      </div>\n\n                                      <div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column' >\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column' onClick={sortByPostcode}>\n                                          <h5>Postcode</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column' onClick={sortByPrice}>\n                                          <h5>Price</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Select</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details'>\n                                        {filteredProperties ? filteredProperties.map((item, index) => {\n                                          const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                          return (\n                                            <>\n                                              <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.epc_data_list[0].address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.propertyType}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  <div className='custom-checkbox'>\n\n                                                    <input\n                                                      className='checkbox'\n                                                      type=\"checkbox\"\n                                                      checked={checkboxStatus[index]}\n                                                      onChange={(e) => handleCheckboxChange(e, index)} // Pass the index here\n                                                    />\n                                                    <label className='label'>\n\n                                                    </label>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n\n\n                                    </>\n                                    : ''}\n                              </>\n                              : channelView === 'Sales' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All matching properties</option>\n                                    </select>\n                                  </div>\n                                  {salesLoading ?\n                                    <div className='property-table-loading'>\n                                      <Loading />\n                                    </div>\n                                    : !salesLoading ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n                                          <div className='select-all-box'>\n                                            <h5>Select all</h5>\n                                            <div className='custom-checkbox'>\n                                              <input\n                                                className='checkbox'\n                                                type=\"checkbox\"\n                                                checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                onChange={handleSelectAllSalesChange}\n                                              />\n                                              <label className='label'>\n\n                                              </label>\n\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details'>\n                                          {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                            const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.epc_data_list[0].address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    {archivedProperties.some(fav => fav.rightmove_id === item.property_data.rightmove_id) || savedProperties.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <p>Saved</p>\n                                                      :\n                                                      <div className='custom-checkbox'>\n\n                                                        <input\n                                                          className='checkbox'\n                                                          type=\"checkbox\"\n                                                          checked={salesCheckboxStatus[index]}\n                                                          onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                        />\n                                                        <label className='label'>\n\n                                                        </label>\n                                                      </div>\n                                                    }\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n\n\n                                      </>\n                                      : ''}\n                                </>\n                                :\n\n                                ''}\n                          </div>\n                        </>\n                        : leadGenSection === 'Explore properties' && rentalLoading ?\n                          <div className='property-table-loading'>\n                            <Loading />\n                          </div>\n                          : leadGenSection === 'Saved properties' ?\n                            <>\n                              <div className='results-block'>\n                                {savedProperties && savedProperties.length > 0 ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                      {userData && userData.epc_favourites && (\n                                        <>\n                                          <CSVLink\n                                            data={csvData}\n                                            className='export'\n                                            filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                                            style={{ textDecoration: 'none' }}\n                                          >\n                                            <div className='header-cta' onClick={() => archiveFavourite(userData.epc_favourites.map(fav => fav.rightmove_id))}>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        </>\n                                      )}\n                                    </div><div className='results-headers'>\n                                      <h5 id='column1' className='column'>#</h5>\n                                      <div id='column2' className='column'>\n                                        <h5>Address</h5>\n                                      </div>\n                                      <div id='column3' className='column'>\n                                        <h5>Postcode</h5>\n                                      </div>\n                                      <div id='column4' className='column'>\n                                        <h5>Added</h5>\n                                      </div>\n                                      <div id='column5' className='column'>\n                                        <h5>Reduced</h5>\n                                      </div>\n                                      <div id='column6' className='column'>\n                                        <h5>Channel</h5>\n                                      </div>\n                                      <div id='column7' className='column'>\n                                        <h5>Price</h5>\n                                      </div>\n                                      <div id='column8' className='column'>\n                                        <h5>Bedrooms</h5>\n                                      </div>\n                                      <div id='column9' className='column'>\n                                        <h5>Agent</h5>\n                                      </div>\n                                      <div id='column10' className='column'>\n                                        <h5></h5>\n                                      </div>\n                                    </div>\n                                    <hr className='property-divider' />\n                                    <div className='saved-properties'>\n\n                                      <div className='results-details'>\n                                        {savedProperties ? savedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  <button className='minus' onClick={() => deleteFavourite(item.rightmove_id)}>-</button>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n\n                                          : ' '}\n                                      </div>\n                                    </div>\n\n                                  </>\n                                  : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                }\n                              </div>\n\n\n                            </>\n                            : leadGenSection === 'Archived properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {archivedProperties && archivedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n\n\n                                      </div><div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                      </div><hr className='property-divider' /><div className='results-details'>\n                                        {archivedProperties ? archivedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.property_type}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              :\n                              ''\n                    }\n                  </div>\n                </div>\n\n\n              </section>\n\n\n            </>\n\n          </section>\n        </section>\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","_Fragment","_jsxs","onClick","style","fontWeight","backgroundColor","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","Modal","show","onHide","backdrop","Body","closeAndLeave","axios","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","search","setSearch","variableSide","setVariableSide","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","channel","setChannel","inputType","setInputType","favouritedProperties","setFavouritedProperties","savedProperties","setSavedProperties","archivedProperties","setArchivedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","postcode","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedRows","setSelectedRows","selectedSalesRows","setSelectedSalesRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","map","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","favouriteIds","setFavouriteIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","setLatestFavourites","loadUserData","isUserAuth","async","data","get","getUserToken","headers","Authorization","getAccessToken","console","log","lead_gen_details","length","filteredFavourites","epc_favourites","filter","fav","rightmove_id","action","archivedFavourites","newFavouriteIds","dataCsv","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","allFavouriteIds","error","getUser","useEffect","deselectAllRows","deselectAllSalesRows","item","index","url","address","addressPostcode","addedOn","added_revised","property_type","price","bedrooms","bathrooms","let_available_date","date_added","date_added_db","agent","postcodeValue","bedroomsMin","bedroomsMax","priceMin","priceMax","additionalRental","join","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","handleVisitUrl","window","open","salesPrices","rentalPrices","filterPropertiesByDate","properties","days","property","addedDate","parseDate","property_data","reducedDate","reduced_revised","mostRecentDate","isWithinLastDays","filtered","dateStr","day","month","year","split","Date","date","now","pastDate","setDate","getDate","sortByPrice","sorted","sort","a","b","priceA","parseInt","replace","priceB","salesSorted","sortByPostcode","localeCompare","setSavedActionShow","handleSavedActionShow","e","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","borderBottom","textUnderlineOffset","token","localStorage","removeItem","type","value","onChange","target","toUpperCase","prevData","placeholder","price_min","NumericFormat","displayType","thousandSeparator","prefix","price_max","response","put","id","post","CSVLink","filename","getCurrentDate","getFullYear","String","getMonth","padStart","textDecoration","favourite_ids","archiveFavourite","delete","deleteFavourite","existingFavouriteIds","Set","newFavourites","row","has","checked","every","Boolean","selectAllRows","existingCombinations","allRows","isRowSelected","some","selectedRow","propertyType","handleCheckboxChange","updatedStatus","selectedProperty","prevRows","selectAllSalesRows","salesCheckboxChange","SavedProperties"],"sourceRoot":""}