{"version":3,"file":"static/js/993.88ca0029.chunk.js","mappings":"wKAmGA,UA9FsBA,KACpB,MAAOC,EAAeC,IAAeC,EAAAA,EAAAA,UAAS,KACvCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IACjCK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAGVC,EAAKC,IAAUV,EAAAA,EAAAA,UAAS,OACxBW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,OAEnCa,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAS,IAAIC,gBAAgBV,EAASW,QACtCC,EAAiBH,EAAOI,IAAI,OAC5BC,EAAmBL,EAAOI,IAAI,SAEpCR,EAAOO,GACPL,EAASO,GAEJF,GAAkBE,GACrBZ,EAAS,IACX,GAEC,CAACF,IAkCJ,OACEe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,aAAa,aACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYJ,UACzBC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeJ,UAC5BC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcJ,UAC3BF,EAAAA,EAAAA,MAAA,QAAMM,UAAU,cAAcC,SAtCLC,UAIjC,GAHAC,EAAMC,iBAGFhC,IAAkBG,EAMtB,IACE8B,QAAQC,IAAI,CAAEvB,MAAKE,QAAOb,kBAC1B,MAAMmC,QAAiBC,EAAAA,EAAMC,KAAK,2BAA4B,CAAE1B,MAAKE,QAAOyB,SAAUtC,IACtFM,EAAW6B,EAASI,KAAKlC,SACzBI,EAAS,SACX,CAAE,MAAO+B,GACPP,QAAQO,MAAMA,EAChB,MAZElC,EAAW,0BAYb,EAqB2EkB,SAAA,EACjEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBAEHC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,KAAK,WACLC,MAAO3C,EACP4C,SAzBUC,IACtB5C,EAAY4C,EAAEC,OAAOH,OACrBV,QAAQC,IAAIW,EAAEC,OAAOH,MAAM,EAwBfI,UAAQ,KAEVtB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BACHC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,KAAK,kBACLC,MAAOxC,EACPyC,SA3BsBC,IAClCzC,EAAmByC,EAAEC,OAAOH,OAC5BV,QAAQC,IAAIW,EAAEC,OAAOH,MAAM,EA0BfI,UAAQ,KAEVtB,EAAAA,EAAAA,KAAA,UAAQG,UAAU,UAAUa,KAAK,SAAQjB,SAAC,qBACzCnB,IAAWiB,EAAAA,EAAAA,MAAA,KAAGM,UAAU,SAAQJ,SAAA,CAAC,IAAEnB,gBAM3C,C","sources":["components/auth/CompleteReset.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport NavBar from '../tools/NavBar'\n\nconst CompleteReset = () => {\n  const [passwordValue, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  // State to hold uid and token\n  const [uid, setUid] = useState(null)\n  const [token, setToken] = useState(null)\n\n  useEffect(() => {\n    // Extract the uid and token from the URL\n    const params = new URLSearchParams(location.search)\n    const uidFromParams = (params.get('uid'))\n    const tokenFromParams = (params.get('token'))\n\n    setUid(uidFromParams)\n    setToken(tokenFromParams)\n\n    if (!uidFromParams || !tokenFromParams) {\n      navigate('/')\n    } \n\n  }, [location])\n\n  const handlePasswordResetConfirm = async (event) => {\n    event.preventDefault()\n\n    // Ensure the passwords match\n    if (passwordValue !== confirmPassword) {\n      setMessage('Passwords do not match.')\n      return\n    }\n\n    // Now uid and token are available for the POST request\n    try {\n      console.log({ uid, token, passwordValue })\n      const response = await axios.post('api/auth/password-reset/', { uid, token, password: passwordValue })\n      setMessage(response.data.message)\n      navigate('/login')\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  // setting password\n  const changePassword = (e) => {\n    setPassword(e.target.value)\n    console.log(e.target.value)\n  }\n\n  // setting password confirmation\n  const changePasswordConfirmation = (e) => {\n    setConfirmPassword(e.target.value)\n    console.log(e.target.value)\n  }\n\n  return (\n    <>\n      <NavBar navbarColour='#051885' />\n      <div className='login-page'>\n        <div className='login-content'>\n          <div className='form-section'>\n            <form className='form-detail' onSubmit={handlePasswordResetConfirm}>\n              <h2>Reset Password</h2>\n              <p>New Password</p>\n\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={passwordValue}\n                onChange={changePassword}\n                required\n              />\n              <p>Confirm New Password</p>\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={changePasswordConfirmation}\n                required\n              />\n              <button className='sign-up' type=\"submit\">Set New Password</button>\n              {message && <p className='error1'>*{message}</p>}\n\n            </form>\n          </div>\n        </div>\n      </div>  \n    </>\n  )\n}\n\nexport default CompleteReset\n"],"names":["CompleteReset","passwordValue","setPassword","useState","confirmPassword","setConfirmPassword","message","setMessage","location","useLocation","navigate","useNavigate","uid","setUid","token","setToken","useEffect","params","URLSearchParams","search","uidFromParams","get","tokenFromParams","_jsxs","_Fragment","children","_jsx","NavBar","navbarColour","className","onSubmit","async","event","preventDefault","console","log","response","axios","post","password","data","error","type","name","value","onChange","e","target","required"],"sourceRoot":""}