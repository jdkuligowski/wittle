{"version":3,"file":"static/js/824.2447f384.chunk.js","mappings":"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","sources":["components/auth/Auth.js","components/helpers/modals/MenuModal.js","components/helpers/modals/NormalPropertySearchModal.js","components/tools/AutoCompleteSearch.js"],"sourcesContent":["\nexport const getAccessToken = () => {\n  return window.localStorage.getItem('wittle-user-token')\n}\n\nexport const getPayLoad = () => {\n  const token = getAccessToken()\n  if (!token) return\n  const payLoad = token.split('.')[1]\n  // console.log(payLoad)\n  // console.log(JSON.parse(atob(payLoad)))\n  return JSON.parse(atob(payLoad)) // can try and use Buffer\n}\n\nexport const isUserAuth = () => {\n  const payLoad = getPayLoad()\n  if (!payLoad) return false\n  const currentTime = Math.floor(Date.now() / 1000)\n  return payLoad.exp > currentTime\n}\n\nexport const isUserOwner = (resort) => {\n  const payLoad = getPayLoad()\n  if (!payLoad) return\n  console.log(payLoad.sub)\n  console.log(resort.owner._id)\n  return resort.owner._id === payLoad.sub\n}\n\nexport const getUserToken = () => {\n  return window.localStorage.getItem('wittle-username')\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, getAccessToken, isUserAuth } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport NormalPropertySearchModal from './NormalPropertySearchModal'\n\n\n\n\nconst MenuModal = ({ menuShow, handleMenuClose, setMenuShow, removeItemFromStorage }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // manageing the modal pop up for property search\n  const [propertySearch, setPropertySearch] = useState(false)\n\n  // close modal\n  const handleSearchClose = () => {\n    setPropertySearch(false)\n  }\n\n  // show the modal\n  const handleSearchShow = (e) => {\n    setPropertySearch(true)\n    handleMenuClose()\n  }\n\n\n  // ? Functions for where each link takes the user\n  // home\n  const goHome = () => {\n    navigate('/')\n    handleMenuClose()\n  }\n\n  // profile\n  const goProfile = () => {\n    navigate('/profile')\n    handleMenuClose()\n  }\n\n  // wittle search\n  const goWittleSearch = () => {\n    navigate('/wittle-search/fields')\n    handleMenuClose()\n  }\n\n  // about Wittle search\n  const goAboutSearch = () => {\n    navigate('/wittle-search')\n    handleMenuClose()\n  }\n\n  // about Wittle search\n  const goAgents = () => {\n    navigate('/agents')\n    handleMenuClose()\n  }\n\n  // login\n  const goLogin = () => {\n    navigate('/login')\n    handleMenuClose()\n  }\n\n  // insights\n  const goInsights = () => {\n    navigate('/blogs/school-search-simplified')\n    handleMenuClose()\n  }\n\n  return (\n    <>\n      <Modal show={menuShow} onHide={handleMenuClose} backdrop='static' className='menu-modal' onExited={() => setMenuShow(false)} animation={true}>\n        <Modal.Body>\n          <div className='menu-header'>\n            <h1 onClick={handleMenuClose}>x</h1>\n\n          </div>\n          <div className='menu-body'>\n            {/* <h1 onClick={goProfile}>My property hub</h1>\n            <h1 onClick={goWittleSearch}>New Wittle Search</h1>\n            <h1 onClick={handleSearchShow}>New Property Search</h1> */}\n            <h1 onClick={goAgents}>For agents </h1>\n            <h1 onClick={goInsights}>Insights </h1>\n            {/* <h1 onClick={goAboutSearch}>About</h1>\n            <h1>Terms</h1> */}\n            {isUserAuth() ? <h1 className='action' onClick={removeItemFromStorage}>Log out</h1> : <h1 className='action' onClick={goLogin}>Login</h1>}\n          </div>\n        </Modal.Body>\n      </Modal>\n      <NormalPropertySearchModal\n        propertySearch={propertySearch}\n        handleSearchClose={handleSearchClose}\n      />\n    </>\n  )\n}\n\nexport default MenuModal","import { Modal } from 'react-bootstrap'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { NumericFormat } from 'react-number-format'\nimport axios from 'axios'\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\nimport { AddressAutofill } from '@mapbox/search-js-react'\nimport AutoCompleteSearch from '../../tools/AutoCompleteSearch'\n\n\n\nconst NormalPropertySearchModal = ({ propertySearch, handleSearchClose }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set states for buttons being activated \n  const [renting, setRenting] = useState(true)\n  const [buying, setBuying] = useState(false)\n\n  const [locations, setLocations] = useState([])\n\n  // unused states for the autocomplete search\n  const [userEmail, setUserEmail] = useState()\n  const [lifestyleLat, setLifestyleLat] = useState()\n  const [lifestyleLong, setLifestyleLong] = useState()\n  const [viewport, setViewport] = useState()\n  const [loading, setLoading] = useState()\n  const [click, setClick] = useState()\n\n\n  // state for handling the property search inputs\n  const [formData, setFormData] = useState({\n    channel: 'Sale',\n    location: 'London',\n    property_price_min: 0,\n    property_price_max: 10000000,\n    property_beds_min: 1,\n    property_beds_max: 5,\n    type: 'Any',\n    search_area: 0.25,\n    long: -0.127816,\n    lat: 51.507602,\n  })\n\n  // ? Get our API Data\n  // useEffect(() => {\n  //   const getData = async () => {\n  //     try {\n  //       const { data } = await axios.get('/api/locations/')\n  //       // console.log(data)\n  //       setLocations(data)\n  //     } catch (err) {\n  //       console.log(err)\n  //     }\n  //   }\n  //   getData()\n  // }, [])\n\n  // function for updating values when fields change\n  const searchUpdate = (e) => {\n    const test = e.target.value\n    if (test.includes('£')) {\n      const newValue = test.replace('£', '').replace(',', '').replace(',', '')\n      setFormData({ ...formData, [e.target.name]: newValue })\n      console.log(newValue)\n    } else {\n      setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n  }\n\n  // function for adding values to state when the form is complete\n  const searchSubmit = () => {\n    window.localStorage.setItem('property-search-input', JSON.stringify(formData))\n    navigate('/property-results')\n  }\n\n\n\n\n  return (\n    <>\n      <Modal show={propertySearch} onHide={handleSearchClose} backdrop='static' className='normal-search-modal'>\n        <Modal.Body>\n          <section className='normal-search-header'>\n            <div className='title-box'>\n              <h1 className='title'>Search for properties</h1>\n              <h1 className='close' onClick={handleSearchClose}>x</h1>\n            </div>\n            <p>Look for properties in an area that you are familiar with</p>\n          </section>\n          <section className='normal-search-content'>\n            <div className='content-sections'>\n              <h3>What are you looking to do?</h3>\n              <div className='button-selectors' name='channel' onClick={() => {\n                setRenting(!renting); setBuying(!buying)\n              }}>\n                <button id='buy' style={{ backgroundColor: !buying ? 'rgba(255, 167, 229, 0.2)' : 'rgba(255, 167, 229, 1)' }} onClick={() => {\n                  setFormData({ ...formData, channel: 'Sale' })\n                }}>Buy</button>\n                <button id='rent' style={{ backgroundColor: !renting ? 'rgba(255, 167, 229, 0.2)' : 'rgba(255, 167, 229, 1)' }} onClick={() => {\n                  setFormData({ ...formData, channel: 'Rent' })\n                }}>Rent</button>\n\n              </div>\n            </div>\n            <div className='content-sections'>\n              <h3>Where do you want to look?</h3>\n              <div className='location-box'>\n                <h1>🔎</h1>\n                {/* <AddressAutofill accessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN} style={{ zindex: 99 }}> */}\n                {/* <input type='text' name='location' placeholder='location...' onChange={searchUpdate} /> */}\n                <AutoCompleteSearch\n                  livingData={formData}\n                  setLivingData={setFormData}\n                  userEmail={userEmail}\n                  setUserEmail={setUserEmail}\n                  lifestyleLat={lifestyleLat}\n                  setLifestyleLat={setLifestyleLat}\n                  lifestyleLong={lifestyleLong}\n                  setLifestyleLong={setLifestyleLong}\n                  viewport={viewport}\n                  setViewport={setViewport}\n                  loading={loading}\n                  setLoading={setLoading}\n                  click={click}\n                  setClick={setClick}\n                />\n                {/* </AddressAutofill> */}\n\n              </div>\n            </div>\n            <div className='content-sections'>\n              <h3>What&apos;s your price range?</h3>\n              {renting ?\n                <>\n                  <div className='dropdown-sections'>\n                    <div className='dropdowns' id='property'>\n                      <select className='property-control' name='property_price_min' onChange={searchUpdate}>\n                        <option value={0}>No min</option>\n                        <option><NumericFormat value={500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={600} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={700} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={800} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={900} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={3000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={3500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={4000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={4500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={5000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={6000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={7000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={8000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                      </select>\n                    </div>\n                    <div className='dropdowns'>\n                      <select className='property-control' name='property_price_max' onChange={searchUpdate}>\n                        <option value={10000000}>No max</option>\n                        <option><NumericFormat value={500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={600} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={700} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={800} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={900} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={1750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={2750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={3000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={3500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={4000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={4500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={5000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={6000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={7000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={8000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        <option><NumericFormat value={10000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                      </select>\n                    </div>\n                  </div>\n                </>\n\n                : buying ?\n                  <>\n                    <div className='dropdown-sections' id='final-step'>\n                      <div className='dropdowns' id='property'>\n                        <select className='property-control' name='property_price_min' onChange={searchUpdate}>\n                          <option value={0}>No min</option>\n                          <option><NumericFormat value={200000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={300000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={400000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={600000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={700000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={800000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={900000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1250000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1750000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={2000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={2500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={3000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={3500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={4000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={5000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        </select>\n                      </div>\n                      <div className='dropdowns'>\n                        <select className='property-control' name='property_price_max' onChange={searchUpdate}>\n                          <option value={10000000}>No max</option>\n                          <option><NumericFormat value={300000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={400000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={600000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={700000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={800000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={900000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1250000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={1750000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={2000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={2500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={3000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={3500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={4000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={5000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                          <option><NumericFormat value={10000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                        </select>\n                      </div>\n                    </div>\n                  </>\n                  :\n                  ''}\n            </div>\n            <div className='content-sections'>\n              <h3>How many bedrooms?</h3>\n              <div className='dropdown-sections' id='final-step'>\n                <div className='dropdowns' id='property'>\n                  <select className='property-control' name='property_beds_min' onChange={searchUpdate}>\n                    <option value={0}>No min</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                  </select>\n                </div>\n                <div className='dropdowns'>\n                  <select className='property-control' name='property_beds_max' onChange={searchUpdate}>\n                    <option value={5}>No max</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className='content-sections'>\n              <h3>What kind of property do you want?</h3>\n              <div className='dropdown-sections' id='final-step'>\n                <div className='dropdowns' id='property'>\n                  <select className='property-control' name='property_type' onChange={searchUpdate}>\n                    <option>Any</option>\n                    <option>House</option>\n                    <option>Flat</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className='content-sections'>\n              <h3>How far do you want to search?</h3>\n              <div className='dropdown-sections' id='final-step'>\n                <div className='dropdowns' id='property'>\n                  <select className='property-control' name='search_area' onChange={searchUpdate}>\n                    <option value={0.25}>Within 1/4 mile</option>\n                    <option value={0.5}>Within 1/2 mile</option>\n                    <option value={0.75}>Within 3/4 mile</option>\n                    <option value={1}>Within 1 mile</option>\n                    <option value={1.5}>Within 1.5 miles</option>\n                    <option value={2}>Within 2 miles</option>\n                    <option value={3}>Within 3 miles</option>\n                    <option value={4}>Within 4 miles</option>\n                    <option value={5}>Within 5 miles</option>\n                    <option value={30}>No limit</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n            <div className='content-sections'>\n              <button className='search-button' onClick={searchSubmit}>Search</button>\n\n\n            </div>\n          </section>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\n\nexport default NormalPropertySearchModal","\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\n\nconst AutoCompleteSearch = ({ userEmail, setUserEmail, livingData, setLivingData, getLocation, setViewport, getClickData, setLoading, setLifestyleLat, setLifestyleLong, setClick }) => {\n\n  const [query, setQuery] = useState('')\n  const [suggestions, setSuggestions] = useState([])\n  const [isSearching, setIsSearching] = useState(false)\n\n\n  const handleInputChange = (event) => {\n    const inputQuery = event.target.value\n\n    // Update the query state with the new input value\n    setQuery(inputQuery)\n\n    // If the input value is at least 3 characters long, fetch search suggestions\n    if (inputQuery.length >= 3) {\n      // Replace with your own OpenCage API key\n      const API_KEY = 'f22a950a93fc47e0a7c4978926488642'\n      const URL = `https://api.opencagedata.com/geocode/v1/json?q=${inputQuery}&key=${API_KEY}&countrycode=gb&limit=5&no_annotations=1`\n\n      // Use a debounce function to limit the number of requests sent to the OpenCage API\n      const debounceSearch = debounce(() => {\n        setIsSearching(true)\n        axios\n          .get(URL)\n          .then((response) => {\n            // Update the suggestions state with the search results\n            setSuggestions(response.data.results)\n          })\n          .catch((error) => {\n            console.error(error)\n          })\n          .finally(() => {\n            setIsSearching(false)\n          })\n      }, 1500)\n      debounceSearch()\n    } else {\n      // If the input value is less than 3 characters long, clear the suggestions state\n      setSuggestions([])\n    }\n  }\n\n  const handleSuggestionClick = (location) => {\n    // Get the selected location from the suggestion object\n    const { geometry, formatted, components } = location\n\n    // Clear the input and suggestions states\n\n    console.log(location)\n    setQuery(formatted)\n    setUserEmail({ ...userEmail, long: geometry.lng, lat: geometry.lat })\n    setLivingData({ ...livingData, long: geometry.lng, lat: geometry.lat })\n    setLifestyleLat(parseFloat(geometry.lat))\n    setLifestyleLong(parseFloat(geometry.lng))   \n    // getClickData()\n    setViewport({\n      latitude: geometry.lat,\n      longitude: geometry.lng,\n      zoom: 13,\n    })\n    setLoading(true)\n    setSuggestions([])\n    setClick(true)\n  }\n\n  function debounce(fn, delay) {\n    let timerId\n    return function (...args) {\n      if (timerId) {\n        clearTimeout(timerId)\n      }\n      timerId = setTimeout(() => {\n        fn(...args)\n        timerId = null\n      }, delay)\n    }\n  }\n\n\n  return (\n    <>\n\n      <div className='search-bar-input'>\n        <input type=\"text\" id='address-border' value={query} onChange={handleInputChange} placeholder='🔎 set address' />\n        <div className='search-suggestions-box'>\n\n          {isSearching && <p>Loading...</p>}\n          {suggestions.length > 0 && (\n            <ul className='suggestions-list'>\n              {suggestions.map((suggestion) => (\n                <>\n                  <li key={suggestion.formatted} onClick={() => handleSuggestionClick(suggestion)}>\n                    🔎 {suggestion.formatted}\n                  </li>\n                  <hr />\n                </>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </>\n  )\n\n}\nexport default AutoCompleteSearch"],"names":["getAccessToken","window","localStorage","getItem","getPayLoad","token","payLoad","split","JSON","parse","atob","isUserAuth","currentTime","Math","floor","Date","now","exp","getUserToken","menuShow","handleMenuClose","setMenuShow","removeItemFromStorage","navigate","useNavigate","propertySearch","setPropertySearch","useState","show","onHide","backdrop","className","onExited","animation","onClick","handleSearchClose","renting","setRenting","buying","setBuying","locations","setLocations","userEmail","setUserEmail","lifestyleLat","setLifestyleLat","lifestyleLong","setLifestyleLong","viewport","setViewport","loading","setLoading","click","setClick","formData","setFormData","channel","location","property_price_min","property_price_max","property_beds_min","property_beds_max","type","search_area","long","lat","searchUpdate","e","test","target","value","includes","newValue","replace","name","console","log","id","style","backgroundColor","livingData","setLivingData","onChange","displayType","thousandSeparator","prefix","setItem","stringify","getLocation","getClickData","query","setQuery","suggestions","setSuggestions","isSearching","setIsSearching","event","inputQuery","length","URL","debounceSearch","fn","delay","timerId","args","clearTimeout","setTimeout","debounce","axios","then","response","data","results","catch","error","finally","placeholder","map","suggestion","geometry","formatted","components","lng","parseFloat","latitude","longitude","zoom","handleSuggestionClick"],"sourceRoot":""}