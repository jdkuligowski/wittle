{"version":3,"file":"static/js/545.6603db19.chunk.js","mappings":"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","sources":["components/helpers/AccessDenied.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../auth/Auth'\nimport NavBar from '../tools/NavBar'\nimport { Modal } from 'react-bootstrap'\n\n\n\nconst AccessDenied = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  })\n\n  // set error state\n  const [errors, setErrors] = useState(false)\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', formData)\n      console.log(formData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // update registration data\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    console.log(e.target.name)\n    console.log(e.target.value)\n    // setErrors({ ...errors, [e.target.name]: '' })\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      handleRegisterClose()\n    } catch (err) {\n      // setErrors(err.response.status + ' ' + err.response.statusText)\n    }\n  }\n\n  return (\n    <>\n      <section className='denied-page'>\n        <NavBar />\n        <section className='denied-section'>\n          <div className='denied-top'>\n            <h1>Oops! Dead end</h1>\n            <h3>There&apos;s no content here. You need to carry out a fresh search to unlock the Wittle Magic.</h3>\n            {/* <h3>This content is for our registered users only. Want to see it? <span onClick={handleRegisterShow}>Join Wittle.</span> If you don&apos;t, there&apos;s still plenty for you to do..</h3> */}\n            <div className='button-section'>\n              <button onClick={() => navigate('/property-search')}>Search properties</button>\n              <button onClick={() => navigate('/wittle-search')}>Wittle search</button>\n            </div>\n          </div>\n        </section>\n      </section>\n      <div className='register-modal-container'>\n        <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n          <Modal.Body>\n            <form className='form-detail' onSubmit={registerSubmit} >\n              <h1>Unlock the benefits of Wittle</h1>\n              <p>Set up an account to help you find the perfect home</p>\n              <hr />\n              <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n              <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n              <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n              {/* {errors && <p className = 'denied-text'>Please input username</p>} */}\n              <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n              {/* {errors && <p className = 'denied-text'>Please input email</p>} */}\n              <input type='password' name='password' className='input' placeholder='Password' value={registerData.password} onChange={registerChange} />\n              {/* {errors && <p className = 'denied-text'>Please input password</p>} */}\n              <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n              {/* Submit */}\n              {/* <hr/> */}\n              <button type='submit'>Register</button>\n            </form>\n            <div className='register-bottom'>\n              <button className='register-close' onClick={handleRegisterClose}>Close</button>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    </>\n\n  )\n}\n\nexport default AccessDenied"],"names":["AccessDenied","navigate","useNavigate","isActive","setIsActive","useRef","useState","formData","setFormData","email","password","errors","setErrors","registerShow","setRegisterShow","handleRegisterClose","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerChange","e","target","name","value","console","log","_jsxs","_Fragment","children","className","_jsx","NavBar","onClick","Modal","show","onHide","backdrop","Body","onSubmit","async","preventDefault","axios","post","err","type","placeholder","onChange"],"sourceRoot":""}