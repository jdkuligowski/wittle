{"version":3,"file":"static/js/608.0c2162f4.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/b2bModals/RemoveProperties.js","components/whiteLabel/b2bModals/ArchivedPropertiesModal.js","components/whiteLabel/EPCMatcher/LeadGenSections/LeadGenSaved.js","components/whiteLabel/b2bModals/UnhiddenModal.js","components/whiteLabel/EPCMatcher/LeadGenSections/HiddenProperties.js","components/whiteLabel/b2bModals/ArchivedToSavedModal.js","components/whiteLabel/EPCMatcher/LeadGenSections/ArchivedProperties.js","components/whiteLabel/EPCMatcher/LetterSection/TemplateOptions.js","components/whiteLabel/EPCMatcher/LetterSection/Campaigns/CreateCampaign.js","components/whiteLabel/EPCMatcher/LetterSection/Campaigns/CampaignOverview.js","components/whiteLabel/EPCMatcher/LetterSection/SetSignatures.js","components/whiteLabel/EPCMatcher/LetterSection/LettersHubs.js","components/whiteLabel/EPCMatcher/LeadGenSections/LandRegTesting.js","components/whiteLabel/EPCMatcher/LeadGenerator.js","components/whiteLabel/EPCMatcher/LetterSection/TemplatePDFs.js/BasicTemplate.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/transparent-spinner.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport { CarouselItem } from 'react-bootstrap'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl,\n  savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites, handleSavedActionShow, setLatestFavourites, setSavedActionShow }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState('Lettings')\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index] && channel === 'Lettings') {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      } else if (!matchingProperties[index] && channel === 'Sales') {\n        const matches = await liveSalesProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setMatchingProperties({})\n    setExpandedItems(new Set())\n    setLoading(true)\n    setSearch(false)\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n  const liveSalesProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function for adding favourites based on relevant row\n  const addPartialFavourite = async (epcData) => {\n    if (isUserAuth()) {\n      const random12DigitNumber = Math.floor(Math.random() * 1e12)\n      const newFavourites = [{\n        'rightmove_id': random12DigitNumber.toString(),\n        'postcode': epcData.postcode,\n        'address': epcData.address,\n        'agent': '',\n        'type': '',\n        'addedOn': '',\n        'propertyType': '',\n        'price': null,\n        'bathrooms': null,\n        'bedrooms': null,\n        'let_available_date': null,\n        'date_added_db': null,\n        'url': '',\n        'current_epc': epcData.current_energy_efficiency,\n        'potential_epc': epcData.potential_energy_efficiency,\n        'action': 'Saved',\n        'added_revised': null,\n        'reduced_revised': null,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setExpandedItems(new Set())\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className='buttons'>\n                                  {savedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                    <div className='saved-message'>\n                                      <h3>Saved</h3>\n                                    </div>\n                                    :\n                                    archivedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                      <div className='saved-message'>\n                                        <h3>Archived</h3>\n                                      </div>\n                                      :\n                                      <>\n                                        <div className='heart-icon' onClick={() => addPartialFavourite(item)} ></div>\n                                        <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                          {expandedItems.has(index) ? '-' : '+'}\n                                        </button>\n                                      </>\n                                  }\n                                </div>\n\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n      <SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\n\nexport default ManualMatcher","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst RemoveProperties = ({ propertyRemoveShow, handleRemovePropertyClose, removeProperty }) => {\n\n  const closeAndLeave = () => {\n    // setLeadGenSection('Saved properties')\n    handleRemovePropertyClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={propertyRemoveShow} onHide={handleRemovePropertyClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleRemovePropertyClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>Are you sure you don&apos;t want to see these properties any more?</h3>\n                <h3 className='sub-message'>Once you do this, they won&apos;t appear in your latest or saved properties.</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={removeProperty}>Remove</button>\n                <button className='stay' onClick={handleRemovePropertyClose}>Go back</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default RemoveProperties","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst ArchivedPropertiesModal = ({ archivedActionShow, handleArchivedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Archived properties')\n    handleArchivedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={archivedActionShow} onHide={handleArchivedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleArchivedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your archived list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to archived</button>\n                <button className='stay' onClick={handleArchivedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default ArchivedPropertiesModal","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Select from 'react-select'\nimport ArchivedPropertiesModal from '../../b2bModals/ArchivedPropertiesModal'\nimport Swal from 'sweetalert2'\nimport Loading from '../../../helpers/Loading'\n\n\nconst LeadGenSaved = ({ savedProperties, userData, csvData, setCsvData, getCurrentDate, handleVisitUrl, loadUserData, setSavedProperties,\n  setLatestFavourites, latestFavourites, setLeadGenSection }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state to determine what kind of view we want to see on the page\n  const [savedPropertyView, setSavedPropertyView] = useState('Grid')\n\n  // state to determine whether the row has been expanded or not\n  const [expandedRows, setExpandedRows] = useState({})\n\n  // state to determmine whether the item is being edited or not\n  const [editModes, setEditModes] = useState({})\n\n  // state for the expanded row data\n  const [formData, setFormData] = useState({})\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n  const [onMarket, setOnMarket] = useState([])\n  const [offMarket, setOffMarket] = useState([])\n\n  // state for whether we see on market or off market\n  const [marketView, setMarketView] = useState('Live')\n\n  // state for controlling the filters opening and closing\n  const [filterView, setFilterView] = useState(false)\n\n  const [channel, setChannel] = useState('')\n  const [postcode, setPostcode] = useState('')\n  const [bedroomsMin, setBedroomsMin] = useState('')\n  const [bedroomsMax, setBedroomsMax] = useState('')\n  const [priceMin, setPriceMin] = useState('')\n  const [priceMax, setPriceMax] = useState('')\n  const [trackingData, setTrackingData] = useState('')\n  const [minPriceOptions, setMinPriceOptions] = useState([])\n  const [maxPriceOptions, setMaxPriceOptions] = useState([])\n\n  const [favouriteDetailsLoading, setFavouriteDetailsLoading] = useState(false)\n\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'ascending' })\n\n\n  const parsePrice = (price) => {\n    if (!price) return 0 // Handle null or undefined prices\n\n    // Remove non-numeric characters except for decimal points and commas\n    let numericPrice = price.replace(/[^0-9.,]+/g, '')\n\n    // If the price is a rental price per month (indicated by \"pcm\"), convert it to an annual equivalent for consistent comparison\n    if (price.toLowerCase().includes('pcm')) {\n      numericPrice = numericPrice.replace(/,/g, '') // Remove commas\n      return parseFloat(numericPrice) * 12 // Convert monthly price to annual\n    } else {\n      return parseFloat(numericPrice.replace(/,/g, '')) // Remove commas and convert to float\n    }\n  }\n\n\n  useEffect(() => {\n    if (savedProperties) {\n      let data = savedProperties\n\n      if (channel) {\n        data = data.filter(item => item.channel === channel)\n      }\n      if (postcode) {\n        data = data.filter(item => item.postcode.toUpperCase().startsWith(postcode.toUpperCase()))\n      }\n      if (bedroomsMin) {\n        data = data.filter(item => parseInt(item.bedrooms) >= parseInt(bedroomsMin))\n      }\n      if (bedroomsMax) {\n        data = data.filter(item => parseInt(item.bedrooms) <= parseInt(bedroomsMax))\n      }\n      if (priceMin) {\n        data = data.filter(item => parsePrice(item.price) >= parseFloat(priceMin))\n      }\n      if (priceMax) {\n        data = data.filter(item => parsePrice(item.price) <= parseFloat(priceMax))\n      }\n      if (trackingData) {\n        data = data.filter(item => parseInt(item.live_tracking) === parseInt(trackingData))\n      }\n\n      // Sort the filtered data\n      const sortedData = getSortedProperties(data)\n\n      const offMarketProperties = sortedData.filter(item => item.market_status === 'Off Market')\n      const onMarketProperties = sortedData.filter(item => item.market_status === 'Live')\n      setOffMarket(offMarketProperties)\n      setOnMarket(onMarketProperties)\n    }\n  }, [savedProperties, channel, postcode, bedroomsMin, bedroomsMax, priceMin, priceMax, trackingData, sortConfig])\n\n\n\n  useEffect(() => {\n    // Conditionally set price options based on the channel\n    if (channel === 'rent') {\n      setMinPriceOptions(rentalPriceOptions)\n      setMaxPriceOptions(rentalPriceOptions)\n    } else if (channel === 'sale') {\n      setMinPriceOptions(salesPriceOptions)\n      setMaxPriceOptions(salesPriceOptions)\n    } else {\n      setMinPriceOptions([])\n      setMaxPriceOptions([])\n    }\n  }, [channel])\n\n  const bedroomOptions = [\n    { value: '1', label: '1' },\n    { value: '2', label: '2' },\n    { value: '3', label: '3' },\n    { value: '4', label: '4' },\n    { value: '5', label: '5' },\n    { value: '6', label: '6' },\n    { value: '7', label: '7' }\n  ]\n\n  const rentalPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100 + i * 100}`, label: `£${100 + i * 100}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000 + i * 200}`, label: `£${1000 + i * 200}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000 + i * 250}`, label: `£${2000 + i * 250}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000 + i * 500}`, label: `£${4000 + i * 500}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000 + i * 1000}`, label: `£${8000 + i * 1000}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${12000 + i * 2000}`, label: `£${12000 + i * 2000}` }))\n  ]\n\n  const salesPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100000 + i * 100000}`, label: `£${(100000 + i * 100000).toLocaleString()}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000000 + i * 200000}`, label: `£${(1000000 + i * 200000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000000 + i * 250000}`, label: `£${(2000000 + i * 250000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000000 + i * 500000}`, label: `£${(4000000 + i * 500000).toLocaleString()}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000000 + i * 1000000}`, label: `£${(8000000 + i * 1000000).toLocaleString()}` })),\n    ...Array.from({ length: 6 }, (_, i) => ({ value: `${12000000 + i * 2000000}`, label: `£${(12000000 + i * 2000000).toLocaleString()}` }))\n  ]\n\n\n  // function for clearing filters\n  const clearFilters = () => {\n    setChannel('')\n    setPostcode('')\n    setBedroomsMin('')\n    setBedroomsMax('')\n    setTrackingData('')\n    setPriceMin('')\n    setPriceMax('')\n  }\n\n  // Function to toggle row expansion\n  const toggleRowExpansion = (rightmoveId) => {\n    const item = savedProperties.find(prop => prop.rightmove_id === rightmoveId)\n\n    // Toggle the expanded state\n    setExpandedRows(prevExpandedRows => ({\n      ...prevExpandedRows,\n      [rightmoveId]: !prevExpandedRows[rightmoveId],\n    }))\n\n    // Reinitialize formData for the item if expanding\n    if (!expandedRows[rightmoveId]) {\n      // Check if formData already exists for this item to avoid overwriting unsaved edits\n      if (!formData[rightmoveId]) {\n        setFormData(prevFormData => ({\n          ...prevFormData,\n          [rightmoveId]: {\n            owner_name: item.owner_name || '',\n            owner_email: item.owner_email || '',\n            owner_mobile: item.owner_mobile || null,\n            emails_sent: item.emails_sent || null,\n            letters_sent: item.letters_sent || null,\n            hand_cards: item.hand_cards || null,\n            notes: item.notes || '',\n            live_tracking: item.live_tracking || 0,\n          },\n        }))\n      }\n    } else {\n      // Optionally, clear formData for the item if collapsing the row\n      // Comment out or adjust based on whether you want to retain formData for collapsed rows\n      /*\n      setFormData(prevFormData => {\n        const newData = { ...prevFormData };\n        delete newData[rightmoveId];\n        return newData;\n      });\n      */\n    }\n  }\n\n\n  // Function to toggle edit mode\n  const toggleEditMode = (rightmoveId, item) => {\n    if (!editModes[rightmoveId]) {\n      // Initialize formData for the specific item\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [rightmoveId]: {\n          owner_name: item.owner_name || '',\n          owner_email: item.owner_email || '',\n          owner_mobile: item.owner_mobile || null,\n          emails_sent: item.emails_sent || null,\n          letters_sent: item.letters_sent || null,\n          hand_cards: item.hand_cards || null,\n          notes: item.notes || '',\n          live_tracking: item.live_tracking || 0,\n\n        },\n      }))\n    } else {\n      // Optionally clear formData for the item if exiting edit mode\n      // setFormData(prevFormData => {\n      //   const newData = { ...prevFormData }\n      //   delete newData[rightmoveId]\n      //   return newData\n      // })\n    }\n\n    setEditModes(prevEditModes => ({\n      ...prevEditModes,\n      [rightmoveId]: !prevEditModes[rightmoveId],\n    }))\n  }\n\n  const getSortedProperties = (properties) => {\n    const sortedProperties = [...properties]\n\n    if (sortConfig.key) {\n      sortedProperties.sort((a, b) => {\n        if (sortConfig.key === 'price') {\n          // Use parsePrice to convert price to a numeric value\n          const priceA = parsePrice(a.price)\n          const priceB = parsePrice(b.price)\n\n          if (priceA < priceB) return sortConfig.direction === 'ascending' ? -1 : 1\n          if (priceA > priceB) return sortConfig.direction === 'ascending' ? 1 : -1\n          return 0\n        } else if (sortConfig.key === 'date_added') {\n          const dateA = new Date(a.date_added)\n          const dateB = new Date(b.date_added)\n\n          if (dateA < dateB) return sortConfig.direction === 'ascending' ? -1 : 1\n          if (dateA > dateB) return sortConfig.direction === 'ascending' ? 1 : -1\n          return 0\n        }\n        return 0\n      })\n    }\n    return sortedProperties\n  }\n  \n\n  const handleSort = (key) => {\n    let direction = 'ascending'\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending'\n    }\n    setSortConfig({ key, direction })\n  }\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(favouriteIds.length)\n        loadUserData()\n        handleArchivedActionShow()\n        setSelectedRows([])\n\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to update the saved item: \n  const handleSave = async (rightmoveId) => {\n    setFavouriteDetailsLoading(true)\n    if (isUserAuth()) {\n      try {\n        const response = await axios.patch(`/api/epc_favourite/update_favourites/${rightmoveId}/`, formData[rightmoveId], {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        await loadUserData()\n        setEditModes(prevEditModes => ({\n          ...prevEditModes,\n          [rightmoveId]: false,\n        }))\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      } finally {\n        setFavouriteDetailsLoading(false)  // Ensure loading state is set to false in both success and error cases\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n      setFavouriteDetailsLoading(false)\n    }\n  }\n\n\n  // function to move properties into the letter sequence\n  const moveToLetters = async (favouriteIds) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/move_to_letters/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('Response:', response.data)\n        Swal.fire({\n          title: '😎 action complete',\n          text: `${favouriteIds.length} properties prepared for outbound letters`,\n          confirmButtonText: 'Go to letter hub',\n          confirmButtonColor: '#ED6B86',\n          cancelButtonText: 'Stay here',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            setLeadGenSection('Letter campaigns')\n          }\n        })\n        loadUserData()\n        setSelectedRows([])\n\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function for determining what to do with the drop down selector\n  const handleDropdownChange = (selectedOption) => {\n    if (selectedOption.value === 'export') {\n      // Handle Export\n      // You might need to programmatically click a hidden CSVLink here\n      document.querySelector('.csv-link').click()\n      setSelectedRows([])\n    } if (selectedOption.value === 'archive') {\n      // Handle Archive\n      archiveFavourite(selectedRows.map(row => row.rightmove_id))\n    } else if (selectedOption.value === 'letter') {\n      // Handle Archive\n      moveToLetters(selectedRows.map(row => row.rightmove_id))\n    }\n  }\n\n  const options = [\n    { value: 'export', label: 'Extract' },\n    { value: 'archive', label: 'Archive' },\n    { value: 'letter', label: 'Letters' }\n  ]\n\n\n  // ? Section 4: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n    console.log('selected row ->', item)\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setSelectAllStatus(savedProperties.length === selectedRows.length)\n  }\n\n  const selectAllRows = () => {\n    if (marketView === 'Live') {\n      setSelectedRows(onMarket)\n    } else if (marketView === 'Off Market') {\n      setSelectedRows(offMarket)\n    }\n    setSelectAllStatus(true)\n  }\n\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  const transformSelectedRowsToCSV = (selectedRows) => {\n    return selectedRows.map((item, index) => ({\n      item: index + 1,\n      url: item.url,\n      address: item.address,\n      postcode: item.postcode,\n      addressPostcode: `${item.address}, ${item.postcode}`,\n      addedOn: item.added_revised,\n      property_type: item.property_type,\n      price: item.price,\n      bedrooms: item.bedrooms,\n      bathrooms: item.bathrooms,\n      let_available_date: item.let_available_date,\n      date_added: item.date_added_db,\n      agent: item.agent,\n      channel: item.channel,\n      owner_name: item.owner_name,\n      owner_email: item.owner_email,\n      owner_mobile: item.owner_mobile,\n      emails_sent: item.emails_sent,\n      letters_sent: item.letters_sent,\n      hand_cards: item.hand_cards,\n      notes: item.notes,\n\n    }))\n  }\n\n  useEffect(() => {\n    if (selectedRows) {\n      const csvData = transformSelectedRowsToCSV(selectedRows)\n      setCsvData(csvData)\n    }\n  }, [selectedRows]) // Re-run when selectedRows changes\n\n  // manageing modal for saved iitems added \n  const [archivedActionShow, setArchivedActionShow] = useState(false)\n\n  // close modal\n  const handleArchivedActionClose = () => {\n    setArchivedActionShow(false)\n  }\n\n  // show the modal\n  const handleArchivedActionShow = (e) => {\n    setArchivedActionShow(true)\n    setSelectedRows([])\n  }\n\n\n  const formatDate = (dateStr) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December']\n    const suffixes = ['th', 'st', 'nd', 'rd']\n\n    const date = new Date(dateStr)\n    const day = date.getDate()\n    const monthIndex = date.getMonth()\n    const year = date.getFullYear()\n\n    // Find the correct suffix for the day\n    const tensDigit = day % 10\n    const suffixIndex = (day < 10 || day > 20) ? tensDigit : 0\n    const suffix = suffixes[suffixIndex] || suffixes[0]\n\n    return `${day}${suffix} ${months[monthIndex]} ${year}`\n  }\n\n\n\n\n  return (\n\n    <>\n      <div className='results-block'>\n        {savedProperties && savedProperties.length > 0 ?\n          <>\n            <div className=\"property-insight-nav\">\n\n              <div className=\"property-insight-buttons\">\n                <h3 className={`insight-button ${marketView === 'Live' ? 'active' : 'inactive'}`} id='left' onClick={() => setMarketView('Live')}>Live properties</h3>\n                <h3 className={`insight-button ${marketView === 'Off Market' ? 'active' : 'inactive'}`} id='right' onClick={() => setMarketView('Off Market')}>Withdrawn or sold</h3>\n              </div>\n            </div>\n\n            <div className='title-section'>\n              <h3 className='sub-title'>You have {onMarket && marketView === 'Live' ? `${onMarket.length} on market` : offMarket && marketView === 'Off Market' ? `${offMarket.length} off market` : ''} properties ready to be extracted</h3>\n              <div className='tracking-actions'>\n                {userData && userData.company_favourites && (\n                  <>\n                    <Select\n                      className='select-dropdown'\n                      options={options}\n                      onChange={handleDropdownChange}\n                      isSearchable={false}\n                      placeholder=\"Select an action\"\n                    />\n                    <CSVLink\n                      data={csvData || []}\n                      className='export csv-link' // Added a class for easy selection\n                      filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                      style={{ display: 'none' }} // Hide the link as it's now triggered programmatically\n                    >\n                    </CSVLink>\n                  </>\n                )}\n                <div\n                  className={`filter-icon ${filterView ? 'active' : 'inactive'}`}\n                  onClick={() => setFilterView(!filterView)}\n                  style={{ backgroundColor: filterView ? '#1A276C' : 'inherit' }}>\n                </div>\n              </div>\n            </div>\n            {filterView ?\n              <div className={`filter-row-section ${filterView ? 'active' : 'inactive'}`}>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Channel</h3>\n                  <select onChange={(e) => setChannel(e.target.value)}>\n                    <option value={''}>Select...</option>\n                    <option value={'sale'}>Sale</option>\n                    <option value={'rent'}>Rent</option>\n                  </select>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Postcode</h3>\n                  <input className='filter-input' onChange={(e) => setPostcode(e.target.value)}></input>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Bedrooms</h3>\n                  <select className='small' value={bedroomsMin} onChange={e => setBedroomsMin(e.target.value)}>\n                    <option value={''}>Min</option>\n                    {bedroomOptions.map(option => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                  <select className='small' value={bedroomsMax} onChange={e => setBedroomsMax(e.target.value)}>\n                    <option value={''}>Max</option>\n                    {bedroomOptions.filter(option => option.value >= bedroomsMin).map(option => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Price</h3>\n                  <select className='small' value={priceMin} onChange={e => setPriceMin(e.target.value)}>\n                    <option value={''}>Min</option>\n                    {minPriceOptions.map((option) => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                  <select className='small' value={priceMax} onChange={e => setPriceMax(e.target.value)}>\n                    <option value={''}>Max</option>\n                    {maxPriceOptions.map((option) => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Tracking</h3>\n                  <select onChange={(e) => setTrackingData(e.target.value)}>\n                    <option value={''}>All</option>\n                    <option value={'1'}>Yes</option>\n                    <option value={'0'}>No</option>\n                  </select>\n                </div>\n                <button className='clear-filters' onClick={clearFilters}>Clear</button>\n              </div>\n              : ''}\n\n            <div className='results-table'>\n              <div className='results-headers'>\n                <div id='column11' className='column'>\n                  <div className='custom-checkbox'>\n                    <input\n                      className='checkbox'\n                      type=\"checkbox\"\n                      checked={\n                        marketView === 'Live' && selectedRows && onMarket ? selectedRows.length === onMarket.length && onMarket.length > 0 :\n                          marketView === 'Off Market' && selectedRows && offMarket ? selectedRows.length === offMarket.length && offMarket.length > 0 :\n                            false\n                      }\n                      onChange={handleSelectAllChange}\n                    />\n                    <label className='label'></label>\n                  </div>\n                </div>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5\n                    onClick={() => handleSort('price')}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    Price {sortConfig.key === 'price' && (sortConfig.direction === 'ascending' ? '↑' : '↓')}\n                  </h5>\n                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9saved' className='column'>\n                  <h5\n                    onClick={() => handleSort('date_added')}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    Date Saved {sortConfig.key === 'date_added' && (sortConfig.direction === 'ascending' ? '↑' : '↓')}\n                  </h5>\n                </div>\n                <div id='column10saved' className='column'>\n                  <h5></h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              {/* <div className='saved-properties'> */}\n              <div className={`results-details archive ${filterView ? 'active' : 'inactive'}`}>\n                {(marketView === 'Live' ? onMarket : offMarket).map((item, index) => {\n                  const isRowExpanded = expandedRows[item.rightmove_id]\n                  const isEditMode = editModes[item.rightmove_id]\n                  const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.rightmove_id)\n                  return (\n                    <>\n                      <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                        <div className='column' id='column11'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type='checkbox'\n                              checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                              onChange={(e) => handleRowSelectionChange(e, item)}\n                            />\n                            <label className='label'>\n                            </label>\n                          </div>\n                        </div>\n                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.address}</h5>\n                        </div>\n                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.postcode}</h5>\n                        </div>\n                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                        </div>\n                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                        </div>\n                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.channel}</h5>\n                        </div>\n                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.price}</h5>\n                        </div>\n                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.bedrooms}</h5>\n                        </div>\n                        <div className='column' id='column9saved' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{formatDate(item.date_added)}</h5>\n                        </div>\n                        {savedPropertyView === 'Grid' ?\n                          <>\n                            <div className='column' id='column10saved' onClick={() => toggleRowExpansion(item.rightmove_id)}>\n                              <h5 className='expander'>{isRowExpanded ? 'v' : '^'}</h5>\n                            </div>\n\n                          </>\n                          : savedPropertyView === 'Table' ?\n                            <>\n                            </>\n                            : ''}\n                      </div>\n                      {isRowExpanded && !favouriteDetailsLoading ?\n                        <div className='expanded-tracking-details'>\n                          <div className='expanded-tracking-content'>\n                            <div className='tracking-left'>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Owner name: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.owner_name}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].owner_name || ''}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], owner_name: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Owner email: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.owner_email}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].owner_email || ''}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], owner_email: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Owner phone: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.owner_mobile}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].owner_mobile || null}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], owner_mobile: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Currently Tracking: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.live_tracking === 1 ? 'Yes' : 'No'}</h3> :\n                                  <input\n                                    type='checkbox'\n                                    checked={!!formData[item.rightmove_id].live_tracking} // Convert `live_tracking` to boolean for checked attribute\n                                    onChange={(e) => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: {\n                                        ...formData[item.rightmove_id],\n                                        live_tracking: e.target.checked ? 1 : 0, // Assign 1 if checked, 0 if not\n                                      },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                            </div>\n                            <div className='tracking-middle'>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Emails sent: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.emails_sent}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].emails_sent || null}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], emails_sent: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Letters sent: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.letters_sent}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].letters_sent || null}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], letters_sent: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Hand written cards: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.hand_cards}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].hand_cards || null}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], hand_cards: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                            </div>\n                            <div className='tracking-right'>\n                              <div className='tracking-row'>\n                                {!isEditMode ? (\n                                  <h3 className='row-result'>{item.notes}</h3>\n                                ) : (\n                                  <textarea\n                                    placeholder='Notes'\n                                    value={formData[item.rightmove_id].notes || ''}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: {\n                                        ...formData[item.rightmove_id],\n                                        notes: e.target.value,\n                                      },\n                                    })}\n                                  ></textarea>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div className='expanded-tracking-actions'>\n                            <button className='save' onClick={() => {\n                              if (isEditMode) {\n                                handleSave(item.rightmove_id)\n                              } else {\n                                toggleEditMode(item.rightmove_id, item) // Pass 'item' to populate formData for edit mode\n                              }\n                            }}>\n                              {isEditMode ? 'Save' : 'Edit'}\n                            </button>\n                            <button className='delete' onClick={() => deleteFavourite(item.rightmove_id)}>Delete</button>\n                          </div>\n                        </div>\n                        : isRowExpanded && favouriteDetailsLoading ?\n                          <div className='expanded-tracking-details'>\n                            <div className='expanded-tracking-content'>\n                              <div className='loading-tracking'>\n                                <Loading />\n                              </div>\n                            </div>\n                          </div >\n                          : ''}\n                      <hr className='property-divider' />\n                    </>\n                  )\n                })}\n                {/* </div> */}\n              </div>\n            </div>\n\n          </>\n          : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n        }\n      </div >\n      <ArchivedPropertiesModal\n        archivedActionShow={archivedActionShow}\n        handleArchivedActionClose={handleArchivedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\nexport default LeadGenSaved\n\n","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst UnhiddenModal = ({ hiddenSavedShow, handleHiddenSavedClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleHiddenSavedClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={hiddenSavedShow} onHide={handleHiddenSavedClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleHiddenSavedClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve moved {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} back to your saved list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleHiddenSavedClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default UnhiddenModal","\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport UnhiddenModal from '../../b2bModals/UnhiddenModal'\n\nconst HiddenProperties = ({ hiddenProperties, handleVisitUrl, loadUserData, setLeadGenSection, latestFavourites, setLatestFavourites }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n\n  // ? Section 4: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setSelectAllStatus(hiddenProperties.length === selectedRows.length)\n  }\n\n  const selectAllRows = () => {\n    setSelectedRows(hiddenProperties)\n    setSelectAllStatus(true)\n  }\n\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (selectedRows) => {\n    if (isUserAuth()) {\n      console.log(selectedRows)\n      // Extract rightmove_id from each selected row\n      const rightmoveIds = selectedRows.map(row => row.rightmove_id)\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/multiple/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_ids: rightmoveIds },\n        })\n        setLatestFavourites(rightmoveIds.length)\n        loadUserData()\n        handleHiddenSavedShow()\n        setSelectedRows([])\n        console.log('Response:', response.data)\n      } catch (error) {\n        console.error('Error deleting favourites:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // manageing modal for saved iitems added \n  const [hiddenSavedShow, setHiddenSavedShow] = useState(false)\n\n  // close modal\n  const handleHiddenSavedClose = () => {\n    setHiddenSavedShow(false)\n  }\n\n  // show the modal\n  const handleHiddenSavedShow = (e) => {\n    setHiddenSavedShow(true)\n    setSelectedRows([])\n  }\n\n  return (\n    <>\n      <div className='results-block'>\n        {hiddenProperties && hiddenProperties.length > 0 ?\n          <>\n            <div className='title-section'>\n              <h3 className='sub-title'>You have hidden {hiddenProperties.length} properties</h3>\n              <div className='action-section hidden'>\n                <div className='save-section'>\n                  <h3 onClick={() => deleteFavourite(selectedRows)}>Move properties</h3>\n                </div>\n              </div>\n            </div>\n            <div className='saved-select-row hidden'>\n              <div className='select-all-box hidden'>\n                <div className='custom-checkbox'>\n                  <input\n                    className='checkbox'\n                    type=\"checkbox\"\n                    checked={selectedRows.length === hiddenProperties.length && hiddenProperties.length > 0}\n                    onChange={handleSelectAllChange}\n                  />\n                  <label className='label'></label>\n                </div>\n              </div>\n            </div>\n            <div className='results-table'>\n\n              <div className='results-headers'>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Property type</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5>Price</h5>\n                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9' className='column'>\n                  <h5>Agent</h5>\n                </div>\n                <div id='column10' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column11' className='column'>\n                  <h5></h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              <div className='results-details archive'>\n                {hiddenProperties ? hiddenProperties.map((item, index) => {\n                  return (\n                    <>\n                      <div className='results-content'>\n                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.address}</h5>\n                        </div>\n                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.postcode}</h5>\n                        </div>\n                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.added_revised}</h5>\n                        </div>\n                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.reduced_revised}</h5>\n                        </div>\n                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.property_type}</h5>\n                        </div>\n                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.price}</h5>\n                        </div>\n                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.bedrooms}</h5>\n                        </div>\n                        <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.agent}</h5>\n                        </div>\n                        <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.channel}</h5>\n                        </div>\n                        <div className='column' id='column11'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type='checkbox'\n                              checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                              onChange={(e) => handleRowSelectionChange(e, item)}\n                            />\n                            <label className='label'>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className='property-divider' />\n                    </>\n                  )\n                })\n                  : ' '}\n              </div>\n            </div>\n          </>\n          : <h3 className='sub-title'>You don&apos;t have any hidden properties. If you&apos;re not interested in a property, hide it to remove it from the main results page.</h3>\n        }\n      </div>\n      <UnhiddenModal \n        hiddenSavedShow={hiddenSavedShow}\n        handleHiddenSavedClose={handleHiddenSavedClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n    </>\n  )\n}\n\nexport default HiddenProperties","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst ArchviedToSavedModal = ({ archviedSavedShow, handleArchivedSavedClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleArchivedSavedClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={archviedSavedShow} onHide={handleArchivedSavedClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleArchivedSavedClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve moved {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} back to your saved list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleArchivedSavedClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default ArchviedToSavedModal","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport ArchviedToSavedModal from '../../b2bModals/ArchivedToSavedModal'\n\n\nconst ArchivedProperties = ({ archivedProperties, handleVisitUrl, loadUserData, setLeadGenSection, latestFavourites, setLatestFavourites }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const [postcode, setPostcode] = useState('')\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'ascending' })\n\n\n  // ? Section 4: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setSelectAllStatus(archivedProperties.length === selectedRows.length)\n  }\n\n  const selectAllRows = () => {\n    setSelectedRows(archivedProperties)\n    setSelectAllStatus(true)\n  }\n\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  const updateFavourites = async (selectedRows) => {\n    if (isUserAuth()) {\n      try {\n        const rightmoveIds = selectedRows.map(row => row.rightmove_id)\n        const response = await axios.put('/api/epc_favourite/update_favourites/archive-to-saved/', { favourite_ids: rightmoveIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('Response:', response.data)\n        setLatestFavourites(rightmoveIds.length)\n        loadUserData()\n        handleArchivedSavedShow()\n        setSelectedRows([])\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // manageing modal for saved iitems added \n  const [archviedSavedShow, setArchivedSavedShow] = useState(false)\n\n  // close modal\n  const handleArchivedSavedClose = (e) => {\n    setArchivedSavedShow(false)\n  }\n\n  // show the modal\n  const handleArchivedSavedShow = (e) => {\n    setArchivedSavedShow(true)\n    setSelectedRows([])\n  }\n\n\n  // Updated filter function to include agent\n  const getFilteredProperties = () => {\n    let filteredProperties = archivedProperties\n\n    if (searchQuery) {\n      const lowerCaseQuery = searchQuery.toLowerCase()\n      filteredProperties = filteredProperties.filter(property =>\n        property.address.toLowerCase().includes(lowerCaseQuery) ||\n        property.postcode.toLowerCase().includes(lowerCaseQuery) ||\n        property.agent.toLowerCase().includes(lowerCaseQuery)\n      )\n    }\n\n    if (sortConfig.key) {\n      filteredProperties = filteredProperties.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1\n        }\n        return 0\n      })\n    }\n\n    return filteredProperties\n  }\n\n\n\n  const handleSort = (key) => {\n    let direction = 'ascending'\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending'\n    }\n    setSortConfig({ key, direction })\n  }\n\n\n\n  return (\n\n    <>\n      <div className='results-block'>\n        {archivedProperties && archivedProperties.length > 0 ?\n          <>\n            <div className='title-section'>\n              <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n              <div className='action-section hidden'>\n                <div className='save-section'>\n                  <h3 onClick={() => updateFavourites(selectedRows)}>Move properties</h3>\n                </div>\n              </div>\n            </div>\n            <div className='search-section'>\n              <input\n                type=\"text\"\n                placeholder=\"🔎 Search data\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className='archive-search'\n              />\n            </div>\n\n            <div className='results-table'>\n\n              <div className='results-headers'>\n                <div id='column11' className='column'>\n                  <div className='custom-checkbox'>\n                    <input\n                      className='checkbox'\n                      type=\"checkbox\"\n                      checked={selectedRows.length === archivedProperties.length && archivedProperties.length > 0}\n                      onChange={handleSelectAllChange}\n                    />\n                    <label className='label'></label>\n                  </div>                </div>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Property type</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5\n                    onClick={() => handleSort('price_numeric')}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    Price {sortConfig.key === 'price_numeric' && (sortConfig.direction === 'ascending' ? '↑' : '↓')}\n                  </h5>                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column10' className='column'>\n                  <h5>Agent</h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              <div className='results-details archive'>\n                {getFilteredProperties().map((item, index) => {\n                  // {archivedProperties ? archivedProperties.map((item, index) => {\n                  return (\n                    <>\n                      <div className='results-content'>\n                        <div className='column' id='column11'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type='checkbox'\n                              checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                              onChange={(e) => handleRowSelectionChange(e, item)}\n                            />\n                            <label className='label'>\n                            </label>\n                          </div>\n                        </div>\n                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.address}</h5>\n                        </div>\n                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.postcode}</h5>\n                        </div>\n                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.added_revised}</h5>\n                        </div>\n                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.reduced_revised}</h5>\n                        </div>\n                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.property_type}</h5>\n                        </div>\n                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.price}</h5>\n                        </div>\n                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.bedrooms}</h5>\n                        </div>\n                        <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.channel}</h5>\n                        </div>\n                        <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.agent}</h5>\n                        </div>\n\n                      </div>\n\n                      <hr className='property-divider' />\n\n\n                    </>\n                  )\n                })\n                }\n              </div>\n            </div>\n          </>\n          : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apos;ll see them here.</h3>\n        }\n      </div>\n      <ArchviedToSavedModal\n        archviedSavedShow={archviedSavedShow}\n        handleArchivedSavedClose={handleArchivedSavedClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n\n    </>\n  )\n}\n\nexport default ArchivedProperties","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Modal } from 'react-bootstrap'\nimport Select from 'react-select'\nimport ReactSwitch from 'react-switch'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\nimport BasicTemplate from './TemplatePDFs.js/BasicTemplate'\nimport ReactDOMServer from 'react-dom/server'\n\n\n\nconst TemplateOptions = ({ createTemplateShow, handleCreateTemplateClose, signature, loadUserData, templateAction, currentTemplate, exampleData, setCampaignLoading }) => {\n\n  // loading for template\n  const [templateLoading, setTemplateLoading] = useState(false)\n\n  // state for errors\n  const [errors, setErrors] = useState({})\n\n  // Template details including full URLs to PDFs\n  const templates = [\n    { number: 1, title: 'Top banner', description: 'Profile image', pdf: 'https://wittle23images.blob.core.windows.net/letter-pdfs/Wittle%20Letter%20Templates%20-%20core%20examples%20(2).pdf' },\n    { number: 2, title: 'Top banner', description: 'No profile image', pdf: 'https://wittle23images.blob.core.windows.net/letter-pdfs/Wittle%20Letter%20Templates%20-%20core%20examples%20(3).pdf' },\n    { number: 3, title: 'Bottom banner', description: 'Profile image', pdf: 'https://wittle23images.blob.core.windows.net/letter-pdfs/Wittle%20Letter%20Templates%20-%20core%20examples%20(4).pdf' },\n    { number: 4, title: 'Bottom banner', description: 'No profile image', pdf: 'https://wittle23images.blob.core.windows.net/letter-pdfs/Wittle%20Letter%20Templates%20-%20core%20examples%20(5).pdf' },\n    { number: 5, title: 'No banner', description: 'Profile image', pdf: 'https://wittle23images.blob.core.windows.net/letter-pdfs/Wittle%20Letter%20Templates%20-%20core%20examples%20(6).pdf' },\n    { number: 6, title: 'No banner', description: 'No profile image', pdf: 'https://wittle23images.blob.core.windows.net/letter-pdfs/Wittle%20Letter%20Templates%20-%20core%20examples%20(7).pdf' }\n  ]\n\n  // state for handling the position of components on the letter template\n  const [letterTemplate, setLetterTemplate] = useState({\n    template_name: '',\n    template_body_1: '',\n    template_body_2: '',\n    template_body_3: '',\n    template_body_4: '',\n    template_body_5: '',\n    template_type: 'Option 1',\n    sender_name: true,\n    sender_company: true,\n    sender_role: true,\n    sender_mobile: true,\n    sender_landline: true,\n    sender_email: true,\n    sender_footer: true,\n    sender_website: true,\n    logo_width: 250,\n    logo_height: 50,\n    logo_position: 'Right',\n    opening: 'Dear ',\n    closing: 'Best wishes',\n  })\n\n  useEffect(() => {\n    if (templateAction === 'edit') {\n      setLetterTemplate(currentTemplate)\n    } else if (templateAction === 'new') {\n      setLetterTemplate({\n        template_name: '',\n        template_body_1: '',\n        template_body_2: '',\n        template_body_3: '',\n        template_body_4: '',\n        template_body_5: '',\n        template_type: 'Option 1',\n        sender_name: true,\n        sender_company: true,\n        sender_role: true,\n        sender_mobile: true,\n        sender_landline: true,\n        sender_email: true,\n        sender_footer: true,\n        sender_website: true,\n        logo_width: 250,\n        logo_height: 50,\n        logo_position: 'Right',\n        opening: 'Dear ',\n        closing: 'Best wishes',\n      })\n    }\n  }, [templateAction])\n\n  const areRequiredFieldsFilled = (signature) => {\n    const requiredFields = [\n      'first_name',\n      'last_name',\n      'company_name',\n      'title',\n      'role',\n      'mobile',\n      'landline',\n      'address',\n      'email',\n      'logo',\n      'digital_signature'\n    ]\n\n    return requiredFields.every(field => {\n      const value = signature[field]\n      if (typeof value === 'string') {\n        return value.trim() !== '' // checks if the string is not just whitespace\n      }\n      return Boolean(value) // ensures the value is not undefined, null, false, etc.\n    })\n  }\n\n  // update paragraphs and characters remaining\n  const paragraphChange = (e) => {\n    const { name, value } = e.target\n\n    // Ensure letterTemplate is defined and has properties before proceeding\n    if (letterTemplate) {\n      const otherTotal = Object.keys(letterTemplate).reduce((total, key) => {\n        // Use optional chaining and nullish coalescing to avoid errors\n        return key !== name ? total + ((letterTemplate[key] && letterTemplate[key].length) || 0) : total\n      }, 0)\n\n      const maxCharsForThis = 2200 - otherTotal\n      const newText = value.slice(0, Math.max(0, maxCharsForThis)) // Ensure non-negative\n\n      setLetterTemplate(prevState => ({\n        ...prevState,\n        [name]: newText,\n      }))\n    }\n  }\n\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setLetterTemplate(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === true ? false : true,\n    }))\n  }\n\n  // function to validate the template\n  const validateTemplate = () => {\n    const tempErrors = {}\n    let isValid = true\n    if (!letterTemplate.template_name) {\n      tempErrors.template_name = '* Template name is required'\n      isValid = false\n    }\n    setErrors(tempErrors)\n    return isValid\n  }\n\n  // function to save the template\n  const postTemplate = async () => {\n\n\n    if (!validateTemplate()) {\n      // setCampaignLoading(false)\n      return  // Stop the function if validation fails\n    }\n\n    if (!areRequiredFieldsFilled(signature)) {\n      handleCreateTemplateClose()\n      const result = await Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'You need to populate your signatures before you can submit this template',\n        icon: 'warning', // Adds a warning icon to the alert\n        // showCancelButton: true, // Shows a cancel button alongside the confirm button\n        confirmButtonText: 'OK, thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'No thanks',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      return\n    }\n\n    setCampaignLoading(true)\n    console.log('template ->', letterTemplate)\n    // Prepare the data for the API request\n    const templateData = {\n      ...letterTemplate,\n\n    }\n\n    console.log('template body ->', templateData)\n    try {\n      const response = await axios.post('/api/letter_templates/add/', templateData, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Letter template ->', response)\n      await loadUserData() // Reload user data to reflect the new template\n      handleCreateTemplateClose()\n\n      // Show a success message\n      Swal.fire({\n        title: '😎 Action complete',\n        text: 'New template added successfully',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Error adding template:', error)\n      // Show an error message\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an issue adding your template',\n        confirmButtonText: 'Try Again 🔄',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } finally {\n      setCampaignLoading(false) // Reset loading state\n    }\n  }\n\n\n\n  // function to save the editedtemplate\n  const editTemplate = async () => {\n    setTemplateLoading(true)\n    try {\n      const response = await axios.put(`/api/letter_templates/edit/${letterTemplate.id}/`, letterTemplate, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Letter template ->', response)\n      loadUserData()\n      handleCreateTemplateClose()\n      Swal.fire({\n        title: '😎 action complete',\n        text: 'Template updated',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Error updating template:', error)\n    } finally {\n      setTemplateLoading(false)\n    }\n  }\n\n  return (\n\n    <>\n      <Modal show={createTemplateShow} onHide={handleCreateTemplateClose} backdrop='static' className='create-template-modal'>\n        <Modal.Body>\n          <>\n            <div className='template-wrapper'>\n              <div className='template-header'>\n                <h1>Wittle letter template builder</h1>\n                <div className='close' onClick={handleCreateTemplateClose}>x</div>\n              </div>\n              <div className='template-body'>\n                <div className='template-inputs'>\n                  <div className='input-top'>\n                    <h3 className='template-name'>Template name</h3>\n                    <input className='template-name-input' value={letterTemplate.template_name} onChange={(e) => setLetterTemplate({ ...letterTemplate, template_name: e.target.value })}></input>\n                  </div>\n                  {errors.template_name && (\n                    <div id=\"templateNameError\" className=\"error-text\">\n                      {errors.template_name}\n                    </div>\n                  )}\n                  <div className='input-second'>\n                    <h3 className='template-name'>Template type</h3>\n                    <div className='template-array'>\n                      {templates ? templates.map((template) => (\n                        <div className='template-box' key={template.number}>\n                          <div\n                            className='template-button'\n                            onClick={() => setLetterTemplate({ ...letterTemplate, template_type: `Option ${template.number}` })}\n                            style={{\n                              border: letterTemplate.template_type === `Option ${template.number}` ? '2px solid #ED6B86' : '0.5px solid #1A276C',\n                            }}\n                          >\n                            <h1>{template.number}</h1>\n                            <h3>{template.title}</h3>\n                            <h3>{template.description}</h3>\n                          </div>\n                          <h3 style={{ cursor: 'pointer' }} onClick={() => window.open(template.pdf, '_blank')}>See example</h3>\n                        </div>\n                      )) : ''}\n                    </div>\n                  </div>\n                  <div className='input-details'>\n                    <div className='sub-title'>\n                      <h3>Details</h3>\n                    </div>\n                    <div className='details-array'>\n                      <div className='detail-line'>\n                        <h3>Intro</h3>\n                        <input className='detail-inputs' value={letterTemplate.opening} onChange={(e) => setLetterTemplate({ ...letterTemplate, opening: e.target.value })}></input>\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Outro</h3>\n                        <input className='detail-inputs' value={letterTemplate.closing} onChange={(e) => setLetterTemplate({ ...letterTemplate, closing: e.target.value })}></input>\n                      </div>\n\n                    </div>\n\n                  </div>\n                  <div className='input-body'>\n                    <div className='sub-title'>\n                      <h3>Template body</h3>\n                      {letterTemplate ? (\n                        <div className='characters'>\n                          {2200 - (\n                            (letterTemplate.template_body_1 ? letterTemplate.template_body_1.length : 0) +\n                            (letterTemplate.template_body_2 ? letterTemplate.template_body_2.length : 0) +\n                            (letterTemplate.template_body_3 ? letterTemplate.template_body_3.length : 0) +\n                            (letterTemplate.template_body_4 ? letterTemplate.template_body_4.length : 0) +\n                            (letterTemplate.template_body_5 ? letterTemplate.template_body_5.length : 0)\n                          )} characters remaining\n                        </div>\n                      ) : ''}\n                    </div>\n                    <div className='text-block'>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 1</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_1.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_1' value={letterTemplate.template_body_1} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 2</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_2.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_2' value={letterTemplate.template_body_2} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 3</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_3.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_3' value={letterTemplate.template_body_3} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 4</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_4.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_4' value={letterTemplate.template_body_4} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 5</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_4.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_5' value={letterTemplate.template_body_5} className='input-text-body' onChange={paragraphChange}></textarea>\n                    </div>\n\n                  </div>\n                  <div className='save-section'>\n                    {templateAction === 'new' ? <button onClick={() => postTemplate()}>Save template</button> : templateAction === 'edit' ? <button onClick={() => editTemplate()}>Save template</button> : ''}\n                  </div>\n\n                </div>\n                {/* <div className='template-section'>\n                  <div className='top-banner'>\n                    {signature ? <img src={signature.banner_image} alt=\"banner\" className='banner-image' /> : ''}\n                  </div>\n                  <div className='address-section'>\n                    <h3 className='address-details'>Owner</h3>\n                    <h3 className='address-details'>Address line 1</h3>\n                    <h3 className='address-details'>Address line 2</h3>\n                    <h3 className='address-details'>Address line 3</h3>\n                    <h3 className='address-details'>Postcode</h3>\n                  </div>\n                  <div className='body-section'>\n                    <div className='letter-intro'>\n                      <h3 className='intro'>{letterTemplate.opening} </h3>\n                      <h3 className='intro'> Homeowner,</h3>\n                    </div>\n                    <h3 className='letter-paragraph'>{letterTemplate.template_body_1}</h3>\n                    <h3 className='letter-paragraph'>{letterTemplate.template_body_2}</h3>\n                    <h3 className='letter-paragraph'>{letterTemplate.template_body_3}</h3>\n                    <h3 className='letter-paragraph'>{letterTemplate.template_body_4}</h3>\n                    <h3 className='letter-paragraph'>{letterTemplate.template_body_5}</h3>\n                  </div>\n                  {signature ?\n                    <>\n                      <div className='signature-section'>\n                        <h3 className='sign-off-line'>{letterTemplate.closing},</h3>\n                        <div className='detailed-signature'>\n                          <div className='signature-image'>\n                            <img src={signature.profile_image} alt=\"profile image\" className='profile-image' />\n                          </div>\n                          <div className='signature-text'>\n                            <div className='digital-signature-box'>\n                              <img src={signature.digital_signature} alt=\"digital signature\" className='digital-signature' />\n                            </div>\n                            <h3>{signature.first_name} {signature.last_name}</h3>\n                            <h3>{signature.role}, {signature.company_name}</h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='additional-signature-details'>\n                        <div className='left-additional'>\n                          <h3 className='additional-detail-point'>{signature.email}</h3>\n                          <h3 className='additional-detail-point'>{signature.mobile}</h3>\n                          <h3 className='additional-detail-point'>{signature.website}</h3>\n                        </div>\n                        <div className='right-additional'>\n                          <div className='social-row'>\n                            <div className='social-icon' id='insta'></div>\n                            <h3 className='social-text'>@{signature.instagram}</h3>\n                          </div>\n                          <div className='social-row'>\n                            <div className='social-icon' id='insta'></div>\n                            <h3 className='social-text'>@{signature.tiktok}</h3>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='footer-section'>\n                        <h3 className='footer-text'>{signature.address}</h3>\n                      </div>\n                    </>\n                    : ''}\n\n                </div> */}\n\n\n\n              </div>\n              {/* </div> */}\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n\n    </>\n  )\n}\n\nexport default TemplateOptions","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Modal } from 'react-bootstrap'\nimport Select from 'react-select'\nimport ReactSwitch from 'react-switch'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../../auth/Auth'\nimport Swal from 'sweetalert2'\n\n\nconst CreateCampaign = ({ createCampaignShow, handleCreateCampaignClose, letterTemplates, loadUserData, editData }) => {\n\n  const maxSteps = 5 // Assuming 5 is the max number of steps\n\n  const [numberOfSteps, setNumberofSteps] = useState(1)\n\n  const [campaign, setCampaign] = useState({\n    campaign_name: '',\n    campaign_status: 'Not launched',\n    campaign_start_date: null,\n    campaign_type: '1 step',\n    template_names: ['', '', '', '', ''], // Adjusted for up to 5 steps\n    template_dates: [null, null, null, null, null], // Adjusted for dates, first date always null since \"on launch\"\n\n  })\n\n  useEffect(() => {\n    if (editData !== 'None') {\n      setCampaign(editData)\n      const numberOfSteps = parseInt(editData.campaign_type.split(' ')[0])\n      setNumberofSteps(numberOfSteps)\n    } else if (campaign) {\n      const numberOfSteps = parseInt(campaign.campaign_type.split(' ')[0])\n      setNumberofSteps(numberOfSteps)\n    }\n  }, [editData])\n\n  // useEffect(() => {\n  //   if (campaign) {\n  //     const numberOfSteps = parseInt(campaign.campaign_type.split(' ')[0])\n  //     setNumberofSteps(numberOfSteps)\n  //   }\n  // }, campaign)\n\n  const handleCampaignChange = (e) => {\n    const { name, value } = e.target\n    setCampaign({ ...campaign, [name]: value })\n  }\n\n  const handleStepChange = (index, e) => {\n    const { name, value } = e.target\n    const newSteps = [...campaign.steps]\n    newSteps[index] = { ...newSteps[index], [name]: value }\n    setCampaign({ ...campaign, steps: newSteps })\n  }\n\n  const handleTemplateChange = (index, value) => {\n    setCampaign({\n      ...campaign,\n      [`template_${index + 1}_name`]: value,\n    })\n  }\n\n  const handleDateChange = (index, value) => {\n    if (index === 0) return // Skip for the first template since it's \"on launch\"\n    setCampaign({\n      ...campaign,\n      [`template_${index + 1}_date`]: value,\n    })\n  }\n\n\n  const addStep = () => {\n    const currentSteps = numberOfSteps\n\n    if (currentSteps < maxSteps) {\n      const newCampaignType = `${currentSteps + 1} step${currentSteps + 1 > 1 ? 's' : ''}`\n\n      setCampaign(prevCampaign => ({\n        ...prevCampaign,\n        campaign_type: newCampaignType,\n        [`template_${currentSteps + 1}_name`]: '',\n        [`template_${currentSteps + 1}_date`]: '', // Considering all steps except the first can have a date.\n      }))\n\n      // Directly setting numberOfSteps here based on the updated campaign_type.\n      setNumberofSteps(currentSteps + 1)\n    }\n  }\n\n\n  const removeStep = () => {\n    // Determine the current number of steps\n    const currentSteps = numberOfSteps\n\n    if (currentSteps > 1) {\n      // Prepare updates for removing the highest step's data\n      const updates = {\n        campaign_type: `${currentSteps - 1} step${currentSteps - 1 > 1 ? 's' : ''}`,\n      }\n\n      // Use null or an empty string to clear out the data for the highest step\n      updates[`template_${currentSteps}_name`] = ''\n      updates[`template_${currentSteps}_date`] = null\n\n      setCampaign(prevCampaign => ({\n        ...prevCampaign,\n        ...updates,\n      }))\n\n      // Directly updating numberOfSteps here based on the decrement\n      setNumberofSteps(currentSteps - 1)\n    }\n  }\n\n  // function to validate the template\n  const validateCampaign = () => {\n    let isValid = true\n\n    if (letterTemplates && letterTemplates.length === 0) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'You need to save some templates before you can save a campaign',\n        icon: 'warning',\n        confirmButtonText: 'OK, thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      isValid = false\n    } else if (!campaign.campaign_name) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'You need a campaign name to save a campaign',\n        icon: 'warning',\n        confirmButtonText: 'OK, thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      isValid = false\n    } else if (!campaign.template_1_name) {\n    // } else if (!campaign.template_names[0]) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: `Template name for step ${1} is required.`,\n        icon: 'warning',\n        confirmButtonText: 'OK, thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      isValid = false\n    }\n    return isValid\n  }\n\n\n\n\n\n\n  const saveCampaign = async () => {\n    if (!validateCampaign()) {\n      handleCreateCampaignClose()\n      return  // Stop the function if validation fails\n    }\n\n    try {\n      const response = await axios.post('/api/letter_campaigns/add/', campaign, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      loadUserData()\n      handleCreateCampaignClose()\n      Swal.fire({\n        title: '😎 action complete',\n        text: 'Campaign saved',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Failed to save the campaign', error)\n      Swal.fire('Error', 'There was an issue saving the campaign.', 'error')\n    }\n  }\n\n\n  const editCampaign = async () => {\n    console.log('edit campaign id ->', editData.id)\n    try {\n      const response = await axios.put(`/api/letter_campaigns/edit/${editData.id}/`, campaign, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      loadUserData()\n      handleCreateCampaignClose()\n      Swal.fire({\n        title: '😎 action complete',\n        text: 'Campaign updated',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Failed to save the campaign', error)\n      Swal.fire('Error', 'There was an issue updating the campaign.', 'error')\n    }\n  }\n\n\n\n\n\n  return (\n    <Modal show={createCampaignShow} onHide={handleCreateCampaignClose} backdrop='static' className='create-campaign-modal'>\n      <Modal.Body>\n        <div className='campaign-wrapper'>\n          <div className='campaign-header'>\n            <h2>Wittle campaign builder</h2>\n            <div className='close' onClick={handleCreateCampaignClose}>x</div>\n          </div>\n          <div className='campaign-sub-header'>\n            <h3>Set up your campaign sequences. Select your templates and the dates you&apos;d like them to be sent 📩. You can add up to 5 steps.</h3>\n          </div>\n          <div className='campaign-title-section'>\n            <h3>Campaign name</h3>\n            <input\n              name=\"campaign_name\"\n              value={campaign.campaign_name}\n              onChange={handleCampaignChange}\n            ></input>\n          </div>\n\n          <div className='campaign-headers'>\n            <h3 className='step-header'>Step</h3>\n            <h3 className='template-header'>Template</h3>\n            <h3 className='date-title'>Send date</h3>\n          </div>\n          <div className=\"campaign-stages\">\n            {numberOfSteps && Array.from({ length: numberOfSteps }).map((_, index) => (\n              <div key={index} className=\"campaign-step\">\n                <h3 className='step-column'>Step {index + 1}</h3>\n                <select\n                  className='template-dropdown'\n                  value={campaign[`template_${index + 1}_name`] || ''}\n                  onChange={(e) => handleTemplateChange(index, e.target.value)}\n\n                >\n                  <option value=\"\">Select Template</option>\n                  {letterTemplates ? letterTemplates.map((template, templateIndex) => (\n                    <option key={templateIndex} value={template.template_name}>\n                      {template.template_name}\n                    </option>\n                  )) : ''}\n                </select>\n\n                {index === 0 ? (\n                  <div className='on-launch'>On launch</div>\n                ) : (\n                  <div className='date-input-container'>\n                    <input\n                      className='date-input'\n                      type=\"number\"\n                      min=\"0\"\n                      value={campaign[`template_${index + 1}_date`] || ''}\n                      onChange={(e) => handleDateChange(index, e.target.value)}\n                    />\n                    <span className='days-later'>days later</span>\n                  </div>\n                )}\n\n                {numberOfSteps && numberOfSteps > 1 && index === numberOfSteps - 1 && <h3 className='remove' onClick={() => removeStep()}>❌</h3>}\n              </div>\n            ))}\n            <div className='footer-buttons'>\n              {numberOfSteps && numberOfSteps < 5 && <button className='add-step' onClick={addStep}>Add Step</button>}\n              {editData === 'None' ?\n                <button className='save-campaign' onClick={saveCampaign}>Save Campaign</button>\n                :\n                <button className='save-campaign' onClick={editCampaign}>Update Campaign</button>\n              }\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal >\n  )\n}\n\nexport default CreateCampaign","\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../../auth/Auth'\nimport axios from 'axios'\nimport Select from 'react-select'\nimport ReactSwitch from 'react-switch'\nimport Swal from 'sweetalert2'\nimport CreateCampaign from './CreateCampaign'\nimport BasicTemplate from '../TemplatePDFs.js/BasicTemplate'\nimport ReactDOMServer from 'react-dom/server'\nimport Loading from '../../../../helpers/Loading'\n\n\nconst CampaignOverview = ({ letterTab, setLetterTab, letterCampaigns, loadUserData, letterTemplates, letterProperties, signature, editCredts,\n  setEditCredits, initiateCheckoutSession, creditValue, addCreditValue, availableCredits }) => {\n\n  // state for the overall campaign screen\n  const [campaignScreen, setCampaignScreen] = useState('Overview')\n\n  // state for which campaign is selected\n  const [activeCampaign, setActiveCampaign] = useState('')\n\n  // state for which campaign detail tab is selected\n  const [campaignDetail, setCampaignDetail] = useState('Leads')\n\n  // managing modal for the building campaign\n  const [createCampaignShow, setCreateCampaignShow] = useState(false)\n\n  // state for selecting rows\n  const [campaignSelectedRows, setCampaignSelectedRows] = useState([])\n  const [campaignSelectAllStatus, setCampaignSelectAllStatus] = useState(false)\n\n  // states for properties in campaign or not\n  const [propertiesInCampaign, setPropertiesInCampaign] = useState()\n  const [propertiesNotInCampaign, setPropertiesNotInCampaign] = useState()\n\n  // state for storing the campaign analytics\n  const [campaignAnalytics, setCampaignAnalytics] = useState()\n\n  // state for the the loading sign when campaign is being launched\n  const [campaignLoading, setCampaignLoading] = useState(false)\n\n  // state for determingin the number of columns\n  const [maxStep, setMaxStep] = useState(0)\n\n  // states for managing the filterrs\n  const [marketStatusFilter, setMarketStatusFilter] = useState('')\n  const [sendStatusFilter, setSendStatusFilter] = useState('')\n  const [analyticsFilteredProperties, setAnalyticsFilteredProperties] = useState([])\n\n  // functiono to load and reload the filtered data\n  useEffect(() => {\n    if (campaignAnalytics && letterProperties) {\n      // Enhance campaignAnalytics by merging market_status from letterProperties\n      let enhancedData = campaignAnalytics.map(campaign => {\n        const correspondingProperty = letterProperties.find(prop => prop.rightmove_id === campaign.target_rightmove_id)\n        return {\n          ...campaign,\n          market_status: correspondingProperty ? correspondingProperty.market_status : 'Unknown',\n          removed_date: correspondingProperty ? correspondingProperty.week_removed : 'N/a',\n        }\n      })\n\n      // Filter by market status\n      if (marketStatusFilter) {\n        enhancedData = enhancedData.filter(item => item.market_status === marketStatusFilter)\n      }\n\n      // Filter by send status\n      if (sendStatusFilter) {\n        enhancedData = enhancedData.filter(item => item.status === sendStatusFilter)\n      }\n\n      setAnalyticsFilteredProperties(enhancedData)\n    }\n  }, [campaignAnalytics, letterProperties, marketStatusFilter, sendStatusFilter])\n\n\n  // clear filters\n  const clearAnalyticsFilters = () => {\n    setMarketStatusFilter('')\n    setSendStatusFilter('')\n  }\n\n  // functiono to split out properties in and out of campaign\n  useEffect(() => {\n    if (letterProperties && activeCampaign) {\n      // Logic to execute when letterProperties updates\n      const inCampaign = letterProperties.filter(property => property.letter_campaign === activeCampaign.campaign_name)\n      const notInCampaign = letterProperties.filter(property => property.letter_campaign === 'None')\n      setPropertiesInCampaign(inCampaign)\n      console.log('properties in campaign ->', inCampaign)\n      console.log('properties not in campaign ->', notInCampaign)\n      setPropertiesNotInCampaign(notInCampaign)\n    }\n  }, [letterProperties])\n\n  // show campaign modal\n  const handleCreateCampaignShow = (e) => {\n    setCreateCampaignShow(true)\n  }\n\n  // close campaign modal\n  const handleCreateCampaignClose = () => {\n    setCreateCampaignShow(false)\n  }\n\n\n  // function for going to the specific campaign\n  const selectCampaign = (item) => {\n    setCampaignScreen('Specific')\n    setActiveCampaign(item)\n    console.log('selected campaign ->', item)\n    const inCampaign = letterProperties.filter(property => property.letter_campaign === item.campaign_name)\n    const notInCampaign = letterProperties.filter(property => property.letter_campaign === 'None')\n    setPropertiesInCampaign(inCampaign)\n    setPropertiesNotInCampaign(notInCampaign)\n    console.log('properties in campaign ->', inCampaign)\n    console.log('properties not in campaign ->', notInCampaign)\n  }\n\n\n\n\n  // ? Section 1: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n    console.log('selected row ->', item)\n    if (e.target.checked) {\n      setCampaignSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setCampaignSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setCampaignSelectAllStatus(letterProperties.length === campaignSelectedRows.length)\n  }\n\n  // function for selecting rows\n  const selectAllRows = () => {\n    setCampaignSelectedRows(propertiesInCampaign)\n    setCampaignSelectAllStatus(true)\n  }\n\n  // function for deseleting rows\n  const deselectAllRows = () => {\n    setCampaignSelectedRows([])\n    setCampaignSelectAllStatus(false)\n  }\n\n  // function for selecting all rows\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  const addPropertiesToCampaign = async (properties, activeCampaign) => {\n\n    const propertyIds = properties.map(property => property.rightmove_id)\n\n    try {\n      const response = await axios.put('/api/epc_favourite/add_to_campaign/', {\n        property_ids: propertyIds,\n        campaign_name: activeCampaign.campaign_name,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Properties added to campaign successfully:', response.data)\n      loadUserData()\n      setCampaignSelectedRows([])\n      Swal.fire({\n        title: '😎 action complete',\n        text: `${properties.length} properties added to campaign`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      // Handle success (e.g., showing a success message or updating UI state)\n    } catch (error) {\n      console.error('Error adding properties to campaign:', error.response.data)\n    }\n  }\n\n\n\n  const removePropertiesFromCampaign = async (properties, activeCampaign) => {\n    const propertyIds = properties.map(property => property.rightmove_id)\n\n    if (propertyIds.length === 0) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'You must select the properties you want to remove from your campaign',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    }\n\n    try {\n      const response = await axios.put('/api/epc_favourite/remove_from_campaign/', {\n        property_ids: propertyIds,\n        campaign_name: activeCampaign,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Properties removed to campaign successfully:', response.data)\n      loadUserData()\n      setCampaignSelectedRows([])\n\n      Swal.fire({\n        title: '😎 action complete',\n        text: `${properties.length} properties removed from campaign`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      // Handle success (e.g., showing a success message or updating UI state)\n    } catch (error) {\n      console.error('Error removing properties to campaign:', error.response.data)\n      // Handle error (e.g., showing an error message)\n    }\n  }\n\n\n\n  // Function to launch campaign with HTML content processing\n  const launchCampaign = async (activeCampaign, propertiesInCampaign, letterTemplates, signature) => {\n\n    if (propertiesInCampaign && propertiesInCampaign.length === 0) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'You need to add properties to this campaign before you can launch it',\n        icon: 'error',\n        confirmButtonText: 'Ok, thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      setCampaignLoading(false)\n      return\n    }\n\n    setCampaignLoading(true)\n\n    // Determine the number of steps/templates required from the campaign_type\n    const steps = parseInt(activeCampaign.campaign_type.split(' ')[0])\n\n    const funds = steps * propertiesInCampaign.length\n    console.log('funds required for campaign ->', funds)\n\n    if (funds > availableCredits) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: `Not enough credit to launch this campaign - you need £${funds}`,\n        icon: 'error',\n        confirmButtonText: 'Ok',\n        confirmButtonColor: '#ED6B86',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      setCampaignLoading(false)\n      return\n    }\n\n    const templatesNeeded = []\n    for (let i = 1; i <= steps; i++) {\n      const templateName = activeCampaign[`template_${i}_name`]\n      if (templateName) {\n        const template = letterTemplates.find(t => t.template_name === templateName)\n        if (template) {\n          templatesNeeded.push({ template, step: i }) // Include the step number with the template\n        }\n      }\n    }\n\n    const itemsWithHtmlContent = propertiesInCampaign.flatMap(item => {\n      return templatesNeeded.map(({ template, step }) => { // Destructure to get template and step\n        const extractedAddress = item.address\n        const addressComponents = extractedAddress.split(',').map(component => component.trim())\n        const titleCaseAddress = addressComponents\n          .slice(0, 4) // Exclude the last component (typically postcode)\n          .map(component => component.toLowerCase().replace(/\\b(\\w)/g, char => char.toUpperCase())) // Convert to title case\n        if (item.postcode) {\n          titleCaseAddress.push(item.postcode) // Include postcode if present\n        }\n\n        // Generate HTML content for this item and template\n        const htmlContent = ReactDOMServer.renderToStaticMarkup(\n          <BasicTemplate\n            signature={signature}\n            selectedTemplate={template}\n            ownerData={item}\n            address={titleCaseAddress}\n          />\n        )\n\n        return {\n          // campaign: activeCampaign,\n          step, // Include the step of the campaign\n          template_name: template.template_name,\n          htmlContent,\n          recipient: item,\n        }\n      })\n    })\n\n    console.log('data for campaign -> ', itemsWithHtmlContent)\n    // Post the array of items with HTML content to the backend for processing\n    try {\n      const response = await axios.post('/api/letter_campaigns/create_campaign/', {\n        campaign: activeCampaign,\n        sequence_details: itemsWithHtmlContent,\n        credits: funds,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Campaign processing response ->', response.data)\n      Swal.fire({\n        title: '😎 Action complete',\n        text: 'Campaign successfully launched! Track progress on the analytics tab 📈',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      await loadUserData()\n      setCampaignLoading(false)\n      // setCampaignScreen('Specific')\n      // setCampaignDetail('Analytics')\n      // Handle successful response (e.g., show success message or update UI)\n    } catch (error) {\n      console.error('Error posting campaign data to Django:', error)\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an issue launching your campaign',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      setCampaignLoading(false)\n    }\n  }\n\n\n  // get the campaign trakcing analytics\n  const getAnalytics = async () => {\n    try {\n      const campaignName = activeCampaign.campaign_name\n      const response = await axios.get('/api/campaign_tracking/', {\n        params: { campaign_name: campaignName },\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n\n      setCampaignAnalytics(response.data)\n    } catch (error) {\n      console.error('Error fetching campaign analytics:', error)\n    }\n  }\n\n\n  // lloadnig campaign analytics if active campaign is live\n  useEffect(() => {\n    if (activeCampaign && activeCampaign.campaign_status === 'Live') {\n      getAnalytics()\n    }\n  }, [activeCampaign])\n\n\n  // delete campaign\n  const deleteCampaign = async (item) => {\n    try {\n      const result = await Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'Are you sure you want to delete this campaign?',\n        icon: 'warning', // Adds a warning icon to the alert\n        showCancelButton: true, // Shows a cancel button alongside the confirm button\n        confirmButtonText: 'Yes, delete 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'No thanks',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      if (result.isConfirmed) {\n        const response = await axios.delete(`/api/letter_campaigns/delete/${item.id}/`, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        loadUserData()\n      }\n    } catch (error) {\n      console.error('Error deleting template:', error)\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an issue deleting the campaign.',\n        icon: 'error',\n        confirmButtonText: 'Try Again',\n        confirmButtonColor: '#ED6B86',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n    }\n  }\n\n  const duplicateCampaign = async (campaignId) => {\n    console.log('campaign for duplication ->', campaignId)\n    try {\n\n      const result = await Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'Are you sure you want to duplicate this campaign?',\n        icon: 'warning', // Adds a warning icon to the alert\n        showCancelButton: true, // Shows a cancel button alongside the confirm button\n        confirmButtonText: 'Yes, duplicate 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'No thanks',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n\n      if (result.isConfirmed) {\n        const response = await axios.post(`/api/letter_campaigns/duplicate/${campaignId}/`, {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,  // Function to get the access token\n          },\n        })\n        loadUserData()\n        Swal.fire({\n          title: '😎 Action Complete',\n          text: 'Campaign duplicated successfully',\n          icon: 'success',\n          confirmButtonText: 'Thanks 🤝',\n          confirmButtonColor: '#ED6B86',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n          },\n        })\n        console.log('Duplicate Campaign Response:', response.data)\n      }\n    } catch (error) {\n      console.error('Failed to duplicate the campaign:', error)\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an issue duplicating the campaign.',\n        icon: 'error',\n        confirmButtonText: 'Try Again',\n        confirmButtonColor: '#ED6B86',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n    }\n  }\n\n  const formatDate = (dateStr) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December']\n    const suffixes = ['th', 'st', 'nd', 'rd']\n\n    const date = new Date(dateStr)\n    const day = date.getDate()\n    const monthIndex = date.getMonth()\n    const year = date.getFullYear()\n\n    // Find the correct suffix for the day\n    const tensDigit = day % 10\n    const suffixIndex = (day < 10 || day > 20) ? tensDigit : 0\n    const suffix = suffixes[suffixIndex] || suffixes[0]\n\n    return `${day}${suffix} ${months[monthIndex]} ${year}`\n  }\n\n\n\n  const cancelLetter = async (trackerId) => {\n    try {\n      // Display confirmation dialog\n      const result = await Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'Are you sure you want to cancel this letter?',\n        icon: 'warning', // Adds a warning icon to the alert\n        showCancelButton: true, // Shows a cancel button alongside the confirm button\n        confirmButtonText: 'Yes, delete 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'No thanks',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n\n      // Check if user confirmed the deletion\n      if (result.isConfirmed) {\n        const response = await axios.post(`/api/letter_campaigns/cancel_scheduled_letter/${trackerId}/`, {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        Swal.fire({\n          title: 'Cancelled!',\n          text: response.data.message,\n          icon: 'success',\n          confirmButtonColor: '#ED6B86',\n          confirmButtonText: 'OK',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        })\n        loadUserData()\n      }\n    } catch (error) {\n      console.error('Cancellation failed: ', error.response || error)\n      Swal.fire({\n        title: 'Error!',\n        text: 'Failed to cancel the scheduled task.',\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'OK',\n      })\n    }\n  }\n\n  // const formatDate = (dateString) => {\n  //   const date = new Date(dateString);\n  //   const day = date.getDate();\n  //   const month = date.toLocaleString('default', { month: 'long' });\n\n  //   // Function to get the ordinal suffix (st, nd, rd, th)\n  //   const getOrdinalSuffix = (day) => {\n  //     if (day > 3 && day < 21) return 'th';\n  //     switch (day % 10) {\n  //       case 1: return 'st';\n  //       case 2: return 'nd';\n  //       case 3: return 'rd';\n  //       default: return 'th';\n  //     }\n  //   };\n\n  //   return `${day}${getOrdinalSuffix(day)} ${month}`;\n  // }\n\n\n\n  return (\n\n    <>\n      {campaignScreen && campaignScreen === 'Overview' && !campaignLoading ?\n        <>\n\n          <div className='top-line'>\n\n            <div className='matching-status'>\n              <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n              <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n              <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n              <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n            </div>\n            {editCredts ?\n              <div className='credits-section'>\n                <input type='number' className='credit-input' value={creditValue} onChange={addCreditValue}></input>\n                <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n                <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n              </div>\n              : <div className='credits-section'>\n                <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n                <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n              </div>}\n          </div>\n          <div className='action-section letter'>\n            {letterCampaigns ? <h3 className='template-total'>You have {letterCampaigns.length} saved campaigns</h3> : <h3 className='template-total'>Create some campaigns so you can see them here</h3>}\n            <div className='save-section'>\n              <div className=\"print-icon\"></div>\n              <h3 onClick={() => handleCreateCampaignShow()}>New campaign </h3>\n            </div>\n\n          </div>\n          <CreateCampaign\n            createCampaignShow={createCampaignShow}\n            handleCreateCampaignClose={handleCreateCampaignClose}\n            letterTemplates={letterTemplates}\n            loadUserData={loadUserData}\n            editData={'None'}\n          />\n          <div className='template-list'>\n            <div className='template-table'>\n              <div className='template-headers'>\n                <h3 id='column1'>#</h3>\n                <h3 id='column2'>Name</h3>\n                <h3 id='column3'>Type</h3>\n                <h3 id='column4-campaign'>Status</h3>\n                <h3 id='column5-campaign'>Launch date</h3>\n                <h3 id='column6-campaign'>Duplicate</h3>\n                <h3 id='column6-campaign'>Delete</h3>\n              </div>\n              <div className='template-content'>\n                {letterCampaigns ?\n                  [...letterCampaigns]\n                    .sort((a, b) => a.id - b.id)\n                    .map((item, index) => (\n                      <div key={index} className='template-item' >\n                        <h3 className='template-number' id='column1' onClick={() => selectCampaign(item)}>{index + 1}</h3>\n                        <h3 className='template-name' id='column2' onClick={() => selectCampaign(item)}>{item.campaign_name}</h3>\n                        <h3 className='template-type' id='column3' onClick={() => selectCampaign(item)}>{item.campaign_type}</h3>\n                        <h3 className='template-status' id='column4-campaign' onClick={() => selectCampaign(item)}>{item.campaign_status}</h3>\n                        <h3 className='launch-date' id='column5-campaign'>{item.campaign_start_date ? formatDate(item.campaign_start_date) : 'N/a'}</h3>\n                        <h3 className='duplicate' id='column6-campaign' onClick={() => duplicateCampaign(item.id)}>📑</h3>\n\n                        <div id='column6-campaign'>\n                          {item.campaign_status === 'Live' ? <h3 className='delete'></h3> : <h3 className='delete' onClick={() => deleteCampaign(item)}>🗑</h3>}\n                        </div>\n                      </div>\n                    ))\n                  : ''}\n              </div>\n\n            </div>\n          </div>\n        </>\n        : campaignScreen === 'Specific' && !campaignLoading ?\n\n          <>\n            <div className='single-campaign-wrapper'>\n              <div className='campaign-detail-header'>\n                <div className='go-back-box' onClick={() => setCampaignScreen('Overview')}>\n                  <div className='go-back-sign'>&lt;</div>\n                  <h3>{activeCampaign ? activeCampaign.campaign_name : ''}</h3>\n                </div>\n                <div className='actions'>\n                  {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                    <>\n                      <div className='save-section'>\n                        <div className=\"print-icon\">\n                        </div>\n                        <h3 onClick={() => handleCreateCampaignShow()}>Edit campaign</h3>\n                        <CreateCampaign\n                          createCampaignShow={createCampaignShow}\n                          handleCreateCampaignClose={handleCreateCampaignClose}\n                          letterTemplates={letterTemplates}\n                          loadUserData={loadUserData}\n                          editData={activeCampaign}\n                        />\n                      </div>\n                      <div className='save-section'>\n                        <div className=\"print-icon\">\n                        </div>\n                        <h3 onClick={() => launchCampaign(activeCampaign, propertiesInCampaign, letterTemplates, signature)}>Launch campaign</h3>\n                      </div>\n                    </>\n                  }\n                </div>\n              </div>\n            </div>\n            <div className='matching-status'>\n              <h3 className='matching-pill' onClick={() => setCampaignDetail('Leads')} style={{ color: campaignDetail === 'Leads' ? 'white' : '#1A276C', backgroundColor: campaignDetail === 'Leads' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Leads</h3>\n              <h3 className='matching-pill' onClick={() => setCampaignDetail('Analytics')} style={{ color: campaignDetail === 'Analytics' ? 'white' : '#1A276C', backgroundColor: campaignDetail === 'Analytics' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Analytics</h3>\n              {/* <h3 className='matching-pill' onClick={() => setCampaignDetail('Sequences')} style={{ color: campaignDetail === 'Sequences' ? 'white' : '#1A276C', backgroundColor: campaignDetail === 'Sequences' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Sequences</h3> */}\n            </div>\n            {campaignDetail === 'Leads' ?\n              <>\n                <div className='campaign-lead-section'>\n\n                  <div className='action-section letter' style={{ marginTop: '1%', marginRight: '3%' }}>\n                    {propertiesInCampaign && activeCampaign && activeCampaign.campaign_status === 'Live' ? <h3 className='lead-message' style={{ fontSize: '0.8rem' }}>You have {propertiesInCampaign.length} properties in your campaign</h3> : <h3 className='lead-message' style={{ fontSize: '0.8rem' }}>You have {propertiesInCampaign.length} properties in your unlaunched campaign</h3>}\n                    {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                      <div className='save-section'>\n                        <div className=\"print-icon\"></div>\n                        <h3 onClick={() => removePropertiesFromCampaign(campaignSelectedRows, activeCampaign)}>Remove leads </h3>\n                      </div>\n                    }\n                  </div>\n                  <div className='results-table' style={{ marginTop: '1%' }}>\n                    <div className='results-headers letter'>\n                      {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                        <div id='column11' className='column'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type=\"checkbox\"\n                              checked={campaignSelectedRows && propertiesInCampaign ? campaignSelectedRows.length === propertiesInCampaign.length && propertiesInCampaign.length > 0 : ''}\n                              onChange={handleSelectAllChange}\n                            />\n                            <label className='label'></label>\n                          </div>\n                        </div>\n                      }\n                      <h5 id='column1' className='column'>#</h5>\n                      <div id='column2' className='column'>\n                        <h5>Address</h5>\n                      </div>\n                      <div id='column3' className='column'>\n                        <h5>Postcode</h5>\n                      </div>\n                      <div id='column4' className='column'>\n                        <h5>Agent</h5>\n                      </div>\n                      <div id='column5' className='column'>\n                        <h5>Owner</h5>\n                      </div>\n                      {/* <div id='column5' className='column'>\n                      <h5>Selection</h5>\n                    </div> */}\n\n                    </div>\n                    <hr className='property-divider' />\n                    <div className='results-details letter campaign'>\n                      {propertiesInCampaign ? propertiesInCampaign.map((item, index) => {\n                        const isRowSelected = campaignSelectedRows.some(selectedRow => selectedRow.rightmove_id === item.rightmove_id)\n                        return (\n                          <>\n                            <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                              {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                                <div className='column' id='column11'>\n                                  <div className='custom-checkbox'>\n                                    <input\n                                      className='checkbox'\n                                      type='checkbox'\n                                      checked={campaignSelectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                                      onChange={(e) => handleRowSelectionChange(e, item)}\n                                    />\n                                    <label className='label'>\n                                    </label>\n                                  </div>\n                                </div>\n                              }\n                              <div className='column' id='column1'>\n                                <h5>{index + 1}</h5>\n                              </div>\n                              <div className='column' id='column2'>\n                                <h5>{item.address}</h5>\n                              </div>\n                              <div className='column' id='column3'>\n                                <h5>{item.postcode}</h5>\n                              </div>\n                              <div className='column' id='column4'>\n                                <h5>{item.agent}</h5>\n                              </div>\n                              <div className='column' id='column5'>\n                                <h5>{item.owner_name ? item.owner_name : 'N/a'}</h5>\n                              </div>\n\n\n                            </div>\n                            <hr className='property-divider' />\n\n                          </>\n                        )\n                      })\n                        : ' '}\n                    </div>\n                  </div>\n\n                </div>\n              </>\n\n              : campaignDetail === 'Analytics' ?\n\n                <>\n                  <div className='campaign-analytics'>\n                    <div className='action-section letter' style={{ marginTop: '1%', marginRight: '3%' }}>\n                      {activeCampaign && activeCampaign.campaign_status === 'Live' ? <h3 className='status-title'>Status: <span className='status-detail'>Live</span></h3> : activeCampaign.campaign_status === 'Not launched' ? <h3 className='status-title'>Status: <span className='status-detail'>Not launched</span></h3> : ''}\n                    </div>\n                    {activeCampaign && activeCampaign.campaign_status === 'Live' ?\n                      <>\n                        <div className='analytics-overview'>\n                          <div className='analytics-box'>\n                            <h2 className='box-title'>{campaignAnalytics ? campaignAnalytics.length : ''}</h2>\n                            <h3 className='box-sub-title'>In campaign</h3>\n                          </div>\n                          <div className='analytics-box'>\n                            <h2 className='box-title'>\n                              {campaignAnalytics ? campaignAnalytics.filter(item => item.status === 'Sent').length : 0}\n                            </h2>\n                            <h3 className='box-sub-title'>Sent letters</h3>\n                          </div>\n                          <div className='analytics-box'>\n                            <h2 className='box-title'>\n                              {campaignAnalytics ? campaignAnalytics.filter(item => item.status === 'Scheduled' || item.status === 'Sending today').length : 0}\n                            </h2>\n                            <h3 className='box-sub-title'>Scheduled letters</h3>\n                          </div>\n                          <div className='analytics-box'>\n                            <h2 className='box-title'>{activeCampaign ? formatDate(activeCampaign.campaign_start_date) : ''}</h2>\n                            <h3 className='box-sub-title'>Start date</h3>\n                          </div>\n                        </div>\n                        <div className='filter-row-section active'>\n                          <div className='analytics-filter-wrap'>\n                            <div className='filter-block'>\n                              <h3 className='filter-title'>Market status</h3>\n                              <select onChange={(e) => setMarketStatusFilter(e.target.value)}>\n                                <option value={''}>Select...</option>\n                                <option value={'Live'}>Live</option>\n                                <option value={'Off market'}>Off market</option>\n                              </select>\n                            </div>\n                            <div className='filter-block'>\n                              <h3 className='filter-title'>Send status</h3>\n                              <select onChange={(e) => setSendStatusFilter(e.target.value)}>\n                                <option value={''}>Select...</option>\n                                <option value={'Sent'}>Sent</option>\n                                <option value={'Scheduled'}>Scheduled</option>\n                              </select>\n                            </div>\n                          </div>\n                          <button className='clear-filters' onClick={clearAnalyticsFilters}>Clear</button>\n                        </div>\n                      </>\n                      : ''}\n\n                    {activeCampaign && activeCampaign.campaign_status === 'Live' ?\n                      <div className='results-table analytics'>\n                        <div className='results-headers analytics'>\n                          <div id='column1' className='column'><h5>#</h5></div>\n                          <div id='column2' className='column'><h5>Address</h5></div>\n                          <div id='column3' className='column'><h5>Market status</h5></div>\n                          <div id='column4' className='column'><h5>Removed date</h5></div>\n                          <div id='column5' className='column'><h5>Send status</h5></div>\n                          {/* <div id='column6' className='column'><h5>Pdf</h5></div> */}\n                          <div id='column7' className='column'><h5>Action</h5></div>\n                        </div>\n                        {/* <hr className='property-divider' /> */}\n                        <div className='results-details analytics'>\n                          {analyticsFilteredProperties ? analyticsFilteredProperties.map((item, index) => (\n                            <>\n                              <div key={index} className='results-content analytics'>\n                                <div className='column' id='column1'><h5>{index + 1}</h5></div>\n                                <div className='column' id='column2'><h5>{item.target_address}</h5></div>\n                                <div className='column' id='column3'><h5>{item.market_status ? item.market_status : 'N/a'}</h5></div>\n                                <div className='column' id='column4'><h5>{item.removed_date ? formatDate(item.removed_date) : ''}</h5></div>\n                                <div className='column' id='column5'><h5>{item.status}</h5></div>\n                                {/* <div className='column' id='column6'>{item.status === 'Sent' ? <h5 onClick={() => window.open(item.pdf, '_blank')} className=\"open-pdf-button\">📑</h5> : ''}</div> */}\n                                <div className='column' id='column7'>\n                                  {item.status !== 'Sent' && item.status !== 'Cancelled' ? (\n                                    <h5 onClick={() => cancelLetter(item.id)}>❌</h5>\n                                  ) : ''}\n                                </div>\n                              </div>\n                            </>\n                          )) : ''}\n                        </div>\n                      </div>\n                      : ''}\n                  </div>\n\n\n                </>\n\n                : campaignDetail === 'Sequences' ?\n                  <>\n\n                  </>\n\n                  : ''\n            }\n          </>\n\n          : campaignScreen === 'Specific' && campaignLoading ?\n\n            <div className='property-table-loading campaign'>\n              <Loading />\n              <h3>Hold tight, your campaign is being launched. This may take a few minutes 🚀</h3>\n            </div>\n\n            : ''}\n\n    </>\n  )\n}\nexport default CampaignOverview","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst SetSignatures = ({ letterTab, setLetterTab, signature, setSignature, loadUserData, editCredts,\n  setEditCredits, initiateCheckoutSession, creditValue, addCreditValue, availableCredits }) => {\n\n  // state for loading the signatures\n  const [loadSignatures, setLoadSignatures] = useState(false)\n\n  // state for editing or not\n  const [editSignatures, setEditSignatures] = useState(false)\n\n\n  // function to chabnge the signatures\n  const signatureChange = (e) => {\n    const { name, value, type, files } = e.target\n    if (type === 'file') {\n      // Update the state with the file object for logo\n      setSignature(prevState => ({\n        ...prevState,\n        [name]: files[0], // Assuming single file upload\n      }))\n    } else {\n      // Update the state with value for text inputs\n      setSignature(prevState => ({\n        ...prevState,\n        [name]: value,\n      }))\n    }\n  }\n\n\n  // function to update the signature details\n  const updateSignatures = async () => {\n    setLoadSignatures(true)\n    const formData = new FormData()\n\n    // Append signature details to formData\n    Object.entries(signature).forEach(([key, value]) => {\n      if (key === 'logo' && value) {\n      // Append the file object for logo\n        formData.append(key, value)\n      } else {\n      // Append other text-based details\n        formData.append(key, value)\n      }\n    })\n\n    try {\n      const response = await axios.put('/api/letter_signatures/', formData, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        // Content-Type is automatically set for FormData, so it's not specified here\n        },\n      })\n      console.log('Letter signature ->', response)\n      // Success handling with Swal or any other logic\n      loadUserData()\n    } catch (error) {\n      console.error('Error updating letters:', error)\n      if (error.response && error.response.data && error.response.data.detail) {\n        if (error.response.data.detail.includes('File size too large')) {\n          Swal.fire({\n            title: '🫡 Wittle alerts',\n            text: 'Your image file size needs to be less than 10mb',\n            icon: 'warning', // Adds a warning icon to the alert\n            // showCancelButton: true, // Shows a cancel button alongside the confirm button\n            confirmButtonText: 'OK thanks 🤝',\n            confirmButtonColor: '#ED6B86',\n            // cancelButtonText: 'No thanks',\n            backdrop: true,\n            background: '#FDF7F0',\n            customClass: {\n              title: 'popup-swal-title',\n              popup: 'popup-swal-body',\n              confirmButton: 'popup-swal-confirm',\n              cancelButton: 'popup-swal-cancel',\n            },\n          })\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: '🫡 Wittle alerts',\n            text: error.response.data.detail,\n          })\n        }\n      }\n    } finally {\n      setLoadSignatures(false)\n    }\n  }\n\n\n\n  return (\n\n\n    <>\n      <div className='top-line'>\n        <div className='matching-status'>\n          <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n          <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n          <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n          <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n        </div>\n        {editCredts ?\n          <div className='credits-section'>\n            <input type='number' value={creditValue} onChange={addCreditValue}></input>\n            <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n            <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n          </div>\n          : <div className='credits-section'>\n            <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n            <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n          </div>}\n      </div>\n\n      <div className='my-details-section'>\n        <h1 className='my-details-title'>Add or update the details you want to include in your letters</h1>\n        {signature && !loadSignatures ?\n          <>\n            <div className='details-columns'>\n              <div className='my-details-content'>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Title</h3>\n                  {editSignatures ? <input name=\"title\" type='text' value={signature.title} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.title}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>First name</h3>\n                  {editSignatures ? <input name=\"first_name\" type='text' value={signature.first_name} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.first_name}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Last name</h3>\n                  {editSignatures ? <input name=\"last_name\" type='text' value={signature.last_name} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.last_name}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Company</h3>\n                  {editSignatures ? <input name=\"company_name\" type='text' value={signature.company_name} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.company_name}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Role</h3>\n                  {editSignatures ? <input name=\"role\" type='text' value={signature.role} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.role}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Mobile</h3>\n                  {editSignatures ? <input name=\"mobile\" type='text' pattern=\"\\d*\" value={signature.mobile} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.mobile}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Landline</h3>\n                  {editSignatures ? <input name=\"landline\" type='text' pattern=\"\\d*\" value={signature.landline} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.landline}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Email</h3>\n                  {editSignatures ? <input name=\"email\" type='text' value={signature.email} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.email}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Address</h3>\n                  {editSignatures ? <input name=\"address\" type='text' value={signature.address} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.address}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Website</h3>\n                  {editSignatures ? <input name=\"website\" type='text' value={signature.website} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.website}</h3>}\n                </div>\n                {/* <div className='details-row'>\n                <h3 className='detail-title'>Footer</h3>\n                {editSignatures ? <input name=\"letter_footer\" type='text' value={signature.letter_footer} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.letter_footer}</h3>}\n              </div> */}\n                <div className='details-row'>\n                  <h3 className='detail-title'>Logo</h3>\n                  {editSignatures ?\n                    <input\n                      type=\"file\"\n                      name=\"logo\"\n                      accept=\"image/png, image/jpeg\"\n                      className='image-input'\n                      onChange={signatureChange}\n                    />\n                    : signature.logo ?\n                      <div className='logo-box'>\n                        <img src={signature.logo} alt=\"Logo\" className='signature-logo' />\n                      </div>\n                      : null\n                  }\n                </div>\n              </div>\n              <div className='my-details-content'>\n                <div className='details-row'>\n                  <h3 className='detail-title'>TikTok</h3>\n                  {editSignatures ? <input name=\"tiktok\" type='text' value={signature.tiktok} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.tiktok}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Instagram</h3>\n                  {editSignatures ? <input name=\"instagram\" type='text' value={signature.instagram} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.instagram}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>QR code location</h3>\n                  {editSignatures ? <input name=\"qr_location\" type='text' value={signature.qr_location} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.qr_location}</h3>}\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Digital signature</h3>\n                  {editSignatures ?\n                    <input\n                      type=\"file\"\n                      name=\"digital_signature\"\n                      accept=\"image/png, image/jpeg\"\n                      className='image-input'\n                      onChange={signatureChange}\n                    />\n                    : signature.digital_signature ?\n                      <div className='logo-box'>\n                        <img src={signature.digital_signature} alt=\"Digital signature\" className='signature-logo' />\n                      </div>\n                      : null\n                  }\n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Banner image</h3>\n                  {editSignatures ?\n                    <input\n                      type=\"file\"\n                      name=\"banner_image\"\n                      accept=\"image/png, image/jpeg\"\n                      className='image-input'\n                      onChange={signatureChange}\n                    />\n                    : signature.banner_image ?\n                      <div className='logo-box'>\n                        <img src={signature.banner_image} alt=\"Banner\" className='signature-logo' />\n                      </div>\n                      : null\n                  }                \n                </div>\n                <div className='details-row'>\n                  <h3 className='detail-title'>Personal image</h3>\n                  {editSignatures ?\n                    <input\n                      type=\"file\"\n                      name=\"profile_image\"\n                      accept=\"image/png, image/jpeg\"\n                      className='image-input'\n                      onChange={signatureChange}\n                    />\n                    : signature.profile_image ?\n                      <div className='logo-box'>\n                        <img src={signature.profile_image} alt=\"Banner\" className='signature-logo' />\n                      </div>\n                      : null\n                  }                \n                </div>\n              </div>\n            </div>\n            <div className='save'>\n              {!editSignatures ?\n                <button onClick={() => setEditSignatures(true)}>Edit details</button>\n                :\n                <>\n                  <button onClick={() => updateSignatures()}>Save details</button>\n                  <button className='stop-edit' onClick={() => setEditSignatures(false)}>Stop editing</button>\n                </>\n              }\n            </div>\n          </>\n          : loadSignatures ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </div>\n    </>\n  )\n}\n\nexport default SetSignatures","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\nimport Loading from '../../../helpers/Loading'\n// import CreateTemplate from './CreateTemplate'\nimport TemplateOptions from './TemplateOptions'\nimport Handlebars, { create } from 'handlebars'\nimport BasicTemplate from './TemplatePDFs.js/BasicTemplate'\nimport ReactDOMServer from 'react-dom/server'\nimport CreateCampaign from './Campaigns/CreateCampaign'\nimport CampaignOverview from './Campaigns/CampaignOverview'\nimport SetSignatures from './SetSignatures'\nimport { loadStripe } from '@stripe/stripe-js'\n\n\n\nconst LettersHub = ({ letterProperties, setLetterProperties, userData, setUserData, signature, setSignature, loadUserData, letterTemplates, setLetterTemplates,\n  letterCampaigns, setLetterCampaigns, campaignLoading, setCampaignLoading, setLeadGenSection, availableCredits, setAvailableCredits }) => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [letterTab, setLetterTab] = useState('Home')\n\n\n  // state for selecting rows\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n  // manageing modal for saved iitems added \n  const [createTemplateShow, setCreateTemplateShow] = useState(false)\n\n  // managing state for campaign selector dropdown\n  const [selectedCampaign, setSelectedCampaign] = useState()\n\n  // state to store credits\n  const [creditValue, setCreditValue] = useState(0)\n\n  // state for holding the logo\n  const [logo, setLogo] = useState(null)\n\n  // state for loading sign during pdf processing\n  const [pdfProcessing, setPdfProcessing] = useState(false)\n\n  // state for the selected row\n  const [selectedData, setSelectedData] = useState(null)\n\n  // state for selected template\n  const [selectedTemplate, setSelectedTemplate] = useState()\n\n  const [selectedTemplateName, setSelectedTemplateName] = useState('')\n\n  // state for whether its a new or ediitedtemplate\n  const [templateAction, setTemplateAction] = useState('')\n  const [currentTemplate, setCurrentTemplate] = useState('')\n\n  const [isEditPending, setIsEditPending] = useState(false)\n\n  // state for editing credts\n  const [editCredts, setEditCredits] = useState(false)\n\n  const [exampleTemplateData, setExampleTemplateData] = useState()\n\n  // state for controlling the filters opening and closing\n  const [campaignFilters, setCampaignFilters] = useState(false)\n\n  const [campaignFilteredProperties, setCampaignFilteredProperties] = useState([])\n\n  const [channel, setChannel] = useState('')\n  const [postcode, setPostcode] = useState('')\n  const [bedroomsMin, setBedroomsMin] = useState('')\n  const [bedroomsMax, setBedroomsMax] = useState('')\n  const [priceMin, setPriceMin] = useState('')\n  const [priceMax, setPriceMax] = useState('')\n  const [minPriceOptions, setMinPriceOptions] = useState([])\n  const [maxPriceOptions, setMaxPriceOptions] = useState([])\n\n  useEffect(() => {\n    if (letterProperties && letterProperties.length > 0) {\n      let data = letterProperties\n      // filter by channel\n      if (channel) {\n        data = data.filter(item => item.channel === channel)\n      }\n      // filter by postcode\n      if (postcode) {\n        data = data.filter(item => item.postcode.toUpperCase().startsWith(postcode.toUpperCase()))\n      }\n      // Filter by bedrooms\n      if (bedroomsMin) {\n        data = data.filter(item => parseInt(item.bedrooms) >= parseInt(bedroomsMin))\n      }\n      if (bedroomsMax) {\n        data = data.filter(item => parseInt(item.bedrooms) <= parseInt(bedroomsMax))\n      }\n      // Filter by prce\n      if (priceMin) {\n        data = data.filter(item => parseInt(item.price_numeric) >= parseInt(priceMin))\n      }\n      if (priceMax) {\n        data = data.filter(item => parseInt(item.price_numeric) <= parseInt(priceMax))\n      }\n\n      setCampaignFilteredProperties(data)\n    }\n  }, [letterProperties, channel, postcode, bedroomsMin, bedroomsMax, priceMin, priceMax])\n\n  useEffect(() => {\n    // Conditionally set price options based on the channel\n    if (channel === 'rent') {\n      setMinPriceOptions(rentalPriceOptions)\n      setMaxPriceOptions(rentalPriceOptions)\n    } else if (channel === 'sale') {\n      setMinPriceOptions(salesPriceOptions)\n      setMaxPriceOptions(salesPriceOptions)\n    } else {\n      setMinPriceOptions([])\n      setMaxPriceOptions([])\n    }\n  }, [channel])\n\n  const bedroomOptions = [\n    { value: '1', label: '1' },\n    { value: '2', label: '2' },\n    { value: '3', label: '3' },\n    { value: '4', label: '4' },\n    { value: '5', label: '5' },\n    { value: '6', label: '6' },\n    { value: '7', label: '7' }\n  ]\n\n  const rentalPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100 + i * 100}`, label: `£${100 + i * 100}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000 + i * 200}`, label: `£${1000 + i * 200}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000 + i * 250}`, label: `£${2000 + i * 250}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000 + i * 500}`, label: `£${4000 + i * 500}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000 + i * 1000}`, label: `£${8000 + i * 1000}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${12000 + i * 2000}`, label: `£${12000 + i * 2000}` }))\n  ]\n\n  const salesPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100000 + i * 100000}`, label: `£${(100000 + i * 100000).toLocaleString()}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000000 + i * 200000}`, label: `£${(1000000 + i * 200000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000000 + i * 250000}`, label: `£${(2000000 + i * 250000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000000 + i * 500000}`, label: `£${(4000000 + i * 500000).toLocaleString()}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000000 + i * 1000000}`, label: `£${(8000000 + i * 1000000).toLocaleString()}` })),\n    ...Array.from({ length: 6 }, (_, i) => ({ value: `${12000000 + i * 2000000}`, label: `£${(12000000 + i * 2000000).toLocaleString()}` }))\n  ]\n\n\n  // function for clearing filters\n  const clearFilters = () => {\n    setChannel('')\n    setPostcode('')\n    setBedroomsMin('')\n    setBedroomsMax('')\n    setPriceMin('')\n    setPriceMax('')\n  }\n\n\n\n  useEffect(() => {\n    if (userData && userData.epc_favourites.length > 0) {\n      setExampleTemplateData(userData.epc_favourites[0])\n      console.log('example data for template ->', userData.epc_favourites[0])\n    }\n  }, [userData])\n\n\n  // ? Section 1: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n    console.log('selected row ->', item)\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Determine the count of rows not in a campaign\n    const rowsNotInCampaignCount = campaignFilteredProperties.filter(item => item.letter_campaign === 'None' || item.letter_campaign === null).length\n\n    // Update the 'Select All' checkbox status based on whether all eligible rows are selected\n    setSelectAllStatus(selectedRows.length === rowsNotInCampaignCount)\n  }\n\n\n  // function for selecting rows\n  const selectAllRows = () => {\n    // Filter letterProperties to include only items not in a campaign\n    const rowsNotInCampaign = campaignFilteredProperties.filter(item => item.letter_campaign === 'None' || item.letter_campaign === null)\n\n    // Set these filtered items as the selected rows\n    setSelectedRows(rowsNotInCampaign)\n\n    // Update select all status to true since all eligible rows are now selected\n    setSelectAllStatus(true)\n  }\n\n\n  // function for deseleting rows\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  // function for selecting all rows\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n\n  // close modal\n  const handleCreateTemplateClose = () => {\n    setCreateTemplateShow(false)\n    setCurrentTemplate({})\n    setTemplateAction('new')\n  }\n\n  // show the modal\n  const handleCreateTemplateShow = (e) => {\n    setTemplateAction('new')\n    setCurrentTemplate({})\n    setCreateTemplateShow(true)\n  }\n\n  // show the modal\n  const handleEditTemplateShow = (item) => {\n    setTemplateAction('edit')\n    setCurrentTemplate(item)\n    // setCreateTemplateShow(true)\n    setIsEditPending(true)\n  }\n\n\n  useEffect(() => {\n    if (isEditPending && currentTemplate) {\n      setCreateTemplateShow(true)\n      setIsEditPending(false)\n    }\n  }, [currentTemplate, isEditPending])\n\n\n\n  // delete template\n  const deleteTemplate = async (item) => {\n    // Start loading\n    setCampaignLoading(true)\n\n    try {\n      // Display confirmation dialog\n      const result = await Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'Are you sure you want to delete this template?',\n        icon: 'warning', // Adds a warning icon to the alert\n        showCancelButton: true, // Shows a cancel button alongside the confirm button\n        confirmButtonText: 'Yes, delete 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'No thanks',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n\n      // Check if user confirmed the deletion\n      if (result.isConfirmed) {\n        const response = await axios.delete(`/api/letter_templates/delete/${item.id}/`, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        // Optionally, alert the user of success\n        Swal.fire({\n          title: '😎 action complete',\n          text: 'The template has been deleted',\n          icon: 'success',\n          confirmButtonColor: '#ED6B86',\n        })\n\n        // Refresh user data if needed\n        await loadUserData()\n      }\n    } catch (error) {\n      console.error('Error deleting template:', error)\n      Swal.fire({\n        title: 'Error!',\n        text: 'Failed to delete the template.',\n        icon: 'error',\n        confirmButtonText: 'OK',\n        customClass: {\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n    } finally {\n      // Stop loading regardless of result\n      setCampaignLoading(false)\n    }\n  }\n\n\n\n  // select campaign to add properties to\n  const handleCampaignSelection = (e) => {\n    const campaignId = e.target.value\n    setSelectedCampaign(campaignId)\n\n    // Assuming `selectedRows` or similar state holds the properties you want to add to the campaign\n    const selectedProperties = selectedRows // Or however you have access to the selected properties\n    const selectedCampaignDetails = letterCampaigns.find(campaign => campaign.id.toString() === campaignId) // Find the selected campaign details\n\n    if (selectedProperties && selectedProperties.length > 0 && selectedCampaignDetails) {\n      // Call addPropertiesToCampaign with the selected properties and campaign name\n      addPropertiesToCampaign(selectedProperties, selectedCampaignDetails.campaign_name)\n    } else {\n      console.log('No properties selected or campaign not found')\n    }\n  }\n\n\n  const addPropertiesToCampaign = async (properties, campaignName) => {\n\n    const propertyIds = properties.map(property => property.rightmove_id)\n\n    try {\n      const response = await axios.put('/api/epc_favourite/add_to_campaign/', {\n        property_ids: propertyIds,\n        campaign_name: campaignName,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Properties added to campaign successfully:', response.data)\n      loadUserData()\n      setSelectedRows([])\n      Swal.fire({\n        title: '😎 action complete',\n        text: `${properties.length} properties added to campaign`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Error adding properties to campaign:', error.response.data)\n    }\n  }\n\n\n\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr)\n    if (!isNaN(date.getTime())) {\n      // Date is valid\n      const day = date.getDate().toString().padStart(2, '0')\n      const month = (date.getMonth() + 1).toString().padStart(2, '0') // getMonth() is zero-based\n      const year = date.getFullYear()\n      return `${day}/${month}/${year}`\n    } else {\n      // Date is invalid or input is not a valid date string\n      console.warn('Invalid date:', dateStr)\n      return dateStr // Return original string or handle as needed\n    }\n  }\n\n  // add credit to account\n\n  const initiateCheckoutSession = async (creditsAmount) => {\n    const numericAmount = Number(creditsAmount)\n\n    try {\n      const response = await axios.post('/api/usage/add_credit/', {\n        credits_amount: numericAmount,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      window.localStorage.setItem('wittle-latest-credits', JSON.stringify('Yes'))\n      window.localStorage.setItem('wittle-credit-value', JSON.stringify(`${creditValue}`))\n      // Redirect the user to Stripe Checkout using the session URL\n      const { sessionId } = response.data\n      const stripe = await loadStripe(process.env.REACT_APP_STRIPE_API_KEY) // Accessing Stripe key\n      await stripe.redirectToCheckout({ sessionId })\n      // setCheckoutComplete(true)\n\n\n    } catch (error) {\n      console.error('Error initiating checkout session:', error)\n      // Handle error (e.g., displaying an error message)\n    }\n  }\n\n\n\n  // function for adding a value\n  const addCreditValue = (e) => {\n    setCreditValue(e.target.value)\n    console.log('credit input ->', e.target.value)\n  }\n\n  return (\n\n    <>\n      <section className='letter-section'>\n        {userData && userData.lead_gen_details.length > 0 ?\n          <div className='results-block'>\n            {campaignLoading ?\n\n              <div className='property-table-loading'>\n                <Loading />\n                {/* <h3>We&apos;re making sure everything is fully loaded for you</h3> */}\n              </div>\n              :\n\n              letterTab === 'Home' && !campaignLoading ?\n                <>\n                  <div className='top-line'>\n                    <div className='matching-status'>\n\n                      <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n                      <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n                      <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n                      <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n                    </div>\n                    {editCredts ?\n                      <div className='credits-section'>\n                        <input type='number' value={creditValue} onChange={addCreditValue}></input>\n                        <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n                        <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n                      </div>\n                      : <div className='credits-section'>\n                        <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n                        <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n                      </div>}\n                  </div>\n                  <div className='action-section letter'>\n                    {campaignFilteredProperties ? <h3 className='template-total'>You have {campaignFilteredProperties.length} properties prepared for letter campaigns</h3> : ''}\n                    <div className='letter-selections'>\n                      <select value={selectedCampaign} onChange={handleCampaignSelection} className='template-select letter'>\n                        <option value=\"\">Select a campaign</option>\n                        {letterCampaigns\n                          ? letterCampaigns\n                            .filter(campaign => campaign.campaign_status !== 'Live')\n                            .map((campaign, index) => (\n                              <option key={index} value={campaign.id}>\n                                {campaign.campaign_name}\n                              </option>\n                            ))\n                          : ''}\n                      </select>\n                      <div\n                        className={`filter-icon ${campaignFilters ? 'active' : 'inactive'}`}\n                        onClick={() => setCampaignFilters(!campaignFilters)}\n                        style={{ backgroundColor: campaignFilters ? '#1A276C' : 'inherit' }}>\n                      </div>\n                    </div>\n\n                  </div>\n                  {campaignFilters ?\n                    <div className={`filter-row-section ${campaignFilters ? 'active' : 'inactive'}`}>\n                      <div className='filter-block'>\n                        <h3 className='filter-title'>Channel</h3>\n                        <select onChange={(e) => setChannel(e.target.value)}>\n                          <option value={''}>Select...</option>\n                          <option value={'sale'}>Sale</option>\n                          <option value={'rent'}>Rent</option>\n                        </select>\n                      </div>\n                      <div className='filter-block'>\n                        <h3 className='filter-title'>Postcode</h3>\n                        <input className='filter-input' onChange={(e) => setPostcode(e.target.value)}></input>\n                      </div>\n                      <div className='filter-block'>\n                        <h3 className='filter-title'>Bedrooms</h3>\n                        <select className='small' value={bedroomsMin} onChange={e => setBedroomsMin(e.target.value)}>\n                          <option value={''}>Min</option>\n                          {bedroomOptions.map(option => (\n                            <option key={option.value} value={option.value}>{option.label}</option>\n                          ))}\n                        </select>\n                        <select className='small' value={bedroomsMax} onChange={e => setBedroomsMax(e.target.value)}>\n                          <option value={''}>Max</option>\n                          {bedroomOptions.filter(option => option.value >= bedroomsMin).map(option => (\n                            <option key={option.value} value={option.value}>{option.label}</option>\n                          ))}\n                        </select>\n                      </div>\n                      {channel !== '' &&\n                        <div className='filter-block'>\n                          <h3 className='filter-title'>Price</h3>\n                          <select className='small' value={priceMin} onChange={e => setPriceMin(e.target.value)}>\n                            <option value={''}>Min</option>\n                            {minPriceOptions.map((option) => (\n                              <option key={option.value} value={option.value}>{option.label}</option>\n                            ))}\n                          </select>\n                          <select className='small' value={priceMax} onChange={e => setPriceMax(e.target.value)}>\n                            <option value={''}>Max</option>\n                            {maxPriceOptions.map((option) => (\n                              <option key={option.value} value={option.value}>{option.label}</option>\n                            ))}\n                          </select>\n                        </div>\n                      }\n                      <button className='clear-filters' onClick={clearFilters}>Clear</button>\n                    </div>\n                    : ''}\n\n\n                  <div className='results-table'>\n                    <div className='results-headers letter'>\n                      <div id='column11' className='column'>\n                        <div className='custom-checkbox'>\n                          <input\n                            className='checkbox'\n                            type=\"checkbox\"\n                            checked={\n                              campaignFilteredProperties &&\n                              selectedRows.length === campaignFilteredProperties.filter(item => item.letter_campaign === 'None' || item.letter_campaign === null).length\n                              && selectedRows.length > 0\n                            }\n                            onChange={handleSelectAllChange}\n                          />\n                          <label className='label'></label>\n                        </div>\n                      </div>\n                      <h5 id='column1' className='column'>#</h5>\n                      <div id='column2' className='column'>\n                        <h5>Address</h5>\n                      </div>\n                      <div id='column3' className='column'>\n                        <h5>Date added</h5>\n                      </div>\n                      <div id='column4' className='column'>\n                        <h5>Date removed</h5>\n                      </div>\n                      <div id='column5' className='column'>\n                        <h5>Market status</h5>\n                      </div>\n                      <div id='column6' className='column'>\n                        <h5>Channel</h5>\n                      </div>\n                      <div id='column7' className='column'>\n                        <h5>Price</h5>\n                      </div>\n                      {/* <div id='column6' className='column'>\n                      <h5>Action</h5>\n                    </div> */}\n                    </div>\n                    <hr className='property-divider' />\n                    <div className={`results-details letter ${campaignFilters ? 'active' : 'inactive'}`}>\n                      {campaignFilteredProperties ? campaignFilteredProperties.map((item, index) => {\n                        const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.rightmove_id)\n                        return (\n                          <>\n                            <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                              {item.letter_campaign === 'None' ?\n                                <div className='column' id='column11'>\n                                  <div className='custom-checkbox'>\n                                    <input\n                                      className='checkbox'\n                                      type='checkbox'\n                                      checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                                      onChange={(e) => handleRowSelectionChange(e, item)}\n                                    />\n                                    <label className='label'>\n                                    </label>\n                                  </div>\n                                </div>\n                                :\n                                <div className='column' id='column11'>\n                                  <h6>In campaign</h6>\n                                </div>}\n                              <div className='column' id='column1'>\n                                <h5>{index + 1}</h5>\n                              </div>\n                              <div className='column' id='column2'>\n                                <h5>{item.address}</h5>\n                              </div>\n                              <div className='column' id='column3'>\n                                <h5>{item.added_revised}</h5>\n                              </div>\n                              <div className='column' id='column4'>\n                                <h5>{item.market_status === 'Live' ? '' : item.market_status === 'Off Market' && item.week_removed ? formatDate(item.week_removed) : ''}</h5>\n                              </div>\n                              <div className='column' id='column5'>\n                                <h5>{item.market_status === 'Live' ? item.market_status : `🚩 ${item.market_status}`}</h5>\n                              </div>\n                              <div className='column' id='column6'>\n                                <h5>{item.channel}</h5>\n                              </div>\n                              <div className='column' id='column7'>\n                                <h5>{item.price}</h5>\n                              </div>\n                              {/* <div className='column' id='column6'>\n                              <button key={index} onClick={() => generatePDF(item)}>See example</button>\n                            </div> */}\n\n                            </div>\n                            <hr className='property-divider' />\n                          </>\n                        )\n                      })\n                        : ' '}\n                    </div>\n                  </div>\n                </>\n\n                : letterTab === 'Campaigns' && !campaignLoading ?\n\n                  <CampaignOverview\n                    letterTab={letterTab}\n                    setLetterTab={setLetterTab}\n                    letterCampaigns={letterCampaigns}\n                    loadUserData={loadUserData}\n                    letterTemplates={letterTemplates}\n                    letterProperties={letterProperties}\n                    signature={signature}\n                    campaignLoading={campaignLoading}\n                    setCampaignLoading={setCampaignLoading}\n                    creditValue={creditValue}\n                    editCredts={editCredts}\n                    setEditCredits={setEditCredits}\n                    availableCredits={availableCredits}\n                    initiateCheckoutSession={initiateCheckoutSession}\n                    addCreditValue={addCreditValue}\n                  />\n\n                  : letterTab === 'Templates' && !campaignLoading ?\n\n                    <>\n                      <div className='top-line'>\n                        <div className='matching-status'>\n                          <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n                          <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n                          <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n                          <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n                        </div>\n                        {editCredts ?\n                          <div className='credits-section'>\n                            <h3 className='credit-balance'>Top up value:</h3>\n                            <input type='number' value={creditValue} onChange={addCreditValue}></input>\n                            <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n                            <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n                          </div>\n                          : <div className='credits-section'>\n                            <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n                            <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n                          </div>}\n                      </div>\n                      <div className='action-section letter'>\n                        {letterTemplates ? <h3 className='template-total'>You have {letterTemplates.length} saved templates</h3> : <h3 className='template-total'>Create some templates so you can see them here</h3>}\n                        <div className='save-section'>\n                          <div className=\"print-icon\"></div>\n                          <h3 onClick={() => handleCreateTemplateShow()}>New template </h3>\n                        </div>\n                      </div>\n\n                      <TemplateOptions\n                        handleCreateTemplateClose={handleCreateTemplateClose}\n                        createTemplateShow={createTemplateShow}\n                        signature={signature}\n                        loadUserData={loadUserData}\n                        templateAction={templateAction}\n                        currentTemplate={currentTemplate}\n                        exampleData={exampleTemplateData}\n                        setCampaignLoading={setCampaignLoading}\n                      />\n                      <div className='template-list'>\n                        <div className='template-table'>\n                          <div className='template-headers'>\n                            <h3 id='column1'>#</h3>\n                            <h3 id='column2'>Name</h3>\n                            <h3 id='column3'>Type</h3>\n                            <h3 id='column4'>Edit</h3>\n                            {/* <h3 id='column5'>View</h3> */}\n                            <h3 id='column6'>Delete</h3>\n                          </div>\n                          <div className='template-content'>\n                            {letterTemplates ?\n                              [...letterTemplates]\n                                .sort((a, b) => a.template_number - b.template_number)\n                                .map((item, index) => (\n                                  <div key={index} className='template-item'>\n                                    <h3 className='template-number' id='column1'>{index + 1}</h3>\n                                    <h3 className='template-name' id='column2'>{item.template_name}</h3>\n                                    <h3 className='template-type' id='column3'>{item.template_type}</h3>\n                                    <div id='column4'>\n                                      <h3 className='action' onClick={() => handleEditTemplateShow(item)}>✍🏼</h3>\n                                    </div>\n                                    {/* <div id='column5'>\n                                    <h3 className='action' onClick={() => window.open(item.example_pdf, '_blank')}>👀</h3>\n                                  </div> */}\n                                    <div id='column6'>\n                                      <h3 className='action' onClick={() => deleteTemplate(item)}>🗑</h3>\n                                    </div>\n                                  </div>\n                                ))\n                              : ''}\n                          </div>\n\n                        </div>\n                      </div>\n\n                    </>\n\n                    : letterTab === 'My signatures' && !campaignLoading ?\n\n                      <>\n                        <SetSignatures\n                          letterTab={letterTab}\n                          setLetterTab={setLetterTab}\n                          signature={signature}\n                          setSignature={setSignature}\n                          loadUserData={loadUserData}\n                          creditValue={creditValue}\n                          editCredts={editCredts}\n                          setEditCredits={setEditCredits}\n                          availableCredits={availableCredits}\n                          initiateCheckoutSession={initiateCheckoutSession}\n                          addCreditValue={addCreditValue}\n                        />\n                      </>\n                      : ''\n            }\n          </div>\n          :\n          <h3 className='letter-warning'>You haven&apos;t saved any properties yet! Once you&apos;ve done that, you can set up your campaigns.</h3>\n        }\n\n      </section>\n    </>\n  )\n}\n\nexport default LettersHub","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Select from 'react-select'\nimport ArchivedPropertiesModal from '../../b2bModals/ArchivedPropertiesModal'\nimport Swal from 'sweetalert2'\nimport Loading from '../../../helpers/Loading'\n\n\nconst LandRegTesting = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [testOuput, setTestOutput] = useState('')\n\n\n\n\n  // ? Test scenario 1\n  // Test 1a - Property description search\n  const searchProperty1a = async () => {\n    const requestData = {\n      user_id: 'BGUser001',\n      password: 'landreg001',\n      message_id: 'unique_message_id',\n      external_reference: 'external_reference',\n      customer_reference: 'customer_reference',\n      building_number: '99',\n      postcode: 'TQ56 4HY',\n    }\n\n    try {\n      const res = await axios.post('/api/land_reg_deeds/test1a/search_property_description/', requestData)\n      setTestOutput(res.data)\n    } catch (error) {\n      console.error('There was an error!', error)\n    }\n  }\n\n  return (\n\n    <>\n\n      <section className='land-reg-testing'>\n        <div className='testing-wrapper'>\n          <div className='land-reg-test-buttons'>\n            <button className='test-button' onClick={searchProperty1a}>Test 1a - Property description search</button>\n\n          </div>\n          <div className='land-reg-output'>\n            <div className='test-outputs'>\n              <h3>{testOuput ? testOuput : ''}</h3>\n            </div>\n\n          </div>\n        </div>\n\n\n      </section>\n\n    </>\n  )\n}\n\nexport default LandRegTesting","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\nimport RemoveProperty from '../b2bModals/RemoveProperties'\nimport RemoveProperties from '../b2bModals/RemoveProperties'\nimport LeadGenSaved from './LeadGenSections/LeadGenSaved'\nimport HiddenProperties from './LeadGenSections/HiddenProperties'\nimport ArchivedProperties from './LeadGenSections/ArchivedProperties'\nimport { ToastContainer, toast } from 'react-toastify'\nimport Swal from 'sweetalert2'\nimport { eventBus } from '../../../utils/EventBus'\nimport LettersHub from './LetterSection/LettersHubs'\nimport LandRegTesting from './LeadGenSections/LandRegTesting'\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for the number of extracts left left\n  const [leadGenRemaining, setLeadGenRemaining] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n  const [userPackage, setUserPackage] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n  const [campaignLoading, setCampaignLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [subcodeSubstring, setSubcodeString] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [companySavedProperties, setCompanySavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n  const [companyArchivedProperties, setCompanyArchivedProperties] = useState()\n  const [hiddenProperties, setHiddenProperties] = useState()\n  const [companyHiddenProperties, setCompanyHiddenProperties] = useState()\n  const [letterProperties, setLetterProperties] = useState()\n  const [companyLetterProperties, setCompanyLetterProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Inputs')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [availableCredits, setAvailableCredits] = useState(null)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    subcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n  // managing state for the signature\n  const [signature, setSignature] = useState({\n    first_name: '',\n    last_name: '',\n    company_name: '',\n    title: '',\n    role: '',\n    mobile: null,\n    landline: null,\n    address: '',\n    email: '',\n    letter_footer: '',\n    logo: '',\n    digital_signature: '',\n    banner_image: '',\n    instagram: '',\n    tiktok: '',\n    qr_location: '',\n  })\n\n  // manage state for list of letters\n  const [letterTemplates, setLetterTemplates] = useState()\n\n  // manage state for list of letter campaigns\n  const [letterCampaigns, setLetterCampaigns] = useState()\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n  const [removedIds, setRemovedIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n  const [filteredMatchingProperties, setFilteredMatchingProperties] = useState([])\n  const [filteredSalesMatchingProperties, setFilteredSalesMatchingProperties] = useState([])\n  const [filteredNoProperties, setFiltedNoProperties] = useState([])\n  const [filteredSalesNoProperties, setFiltedSalesNoProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n  const [matchType, setMatchType] = useState('Matching')\n  const [salesMatchType, setSalesMatchType] = useState('Matching')\n  const [expandedMultipleMatches, setExpandedMultpleMatches] = useState(new Set())\n  const [expandedSalesMultipleMatches, setExpandedSalesMultpleMatches] = useState(new Set())\n\n  const [availableOutcodes, setAvailableOutcodes] = useState()\n\n\n  // ? Section 2: Load user information\n  const loadUserData = async () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          setRentalLoading(true)\n          setSalesLoading(true)\n          setCampaignLoading(true)\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setUserPackage(data.usage_stats[0].package)\n          setAvailableCredits(data.usage_stats[0].credits)\n          getOutcodes()\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            // const updatedFavorites = await updateFavoritesMarketStatus(data)\n            const uniqueFilteredFavourites = Array.from(new Set(data.company_favourites\n              .filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n              .map(fav => fav.address)))\n              .map(address => data.company_favourites.find(fav => fav.address === address && fav.rightmove_id !== null && fav.action === 'Saved'))\n            \n            const uniquePersonalFilteredFavourites = Array.from(new Set(data.epc_favourites\n              .filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n              .map(fav => fav.address)))\n              .map(address => data.company_favourites.find(fav => fav.address === address && fav.rightmove_id !== null && fav.action === 'Saved'))\n\n            const companyLetters = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved' && fav.letter_sequence === 1)\n            const letters = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved' && fav.letter_sequence === 1)\n\n            const companyArchivedFavourites = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n\n            const removedProperties = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Removed')\n            const companyRemovedProperties = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Removed')\n\n            const newFavouriteIds = [...uniqueFilteredFavourites, ...companyArchivedFavourites, ...companyRemovedProperties].map(fav => fav.rightmove_id)\n            const personalNewFavouriteIds = [...uniquePersonalFilteredFavourites, ...archivedFavourites, ...removedProperties].map(fav => fav.rightmove_id)\n\n\n            setFavouriteIds(newFavouriteIds)\n            setRemovedIds(removedProperties)\n            console.log('removed properties ->', removedProperties)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              setSalesLoading(false)\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              setRentalLoading(false)\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            }\n            setSavedProperties(uniquePersonalFilteredFavourites)\n            setCompanySavedProperties(uniqueFilteredFavourites)\n            setLetterProperties(letters)\n            setCompanyLetterProperties(companyLetters)\n            setSignature(data.letter_signatures[0] ? data.letter_signatures[0] : signature)\n\n            setLetterTemplates(data.letter_templates)\n            setLetterCampaigns(data.letter_campaigns)\n            console.log('letter properties ->', letters)\n            console.log('saved properties ->', uniqueFilteredFavourites)\n            setArchivedProperties(archivedFavourites)\n            setCompanyArchivedProperties(companyArchivedFavourites)\n\n            setHiddenProperties(removedProperties)\n            // setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n            eventBus.emit('userDataUpdated')\n            setCampaignLoading(false)\n          } else {\n            const allFavouriteIds = []\n            // loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            // loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n            setCampaignLoading(false)\n\n          }\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n          setCampaignLoading(false)\n\n        }\n      }\n      await getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    const credits = JSON.parse(localStorage.getItem('wittle-latest-credits'))\n    console.log('credit path ->', credits)\n    const value = JSON.parse(localStorage.getItem('wittle-credit-value'))\n    console.log('credit value ->', value)\n    const params = new URLSearchParams(window.location.search)\n    if (credits === 'Yes' && params.get('success')) {\n      Swal.fire({\n        title: '😎 action complete',\n        text: `£${value} added to your letter credits`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      navigate('/agents/lead-gen')\n      setLeadGenSection('Letter campaigns')\n      loadUserData()\n      localStorage.removeItem('wittle-latest-credits')\n      localStorage.removeItem('wittle-credit-value')\n    } else if (credits === 'Yes' && params.get('cancelled')) {\n      navigate('/agents/lead-gen')\n      setLeadGenSection('Letter campaigns')\n      loadUserData()\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an error processing your payment',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      localStorage.removeItem('wittle-latest-credits')\n      localStorage.removeItem('wittle-credit-value')\n    } else {\n      loadUserData()\n    }\n  }, [])\n\n\n  // get outcode data\n  const getOutcodes = async () => {\n    try {\n      const response = await axios.get('/api/lead_gen_outcodes/')\n      console.log('lead gen outcodes ->', response.data)\n      setAvailableOutcodes(response.data)\n    } catch (error) {\n      console.error('Error loading outcodes:', error)\n    }\n  }\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        Swal.fire({\n          title: '😎 action complete',\n          text: `${newFavourites.length} properties added to your saved properties`,\n          confirmButtonText: 'Go to saved',\n          confirmButtonColor: '#ED6B86',\n          cancelButtonText: 'Stay here',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            setLeadGenSection('Tracking')\n          }\n        })\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n        Swal.fire({\n          icon: 'error',\n          title: '🫡 Wittle alerts',\n          text: error.response.data.error || 'There was an error processing your request.',\n          footer: error.response.data.remaining_favourites ? `You can only save ${error.response.data.remaining_favourites} more properties this month.` : '',\n          confirmButtonColor: '#ED6B86',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        })\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  // function to setting the favurites to the archives: \n  const removeProperty = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      // console.log(selectedRows)\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No properties to remove')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/remove_property/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        setMatchType('Matching')\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n        handleRemovePropertyClose()\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log('selected property->', selectedProperty)\n    if (e.target.checked) {\n      console.log('checked')\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n        owner_name: item.owner_name,\n        owner_email: item.owner_email,\n        owner_mobile: item.owner_mobile,\n        emails_sent: item.emails_sent,\n        letters_sent: item.letters_sent,\n        valuation_booked: item.valuation_booked,\n        notes: item.notes,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, deletedProperties, dateFilter) => {\n    // setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id) && item.property_data.status === 'Live')\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, deletedProperties, dateFilter) => {\n    // setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id) && item.property_data.status === 'Live')\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n  // const updateFavoritesMarketStatus = async (data) => {\n  //   const propertyIds = data.company_favourites.filter(fav => fav.rightmove_id !== null).map(fav => fav.rightmove_id)\n\n  //   try {\n  //     const response = await axios.post('/api/epc_favourite/update_favourites/status_check/', {\n  //       propertyIds,\n  //     }, {\n  //       headers: {\n  //         Authorization: `Bearer ${getAccessToken()}`,\n  //       },\n  //     })\n  //     return response.data // Assuming the backend returns the full updated list\n\n  //   } catch (error) {\n  //     console.error('Failed to update market status:', error)\n  //   }\n  // }\n\n  // Then call this function within loadUserData or wherever appropriate\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Ensure that we use the latest postcode input from leadGenDetails\n    const postcodeSections = (leadGenDetails.postcode || '').split(',')\n\n    // Prepare the set of available outcodes for checking\n    const availableOutcodeSet = new Set(availableOutcodes.map(outcode => outcode.outcode))\n\n    // Check if all entered postcodes exist in the set of available outcodes\n    const allPostcodesValid = postcodeSections.every(postcode => availableOutcodeSet.has(postcode))\n\n    if (!allPostcodesValid) {\n      Swal.fire({\n        icon: 'error',\n        title: '🫡 Wittle alerts',\n        text: 'One or more postcodes you entered are not available. Please check and try again.',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      return\n    }\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore')\n    }\n    loadUserData()\n  }\n\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    // Convert input to uppercase and remove spaces\n    let inputVal = e.target.value.toUpperCase().replace(/\\s+/g, '')\n    // Split the input value by comma to get individual postcode sections\n    const postcodeSections = inputVal.split(',')\n\n    // Check if the number of postcode sections is more than 6\n    if (postcodeSections.length > 6) {\n      // Optionally, inform the user they can't add more than 6 postcode sections\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'To optimise your experience, you can only add up to 6 postcode areas.',\n        // icon: 'error',\n        confirmButtonText: '🤝 thanks',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      // Prevent adding more by keeping only the first 6 sections\n      inputVal = postcodeSections.slice(0, 6).join(',')\n    }\n\n    // Set the formatted input value\n    setPostcodeSubstring(inputVal)\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: inputVal }))\n  }\n\n  // input the sub postcode on the form\n  const inputSubcode = (e) => {\n    setSubcodeString(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, subcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    let days\n    let filterType = 'within' // Default filter type\n\n    switch (dateFilter) {\n      case '1day': days = 1; break\n      case '2days': days = 2; break\n      case '3days': days = 3; break\n      case '7days': days = 7; break\n      case '4weeks': days = 28; break\n      case '8weeks': days = 56; break\n      case '12weeks': days = 84; break\n      case '16weeks': days = 112; break\n      case '>8weeks': days = 56; filterType = 'beyond'; break\n      case '>12weeks': days = 84; filterType = 'beyond'; break\n      case '>16weeks': days = 112; filterType = 'beyond'; break\n      default: return properties\n    }\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      const mostRecentDate = addedDate || reducedDate // Use the non-null date\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      return filterType === 'within' ? isWithinLastDays(mostRecentDate, days) : isBeyondDays(mostRecentDate, days)\n    })\n  }\n\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(multipleMatches, dateFilter)\n    setFilteredMatchingProperties(filtered)\n  }, [multipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesMultipleMatches, dateFilter)\n    setFilteredSalesMatchingProperties(filtered)\n  }, [salesMultipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(noMatches, dateFilter)\n    setFiltedNoProperties(filtered)\n  }, [noMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesNoMatches, dateFilter)\n    setFiltedSalesNoProperties(filtered)\n  }, [salesNoMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    return date >= new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n  const isBeyondDays = (date, days) => {\n    const now = new Date()\n    return date < new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n  // managing modal for properties to be removed from list\n  const [propertyRemoveShow, setPropertyRemoveShow] = useState(false)\n\n  // close modal\n  const handleRemovePropertyClose = () => {\n    setPropertyRemoveShow(false)\n  }\n\n  // show the modal\n  const handlePropertyRemoveShow = (e) => {\n    setPropertyRemoveShow(true)\n  }\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  const toggleRowExpansion = (index) => {\n    setExpandedMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const toggleSalesRowExpansion = (index) => {\n    setExpandedSalesMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const addManualFavourite = async (matchingProperties, epcData, index) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.property_data.rightmove_id,\n        'postcode': matchingProperties.property_data.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.property_data.agent,\n        'type': matchingProperties.property_data.type,\n        'addedOn': matchingProperties.property_data.addedOn,\n        'propertyType': matchingProperties.property_data.propertyType,\n        'price': matchingProperties.property_data.price,\n        'price_numeric': matchingProperties.property_data.price_numeric,\n        'bathrooms': matchingProperties.property_data.bathrooms,\n        'bedrooms': matchingProperties.property_data.bedrooms,\n        'let_available_date': matchingProperties.property_data.let_available_date,\n        'date_added_db': matchingProperties.property_data.date_added_db,\n        'url': matchingProperties.property_data.url,\n        'current_epc': matchingProperties.property_data.current_epc,\n        'potential_epc': matchingProperties.property_data.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.property_data.added_revised,\n        'reduced_revised': matchingProperties.property_data.reduced_revised,\n        // 'market_status': matchingProperties.property_data.market_status,\n        'status': matchingProperties.property_data.status,\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        toggleRowExpansion(index)\n        toggleSalesRowExpansion(index)\n        Swal.fire({\n          title: '😎 action complete',\n          text: 'New property added to your saved properties',\n          confirmButtonText: 'Thanks 🤝',\n          confirmButtonColor: '#ED6B86',\n          cancelButtonText: 'Stay here',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        })\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        {userData && userData.usage_stats[0].package === 'Trial expired' ?\n\n          <section className='main-body remove-margin'>\n            <section className='main-body-details'  >\n              <section className='listing-generator'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'></div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n                </div>\n                <div className='no-access-body'>\n                  <div className='no-access-image'></div>\n                  <h1 className='no-access-title'>Oops! Dead end</h1>\n                  <h3 className='no-access-message'>You no longer have access to this content. Get in touch to upgrade your account and access the Wittle magic.</h3>\n                  {/* <div className='no-access-email'>\n                    <a href=\"mailto:james@wittle.co\" style={{ textDecoration: 'none' }}>\n                      <button className='email-button'>Get in touch</button>\n                    </a>\n                  </div> */}\n                </div>\n              </section>\n            </section>\n          </section>\n          :\n          <section className='main-body'>\n            <section className='main-body-details'>\n\n              <>\n\n                <section className='property-finder'>\n                  <div className='listing-options'>\n                    <div className='listing-buttons'>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Inputs')} style={{ borderBottom: leadGenSection === 'Inputs' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Inputs' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Inputs' ? '700' : '400' }}>Inputs</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Explore')} style={{ borderBottom: leadGenSection === 'Explore' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore' ? '700' : '400' }}>Explore</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Tracking')} style={{ borderBottom: leadGenSection === 'Tracking' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Tracking' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Tracking' ? '700' : '400' }}>Tracking</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Letter campaigns')} style={{ borderBottom: leadGenSection === 'Letter campaigns' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Letter campaigns' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Letter campaigns' ? '700' : '400' }}>Letter campaigns</h5>\n                      {/* {userData && (userData.id === 1 || userData.id === 55 || userData.id === 147 || userData.id === 176) ? <h5 className='no-print' onClick={() => setLeadGenSection('Letter campaigns')} style={{ borderBottom: leadGenSection === 'Letter campaigns' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Letter campaigns' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Letter campaigns' ? '700' : '400' }}>Letter campaigns</h5> : ''} */}\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Archived')} style={{ borderBottom: leadGenSection === 'Archived' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived' ? '700' : '400' }}>Archived</h5>\n                      <h5 className='no-print' id='manual-matcher' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Hidden properties')} style={{ borderBottom: leadGenSection === 'Hidden properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Hidden properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Hidden properties' ? '700' : '400' }}>Hidden properties</h5>\n                      {userData && userData.id === 1 ? <h5 className='no-print' onClick={() => setLeadGenSection('Land reg testing')} style={{ borderBottom: leadGenSection === 'Land reg testing' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Land reg testing' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Land reg testing' ? '700' : '400' }}>Land reg testing</h5> : ''}\n                    </div>\n                    <div className='logout-button' onClick={removeItemFromStorage}>\n                      <div className='logout-icon'></div>\n                    </div>\n\n\n                  </div>\n                  <hr className='title-line' />\n\n                  <div className='lead-generator'>\n\n                    <div className='property-results'>\n                      {leadGenSection === 'Inputs' ?\n                        <>\n                          <div className='lead-gen-inputs'>\n                            <h3 className='sub-title'>Set your search criteria</h3>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Postcode(s)</h3>\n                                <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;. For efficiency, this is limited to 6 postcode areas.</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.postcode}\n                                  onChange={inputPostcode}\n                                  placeholder=\"Enter postcode...\"\n                                />\n\n\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Sub postcode(s)</h3>\n                                <p>Add sub postcodes, e.g. &ldquo;SW4 0,SW5 0&rdquo;. You can also chain these.</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.subcode}\n                                  onChange={inputSubcode}\n                                  placeholder=\"Enter subcode...\"\n                                />\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Channel</h3>\n                                <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                  <option>Lettings</option>\n                                  <option>Sales</option>\n                                  <option>Both</option>\n\n                                </select>\n                              </div>\n                            </div>\n                            <div>\n\n                              <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                                <h3 className='sub-title'>Add some more detail</h3>\n\n                                {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                              </div>\n                              {expand ?\n                                <>\n\n                                  {\n                                    leadGenDetails.channel === 'Lettings' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Bedrooms</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.bedrooms_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({\n                                                ...prevData,\n                                                bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                              }))}\n                                            >\n                                              <option value=''>No min</option>\n                                              <option value=\"1\">1</option>\n                                              <option value=\"2\">2</option>\n                                              <option value=\"3\">3</option>\n                                              <option value=\"4\">4</option>\n                                              <option value=\"5\">5</option>\n                                              <option value=\"6\">6</option>\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.bedrooms_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({\n                                                ...prevData,\n                                                bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                              }))}\n                                            >\n                                              <option value=''>No max</option>\n                                              <option value=\"1\">1</option>\n                                              <option value=\"2\">2</option>\n                                              <option value=\"3\">3</option>\n                                              <option value=\"4\">4</option>\n                                              <option value=\"5\">5</option>\n                                              <option value=\"6\">6</option>\n                                              <option value=\"7\">7</option>\n                                            </select>\n                                          </div>\n\n                                        </div>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.rental_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {rentalPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.rental_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                            >\n                                              <option value={10000000}>No max</option>\n                                              {rentalPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                        <div className='single-input-block'>\n                                          <div className='input-block large'>\n                                            <h3>Furnishing status</h3>\n                                            <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                              <option>Either furnished or unfurnished</option>\n                                              <option>Furnished</option>\n                                              <option>Unfurnished</option>\n                                            </select>\n                                          </div>\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Sales' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Bedrooms</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.bedrooms_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({\n                                                  ...prevData,\n                                                  bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                                }))}\n                                              >\n                                                <option value=''>No min</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.bedrooms_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({\n                                                  ...prevData,\n                                                  bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                                }))}\n                                              >\n                                                <option value=''>No max</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                                <option value=\"7\">7</option>\n                                              </select>\n                                            </div>\n\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n                                        :\n                                        leadGenDetails.channel === 'Both' ?\n                                          <>\n                                            <div className='single-title-double'>\n                                              <h3>Bedrooms</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.bedrooms_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({\n                                                    ...prevData,\n                                                    bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                                  }))}\n                                                >\n                                                  <option value=''>No min</option>\n                                                  <option value=\"1\">1</option>\n                                                  <option value=\"2\">2</option>\n                                                  <option value=\"3\">3</option>\n                                                  <option value=\"4\">4</option>\n                                                  <option value=\"5\">5</option>\n                                                  <option value=\"6\">6</option>\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.bedrooms_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({\n                                                    ...prevData,\n                                                    bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                                  }))}\n                                                >\n                                                  <option value=''>No max</option>\n                                                  <option value=\"1\">1</option>\n                                                  <option value=\"2\">2</option>\n                                                  <option value=\"3\">3</option>\n                                                  <option value=\"4\">4</option>\n                                                  <option value=\"5\">5</option>\n                                                  <option value=\"6\">6</option>\n                                                  <option value=\"7\">7</option>\n                                                </select>\n                                              </div>\n\n                                            </div>\n                                            <div className='single-title-double'>\n                                              <h3>Rental price</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.rental_price_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                                >\n                                                  <option value={0}>No min</option>\n                                                  {rentalPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.rental_price_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                                >\n                                                  <option value={10000000}>No max</option>\n                                                  {rentalPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n\n                                              </div>\n\n                                            </div>\n                                            <div className='single-input-block'>\n                                              <div className='input-block large'>\n                                                <h3>Rental furnishing status</h3>\n                                                <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                  <option>Either furnished or unfurnished</option>\n                                                  <option>Furnished</option>\n                                                  <option>Unfurnished</option>\n                                                </select>\n                                              </div>\n                                            </div>\n                                            <div className='single-title-double'>\n                                              <h3>Sales price</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.sales_price_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                                >\n                                                  <option value={0}>No min</option>\n                                                  {salesPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.sales_price_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                                >\n                                                  <option value={100000000}>No max</option>\n                                                  {salesPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n\n                                              </div>\n\n                                            </div>\n                                          </>\n\n\n                                          : ''}\n\n                                </>\n                                : ''}\n                            </div>\n                            <div className='lead-gen-save'>\n                              <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                            </div>\n                          </div>\n\n                        </>\n                        :\n                        leadGenSection === 'Explore' && !rentalLoading ?\n                          <>\n                            <div className='results-block'>\n                              <div className=\"property-insight-nav\">\n                                <div className=\"property-insight-buttons\">\n                                  <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                  <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                                </div>\n                                <div className='action-section'>\n                                  <div className='save-section'>\n                                    <div className=\"bin-icon\"></div>\n                                    <h3 onClick={handlePropertyRemoveShow}>Hide selection</h3>\n                                  </div>\n                                  <div className='save-section'>\n                                    <div className=\"print-icon\"></div>\n                                    <h3 onClick={addFavourite}>Track selection</h3>\n                                  </div>\n\n                                </div>\n\n                              </div>\n                              {channelView === 'Lettings' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All properties</option>\n                                      <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                      <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                      <option value=\">16weeks\">Added over 16 weeks ago</option>\n                                    </select>\n                                  </div>\n                                  <div className='matching-status'>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('Matching')} style={{ color: matchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: matchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('Multiple matches')} style={{ color: matchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('No matches')} style={{ color: matchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                  </div>\n\n                                  {matchType === 'Matching' ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                      </div>\n                                      <div className='results-table'>\n                                        <div className='results-headers'>\n                                          <div id='column11' className='column'>\n                                            <div className='custom-checkbox'>\n                                              <input\n                                                className='checkbox'\n                                                type=\"checkbox\"\n                                                checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                                onChange={handleSelectAllChange}\n                                              />\n                                              <label className='label'>\n                                              </label>\n                                            </div>\n                                          </div>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          {/* <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                          </div> */}\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            {/* <h5>⬇️</h5> */}\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Bathrooms</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details explore'>\n                                          {filteredProperties ? filteredProperties.map((item, index) => {\n                                            const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column11'>\n                                                    {companySavedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>❤️</h3>\n                                                        {/* <h3>Saved</h3> */}\n                                                      </div>\n                                                      :\n                                                      companyArchivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>⭐️</h3>\n                                                          {/* <h3>Archived</h3> */}\n                                                        </div>\n                                                        :\n                                                        <div className='custom-checkbox'>\n\n                                                          <input\n                                                            className='checkbox'\n                                                            type=\"checkbox\"\n                                                            checked={checkboxStatus[index]}\n                                                            onChange={(e) => handleCheckboxChange(e, index)}\n                                                          />\n                                                          <label className='label'>\n\n                                                          </label>\n                                                        </div>\n                                                    }\n                                                  </div>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    {userPackage && userPackage === 'Free' ? <h5>{item.property_data.displayAddress}</h5> : <h5>{item.epc_data_list[0].address}</h5>}\n                                                  </div>\n                                                  {/* <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div> */}\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bathrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n                                      </div>\n\n\n                                    </>\n                                    : matchType === 'Multiple matches' ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {filteredMatchingProperties.length} rental properties that we do not have an exact match for</h3>\n                                        </div>\n                                        <div className='results-table'>\n\n                                          <div className='results-headers'>\n                                            <div id='column1' className='column' >\n                                              <h5>#</h5>\n                                            </div>\n                                            <div id='column2' className='column' >\n                                              <h5>Listed address</h5>\n                                            </div>\n                                            {/* <div id='column3' className='column' onClick={sortByPostcode}>\n                                              <h5>Postcode</h5>\n                                            </div> */}\n                                            <div id='column4' className='column'>\n                                              <h5>Added</h5>\n                                            </div>\n                                            <div id='column5' className='column'>\n                                              <h5>Size (sq. m)</h5>\n                                            </div>\n                                            <div id='column6' className='column'>\n                                              <h5>Property type</h5>\n                                            </div>\n                                            <div id='column7' className='column' onClick={sortByPrice}>\n                                              <h5>Price</h5>\n                                              {/* <h5>⬇️</h5> */}\n                                            </div>\n                                            <div id='column8' className='column'>\n                                              <h5>Bedrooms</h5>\n                                            </div>\n                                            <div id='column9' className='column'>\n                                              <h5>Bathrooms</h5>\n                                            </div>\n                                            <div id='column10' className='column'>\n                                              <h5>Agent</h5>\n                                            </div>\n                                            <div id='column11' className='column'>\n                                              <h5>Action</h5>\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n                                          <div className='results-details explore'>\n                                            {filteredMatchingProperties ? filteredMatchingProperties.map((item, index) => {\n                                              const isExpanded = expandedMultipleMatches.has(index)\n                                              return (\n                                                <>\n                                                  <div className={'results-content'}>\n                                                    <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{index + 1}</h5>\n                                                    </div>\n                                                    <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.displayAddress}</h5>\n                                                    </div>\n                                                    {/* <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.postcode}</h5>\n                                                    </div> */}\n                                                    <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                    </div>\n                                                    <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                    </div>\n                                                    <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.propertyType}</h5>\n                                                    </div>\n                                                    <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.price}</h5>\n                                                    </div>\n                                                    <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.bedrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.bathrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.agent}</h5>\n                                                    </div>\n                                                    <div className='column' id='column11'>\n                                                      {companySavedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>❤️</h3>\n                                                          {/* <h3>Saved</h3> */}\n                                                        </div>\n                                                        :\n                                                        companyArchivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                          <div className='saved-message'>\n                                                            <h3>⭐️</h3>\n                                                            {/* <h3>Archived</h3> */}\n                                                          </div>\n                                                          :\n\n                                                          <h3 className='expansion' onClick={() => toggleRowExpansion(index)}>\n                                                            {expandedMultipleMatches.has(index) ? '^' : 'v'}\n                                                          </h3>}\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  {isExpanded && (\n                                                    <>\n                                                      <h3 className='matching-title'>Matching properties</h3>\n                                                      <div className='expanded-section-titles'>\n                                                        <p className='column' id='column1'>#</p>\n                                                        <p className='column' id='column2'>Address</p>\n                                                        <p className='column' id='column3'>Postcode</p>\n                                                        <p className='column' id='column4'>Current EPC</p>\n                                                        <p className='column' id='column5'>Potential EPC</p>\n                                                        <p className='column' id='column6'>Floor</p>\n                                                        <p className='column' id='column7'>Size</p>\n                                                        <p className='column' id='column8'></p>\n                                                      </div>\n\n                                                      {item.epc_data_list.map((epcItem, epcIndex) => (\n                                                        <div className='expanded-content' key={epcIndex} >\n                                                          <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                          <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                          <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                          <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                          <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                          <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                          <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                          <div className='column' id='column8' >\n                                                            {/* <div className='heart-icon' onClick={() => addManualFavourite(item, epcItem, index)} ></div> */}\n                                                            <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                          </div>\n                                                        </div>\n                                                      ))}\n                                                    </>\n                                                  )}\n                                                </>\n                                              )\n                                            })\n                                              : ' '}\n                                          </div>\n                                        </div>\n\n                                      </>\n\n                                      : matchType === 'No matches' ?\n                                        <>\n                                          <div className='title-section'>\n                                            <h3 className='sub-title'>There are {filteredNoProperties.length} rental properties that we do not have any match for</h3>\n                                          </div>\n                                          <div className='results-table'>\n\n                                            <div className='results-headers'>\n                                              <h5 id='column1' className='column'>#</h5>\n                                              <div id='column2' className='column' >\n                                                <h5>Listed address</h5>\n                                              </div>\n                                              {/* <div id='column3' className='column' onClick={sortByPostcode}>\n                                                <h5>Postcode</h5>\n                                              </div> */}\n                                              <div id='column4' className='column'>\n                                                <h5>Added</h5>\n                                              </div>\n                                              <div id='column5' className='column'>\n                                                <h5>Reduced</h5>\n                                              </div>\n                                              <div id='column6' className='column'>\n                                                <h5>Property type</h5>\n                                              </div>\n                                              <div id='column7' className='column' onClick={sortByPrice}>\n                                                <h5>Price</h5>\n                                                {/* <h5>⬇️</h5> */}\n                                              </div>\n                                              <div id='column8' className='column'>\n                                                <h5>Bedrooms</h5>\n                                              </div>\n                                              <div id='column9' className='column'>\n                                                <h5>Agent</h5>\n                                              </div>\n                                              {/* <div id='column11' className='column'>\n                                            <h5></h5>\n                                          </div> */}\n                                            </div>\n                                            <hr className='property-divider' />\n                                            <div className='results-details explore'>\n                                              {filteredNoProperties ? filteredNoProperties.map((item, index) => {\n\n                                                return (\n                                                  <>\n                                                    <div className={'results-content'}>\n                                                      <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{index + 1}</h5>\n                                                      </div>\n                                                      <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.displayAddress}</h5>\n                                                      </div>\n                                                      {/* <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.postcode}</h5>\n                                                      </div> */}\n                                                      <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                      </div>\n                                                      <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                      </div>\n                                                      <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.propertyType}</h5>\n                                                      </div>\n                                                      <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.price}</h5>\n                                                      </div>\n                                                      <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.bedrooms}</h5>\n                                                      </div>\n                                                      <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.agent}</h5>\n                                                      </div>\n                                                      {/* <div className='column' id='column11'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        // <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          // <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n\n                                                        ''\n                                                    }\n                                                  </div> */}\n                                                    </div>\n                                                    <hr className='property-divider' />\n\n                                                  </>\n                                                )\n                                              })\n                                                : ' '}\n                                            </div>\n                                          </div>\n\n                                        </>\n\n                                        : ''\n                                  }\n\n\n                                </>\n                                : channelView === 'Sales' ?\n                                  <>\n                                    <div className='filter-section'>\n                                      <h3>Filter properties</h3>\n                                      <select\n                                        className='dropdown'\n                                        value={dateFilter}\n                                        onChange={(e) => setDateFilter(e.target.value)}\n                                      >\n                                        <option value=\"1day\">Updated in the last 24 hours</option>\n                                        <option value=\"2days\">Updated in the last 48 hours</option>\n                                        <option value=\"3days\">Updated in the last 72 hours</option>\n                                        <option value=\"7days\">Updated in the last week</option>\n                                        <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                        <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                        <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                        <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                        <option value=\"all\">All properties</option>\n                                        <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                        <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                        <option value=\">16weeks\">Added over 16 weeks ago</option>\n\n                                      </select>\n                                    </div>\n                                    <div className='matching-status'>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('Matching')} style={{ color: salesMatchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('Multiple matches')} style={{ color: salesMatchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('No matches')} style={{ color: salesMatchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                    </div>\n                                    {salesLoading ?\n                                      <div className='property-table-loading'>\n                                        <Loading />\n                                      </div>\n                                      : !salesLoading ?\n                                        <>\n                                          {salesMatchType === 'Matching' ?\n                                            <>\n                                              <div className='title-section'>\n                                                <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n\n                                              </div>\n                                              <div className='results-table'>\n\n                                                <div className='results-headers'>\n                                                  <div id='column11' className='column'>\n                                                    <div className='custom-checkbox'>\n                                                      <input\n                                                        className='checkbox'\n                                                        type=\"checkbox\"\n                                                        checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                        onChange={handleSelectAllSalesChange}\n                                                      />\n                                                      <label className='label'>\n                                                      </label>\n                                                    </div>\n                                                  </div>\n                                                  <h5 id='column1' className='column'>#</h5>\n                                                  <div id='column2' className='column' >\n                                                    <h5>Address</h5>\n                                                  </div>\n                                                  {/* <div id='column3' className='column' onClick={sortByPostcode}>\n                                                    <h5>Postcode</h5>\n                                                  </div> */}\n                                                  <div id='column4' className='column'>\n                                                    <h5>Added</h5>\n                                                  </div>\n                                                  <div id='column5' className='column'>\n                                                    <h5>Reduced</h5>\n                                                  </div>\n                                                  <div id='column6' className='column'>\n                                                    <h5>Property type</h5>\n                                                  </div>\n                                                  <div id='column7' className='column' onClick={sortByPrice}>\n                                                    <h5>Price</h5>\n                                                    {/* <h5>⬇️</h5> */}\n                                                  </div>\n                                                  <div id='column8' className='column'>\n                                                    <h5>Bedrooms</h5>\n                                                  </div>\n                                                  <div id='column9' className='column'>\n                                                    <h5>Bathrooms</h5>\n                                                  </div>\n                                                  <div id='column10' className='column'>\n                                                    <h5>Agent</h5>\n                                                  </div>\n\n                                                </div>\n                                                <hr className='property-divider' />\n                                                <div className='results-details explore'>\n                                                  {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                                    const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                                    return (\n                                                      <>\n                                                        <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                          <div className='column' id='column11'>\n                                                            {companySavedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                              <div className='saved-message'>\n                                                                <h3>❤️</h3>\n                                                                {/* <h3>Saved</h3> */}\n                                                              </div>\n                                                              :\n                                                              companyArchivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  <h3>⭐️</h3>\n                                                                  {/* <h3>Archived</h3> */}\n                                                                </div>\n                                                                :\n                                                                <div className='custom-checkbox'>\n\n                                                                  <input\n                                                                    className='checkbox'\n                                                                    type=\"checkbox\"\n                                                                    checked={salesCheckboxStatus[index]}\n                                                                    onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                                  />\n                                                                  <label className='label'>\n\n                                                                  </label>\n                                                                </div>\n                                                            }\n                                                          </div>\n                                                          <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{index + 1}</h5>\n                                                          </div>\n                                                          <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            {userPackage && userPackage === 'Free' ? <h5>{item.property_data.displayAddress}</h5> : <h5>{item.epc_data_list[0].address}</h5>}\n                                                          </div>\n                                                          {/* <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.postcode}</h5>\n                                                          </div> */}\n                                                          <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                          </div>\n                                                          <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                          </div>\n                                                          <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.propertyType}</h5>\n                                                          </div>\n                                                          <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.price}</h5>\n                                                          </div>\n                                                          <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.bedrooms}</h5>\n                                                          </div>\n                                                          <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.bathrooms}</h5>\n                                                          </div>\n                                                          <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.agent}</h5>\n                                                          </div>\n\n                                                        </div>\n                                                        <hr className='property-divider' />\n\n                                                      </>\n                                                    )\n                                                  })\n                                                    : ' '}\n                                                </div>\n                                              </div>\n\n                                            </>\n\n                                            : salesMatchType === 'Multiple matches' ?\n\n                                              <>\n                                                <div className='title-section'>\n                                                  <h3 className='sub-title'>There are {filteredSalesMatchingProperties.length} properties for sale that we do not have an exact match for</h3>\n                                                </div>\n                                                <div className='results-table'>\n                                                  <div className='results-headers'>\n                                                    <h5 id='column1' className='column'>#</h5>\n                                                    <div id='column2' className='column' >\n                                                      <h5>Listed address</h5>\n                                                    </div>\n                                                    {/* <div id='column3' className='column' onClick={sortByPostcode}>\n                                                      <h5>Postcode</h5>\n                                                    </div> */}\n                                                    <div id='column4' className='column'>\n                                                      <h5>Added</h5>\n                                                    </div>\n                                                    <div id='column5' className='column'>\n                                                      <h5>Size (sq. m)</h5>\n                                                    </div>\n                                                    <div id='column6' className='column'>\n                                                      <h5>Property type</h5>\n                                                    </div>\n                                                    <div id='column7' className='column' onClick={sortByPrice}>\n                                                      <h5>Price</h5>\n                                                      {/* <h5>⬇️</h5> */}\n                                                    </div>\n                                                    <div id='column8' className='column'>\n                                                      <h5>Bedrooms</h5>\n                                                    </div>\n                                                    <div id='column9' className='column'>\n                                                      <h5>Bathrooms</h5>\n                                                    </div>\n                                                    <div id='column10' className='column'>\n                                                      <h5>Agent</h5>\n                                                    </div>\n                                                    <div id='column11' className='column'>\n                                                      <h5>Action</h5>\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  <div className='results-details explore'>\n                                                    {filteredSalesMatchingProperties ? filteredSalesMatchingProperties.map((item, index) => {\n                                                      const isExpanded = expandedSalesMultipleMatches.has(index)\n                                                      return (\n                                                        <>\n                                                          <div className={'results-content'}>\n                                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{index + 1}</h5>\n                                                            </div>\n                                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.displayAddress}</h5>\n                                                            </div>\n                                                            {/* <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.postcode}</h5>\n                                                            </div> */}\n                                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                            </div>\n                                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                            </div>\n                                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.propertyType}</h5>\n                                                            </div>\n                                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.price}</h5>\n                                                            </div>\n                                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.bedrooms}</h5>\n                                                            </div>\n                                                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.bathrooms}</h5>\n                                                            </div>\n                                                            <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.agent}</h5>\n                                                            </div>\n                                                            <div className='column' id='column11'>\n                                                              {companySavedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  {/* <h3>❤️</h3> */}\n                                                                  <h3>Saved</h3>\n                                                                </div>\n                                                                :\n                                                                companyArchivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                  <div className='saved-message'>\n                                                                    {/* <h3>⭐️</h3> */}\n                                                                    <h3>Archived</h3>\n                                                                  </div>\n                                                                  :\n\n                                                                  <h3 className='expansion' onClick={() => toggleSalesRowExpansion(index)}>\n                                                                    {expandedSalesMultipleMatches.has(index) ? '^' : 'v'}\n                                                                  </h3>}\n                                                            </div>\n                                                          </div>\n                                                          <hr className='property-divider' />\n                                                          {isExpanded && (\n                                                            <>\n                                                              <h3 className='matching-title'>Matching properties</h3>\n                                                              <div className='expanded-section-titles'>\n                                                                <p className='column' id='column1'>#</p>\n                                                                <p className='column' id='column2'>Address</p>\n                                                                <p className='column' id='column3'>Postcode</p>\n                                                                <p className='column' id='column4'>Current EPC</p>\n                                                                <p className='column' id='column5'>Potential EPC</p>\n                                                                <p className='column' id='column6'>Floor</p>\n                                                                <p className='column' id='column7'>Size</p>\n                                                                <p className='column' id='column8'></p>\n                                                              </div>\n                                                              {item.epc_data_list.map((epcItem, epcIndex) => (\n                                                                <div className='expanded-content' key={epcIndex} >\n                                                                  <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                                  <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                                  <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                                  <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                                  <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                                  <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                                  <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                                  <div className='column' id='column8' >\n                                                                    <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                                  </div>\n                                                                </div>\n                                                              ))}\n                                                            </>\n                                                          )}\n                                                        </>\n                                                      )\n                                                    })\n                                                      : ' '}\n                                                  </div>\n                                                </div>\n\n                                              </>\n                                              : salesMatchType === 'No matches' ?\n                                                <>\n                                                  <div className='title-section'>\n                                                    <h3 className='sub-title'>There are {filteredSalesNoProperties.length} properties for sale that we do not have any match for</h3>\n                                                  </div>\n                                                  <div className='results-table'>\n\n                                                    <div className='results-headers'>\n                                                      <h5 id='column1' className='column'>#</h5>\n                                                      <div id='column2' className='column' >\n                                                        <h5>Listed address</h5>\n                                                      </div>\n                                                      {/* <div id='column3' className='column' onClick={sortByPostcode}>\n                                                        <h5>Postcode</h5>\n                                                      </div> */}\n                                                      <div id='column4' className='column'>\n                                                        <h5>Added</h5>\n                                                      </div>\n                                                      <div id='column5' className='column'>\n                                                        <h5>Reduced</h5>\n                                                      </div>\n                                                      <div id='column6' className='column'>\n                                                        <h5>Property type</h5>\n                                                      </div>\n                                                      <div id='column7' className='column' onClick={sortByPrice}>\n                                                        <h5>Price</h5>\n                                                        {/* <h5>⬇️</h5> */}\n                                                      </div>\n                                                      <div id='column8' className='column'>\n                                                        <h5>Bedrooms</h5>\n                                                      </div>\n                                                      <div id='column9' className='column'>\n                                                        <h5>Agent</h5>\n                                                      </div>\n                                                      {/* <div id='column11' className='column'>\n                                                <h5></h5>\n                                              </div> */}\n                                                    </div>\n                                                    <hr className='property-divider' />\n                                                    <div className='results-details explore'>\n                                                      {filteredSalesNoProperties ? filteredSalesNoProperties.map((item, index) => {\n\n                                                        return (\n                                                          <>\n                                                            <div className={'results-content'}>\n                                                              <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{index + 1}</h5>\n                                                              </div>\n                                                              <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.displayAddress}</h5>\n                                                              </div>\n                                                              {/* <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.postcode}</h5>\n                                                              </div> */}\n                                                              <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                              </div>\n                                                              <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                              </div>\n                                                              <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.propertyType}</h5>\n                                                              </div>\n                                                              <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.price}</h5>\n                                                              </div>\n                                                              <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.bedrooms}</h5>\n                                                              </div>\n                                                              <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.agent}</h5>\n                                                              </div>\n\n                                                            </div>\n                                                            <hr className='property-divider' />\n\n                                                          </>\n                                                        )\n                                                      })\n                                                        : ' '}\n                                                    </div>\n                                                  </div>\n\n                                                </>\n                                                : ''}\n\n\n                                        </>\n                                        : ''}\n                                  </>\n                                  :\n\n                                  ''}\n                            </div>\n                          </>\n                          : leadGenSection === 'Explore' && rentalLoading ?\n                            <div className='property-table-loading'>\n                              <Loading />\n                            </div>\n                            : leadGenSection === 'Tracking' ?\n                              <>\n                                <LeadGenSaved\n                                  savedProperties={savedProperties}\n                                  userData={userData}\n                                  csvData={csvData}\n                                  setCsvData={setCsvData}\n                                  getCurrentDate={getCurrentDate}\n                                  handleVisitUrl={handleVisitUrl}\n                                  loadUserData={loadUserData}\n                                  setSavedProperties={setSavedProperties}\n                                  latestFavourites={latestFavourites}\n                                  setLatestFavourites={setLatestFavourites}\n                                  setLeadGenSection={setLeadGenSection}\n                                />\n                              </>\n                              : leadGenSection === 'Letter campaigns' ?\n                                <>\n                                  <LettersHub\n                                    letterProperties={letterProperties}\n                                    setLetterProperties={letterProperties}\n                                    userData={userData}\n                                    loadUserData={loadUserData}\n                                    setLeadGenSection={setLeadGenSection}\n                                    signature={signature}\n                                    setSignature={setSignature}\n                                    letterTemplates={letterTemplates}\n                                    setLetterTemplates={setLetterTemplates}\n                                    setLetterCampaigns={setLetterCampaigns}\n                                    letterCampaigns={letterCampaigns}\n                                    campaignLoading={campaignLoading}\n                                    setCampaignLoading={setCampaignLoading}\n                                    availableCredits={availableCredits}\n                                    setAvailableCredits={setAvailableCredits}\n                                  />\n                                </>\n                                : leadGenSection === 'Archived' ?\n                                  <>\n                                    <ArchivedProperties\n                                      handleVisitUrl={handleVisitUrl}\n                                      archivedProperties={archivedProperties}\n                                      loadUserData={loadUserData}\n                                      setLeadGenSection={setLeadGenSection}\n                                      latestFavourites={latestFavourites}\n                                      setLatestFavourites={setLatestFavourites}\n                                    />\n\n\n                                  </>\n                                  : leadGenSection === 'Manual matcher' ?\n                                    <ManualMatcher\n                                      increaseUsageCount={increaseUsageCount}\n                                      setErrors={setErrors}\n                                      userData={userData}\n                                      loadUserData={loadUserData}\n                                      savedProperties={savedProperties}\n                                      archivedProperties={archivedProperties}\n                                      handleVisitUrl={handleVisitUrl}\n                                      savedActionShow={savedActionShow}\n                                      setSavedActionShow={setSavedActionShow}\n                                      handleSavedActionClose={handleSavedActionClose}\n                                      setLeadGenSection={setLeadGenSection}\n                                      latestFavourites={latestFavourites}\n                                      handleSavedActionShow={handleSavedActionShow}\n                                      setLatestFavourites={setLatestFavourites}\n                                    />\n                                    : leadGenSection === 'Hidden properties' ?\n                                      <HiddenProperties\n                                        hiddenProperties={hiddenProperties}\n                                        handleVisitUrl={handleVisitUrl}\n                                        loadUserData={loadUserData}\n                                        setLeadGenSection={setLeadGenSection}\n                                        latestFavourites={latestFavourites}\n                                        setLatestFavourites={setLatestFavourites}\n                                      />\n                                      :\n                                      leadGenSection === 'Land reg testing' ?\n\n                                        <LandRegTesting />\n\n                                        :\n                                        ''\n                      }\n                    </div>\n                  </div>\n\n\n                </section>\n\n\n              </>\n\n            </section>\n          </section>\n        }\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n      < RemoveProperties\n        propertyRemoveShow={propertyRemoveShow}\n        handleRemovePropertyClose={handleRemovePropertyClose}\n        removeProperty={removeProperty}\n      />\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}","import React, { useState, useEffect, useRef } from 'react'\n// import { Modal } from 'react-bootstrap'\n\nconst BasicTemplate = ({ signature, selectedTemplate, ownerData, address }) => {\n\n\n  return (\n    <>\n      <section className=\"basic-template\" style={{\n        // backgroundColor: '#FDF7F0',\n      }}>\n        <div className=\"template-section\" style={{\n        }}>\n          <div className='template-content'>\n            <div className=\"logo-section\" style={{\n              position: 'relative', // Make this a positioned ancestor for absolute children\n              textAlign: selectedTemplate.logo_position === 'Left' ? 'left' :\n                selectedTemplate.logo_position === 'Centre' ? 'center' :\n                  'right', // Control alignment with text-align\n              height: `${selectedTemplate.logo_height}px`, // Set a height for the section\n            }}>\n              <div className=\"logo-box\" style={{\n                display: 'inline-block', // Make the logo box inline for text-align to affect it\n                width: `${selectedTemplate.logo_width}px`,\n                height: `${selectedTemplate.logo_height}px`,\n              }}>\n                {signature && <img src={signature.logo} alt=\"Logo\" style={{\n                  maxWidth: `${selectedTemplate.logo_width}px`,\n                  maxHeight: `${selectedTemplate.logo_height}px`,\n                  width: 'auto', // Adjust based on actual image size, could be '100%' if you want it to fill the logo-box\n                  height: 'auto', // Same as width, maintain aspect ratio\n                }} />}\n              </div>\n            </div>\n            <div className=\"address-section\" style={{\n              position: 'absolute',\n              top: '150px',\n\n            }}>\n              <h3 className=\"address-details\" style={{ fontSize: '16px', fontWeight: '500', marginTop: '2px', padding: '0', lineHeight: '1.2' }}>\n                {ownerData.owner_name ? ownerData.owner_name : 'The Owner'}<br />\n                {address ? address[0] : ''}<br />\n                {address ? address[1] : ''}<br />\n                {address ? address[2] : ''}<br />\n                {address ? address[3] : ''}<br />\n                {address ? address[4] : ''}<br />\n              </h3>\n\n            </div>\n            <div className=\"body-section\" style={{\n              position: 'absolute',\n              top: '230px',\n            }}>\n              <div className=\"letter-intro\" style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginTop: '50px',\n\n              }}>\n                <h3 className=\"intro\" style={{\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  marginRight: '3px',\n                }}>{selectedTemplate.opening} </h3>\n                <h3 className=\"intro\" style={{\n                  fontSize: '16px',\n                  fontWeight: '500',\n                }}>{\n                    ownerData.owner_name ? `${ownerData.owner_name.split(' ')[0]}, ` : 'Homeowner,'\n                  }</h3>\n              </div>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_1}</h3>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_2}</h3>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_3}</h3>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_4}</h3>\n              <h3 className='sign-off-line' style={{ fontSize: '16px', fontWeight: '500', marginTop: '20px', padding: '0', lineHeight: '1.2' }}>\n                {selectedTemplate.closing && (\n                  <>{selectedTemplate.closing}<br /></>\n                )}\n                {selectedTemplate.sender_name && (\n                  <>{signature.first_name} {signature.last_name}<br /></>\n                )}\n                <>\n                  {selectedTemplate.sender_role && selectedTemplate.sender_company ? (\n                    <>{signature.role}, {signature.company_name}<br /></>\n                  ) : selectedTemplate.sender_role ? (\n                    <>{signature.role}<br /></>\n                  ) : selectedTemplate.sender_company ? (\n                    <>{signature.company_name}<br /></>\n                  ) : null}\n                </>\n                {selectedTemplate.sender_mobile && (\n                  <>{signature.mobile}<br /></>\n                )}\n                {selectedTemplate.sender_landline && (\n                  <>{signature.landline}<br /></>\n                )}\n                {selectedTemplate.sender_email && (\n                  <>{signature.email}<br /></>\n                )}\n                {selectedTemplate.sender_email && (\n                  <>{signature.website}<br /></>\n                )}\n              </h3>\n              {/* </div> */}\n            </div>\n\n          </div>\n\n          {signature && <h3 className=\"letter-footer\" style={{\n            position: 'absolute',\n            bottom: '-10px',\n            textAlign: 'center',\n            fontSize: '16px',\n            fontWeight: '500',\n            left: '0',\n            right: '0',\n            width: '100%',\n          }}>{signature.letter_footer}</h3>}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default BasicTemplate\n"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","_Fragment","Modal","show","onHide","backdrop","Body","_jsxs","onClick","closeAndLeave","increaseUsageCount","setErrors","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","handleSavedActionShow","setLatestFavourites","setSavedActionShow","loading","setLoading","useState","navigate","useNavigate","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","liveSalesProperties","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","some","isUserAuth","newFavourites","Math","floor","random","toString","epcData","response","post","headers","Authorization","getAccessToken","addPartialFavourite","style","backgroundColor","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","rightmove_id","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","addFavourite","SavedProperties","propertyRemoveShow","handleRemovePropertyClose","removeProperty","archivedActionShow","handleArchivedActionClose","csvData","setCsvData","getCurrentDate","setSavedProperties","savedPropertyView","setSavedPropertyView","expandedRows","setExpandedRows","editModes","setEditModes","formData","setFormData","selectedRows","setSelectedRows","selectAllStatus","setSelectAllStatus","onMarket","setOnMarket","offMarket","setOffMarket","marketView","setMarketView","filterView","setFilterView","setPostcode","bedroomsMin","setBedroomsMin","bedroomsMax","setBedroomsMax","priceMin","setPriceMin","priceMax","setPriceMax","trackingData","setTrackingData","minPriceOptions","setMinPriceOptions","maxPriceOptions","setMaxPriceOptions","favouriteDetailsLoading","setFavouriteDetailsLoading","sortConfig","setSortConfig","key","direction","parsePrice","numericPrice","parseFloat","useEffect","startsWith","parseInt","live_tracking","sortedData","getSortedProperties","offMarketProperties","market_status","onMarketProperties","rentalPriceOptions","salesPriceOptions","bedroomOptions","label","from","_","i","toLocaleString","properties","sortedProperties","priceA","priceB","dateA","date_added","dateB","handleSort","addressPostcode","property_type","owner_name","owner_email","owner_mobile","emails_sent","letters_sent","hand_cards","notes","transformSelectedRowsToCSV","setArchivedActionShow","handleArchivedActionShow","formatDate","dateStr","suffixes","date","day","getDate","monthIndex","getMonth","year","getFullYear","company_favourites","Select","options","selectedOption","document","querySelector","click","put","favourite_ids","favouriteIds","archiveFavourite","row","Swal","title","text","confirmButtonText","confirmButtonColor","cancelButtonText","background","customClass","popup","confirmButton","cancelButton","then","result","isConfirmed","moveToLetters","isSearchable","CSVLink","filename","display","option","clearFilters","checked","cursor","isRowExpanded","isEditMode","isRowSelected","selectedRow","handleRowSelectionChange","selectedProperty","prevRows","rightmoveId","find","prop","prevExpandedRows","prevFormData","toggleRowExpansion","patch","prevEditModes","handleSave","toggleEditMode","deleteFavourite","ArchivedPropertiesModal","hiddenSavedShow","handleHiddenSavedClose","hiddenProperties","setHiddenSavedShow","handleHiddenSavedShow","rightmoveIds","rightmove_ids","UnhiddenModal","archviedSavedShow","handleArchivedSavedClose","searchQuery","setSearchQuery","setArchivedSavedShow","handleArchivedSavedShow","updateFavourites","getFilteredProperties","filteredProperties","lowerCaseQuery","ArchviedToSavedModal","createTemplateShow","handleCreateTemplateClose","signature","templateAction","currentTemplate","exampleData","setCampaignLoading","templateLoading","setTemplateLoading","errors","templates","number","description","pdf","letterTemplate","setLetterTemplate","template_name","template_body_1","template_body_2","template_body_3","template_body_4","template_body_5","template_type","sender_name","sender_company","sender_role","sender_mobile","sender_landline","sender_email","sender_footer","sender_website","logo_width","logo_height","logo_position","opening","closing","paragraphChange","name","maxCharsForThis","Object","keys","reduce","total","newText","slice","max","prevState","postTemplate","validateTemplate","tempErrors","isValid","every","field","trim","Boolean","areRequiredFieldsFilled","icon","templateData","template","border","window","open","editTemplate","createCampaignShow","handleCreateCampaignClose","letterTemplates","editData","numberOfSteps","setNumberofSteps","campaign","setCampaign","campaign_name","campaign_status","campaign_start_date","campaign_type","template_names","template_dates","split","handleTemplateChange","templateIndex","min","handleDateChange","removeStep","currentSteps","updates","prevCampaign","addStep","newCampaignType","validateCampaign","template_1_name","letterTab","setLetterTab","letterCampaigns","letterProperties","editCredts","setEditCredits","initiateCheckoutSession","creditValue","addCreditValue","availableCredits","campaignScreen","setCampaignScreen","activeCampaign","setActiveCampaign","campaignDetail","setCampaignDetail","setCreateCampaignShow","campaignSelectedRows","setCampaignSelectedRows","campaignSelectAllStatus","setCampaignSelectAllStatus","propertiesInCampaign","setPropertiesInCampaign","propertiesNotInCampaign","setPropertiesNotInCampaign","campaignAnalytics","setCampaignAnalytics","campaignLoading","maxStep","setMaxStep","marketStatusFilter","setMarketStatusFilter","sendStatusFilter","setSendStatusFilter","analyticsFilteredProperties","setAnalyticsFilteredProperties","enhancedData","correspondingProperty","target_rightmove_id","removed_date","week_removed","status","inCampaign","letter_campaign","notInCampaign","handleCreateCampaignShow","selectCampaign","campaignName","params","getAnalytics","color","CreateCampaign","campaignId","showCancelButton","duplicateCampaign","deleteCampaign","steps","funds","templatesNeeded","templateName","t","push","step","itemsWithHtmlContent","flatMap","_ref2","titleCaseAddress","component","char","htmlContent","ReactDOMServer","BasicTemplate","selectedTemplate","ownerData","recipient","sequence_details","credits","launchCampaign","marginTop","marginRight","fontSize","propertyIds","property_ids","removePropertiesFromCampaign","clearAnalyticsFilters","target_address","trackerId","message","cancelLetter","setSignature","loadSignatures","setLoadSignatures","editSignatures","setEditSignatures","signatureChange","files","first_name","last_name","company_name","role","pattern","mobile","landline","email","website","accept","logo","tiktok","instagram","qr_location","digital_signature","banner_image","profile_image","FormData","entries","forEach","append","detail","updateSignatures","setLetterProperties","setUserData","setLetterTemplates","setLetterCampaigns","setAvailableCredits","setCreateTemplateShow","selectedCampaign","setSelectedCampaign","setCreditValue","setLogo","pdfProcessing","setPdfProcessing","selectedData","setSelectedData","setSelectedTemplate","selectedTemplateName","setSelectedTemplateName","setTemplateAction","setCurrentTemplate","isEditPending","setIsEditPending","exampleTemplateData","setExampleTemplateData","campaignFilters","setCampaignFilters","campaignFilteredProperties","setCampaignFilteredProperties","price_numeric","epc_favourites","addPropertiesToCampaign","isNaN","getTime","warn","padStart","numericAmount","creditsAmount","credits_amount","localStorage","setItem","JSON","stringify","sessionId","stripe","loadStripe","process","redirectToCheckout","lead_gen_details","SetSignatures","TemplateOptions","template_number","handleEditTemplateShow","deleteTemplate","CampaignOverview","selectedProperties","selectedCampaignDetails","selectAllRows","rowsNotInCampaign","rowsNotInCampaignCount","LandRegTesting","testOuput","setTestOutput","requestData","user_id","password","message_id","external_reference","customer_reference","building_number","res","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","leadGenRemaining","setLeadGenRemaining","userPackage","setUserPackage","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","subcodeSubstring","setSubcodeString","favouritedProperties","setFavouritedProperties","companySavedProperties","setCompanySavedProperties","setArchivedProperties","companyArchivedProperties","setCompanyArchivedProperties","setHiddenProperties","companyHiddenProperties","setCompanyHiddenProperties","companyLetterProperties","setCompanyLetterProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","subcode","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","letter_footer","selectedSalesRows","setSelectedSalesRows","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","setFavouriteIds","removedIds","setRemovedIds","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","filteredMatchingProperties","setFilteredMatchingProperties","filteredSalesMatchingProperties","setFilteredSalesMatchingProperties","filteredNoProperties","setFiltedNoProperties","filteredSalesNoProperties","setFiltedSalesNoProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","matchType","setMatchType","salesMatchType","setSalesMatchType","expandedMultipleMatches","setExpandedMultpleMatches","expandedSalesMultipleMatches","setExpandedSalesMultpleMatches","availableOutcodes","setAvailableOutcodes","getUser","getUserToken","usage_stats","package","getOutcodes","uniqueFilteredFavourites","fav","action","uniquePersonalFilteredFavourites","companyLetters","letter_sequence","letters","companyArchivedFavourites","archivedFavourites","removedProperties","companyRemovedProperties","newFavouriteIds","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","letter_signatures","letter_templates","letter_campaigns","eventBus","emit","parse","URLSearchParams","location","removeItem","deselectAllRows","deselectAllSalesRows","valuation_booked","deletedProperties","postcodeValue","subcodeValue","additionalRental","deletedPropertyIds","property_data","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","removeItemFromStorage","token","salesPrices","rentalPrices","filterPropertiesByDate","days","filterType","addedDate","parseDate","reducedDate","mostRecentDate","isWithinLastDays","isBeyondDays","filtered","month","now","sortByPrice","sorted","salesSorted","multipleRentalSorted","multipleSalesSorted","noRentalSorted","noSalesSorted","setPropertyRemoveShow","newExpandedRows","toggleSalesRowExpansion","addManualFavourite","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","borderBottom","textUnderlineOffset","fontWeight","inputVal","postcodeSections","join","prevData","NumericFormat","displayType","thousandSeparator","prefix","availableOutcodeSet","outcode","LeadGenSaved","String","LettersHub","ArchivedProperties","ManualMatcher","HiddenProperties","existingFavouriteIds","footer","remaining_favourites","existingCombinations","allRows","handleCheckboxChange","updatedStatus","isExpanded","size","toFixed","epcItem","epcIndex","selectAllSalesRows","salesCheckboxChange","RemoveProperties","position","textAlign","height","width","maxWidth","maxHeight","top","padding","lineHeight","flexDirection","bottom","left","right"],"sourceRoot":""}