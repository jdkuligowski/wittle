{"version":3,"file":"static/js/560.72664f72.chunk.js","mappings":"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","sources":["components/whiteLabel/propertyDetails/componentDetails/TubeDetails.js","components/whiteLabel/propertyDetails/componentHighlights/LifestyleHighlights.js","components/whiteLabel/propertyDetails/componentHighlights/NeighbourhoodHighlights.js","components/whiteLabel/propertyDetails/componentHighlights/PropertySummary.js","components/whiteLabel/propertyDetails/componentHighlights/SchoolHighlights.js","components/whiteLabel/propertyDetails/componentHighlights/TransportHighlights.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport * as turf from '@turf/turf'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst TubeDetails = ({ propertyData, tubes1, listType, setTubes1, postcodeData, tableMapView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  // state for storing new tubes data \n  const [tubes2, setTubes2] = useState([])\n\n  // state for clicking the supermnarkewt icon\n  const [selectedTubes, setSelectedTubes] = useState()\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you click icon\n  const handleTubeClick = (tubes) => {\n    console.log('selectd tubes ->', tubes)\n    setSelectedTubes(tubes)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n\n  // ? Section 3: Functinos for sorting table headers\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...tubes1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setTubes1(sortedData)\n  }\n\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as tubes1\n      setTubes2([...tubes1])\n    } else {\n      setTubes2(\n        tubes1.filter(item => {\n          return (\n            item.cleansed_name.toLowerCase().includes(term.toLowerCase()) ||\n            item.line.toLowerCase().includes(term.toLowerCase()) ||\n            item.size.toLowerCase().includes(term.toLowerCase())\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (tubes1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, tubes1])\n\n\n\n  return (\n    <>\n      {tubes1 ?\n        <section className=\"primary-details-section\">\n\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='gym-name sort-section' onClick={() => handleSort('station_name')}>\n                  <h5>Station name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column3' className='sort-section tube-line' onClick={() => handleSort('line')}>\n                  <h5>Tube line</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {/* <div id='column4' className='sort-section' onClick={() => handleSort('line')}>\n                  <h5>Size</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>  */}\n                {listType === 'short list' ?\n                  <div id='column5' className='sort-section' onClick={() => handleSort('walkTimeMin')}>\n                    <h5>Distance</h5>\n                    <h5 className='sort-button'>↕️</h5>\n                  </div>\n                  :\n                  <h5 id='column5'></h5>\n                }\n\n              </div>\n              <div className='school-table-details'>\n                {tubes2 ? tubes2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column gym-name' id='column2'>\n                          <h5>{item.station_name}</h5>\n                        </div>\n                        <div className='column tube-line' id='column3'>\n                          <h5>{item.line}</h5>\n                        </div>\n                        {/* <div className='column' id='column4'>\n                          <h5>{item.line}</h5>\n                        </div> */}\n\n                        <div className='column' id='column5'>\n                          {listType === 'short list' ?\n                            <h5>{item.walkTimeMin} mins</h5>\n                            :\n                            <h5></h5>\n                          }\n                        </div>\n\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {tubes2 ? tubes2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.station_name}</h5>\n                              <div className='details'>\n                                <div className='icon' id='tubes'></div>\n                                <h5>{item.line}</h5>\n                              </div>\n                              {listType === 'short list' ?\n                                <div className='details'>\n                                  <div className='icon' id='distance'></div>\n                                  <h5>{item.walkTimeMin} mins</h5>\n                                </div>\n                                : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {tubes2 &&\n                        tubes2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.long}\n                            latitude={item.lat}\n                            onClick={() => handleTubeClick(item)}\n\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n                      {selectedTubes ?\n                        <Popup\n                          longitude={selectedTubes.long}\n                          latitude={selectedTubes.lat}\n                          closeOnClick={false}\n                          className=\"item-popup\"\n                          onClose={() => setSelectedTubes(null)}\n\n                        >\n                          <div className=\"popup-content\">\n\n                            <div className='popup-border'>\n                              <h5 className='title'>{selectedTubes.station_name}</h5>\n                              <p>{selectedTubes.line}</p>\n                            </div>\n                          </div>\n                        </Popup>\n                        : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {tubes2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(tubes2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        :\n        <section className='loading-screen'>\n          <Loading />\n        </section>\n      }\n    </>\n  )\n}\n\nexport default TubeDetails\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, Link } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../../auth/Auth'\n\n\n\n\n\nconst LifestyleHighlights = ({ restaurants1, cuisines, topRestaurants, gyms1, mainGyms, supermarkets1, mainSupermarkets, pubs1, topPubs }) => {\n\n  // ? Section 1: Define states\n\n  // state for errors\n  const [errors, setErrors] = useState()\n\n\n  return (\n\n    <>\n      <section className='box-highlights'>\n        <div className='row'>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='restaurants'></div>\n              <h5 className='block-title'>Restaurants</h5>\n\n            </div>\n            {restaurants1 ?\n              <>\n                <ul className='results-details'>\n                  <li>{restaurants1.length} restaurants within 15 mins walk</li>\n                  <li>more than {cuisines} cuisines available</li>\n                  <li>{topRestaurants[0]}, {topRestaurants[1]} & {topRestaurants[2]} are well rated</li>\n                </ul>\n              </>\n              : ''}\n\n          </div>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='pubs'></div>\n              <h5 className='block-title'>Pubs</h5>\n\n            </div>\n            {pubs1 ?\n              <>\n                <ul className='results-details'>\n                  <li>{pubs1.length} pubs within 15 mins walk</li>\n                  <li>{topPubs[0]}, {topPubs[1]} & {topPubs[2]} are well rated</li>\n                </ul>\n              </>\n              : ''}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='gyms'></div>\n              <h5 className='block-title'>Fitness</h5>\n\n            </div>\n            {gyms1 ?\n              <>\n                <ul className='results-details'>\n                  <li>{gyms1.length} gyms within 15 mins walk</li>\n                  {mainGyms.length === 3 ? <li>includes {mainGyms[0]}, {mainGyms[1]} & {mainGyms[2]}</li> : mainGyms.length === 2 ? <li>includes {mainGyms[0]} & {mainGyms[1]} </li> : mainGyms.length === 1 ? <li>includes {mainGyms[0]}</li> : ''}\n                </ul> </>\n              : ''}\n\n          </div>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='supermarkets'></div>\n              <h5 className='block-title'>Supermarket</h5>\n\n            </div>\n            {supermarkets1 ?\n              <>\n                <ul className='results-details'>\n                  <li>🛒 {supermarkets1.length} supermarkets within 15 mins walk</li>\n                  {mainSupermarkets.length === 3 ? <li>🛒 includes {mainSupermarkets[0]}, {mainSupermarkets[1]} & {mainSupermarkets[2]}</li> : mainSupermarkets.length === 2 ? <li>🛒 includes {mainSupermarkets[0]} & {mainSupermarkets[1]} </li> : mainSupermarkets.length === 1 ? <li>🛒 includes {mainSupermarkets[0]}</li> : ''}\n                </ul></>\n              : ''}\n          </div>\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default LifestyleHighlights","\n\n\n\n\nconst NeighbourhoodHighlights = ({ postcodeData }) => {\n\n\n  return (\n\n    <>\n      <section className='box-highlights'>\n        <div className='row'>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='parks'></div>\n              <h5 className='block-title'>Green space</h5>\n\n            </div>\n            {postcodeData ?\n              <>\n                <ul className='results-details'>\n                  <li>within top {100 - postcodeData[0].parks_lsoa[0].london_percentile}% of areas in london for access to greenspace</li>\n                  <li>{postcodeData[0].parks_postcode.park_name0} - {Math.ceil((((postcodeData[0].parks_postcode.distance0) / 1000) / 5) * 60)} mins walk</li>\n                  <li>{postcodeData[0].parks_postcode.park_name1} - {Math.ceil((((postcodeData[0].parks_postcode.distance1) / 1000) / 5) * 60)} mins walk</li>\n                  <li>{postcodeData[0].parks_postcode.park_name2} - {Math.ceil((((postcodeData[0].parks_postcode.distance2) / 1000) / 5) * 60)} mins walk</li>\n                </ul>\n              </>\n              : ''}\n\n          </div>\n          {/* <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='handcuff'></div>\n              <h5 className='block-title'>Crime</h5>\n\n            </div>              {postcodeData ?\n              <>\n                <h5>🚓 in the lowest {Math.round((postcodeData[0].crime[0].percentile) * 100)}% of areas in London for reported crimes</h5>\n                <h5>🚓 in the lowest {Math.round((postcodeData[0].crime[0].area_specific_percentile) * 100)}% of areas in {postcodeData[0].crime[0].borough} for reported crimes</h5>\n\n              </>\n              : ''}\n          </div> */}\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default NeighbourhoodHighlights","import { PieChart, Pie, Cell, Label, ResponsiveContainer } from 'recharts'\n\n\n\nconst PropertySummary = ({ neighbourhoodScore, postcodeData }) => {\n\n  \n\n  // neighbourhood data\n  const data = [\n    { name: 'Score', value: neighbourhoodScore },\n    { name: 'Remainder', value: 100 - neighbourhoodScore }\n  ]\n\n  const COLORS = ['#ED6B86', 'rgba(26, 39, 108, 0.15)']\n\n\n  // greenspace data\n  const greenspaceData = [\n    { name: 'Score', value: postcodeData ? postcodeData[0].parks_lsoa[0].london_percentile : '' },\n    { name: 'Remainder', value: postcodeData ? 100 - postcodeData[0].parks_lsoa[0].london_percentile : '' }\n  ]\n\n  // restaurant data\n  const restaurantData = [\n    { name: 'Score', value: postcodeData ? Math.ceil(postcodeData[0].restaurants.normal_percentile * 100) : '' },\n    { name: 'Remainder', value: postcodeData ? Math.ceil((1 - postcodeData[0].restaurants.normal_percentile) * 100) : '' }\n  ]\n\n  // crime data\n  const crimeData = [\n    { name: 'Score', value: postcodeData ? Math.round(postcodeData[0].crime[0].percentile * 100) : '' },\n    { name: 'Remainder', value: postcodeData ? Math.round((1 - postcodeData[0].crime[0].percentile) * 100) : '' }\n  ]\n\n\n  // tubes data\n  const tubeData = [\n    { name: 'Score', value: postcodeData ? Math.ceil(postcodeData[0].tubes.percentile * 100) : '' },\n    { name: 'Remainder', value: postcodeData ? Math.ceil((1 - postcodeData[0].tubes.percentile) * 100) : '' }\n  ]\n\n  const secondariesData = [\n    { name: 'Score', value: postcodeData ? Math.ceil(postcodeData[0].secondaries.total_score_percentile * 100) : '' },\n    { name: 'Remainder', value: postcodeData ? Math.ceil((1 - postcodeData[0].secondaries.total_score_percentile) * 100) : '' }\n  ]\n\n\n\n  return (\n\n    <>\n      <section className=\"summary-section\">\n        <div className=\"row\">\n\n          {/* Neighbourhood score */}\n          <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={data}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {data.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${neighbourhoodScore}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              <h1>Neighbourhood score</h1>\n            </div> \n          </div>  \n\n          {/* Greenspace stat */}\n          <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={greenspaceData}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {greenspaceData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${greenspaceData[0].value > 50 ? greenspaceData[1].value : greenspaceData[0].value}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              {greenspaceData[0].value > 50 ?  <h1>within top {greenspaceData[1].value}% of areas of London for access to greenspace</h1> : <h1>within bottom {greenspaceData[0].value}% of areas of London for access to greenspace</h1>}\n            </div> \n          </div>  \n\n          {/* Secondaries stat */}\n          <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={secondariesData}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {secondariesData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${100 - secondariesData[0].value}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              <h1>within top {100 - secondariesData[0].value}% of areas of London for secondary schools</h1>\n            </div> \n          </div>  \n\n          {/* Restaurant stat */}\n          <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={restaurantData}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {restaurantData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${100 - restaurantData[0].value}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              <h1>within best {100 - restaurantData[0].value}% of areas of London for number of quality restaurants</h1>\n            </div> \n          </div>  \n\n          {/* <div className=\"row\"> */}\n\n          {/* Crime score */}\n          <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={crimeData.reverse()}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {crimeData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${crimeData[1].value > 50 ? crimeData[0].value : crimeData[1].value}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              {(crimeData[1].value) > 50 ? <h1>In the highest {crimeData[0].value}% of areas in London for reported crimes</h1> : <h1>In the lowest {(crimeData[1].value)}% of areas in London for reported crimes</h1>}\n            </div> \n          </div>  \n\n          {/* Tubes stat */}\n          <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={tubeData}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {tubeData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${100 - tubeData[0].value}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              <h1>within top {100 - tubeData[0].value}% of areas of London for access to tubes</h1>\n            </div> \n          </div>  \n\n          {/* Restaurant stat */}\n          {/* <div className=\"individual-box\">\n            <div className=\"pie-chart\" >\n              <PieChart width={100} height={100}>\n                <Pie\n                  data={restaurantData}\n                  cx={40}\n                  cy={50}\n                  innerRadius={33}\n                  outerRadius={45}\n                  fill=\"#8884d8\"\n                  paddingAngle={1}\n                  dataKey=\"value\"\n                  startAngle={0}\n                >\n                  {restaurantData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                      startAngle={index === 0 ? 0 : (360 * data[index - 1].value) / 100} // Set the start angle dynamically\n                      endAngle={(360 * entry.value) / 100} // Set the end angle dynamically                    \n                    />\n                  ))}\n                  <Label\n                    value={`${restaurantData[0].value}%`}\n                    position=\"center\"\n                    fontSize={15}\n                    \n                    fill='black'\n                  />\n                </Pie>\n              </PieChart>\n            </div>\n            <div className=\"content\">\n              <h1>within top {restaurantData[0].value}% of areas of London for restaurants</h1>\n            </div> \n          </div>   */}\n        </div>    \n      </section>\n    \n    </>\n  )\n}\n\nexport default PropertySummary","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, Link } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken , getAccessToken } from '../../../auth/Auth'\n\n\n\n\nconst SchoolHighlights = ({ topPrimaries, topSecondaries }) => {\n\n  // ? Section 1: Define states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n\n\n  return (\n\n    <>\n      <section className='school-highlights'>\n        <div className='school-block'>\n          <div className='variable-title'>\n            <div className='variable-icon' id='primaries'></div>\n            <h5 className='block-title'>Primary schools</h5>\n\n          </div>\n          <div className='school-table-headers'>\n            <h5 id='column1'>#</h5>\n            <h5 id='column2'>School name</h5>\n            <h5 id='column3'>Ofsted</h5>\n            <h5 id='column4'>Catchment</h5>\n            <h5 id='column5'>Distance</h5>\n          </div>\n          <hr className='table-divider'/>\n\n          <div className='school-table-details'>\n            {topPrimaries ? topPrimaries.map((item, index) => {\n              return (\n                <>\n                  <div className='school-content'>\n                    <div className='column' id='column1'>\n                      <h5>{index + 1}</h5>\n                    </div>\n                    <div className='column' id='column2'>\n                      <h5 onClick={() => navigate(`/agents/primary-schools/${item.id}`)} >{item.school_name}</h5>\n                    </div>\n                    <div className='column' id='column3'>\n                      {item.ofsted_results !== null ? <h5>{item.ofsted_results}</h5> : <h5>N/a</h5>}\n                    </div>\n                    <div className='column' id='column4'>\n                      <h5>{item.within_catchment}</h5>\n                    </div>\n                    <div className='column' id='column5'>\n                      <h5>{item.walkTimeMin} mins</h5>\n                    </div>\n                  </div>\n                  <hr className='table-divider'/>\n\n        \n                </>\n              )\n            }) : ''}\n          </div>\n        </div>\n        <div className='school-block'>\n          <div className='variable-title'>\n            <div className='variable-icon' id='secondaries'></div>\n            <h5 className='block-title'>Secondary schools</h5>\n\n          </div>\n          <div className='school-table-headers'>\n            <h5 id='column1'>#</h5>\n            <h5 id='column2'>School name</h5>\n            <h5 id='column3'>Ofsted</h5>\n            <h5 id='column4'>Catchment</h5>\n            <h5 id='column5'>Distance</h5>\n          </div>\n          <hr className='table-divider'/>\n          <div className='school-table-details'>\n            {topSecondaries ? topSecondaries.map((item, index) => {\n              return (\n                <>\n                  <div className='school-content'>\n                    <div className='column' id='column1'>\n                      <h5>{index + 1}</h5>\n                    </div>\n                    <div className='column' id='column2'>\n                      <h5 onClick={() => navigate(`/agents/secondary-schools/${item.id}`)} >{item.school_name}</h5>\n                    </div>\n                    <div className='column' id='column3'>\n                      {item.ofsted_results !== null ? <h5>{item.ofsted_results}</h5> : <h5>N/a</h5>}\n                    </div>\n                    <div className='column' id='column4'>\n                      <h5>{item.within_catchment}</h5>\n                    </div>\n                    <div className='column' id='column5'>\n                      <h5>{item.walkTimeMin} mins</h5>\n                    </div>\n                  </div>\n                  <hr className='table-divider'/>\n\n        \n                </>\n              )\n            }) : ''}\n          </div>\n        </div>\n        \n      </section>\n    </>\n  )\n}\n\nexport default SchoolHighlights","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, Link } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../../auth/Auth'\n\n\n\n\n\nconst TransportHighlights = ({ postcodeData, tubes1, trains1, uniqueTubeLines, uniqueTubeStations }) => {\n\n\n\n\n\n  return (\n    <>\n      <section className='box-highlights'>\n        <div className='row'>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='tubes'></div>\n              <h5 className='block-title'>Underground & Overground</h5>\n\n            </div>            \n            {tubes1 && tubes1.length > 0 ?\n              <>\n                <ul className='results-details'>\n                  <li>{tubes1.length} stations within 20 mins walk</li>\n                  {\n                    tubes1.slice(0, 3).map((train, index) => (\n                      <li key={index}>{train.station_name} - {train.line} - {train.walkTimeMin} mins walk</li>\n                    ))\n                  } </ul>\n\n              </>\n              :\n              <h5>🚇 No tube stations within 20 min walk of this property</h5>}\n\n          </div>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='evs'></div>\n              <h5 className='block-title'>Electric vehicles</h5>\n\n            </div>\n            {postcodeData ?\n              <>\n                <ul className='results-details'>\n                  <li>{postcodeData[0].ev.ev_10_mins} charging points within 10 mins walk</li>\n                  <li>in the top {Math.round((1 - postcodeData[0].ev.percentile) * 100)}% of areas in London for ev charging access</li>\n                </ul>\n              </>\n              : ''}\n          </div>\n        </div>\n        <div className='row'>\n          <div className='column'>\n            <div className='variable-title'>\n              <div className='variable-icon' id='trains'></div>\n              <h5 className='block-title'>National Rail</h5>\n\n            </div>\n            {trains1 && trains1.length > 0 ?\n              <>\n                <ul className='results-details'>\n                  <li>{trains1.length} stations within 20 mins walk</li>\n                  {\n                    trains1.slice(0, 3).map((train, index) => (\n                      <li key={index}>{train.station} - {train.walkTimeMin} mins walk</li>\n                    ))\n                  }\n                </ul>\n              </>\n              :\n              <h5>🚊 No rail stations within 20 min walk of this property</h5>}\n\n          </div>\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default TransportHighlights"],"names":["_ref","propertyData","tubes1","listType","setTubes1","postcodeData","tableMapView","useNavigate","tubes2","setTubes2","useState","selectedTubes","setSelectedTubes","sortField","setSortField","sortDirection","setSortDirection","searchTerm","setSearchTerm","viewport","setViewport","latitude","longitude","zoom","showPopup","setShowPopup","iconId","setIconId","currentPage","setCurrentPage","startIndex","endIndex","iconSetting","e","console","log","parseInt","target","id","useEffect","prevViewport","handleSort","field","direction","sortedData","sort","a","b","isNaN","term","filter","item","cleansed_name","toLowerCase","includes","line","size","_jsx","_Fragment","children","_jsxs","className","onClick","map","index","station_name","walkTimeMin","slice","onMouseEnter","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","long","lat","handleTubeClick","tubes","Popup","closeOnClick","onClose","ReactPaginate","pageCount","Math","ceil","length","onPageChange","data","selected","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","Loading","restaurants1","cuisines","topRestaurants","gyms1","mainGyms","supermarkets1","mainSupermarkets","pubs1","topPubs","errors","setErrors","parks_lsoa","london_percentile","parks_postcode","park_name0","distance0","park_name1","distance1","park_name2","distance2","neighbourhoodScore","name","value","COLORS","greenspaceData","restaurantData","restaurants","normal_percentile","crimeData","round","crime","percentile","tubeData","secondariesData","secondaries","total_score_percentile","PieChart","width","height","Pie","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","startAngle","entry","Cell","endAngle","Label","position","fontSize","reverse","topPrimaries","topSecondaries","navigate","school_name","ofsted_results","within_catchment","trains1","uniqueTubeLines","uniqueTubeStations","train","ev","ev_10_mins","station"],"sourceRoot":""}