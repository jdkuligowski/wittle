{"version":3,"file":"static/js/533.fc9383ab.chunk.js","mappings":"gRAOIA,EAAY,CAAC,0BAA2B,uBAAwB,oBAAqB,mBAAoB,mBAAoB,iBAAkB,UAAW,YAC1JC,EAAgB,WAClB,IACIC,EAASC,UAAUC,OAAS,EAAID,UAAU,QAAKE,EAC/CC,EAAYH,UAAUC,OAAS,EAAID,UAAU,QAAKE,EAClDE,EAAYC,OAHCL,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,IAGlDM,cAC/BC,EAAcF,OAAOF,EAAUK,eAAeT,IAASO,cACvDG,EAAcJ,OAAOF,EAAUO,eAAeX,IAASO,cAC3D,OAAOC,IAAgBH,GAAaK,IAAgBL,CACtD,EACIO,EAAW,CACbC,kBAAmB,SAA2BC,GAC5C,MAAO,WAAYC,OAAOD,EAAY,IACxC,EACAE,iBAAkB,SAA0BF,EAAYG,EAAaC,EAAed,GAClF,SAAUU,GAAcG,EAAYE,MAAK,SAAUnB,GACjD,OAAOD,EAAce,EAAYd,EAAQI,EAC3C,KAAMc,EAAcC,MAAK,SAAUnB,GACjC,OAAOD,EAAce,EAAYd,EAAQI,EAC3C,IACF,EACAgB,iBAAkB,SAA0BN,EAAYJ,GACtD,MAAO,CACLW,MAAOX,EACPY,MAAOR,EACPS,WAAW,EAEf,G,oBCFEC,GAP+BC,EAAAA,EAAAA,aAAW,SAAUC,EAAOC,GAC7D,IACIC,EDSN,SAAsBC,GACpB,IAAIC,EAAwBD,EAAKE,wBAC/BA,OAAoD,IAA1BD,GAA2CA,EACrEE,EAAwBH,EAAKI,qBAC7BA,OAAiD,IAA1BD,EAAmC,OAASA,EACnEE,EAAwBL,EAAKhB,kBAC7BA,OAA8C,IAA1BqB,EAAmCtB,EAASC,kBAAoBqB,EACpFC,EAAwBN,EAAKb,iBAC7BA,OAA6C,IAA1BmB,EAAmCvB,EAASI,iBAAmBmB,EAClFC,EAAwBP,EAAKT,iBAC7BA,OAA6C,IAA1BgB,EAAmCxB,EAASQ,iBAAmBgB,EAClFC,EAAiBR,EAAKQ,eACtBC,EAAeT,EAAKU,QACpBC,OAAgC,IAAjBF,EAA0B,GAAKA,EAC9CG,EAAgBZ,EAAKa,SACrBC,GAAkBC,EAAAA,EAAAA,GAAyBf,EAAM/B,GAC/C+C,EAAwBF,EAAgBlC,eAC1CqC,OAA6C,IAA1BD,EAAmCpC,EAAAA,EAAiBoC,EACvEE,EAAyBJ,EAAgBhC,eACzCqC,OAA8C,IAA3BD,EAAoCpC,EAAAA,EAAiBoC,EACxEjC,EAAa6B,EAAgB7B,WAC7BmC,EAAYN,EAAgBM,UAC5BC,EAAUP,EAAgBO,QAC1B5B,EAAQqB,EAAgBrB,MACxB6B,EAAOR,EAAgBQ,KACrBC,GAAYC,EAAAA,EAAAA,UAAQ,WACtB,OAAOrC,EAAiBF,GAAYwC,EAAAA,EAAAA,GAAWhC,GAAQkB,EAAc,CACnE/B,eAAgBqC,EAChBnC,eAAgBqC,IACb5B,EAAiBN,EAAYD,EAAkBC,SAAeX,CACrE,GAAG,CAACU,EAAmBO,EAAkB4B,EAAkBF,EAAkBhC,EAAYE,EAAkBwB,EAAclB,IACrHiB,GAAUc,EAAAA,EAAAA,UAAQ,WACpB,OAAQtB,GAA4BkB,IAAcG,EAAiKZ,EAA5H,UAAzBP,EAAmC,CAACmB,GAAWrC,QAAOwC,EAAAA,EAAAA,GAAmBf,IAAiB,GAAGzB,QAAOwC,EAAAA,EAAAA,GAAmBf,GAAe,CAACY,GACvM,GAAG,CAACrB,EAAyBE,EAAsBgB,EAAWG,EAAWZ,IACrEE,GAAWc,EAAAA,EAAAA,cAAY,SAAUC,EAAUC,GAC7C,GAA0B,kBAAtBA,EAAWC,OACb,OAAOlB,EAAcgB,EAAUC,GAEjC,IAAIE,EAAaC,MAAMC,QAAQL,GAAYA,EAAW,CAACA,GACvD,GAAIG,EAAWA,EAAW1D,OAAS,KAAOkD,EAY1CX,EAAcgB,EAAUC,QAXtB,GAAIrB,EAAgBA,EAAevB,OAAiB,CAClD,IAAIiD,EAAgB3C,EAAiBN,EAAYA,GAC7CkD,EAAgB,CAClBL,OAAQ,gBACRR,KAAMA,EACNnD,OAAQ+D,GAEVtB,GAAcwB,EAAAA,EAAAA,GAAaf,EAAS,GAAGnC,QAAOwC,EAAAA,EAAAA,IAAmBD,EAAAA,EAAAA,GAAWhC,IAAS,CAACyC,IAAiBA,GAAgBC,EACzH,CAIJ,GAAG,CAAC5C,EAAkBN,EAAYoC,EAASC,EAAMC,EAAWf,EAAgBI,EAAenB,IAC3F,OAAO4C,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGvB,GAAkB,CAAC,EAAG,CAC3DJ,QAASA,EACTG,SAAUA,GAEd,CClEoByB,EADGC,EAAAA,EAAAA,GAAgB1C,IAErC,OAAoB2C,EAAAA,cAAoBC,EAAAA,GAAQC,EAAAA,EAAAA,GAAS,CACvD5C,IAAKA,GACJC,GACL,I,mBC+UA,MAlWiB4C,KAGf,MAAMC,GAAWC,EAAAA,EAAAA,OAGVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAGhCC,EAAUC,IAAeF,EAAAA,EAAAA,aACzBG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,OAChDK,EAAkBC,IAAuBN,EAAAA,EAAAA,UAAS,KAqBzDO,EAAAA,EAAAA,YAAU,KAjBWC,WACnB,IACE,MAAMC,EAAM,qBAGN,KAAEC,SAAeC,EAAAA,EAAMC,IAAIH,GACjCI,QAAQC,IAAI,gBAAiBJ,GAC7BR,EAAYQ,GACZ,MAAMhD,EAAUgD,EAAKK,KAAIC,IAAO,CAAOvE,MAAOuE,EAAQC,GAAIzE,MAAOwE,EAAQE,gBACzEZ,EAAoB5C,GACpBmD,QAAQC,IAAI,kBAAmBpD,EACjC,CAAE,MAAOyD,GACPN,QAAQC,IAAIK,EACd,GAKAC,EAAc,GACb,IAGH,MAKOC,EAAmBC,IAAwBtB,EAAAA,EAAAA,UAAS,aACpDuB,EAAsBC,IAA2BxB,EAAAA,EAAAA,UAAS,aAsB1DyB,EAAUC,IAAe1B,EAAAA,EAAAA,WAAS,IAclC2B,EAAcC,IAAmB5B,EAAAA,EAAAA,WAAS,IAa1C6B,EAAcC,IAAmB9B,EAAAA,EAAAA,UAAS,CAC/C+B,MAAO,GACPC,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,sBAAuB,GACvBC,WAAY,GACZC,UAAW,MAINC,EAAeC,IAAoBvC,EAAAA,EAAAA,UAAS,CACjD+B,MAAO,GACPC,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,sBAAuB,GACvBC,WAAY,GACZC,UAAW,GACXG,KAAM,KA8BFC,EAAkBC,IACtB,MAAM,KAAEpE,EAAI,MAAE7B,GAAUiG,EAAEC,OAU1B,GANEb,EADW,UAATxD,EACc,IAAKuD,EAAc,CAACvD,GAAO7B,EAAMf,eAEjC,IAAKmG,EAAc,CAACvD,GAAO7B,IAIhC,aAAT6B,EAAqB,CACvB,MAAMsE,EAtCgBV,KACxB,MACMW,GAAeC,EAAAA,EAAAA,SAAQZ,EAAU,SACjCa,GAAeD,EAAAA,EAAAA,SAAQZ,EAAU,SACjCc,GAAWF,EAAAA,EAAAA,SAAQZ,EAAU,MAC7Be,GAAiBH,EAAAA,EAAAA,SAAQZ,EAAU,gBAEzC,OAAKgB,EAAAA,EAAAA,UAAShB,EAAU,CAAEiB,IANR,IASbN,EAGAE,EAGAC,EAGAC,EAGE,GAFE,uDAHA,2CAHA,sDAHA,sDAHA,6CAcA,EAgBeG,CAAiB3G,GACvC8F,EAAiB,IAAKD,EAAeJ,SAAUU,GACjD,MAAO,GAAa,0BAATtE,EAAkC,CAC3C,MAAM+E,EAA4B5G,IAAUoF,EAAaK,SAAW,wBAA2B,GAC/FK,EAAiB,IAAKD,EAAeH,sBAAuBkB,GAC9D,GA8FF,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEEF,EAAAA,EAAAA,KAAA,WAASG,UAAU,aAAaxC,GAAG,WAAUuC,UAG3CF,EAAAA,EAAAA,KAAA,WAASG,UAAU,gBAAeD,SAQ/B1D,GACCwD,EAAAA,EAAAA,KAACI,EAAAA,EAAO,KAERC,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBD,UAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qCACAG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBD,SAAA,EAErCG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOtF,KAAK,aAAamF,UAAU,QAAQhH,MAAOoF,EAAaO,WAAYvE,SAAU4E,IAChGH,EAAcF,aAAcuB,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcF,kBAGrEuB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOtF,KAAK,YAAYmF,UAAU,QAAQhH,MAAOoF,EAAaQ,UAAWxE,SAAU4E,IAC9FH,EAAcD,YAAasB,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcD,iBAMpEsB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAACO,EAAe,CACdC,aAAW,EACXjG,SAnFUkG,CAACnF,EAAUC,KAErCuB,EAAmBxB,GACnB,MAAMoF,EAAcpF,EAAWA,EAASpC,MAAQ,GAChDsF,EAAgB,IAAKD,EAAcI,aAAc+B,GAAc,EAgF/CtG,QAAS2C,EACT5D,MAAO0D,EACP8D,OA/EG,CACnBC,QAAUC,IAAQ,IACbA,EACHC,SAAU,SACVC,WAAY,UACZC,MAAO,UACPC,YAAa,UACbC,aAAc,OACdC,gBAAiB,UACjBC,QAAS,UACTC,UAAW,SAIbxJ,OAAQA,CAACgJ,EAAUS,KAAK,IACnBT,EACHG,MAAOM,EAAMC,WAAa,QAAU,OACpCJ,gBAAiBG,EAAMC,WAAa,UAAY,QAChDT,SAAU,WAKZU,YAAaA,CAACX,EAAUS,KAAK,IACxBT,EACHG,MAAO,UACPF,SAAU,SACVC,WAAY,UACZK,QAAS,aAoDKK,YAAY,6BACZzG,KAAK,iBACNgE,EAAcL,eAAgB0B,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcL,oBAIvE0B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cAEJF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOtF,KAAK,WAAWmF,UAAU,QAAQhH,MAAOoF,EAAaG,SAAUnE,SAAU4E,IAC5FH,EAAcN,WAAY2B,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcN,gBAInE2B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,QAAQtF,KAAK,QAAQmF,UAAU,QAAQhH,MAAOoF,EAAaE,MAAOlE,SAAU4E,IACvFH,EAAcP,QAAS4B,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcP,aAIhE4B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cAGJF,EAAAA,EAAAA,KAAA,SAAOM,KAAMrC,EAAsBjD,KAAK,WAAWmF,UAAU,0BAA0BhH,MAAOoF,EAAaK,SAAUrE,SAAU4E,IAG9HH,EAAcJ,WAAYyB,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcJ,gBAInEyB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBAEJF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,WAAWtF,KAAK,wBAAwBmF,UAAU,QAAQhH,MAAOoF,EAAaM,sBAAuBtE,SAAU4E,IAC1HH,EAAcH,wBAAyBwB,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcH,gCAG5EmB,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASoB,QAlLjBxE,UACrBkC,EAAEuC,iBAEF,MAAMC,EAAY,IACb5C,EACHF,WAAYP,EAAaO,WAAW/G,OAAS,EAAI,iBAAmB,GACpEgH,UAAWR,EAAaQ,UAAUhH,OAAS,EAAI,gBAAkB,GACjE4G,aAAcJ,EAAaI,aAAa5G,OAAS,EAAI,cAAgB,GACrE2G,SAAUH,EAAaG,SAAS3G,OAAS,EAAI,eAAiB,GAC9D0G,OAAOoD,EAAAA,EAAAA,SAAQtD,EAAaE,OAAS,GAAK,yBAE5CQ,EAAiB2C,GAzIiBE,MA8IlC,IAFqBC,OAAOC,OAAOJ,GAAW5I,MAAK6E,GAAmB,KAAVA,IAQ5D,IACEpB,GAAW,SACLY,EAAAA,EAAM6B,KAAK,sBAAuBX,GACxC,MAAM,KAAEnB,SAAeC,EAAAA,EAAM6B,KAAK,mBAAoB,CACpDT,MAAOF,EAAaE,MACpBG,SAAUL,EAAaK,WAzJOkD,EA2JL1E,EAAK0E,MA1JlCG,OAAOC,aAAaC,QAAQ,oBAAqBL,GA2J/CG,OAAOC,aAAaC,QAAQ,kBAAmB/E,EAAKsB,UACpDnB,QAAQC,IAAI,cAAeJ,EAAKsB,UAChCF,EAAgB,CAAC,GACjBlC,EAAS,mBACTG,GAAW,EACb,CAAE,MAAO2F,GACP7E,QAAQC,IAAI4E,GACZ3F,GAAW,GAEXwC,EAAiB,IAAKD,EAAeE,KAAM,mEAE7C,GAyI8DgB,SAAC,aACpDlB,EAAcE,OAAQmB,EAAAA,EAAAA,MAAA,KAAGF,UAAU,QAAOD,SAAA,CAAC,KAAGlB,EAAcE,gBAQpE,C,4CClWP,IANgBkB,KACdJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,KAAA,OAAKqC,IAAKC,EAAQ,MAAyCC,IAAI,iB","sources":["../node_modules/react-select/dist/useCreatable-d97ef2c9.esm.js","../node_modules/react-select/creatable/dist/react-select-creatable.esm.js","components/auth/Register.js","components/helpers/Loading.js"],"sourcesContent":["import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useMemo, useCallback } from 'react';\nimport { H as cleanValue, D as valueTernary } from './index-a301f526.esm.js';\nimport { g as getOptionValue, b as getOptionLabel } from './Select-49a62830.esm.js';\n\nvar _excluded = [\"allowCreateWhileLoading\", \"createOptionPosition\", \"formatCreateLabel\", \"isValidNewOption\", \"getNewOptionData\", \"onCreateOption\", \"options\", \"onChange\"];\nvar compareOption = function compareOption() {\n  var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var option = arguments.length > 1 ? arguments[1] : undefined;\n  var accessors = arguments.length > 2 ? arguments[2] : undefined;\n  var candidate = String(inputValue).toLowerCase();\n  var optionValue = String(accessors.getOptionValue(option)).toLowerCase();\n  var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase();\n  return optionValue === candidate || optionLabel === candidate;\n};\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return \"Create \\\"\".concat(inputValue, \"\\\"\");\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option, accessors);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  }\n};\nfunction useCreatable(_ref) {\n  var _ref$allowCreateWhile = _ref.allowCreateWhileLoading,\n    allowCreateWhileLoading = _ref$allowCreateWhile === void 0 ? false : _ref$allowCreateWhile,\n    _ref$createOptionPosi = _ref.createOptionPosition,\n    createOptionPosition = _ref$createOptionPosi === void 0 ? 'last' : _ref$createOptionPosi,\n    _ref$formatCreateLabe = _ref.formatCreateLabel,\n    formatCreateLabel = _ref$formatCreateLabe === void 0 ? builtins.formatCreateLabel : _ref$formatCreateLabe,\n    _ref$isValidNewOption = _ref.isValidNewOption,\n    isValidNewOption = _ref$isValidNewOption === void 0 ? builtins.isValidNewOption : _ref$isValidNewOption,\n    _ref$getNewOptionData = _ref.getNewOptionData,\n    getNewOptionData = _ref$getNewOptionData === void 0 ? builtins.getNewOptionData : _ref$getNewOptionData,\n    onCreateOption = _ref.onCreateOption,\n    _ref$options = _ref.options,\n    propsOptions = _ref$options === void 0 ? [] : _ref$options,\n    propsOnChange = _ref.onChange,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var _restSelectProps$getO = restSelectProps.getOptionValue,\n    getOptionValue$1 = _restSelectProps$getO === void 0 ? getOptionValue : _restSelectProps$getO,\n    _restSelectProps$getO2 = restSelectProps.getOptionLabel,\n    getOptionLabel$1 = _restSelectProps$getO2 === void 0 ? getOptionLabel : _restSelectProps$getO2,\n    inputValue = restSelectProps.inputValue,\n    isLoading = restSelectProps.isLoading,\n    isMulti = restSelectProps.isMulti,\n    value = restSelectProps.value,\n    name = restSelectProps.name;\n  var newOption = useMemo(function () {\n    return isValidNewOption(inputValue, cleanValue(value), propsOptions, {\n      getOptionValue: getOptionValue$1,\n      getOptionLabel: getOptionLabel$1\n    }) ? getNewOptionData(inputValue, formatCreateLabel(inputValue)) : undefined;\n  }, [formatCreateLabel, getNewOptionData, getOptionLabel$1, getOptionValue$1, inputValue, isValidNewOption, propsOptions, value]);\n  var options = useMemo(function () {\n    return (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(_toConsumableArray(propsOptions)) : [].concat(_toConsumableArray(propsOptions), [newOption]) : propsOptions;\n  }, [allowCreateWhileLoading, createOptionPosition, isLoading, newOption, propsOptions]);\n  var onChange = useCallback(function (newValue, actionMeta) {\n    if (actionMeta.action !== 'select-option') {\n      return propsOnChange(newValue, actionMeta);\n    }\n    var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n    if (valueArray[valueArray.length - 1] === newOption) {\n      if (onCreateOption) onCreateOption(inputValue);else {\n        var newOptionData = getNewOptionData(inputValue, inputValue);\n        var newActionMeta = {\n          action: 'create-option',\n          name: name,\n          option: newOptionData\n        };\n        propsOnChange(valueTernary(isMulti, [].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newOptionData), newActionMeta);\n      }\n      return;\n    }\n    propsOnChange(newValue, actionMeta);\n  }, [getNewOptionData, inputValue, isMulti, name, newOption, onCreateOption, propsOnChange, value]);\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    options: options,\n    onChange: onChange\n  });\n}\n\nexport { useCreatable as u };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { S as Select } from '../../dist/Select-49a62830.esm.js';\nimport { u as useStateManager } from '../../dist/useStateManager-7e1e8489.esm.js';\nimport { u as useCreatable } from '../../dist/useCreatable-d97ef2c9.esm.js';\nexport { u as useCreatable } from '../../dist/useCreatable-d97ef2c9.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../../dist/index-a301f526.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\nimport 'memoize-one';\n\nvar CreatableSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var creatableProps = useStateManager(props);\n  var selectProps = useCreatable(creatableProps);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, selectProps));\n});\nvar CreatableSelect$1 = CreatableSelect;\n\nexport { CreatableSelect$1 as default };\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { isEmail, isLength, matches } from 'validator'\nimport NavBar from '../tools/NavBar'\nimport { getAccessToken } from './Auth'\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable'\nimport Loading from '../helpers/Loading'\n\n\nconst Register = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set loading for when registratino is done\n  const [loading, setloading] = useState(false)\n\n  // state to store the branches\n  const [branches, setBranches] = useState()\n  const [selectedCompany, setSelectedCompany] = useState(null)\n  const [companiesOptions, setCompaniesOptions] = useState([])\n\n\n  // function to laod the branches\n  const loadBranches = async () => {\n    try {\n      const url = '/api/branch_list/'\n\n      // extract data based on url\n      const { data } = await axios.get(url)\n      console.log('agent list ->', data)\n      setBranches(data)\n      const options = data.map(company => ({ value: company.id, label: company.branch_name }))\n      setCompaniesOptions(options)\n      console.log('company list ->', options)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  // loading the branches on render\n  useEffect(() => {\n    loadBranches()\n  }, [])\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    company_name: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    company_name: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    const { name, value } = e.target\n  \n    // If the input is for the email, convert it to lowercase\n    if (name === 'email') {\n      setRegisterData({ ...registerData, [name]: value.toLowerCase() })\n    } else {\n      setRegisterData({ ...registerData, [name]: value })\n    }\n  \n    // Real-time validation for password fields only\n    if (name === 'password') {\n      const passwordError = validatePassword(value)\n      setRegisterError({ ...registerError, password: passwordError })\n    } else if (name === 'password_confirmation') {\n      const passwordConfirmationError = value !== registerData.password ? 'Passwords don\\'t match' : ''\n      setRegisterError({ ...registerError, password_confirmation: passwordConfirmationError })\n    }\n  }\n\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    // Pre-submit validation for all fields except passwords\n    const newErrors = {\n      ...registerError,\n      first_name: registerData.first_name.length < 1 ? 'Add first name' : '',\n      last_name: registerData.last_name.length < 1 ? 'Add last name' : '',\n      company_name: registerData.company_name.length < 1 ? 'Add company' : '',\n      username: registerData.username.length < 1 ? 'Add username' : '',\n      email: isEmail(registerData.email) ? '' : 'Invalid email address',\n    }\n    setRegisterError(newErrors)\n\n    // Check if there are any new errors (excluding passwords as they are already checked in real-time)\n    const hasNewErrors = Object.values(newErrors).some(error => error !== '')\n\n    if (hasNewErrors) {\n      // Prevent form submission if there are new errors\n      return\n    }\n\n    // Proceed with form submission if there are no new errors\n    try {\n      setloading(true)\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', {\n        email: registerData.email,\n        password: registerData.password,\n      })\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      setRegisterData({})\n      navigate('/agents/profile')\n      setloading(false)\n    } catch (err) {\n      console.log(err)\n      setloading(false)\n      // Handle errors from the registration attempt, potentially setting more specific errors if your API provides them\n      setRegisterError({ ...registerError, post: 'Error registering account. Username or email may already exist.' })\n\n    }\n  }\n\n\n\n\n  // Function to handle company change or addition\n  const handleCompanyChange = (newValue, actionMeta) => {\n\n    setSelectedCompany(newValue)\n    const companyName = newValue ? newValue.label : ''\n    setRegisterData({ ...registerData, company_name: companyName })\n  }\n\n  const customStyles = {\n    control: (provided) => ({\n      ...provided,\n      fontSize: '0.8rem', // Adjust font size\n      fontFamily: 'Poppins',\n      color: '#FDF7F0', // This affects the input text color\n      borderColor: '#FDF7F0', // Adjust border color\n      borderRadius: '10px',\n      backgroundColor: '#1A276C',\n      padding: '0px 0px',\n      minHeight: '35px', // Reduce the minimum height\n\n      // height: '25px',\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      color: state.isSelected ? 'white' : '#333', // Adjust option text color\n      backgroundColor: state.isSelected ? '#1A276C' : 'white', // Adjust option background color\n      fontSize: '0.8rem', // Adjust font size\n      // padding: '0px 0px',\n\n      // Additional styles\n    }),\n    singleValue: (provided, state) => ({\n      ...provided,\n      color: '#FDF7F0', // This will correctly adjust the selected item text color\n      fontSize: '0.8rem', // Ensure consistency in font size\n      fontFamily: 'Poppins', // Ensure consistency in font family\n      padding: '0px 0px',\n\n    }),\n  }\n\n\n  return (\n    <>\n\n      <section className='login-page' id='register'>\n        {/* <section className='wrapper'> */}\n\n        <section className='login-content'>\n          {/* <div className='logo-section'>\n\n            <div className='wittle-logo' onClick={() => navigate('/')}></div>\n\n\n          </div> */}\n          {/* <form className='form-detail' onSubmit={registerSubmit} > */}\n          {loading ?\n            <Loading />\n            :\n            <>\n              <div className='register-title'>\n                <h1>Unlock the benefits of Wittle</h1>\n              </div><div className='register-section'>\n                {/* First name */}\n                <div className='login-input'>\n                  <h3>First name</h3>\n                  <input type='text' name='first_name' className='input' value={registerData.first_name} onChange={registerChange} />\n                  {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n                </div>\n                {/* Last namee */}\n                <div className='login-input'>\n\n                  <h3>Last name</h3>\n                  <input type='text' name='last_name' className='input' value={registerData.last_name} onChange={registerChange} />\n                  {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n                </div>\n\n\n\n                {/* Company */}\n                <div className='login-input'>\n                  <h3>Company</h3>\n                  <CreatableSelect\n                    isClearable\n                    onChange={handleCompanyChange}\n                    options={companiesOptions} // Assuming this is populated with existing company options\n                    value={selectedCompany}\n                    styles={customStyles} // Use your custom styles\n                    placeholder=\"Select or add a company...\"\n                    name='company_name' />\n                  {registerError.company_name && <p className=\"error\">* {registerError.company_name}</p>}\n                </div>\n\n                {/* Username */}\n                <div className='login-input'>\n\n                  <h3>Username</h3>\n\n                  <input type='text' name='username' className='input' value={registerData.username} onChange={registerChange} />\n                  {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n                </div>\n\n                {/* Email */}\n                <div className='login-input'>\n\n                  <h3>Email</h3>\n                  <input type='email' name='email' className='input' value={registerData.email} onChange={registerChange} />\n                  {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n                </div>\n\n                {/* Password */}\n                <div className='login-input'>\n\n                  <h3>Password</h3>\n\n\n                  <input type={registerPasswordType} name='password' className='password-input-register' value={registerData.password} onChange={registerChange} />\n\n\n                  {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n                </div>\n\n                {/* Password confirmation */}\n                <div className='login-input'>\n\n                  <h3>Confirm password</h3>\n\n                  <input type='password' name='password_confirmation' className='input' value={registerData.password_confirmation} onChange={registerChange} />\n                  {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n                </div>\n\n              </div><button type='submit' onClick={registerSubmit}>Register</button>\n              {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n            </>\n          }\n        </section>\n\n\n        {/* </section> */}\n      </section>\n    </>\n  )\n}\n\nexport default Register","import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/transparent-spinner.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading"],"names":["_excluded","compareOption","option","arguments","length","undefined","accessors","candidate","String","toLowerCase","optionValue","getOptionValue","optionLabel","getOptionLabel","builtins","formatCreateLabel","inputValue","concat","isValidNewOption","selectValue","selectOptions","some","getNewOptionData","label","value","__isNew__","CreatableSelect$1","forwardRef","props","ref","selectProps","_ref","_ref$allowCreateWhile","allowCreateWhileLoading","_ref$createOptionPosi","createOptionPosition","_ref$formatCreateLabe","_ref$isValidNewOption","_ref$getNewOptionData","onCreateOption","_ref$options","options","propsOptions","propsOnChange","onChange","restSelectProps","_objectWithoutProperties","_restSelectProps$getO","getOptionValue$1","_restSelectProps$getO2","getOptionLabel$1","isLoading","isMulti","name","newOption","useMemo","cleanValue","_toConsumableArray","useCallback","newValue","actionMeta","action","valueArray","Array","isArray","newOptionData","newActionMeta","valueTernary","_objectSpread","useCreatable","useStateManager","React","Select","_extends","Register","navigate","useNavigate","loading","setloading","useState","branches","setBranches","selectedCompany","setSelectedCompany","companiesOptions","setCompaniesOptions","useEffect","async","url","data","axios","get","console","log","map","company","id","branch_name","error","loadBranches","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","email","username","company_name","password","password_confirmation","first_name","last_name","registerError","setRegisterError","post","registerChange","e","target","passwordError","hasUppercase","matches","hasLowercase","hasDigit","hasSpecialChar","isLength","min","validatePassword","passwordConfirmationError","_jsx","_Fragment","children","className","Loading","_jsxs","type","CreatableSelect","isClearable","handleCompanyChange","companyName","styles","control","provided","fontSize","fontFamily","color","borderColor","borderRadius","backgroundColor","padding","minHeight","state","isSelected","singleValue","placeholder","onClick","preventDefault","newErrors","isEmail","token","Object","values","window","localStorage","setItem","err","src","require","alt"],"sourceRoot":""}