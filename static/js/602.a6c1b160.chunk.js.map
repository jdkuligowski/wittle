{"version":3,"file":"static/js/602.a6c1b160.chunk.js","mappings":"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","sources":["components/tools/ProfileMobileSlider.js","components/whiteLabel/propertyList.js/AIListingGenrator.js","../node_modules/react-switch/dist/index.prod.mjs"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport ReactSwitch from 'react-switch'\n\n\n\nconst AIListingGenrator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // Create a reference to the div\n  const textDivRef = useRef(null)\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n  \n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Listing generator')\n  const [profileDetail, setProfileDetail] = useState('Listing generator')  \n  \n  // lisrting options\n  const [listingSelection, setListingSelection] = useState('Property insights')\n  \n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n\n  const [aiReady, setAiReady] = useState(false)\n\n  // listing generator form\n  const [listingFields, setListingFields] = useState({\n    postcode: '',\n    description: '',\n    bedrooms: '',\n    bathrooms: '',\n    property_type: '',\n    tenure: '',\n    size: '',\n    on_road_parking: '',\n    off_road_parking: '',\n    balcony: '',\n    primary_schools: 0,\n    secondary_schools: 0,\n    tubes: 0,\n    trains: 0,\n    restaurants: 0,\n    pubs: 0,\n    supermarkets: 0,\n    gyms: 0,\n    parks: 0,\n    evs: 0,\n    crime: 0,\n  })\n\n\n  // ai listing fields\n  const [aiFields, setAiFields] = useState({ \n    'location': '',\n    'size': '',\n    'property_type': '',\n    'bedrooms': '',\n    'bathrooms': '',\n    'en_suites': '',\n    'amenities': [],\n    'channel': '',\n    'additional_info': '',\n    'price': '',\n    'restaurants': '',\n    'pubs': '',\n    'supermarkets': '',\n    'tube': '',\n    'trains': '',\n    'parks': '',\n    'evs': '',\n    'primary_schools': '',\n    'secondary_schools': '',\n    'gyms': '',\n  })\n\n  // features to include in checkbox: \n  const features = [\n    'balcony', 'on-road parking', 'off-road parking', \n    'private gated', 'private garage', 'shared garage', \n    'lift', 'open-plan', 'concierge', 'gym', \n    'pool & spa', 'penthouse', 'duplex', 'garden'\n  ]\n\n\n\n  // set state for user data\n  const [postcodeData, setPostcodes] = useState()\n\n  // set state for schools data\n  const [primaryData, setPrimaryData] = useState()\n  const [primaryData1, setPrimaryData1] = useState()\n  const [secondaryData, setSecondaryData] = useState()\n  const [secondaryData1, setSecondaryData1] = useState()\n\n  // additional scvhool states\n  const [topPrimaries, setTopPrimaries] = useState()\n  const [topSecondaries, setTopSecondaries] = useState()\n\n  // set states for lifestyle information\n  const [restaurants, setRestaurants] = useState()\n  const [gyms, setGyms] = useState()\n  const [pubs, setPubs] = useState()\n  const [supermarkets, setSupermarkets] = useState()\n  const [ev, setEv] = useState()\n\n  // set states for first calculations\n  const [restaurants1, setRestaurants1] = useState()\n  const [gyms1, setGyms1] = useState()\n  const [pubs1, setPubs1] = useState()\n  const [supermarkets1, setSupermarkets1] = useState()\n  const [ev1, setEv1] = useState()\n\n  // additional restaurant states\n  const [cuisines, setCuisines] = useState()\n  const [topRestaurants, setTopRestaurants]  = useState([])\n  const [topPubs, setTopPubs] = useState([])\n\n  // additional gym states\n  const [mainGyms, setMainGyms] = useState([])\n\n  // additional supermarket states\n  const [mainSupermarkets, setMainSupermarkets] = useState([])\n\n  // set states for lifestyle information\n  const [tubes, setTubes] = useState()\n  const [trains, setTrains] = useState()\n\n  // set states for first calculations\n  const [tubes1, setTubes1] = useState()\n  const [trains1, setTrains1] = useState()\n\n  const [aiSearch, setAiSearch] = useState()\n\n  // start ai seearch\n  const [searchGo, setSearchGo] = useState(false)\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          // console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n  \n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n  // ? Section 2: Load postcode and user data\n  const loadPostcodeData = async (listingType) => {\n    try {\n\n      // if its an ai load, then we need to set a state to organise the loading of the dataset\n      if (listingType === 'listing_ai_total') {\n        setAiReady(false) // Before loading the data for AI\n      }\n\n      // we need to access the postcode data in all eventualities\n      const { data } = await axios.post('/api/postcodes/', { postcode: postcodeSubstring })\n      // console.log('postcode data ->', data)\n      setPostcodes(data)\n\n      increaseUsageCount(listingType) // Pass the listing type to the increaseUsageCount function\n\n      // if the postcode data arrives and its an ai search, we want to load the rest of the data\n      if (listingType === 'listing_ai_total') {\n        setSearchGo(true)\n      }\n\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  // set distance\n  const walkDistanceKm20 = 5 * (20 / 60) // updated for 20 mins\n  \n  const R = 6371 // Radius of the earth in km\n  const toRad = (value) => value * Math.PI / 180 // Convert degrees to radians\n  const kmPerMinute = 5 / 60 // average walking speed is 5 km per hour\n    \n\n\n  // ? Section 3: Load primaries data\n  const loadPrimaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getPrimaries = async () => {\n        const { data } = await axios.get('/api/primaries/')\n        // console.log('primaries data ->', data)\n        setPrimaryData(data)\n        // function for restaurants with least walking distance\n        // filter out restaurants firther than 20 mins walk away and add distanceKm and walkTimeMin to each item\n        const nearbyPrimaries = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n              Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n              Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n              Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n        \n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n      \n          // logic to determine whether school is in the catchment area\n          const distancePercent = distanceKm / item.max_distance\n      \n          // handle independent schools\n          if (item.school_type ===  'Independent school') {\n            item.within_catchment =  'N/a'\n      \n            // handle special schools\n          } else if (item.school_type === 'Special school') {\n            item.within_catchment = 'N/a'\n          } else if (item.max_distance === 'On request') {\n            item.within_catchment = 'N/a'\n      \n            // handle schools with a map catchment\n          } else if (item.additional_status === 'Based on map') {\n            item.within_catchment = 'Check catchment map'\n      \n            // handle schools that have religioius requirement and have no distane measurement\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.6) {\n            item.within_catchment = 'Very likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.8) {\n            item.within_catchment = 'Likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 1) {\n            item.within_catchment = 'Probably if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n            item.within_catchment = 'Unlikely, even if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n            item.within_catchment = 'Very unlikely, even if religious critera met'\n      \n            // handle schools that have not specified their catchment\n          } else if (item.max_distance === 'Not specified' & item.distance_between < 0.4) {\n            item.within_catchment = 'Very likely but no distance specified'\n          } else if (item.max_distance === 'Not specified' & item.distance_between < 0.7) {\n            item.within_catchment = 'Likely but no distance specified'\n          } else if (item.max_distance === 'Not specified' & item.distance_between < 1) {\n            item.within_catchment = 'Probably but no distance specified'\n          } else if (item.max_distance === 'Not specified' & item.distance_between > 1) {\n            item.within_catchment = 'Unlikely, but no distance specified'\n            \n            // handle schools that have not been incliuded in the catchment extract\n          } else if (item.max_distance === null & item.distance_between < 0.6) {\n            item.within_catchment = 'Very likely, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between < 0.8) {\n            item.within_catchment = 'Likely, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between < 1) {\n            item.within_catchment = 'Probably, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between < 1.5) {\n            item.within_catchment = 'Unlikely, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between > 1.5) {\n            item.within_catchment = 'Very unlikely, but no distance data available'\n      \n            // handle schools with actual distance measurements\n          } else if (distancePercent <= 0.6) {\n            item.within_catchment = 'Yes'\n          } else if (distancePercent <= 0.8) {\n            item.within_catchment = 'Very likely'\n          } else if (distancePercent <= 1.0) {\n            item.within_catchment = 'Probably'\n          } else if (distancePercent <= 1.2) {\n            item.within_catchment = 'Probably not'\n      \n            // handle schools that have no catchment\n          } else if (item.max_distance === 'Does not apply') {\n            item.within_catchment = 'Yes'\n            \n            // handle any other schools\n          } else {\n            item.within_catchment = 'No'\n          }\n          \n          return distanceKm <= walkDistanceKm20\n      \n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n      \n        const firstSchoolNames = nearbyPrimaries.slice(0, 8)\n      \n        setTopPrimaries(firstSchoolNames)\n        setPrimaryData1(nearbyPrimaries)\n      }\n      getPrimaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n  \n  \n  // load primary data\n  useEffect(() =>{\n    if (postcodeData && listingFields.primary_schools === 1) {\n      loadPrimaryData()\n    }\n  }, [postcodeData])\n\n\n\n  // function for restaurants with least walking distance\n\n  const walkDistanceKm30 = 5 * (30 / 60) // updated for 20 mins\n\n  // ? Section 4: Load secondary school data  \n  const loadSecondaryData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getSecondaries = async () => {\n        const { data } = await axios.get('/api/secondaries/')\n        // console.log('secondaries data ->', data)\n        setSecondaryData(data)\n\n        const nearbySecondaries = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n      \n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n    \n          // logic to determine whether school is in the catchment area\n          const maxDistancePercent = distanceKm / item.max_distance\n          const minDistancePercent = distanceKm / item.min_distance\n    \n          // handle independent schools, special schools and examination requirements\n          if (item.school_type.includes('independent')) {\n            item.within_catchment = 'N/a'\n          }  else if (item.school_type.includes('special')) {\n            item.within_catchment = 'N/a'\n          } else if (item.max_distance === 'Exam' || item.max_distance === 'Test score') {\n            item.within_catchment = 'Dependent on test results'\n          } else if (item.max_distance === 'Random') {\n            item.within_catchment = 'Random selection based on performance'\n          } else if (item.max_distance === 'Catchment score') {\n            item.within_catchment = 'School uses catchment score - check'\n    \n          // handle schools with a map catchment\n          } else if (item.max_distance === 'Based on map') {\n            item.within_catchment = 'Check catchment map'\n    \n          // handle schools with religious requirements and no specified distance\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.7) {\n            item.within_catchment = 'Very likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.9) {\n            item.within_catchment = 'Likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n            item.within_catchment = 'Probably if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n            item.within_catchment = 'Unlikely, even if religious critera met'\n    \n          // handle schools without a catchment\n          } else if (item.max_distance === 'Does not apply') {\n            item.within_catchment = 'Yes'\n    \n          // handle schools with a lower and an upper catchment\n          } else if (item.min_distance !== null & minDistancePercent <= 1) {\n            item.within_catchment = 'Yes'\n          } else if (item.min_distance !== null & maxDistancePercent <= 0.5) {\n            item.within_catchment = 'Very likely'\n          } else if (item.min_distance !== null & maxDistancePercent <= 0.7) {\n            item.within_catchment = 'Probably'\n    \n          // handle schools with only uppeer catchment\n          } else if (maxDistancePercent <= 0.6) {\n            item.within_catchment = 'Yes'\n          } else if (maxDistancePercent <= 0.8) {\n            item.within_catchment = 'Very likely'\n          } else if (maxDistancePercent <= 1.0) {\n            item.within_catchment = 'Probably'\n          } else if (maxDistancePercent <= 1.2) {\n            item.within_catchment = 'Probably not'\n          } else {\n            item.within_catchment = 'No'\n          }\n        \n          return distanceKm <= walkDistanceKm30\n    \n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n    \n        const firstSchoolNames = nearbySecondaries.slice(0, 8)\n    \n    \n        setTopSecondaries(firstSchoolNames)\n        setSecondaryData1(nearbySecondaries)\n    \n        // console.log('nearby secondaries ->', nearbySecondaries)\n\n        const secondaryPercentile = 100 - Math.ceil(100 * postcodeData[0].secondaries.total_score_percentile)\n\n        setAiFields(prevState => {\n          let schoolText\n          if (secondaryPercentile <= 10) {\n            schoolText = `In top 10% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else if (secondaryPercentile <= 20) {\n            schoolText = `In top 20% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else if (secondaryPercentile <= 30) {\n            schoolText = `In top 30% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else if (secondaryPercentile <= 50) {\n            schoolText = `In top 50% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else {\n            schoolText = 'Not specified'\n          }      \n          return {\n            ...prevState,\n            secondary_schools: schoolText,\n          }\n        })\n      \n      }\n      await getSecondaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.secondary_schools === 1) {\n      loadSecondaryData()\n    }\n  }, [postcodeData])\n\n\n\n\n  // ? Section 5: Load and sort restaurant data\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n  const walkDistanceKm15 = 5 * (15 / 60)\n  \n  const loadRestaurantData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/restaurants/')\n        // console.log('restaurant data ->', data)\n        setRestaurants(data)\n\n        const nearbyRestaurants = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n    \n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n      \n          return distanceKm <= walkDistanceKm15\n        }).sort((a, b) => b.rating - a.rating)\n        \n        // count the number of cuisines in the area\n        const countUniqueCuisines = (restaurants) => {\n          const cuisines = new Set(restaurants.map(restaurant => restaurant.cuisine))\n          return cuisines.size\n        }\n\n        const cuisinesSize = countUniqueCuisines(nearbyRestaurants)\n\n    \n        // extract the top 3 restaurants\n        const topThreeRestaurants = nearbyRestaurants\n          .filter(restaurant => restaurant.cuisine !== 'No Cuisine Data')\n          .slice(0, 3)\n          .map(restaurant => restaurant.restaurant_name)\n    \n        setCuisines(cuisinesSize)\n        setRestaurants1(nearbyRestaurants)\n        setTopRestaurants(topThreeRestaurants)\n        // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n        // console.log('Nearby restaurants ->', nearbyRestaurants)\n        // console.log('Top restaurants ->', topThreeRestaurants)\n        if (listingFields.restaurants === 1) {\n          setAiFields(prevState => ({ \n            ...prevState, \n            restaurants: `${nearbyRestaurants.length} restaurants within 15 min walk, with more than ${cuisinesSize} cuisines available`  }))\n        }\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (postcodeData && listingFields.restaurants === 1) {\n      loadRestaurantData()\n    }\n  }, [postcodeData])\n\n\n\n\n\n  // ? Section 6: Load and sort fitness data\n  const loadFitnessData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/gyms/')\n        console.log('gyms data ->', data)\n        setGyms(data)\n\n\n        const specificGyms = ['third space', 'pure gym', '1 rebel', 'virgin', 'barry\\'s', 'the gym group']\n        const uniqueGyms = new Set() // Used to store unique gym names\n    \n    \n        \n        // filter out restaurants firther than 15 mins walk away\n        const nearbyStudios = data.filter(item => {\n          const dLat = toRad(parseFloat(item.Lat) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n          const a = \n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.Lat))) * \n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n      \n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n    \n          return distanceKm <= walkDistanceKm15\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n        \n        // extract the key studios\n        const topThreeStudios = []\n\n        for (let i = 0; i < nearbyStudios.length; i++) {\n          const gym = nearbyStudios[i]\n          if (gym.gym_group && gym.gym_group.toLowerCase() !== 'other' && !uniqueGyms.has(gym.gym_group)) {\n            topThreeStudios.push(gym.gym_group)\n            uniqueGyms.add(gym.gym_group)\n                \n            if (topThreeStudios.length === 3) {\n              break\n            }\n          }\n        }\n    \n        setGyms1(nearbyStudios)\n        setMainGyms(topThreeStudios)\n        // console.log('nearby gyms ->', nearbyStudios)\n        // console.log('top 3 gyms ->', topThreeStudios)\n\n        if (listingFields.gyms === 1) {\n          setAiFields(prevState => ({ \n            ...prevState, \n            gyms: `${nearbyStudios.length} gyms within 15 min walk, including ${topThreeStudios[0]}, ${topThreeStudios[1]} and ${topThreeStudios[2]}`  }))\n        }\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.gyms === 1) {\n      loadFitnessData()\n    }\n  }, [postcodeData])\n\n\n\n  // ? Section 7: Load and sort supermarket data\n  const loadSupermarketData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/supermarkets/')\n        // console.log('supermarkets data ->', data)\n        // setSupermarkets(data)\n\n        const specificSupermarkets = ['m&s', 'waitrose', 'aldi', 'lidl', 'sainsburys', 'tesco', 'asda']\n        const uniqueSupermarkets = new Set() // Used to store unique gym names\n\n\n    \n        // filter out restaurants firther than 15 mins walk away\n        const allSupermarkets = data.map(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n        Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n  \n          return { ...item, distance: distanceKm }\n        })\n\n        const nearbySupermarkets = allSupermarkets\n          .filter(item => item.distance <= walkDistanceKm15)\n    \n        // extract the key studios\n        const topThreeSupermarkets = []\n  \n        for (let i = 0; i < nearbySupermarkets.length; i++) {\n          const supermarket = nearbySupermarkets[i]\n          if (specificSupermarkets.includes(supermarket.supermarket_brand.toLowerCase()) && !uniqueSupermarkets.has(supermarket.supermarket_brand)) {\n            topThreeSupermarkets.push(supermarket.supermarket_brand)\n            uniqueSupermarkets.add(supermarket.supermarket_brand)\n        \n            if (topThreeSupermarkets.length === 3) {\n              break\n            }\n          }\n        } \n        setSupermarkets1(nearbySupermarkets)\n        setMainSupermarkets(topThreeSupermarkets)\n        // console.log('Nearby supermarkets ->', nearbySupermarkets)\n        // if (listingFields.supermarkets === 1) {\n        setAiFields(prevState => ({ \n          ...prevState, \n          supermarkets: `${nearbySupermarkets.length} supermarkets within 15 min walk, including ${topThreeSupermarkets[0]}, ${topThreeSupermarkets[1]} and ${topThreeSupermarkets[2]}`  }))\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.supermarkets === 1) {\n      loadSupermarketData()\n    }\n  }, [postcodeData])\n\n\n  \n\n  // ? Section 8: Load and sort tubes data\n  const loadTubesData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/tubes/')\n\n    \n        // filter out restaurants firther than 15 mins walk away\n        const nearbyTubes = data.filter(item => {\n          const dLat = toRad(parseFloat(item.lat) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n          const a = \n              Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n              Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.lat))) * \n              Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n      \n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n        \n          return distanceKm <= walkDistanceKm20\n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n          \n        setTubes1(nearbyTubes)\n        console.log('Nearby tubes ->', nearbyTubes)\n\n        // Get a list of tube stations with no duplicates.\n        const uniqueStations = [...new Set(nearbyTubes.map(tube => tube.station_name))]\n\n        // Count the number of distinct lines.\n        const lineCounts = nearbyTubes.reduce((acc, tube) => {\n          acc[tube.line] = (acc[tube.line] || 0) + 1\n          return acc\n        }, {})\n\n        const distinctLineCount = Object.keys(lineCounts).length\n\n        // console.log('Unique Stations:', uniqueStations)\n        // console.log('Number of Distinct Lines:', distinctLineCount)\n\n        setAiFields(prevState => ({ \n          ...prevState, \n          tube: `${uniqueStations.length} within 20 min walk, across ${distinctLineCount} line, including ${uniqueStations[0]} and ${uniqueStations[1]}`  }\n        ))\n          \n      \n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.tubes === 1) {\n      loadTubesData()\n    }\n  }, [postcodeData])\n\n\n  // Average walking speed is 5km/h. \n  const walkDistanceKm10 = 5 * (10 / 60)\n\n\n  // ? Section 9: Load and sort EV data\n  const loadEVdata = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/evs/')\n        // console.log('ev data ->', data)\n        setEv(data)\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyChargers = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n          Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm10\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n        setEv1(nearbyChargers)\n\n        const EVPercentile = Math.round((1 - postcodeData[0].ev.percentile) * 100)\n\n\n        setAiFields(prevState => ({ \n          ...prevState, \n          evs: `${nearbyChargers.length} within 10 min walk${EVPercentile < 30 ? `, which is in the top ${EVPercentile}% of areas in London for EV access` : ''}`, \n        }))\n      \n      }\n      \n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.evs === 1) {\n      loadEVdata()\n    }\n  }, [postcodeData])\n\n\n\n\n\n  // ? Section 10: Load in pubs data\n  const loadPubsData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/pubs/')\n        // console.log('pub data ->', data)\n        setPubs(data)\n\n        const nearbyPubs = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n    \n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n      \n          return distanceKm <= walkDistanceKm15\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n      \n    \n        // extract the top 3 restaurants\n        const topThreePubs = nearbyPubs\n          .slice(0, 3)\n          .map(pub => pub.name)\n    \n        setPubs1(nearbyPubs)\n        setTopPubs(topThreePubs)\n        // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n        // console.log('Nearby pubs ->', nearbyPubs)\n        setAiFields(prevState => ({ \n          ...prevState, \n          pubs: `${nearbyPubs.length} within 15 min walk, including ${topThreePubs[0]} and ${topThreePubs[1]}, which are well rated`  }\n        ))\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.pubs === 1) {\n      loadPubsData()\n    }\n  }, [postcodeData])\n\n\n\n  // ? Section 11: Load and sort tubes data\n  const loadTrainsData = async () => {\n  // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/trains/')\n        // console.log('trains data ->', data)\n        setTrains(data)\n\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyTrains = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a = \n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) * \n          Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm20\n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n  \n\n        setTrains1(nearbyTrains)\n        // console.log('Nearby trains ->', nearbyTrains)\n        setAiFields(prevState => ({ \n          ...prevState, \n          trains: `${nearbyTrains.length} within 20 min walk, including ${nearbyTrains[0].station} and ${nearbyTrains[1].station}`  }\n        ))\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.trains === 1) {\n      loadTrainsData()\n    }\n  }, [postcodeData])\n\n\n  // ? Section 12: Sort out the parks data\n  // parks data is already laodd from the postcode array, but we want to add it to the AI object\n  const loadParks = () => {\n    const parkPercentile = 100 - postcodeData[0].parks_lsoa[0].london_percentile\n\n    setAiFields(prevState => ({ \n      ...prevState, \n      parks: `${parkPercentile <= 10 ? 'In top 10% of areas in London for access to green space, with ' : \n        parkPercentile <= 20 ? 'In top 20% of areas in London for access to green space, with ' : \n          parkPercentile <= 30 ? 'In a very good area of London for access to green space, with ' : \n            parkPercentile <= 60 ? 'In a good area of London for access to green space, with' : 'In an OK area of London for access to green space, with ' } ${postcodeData[0].parks_postcode.park_name0} and ${postcodeData[0].parks_postcode.park_name1} nearby`  }\n    ))\n  }\n\n  useEffect(() =>{\n    if (postcodeData && listingFields.parks === 1) {\n      loadParks()\n    }\n  }, [postcodeData])\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setListingFields(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === 1 ? 0 : 1,\n    }))\n  }\n\n\n  // Copy function\n  const handleCopyText = () => {\n    const text = textDivRef.current.innerText\n\n    // Copy text to clipboard\n    const textarea = document.createElement('textarea')\n    textarea.value = text\n    document.body.appendChild(textarea)\n    textarea.select()\n    document.execCommand('copy')\n    document.body.removeChild(textarea)\n  }\n\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async (listingType) => {\n    console.log('trying to increase')\n    try {\n      const { data } = await axios.post('/api/usage/listing/', { column: listingType }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log(data)\n      if (data.status === 'success') {\n        console.log('Usage count increased successfully')\n      } else {\n        console.error('Failed to increase usage count:', data.message)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n    }\n  }\n\n  // move to insights page\n  const insightLoad = () => {\n    increaseUsageCount()\n    navigate(`/agents/property/${postcodeSubstring}`)\n  }\n\n\n\n  const handleCheckboxChange = (feature) => {\n    setAiFields(prev => {\n      // Check if the feature is already in the amenities array\n      if (prev.amenities.includes(feature)) {\n        // If it is, remove it\n        return { \n          ...prev, \n          amenities: prev.amenities.filter(a => a !== feature),\n        }\n      } else {\n        // If it isn’t, add it\n        return { \n          ...prev, \n          amenities: [...prev.amenities, feature],\n        }\n      }\n    })\n  }\n\n\n  // state for ai text\n  const [generatedText, setGeneratedText] = useState()\n\n  const loadAI = async (e) => {\n    try {\n\n      // console.log('in ai loader')\n\n      // Using Axios\n      // console.log('ai selection ->', aiFields)\n      // console.log('listing selections ->', listingFields)\n      const { data } = await axios.post('/api/generate_listing/generate_text/', { details: aiFields })\n        \n      // console.log('ai text ->', data.message)\n\n      setGeneratedText(data.message)\n    } catch (error) {\n      console.error('Error fetching data: ', error)\n      // Handle error appropriately in UI\n    }\n  }\n\n\n  useEffect(() => {\n    if (postcodeData && \n      searchGo && \n      ((aiFields.supermarkets !== '' && listingFields.supermarkets === 1) || (listingFields.supermarkets === 0)) &&\n      ((aiFields.tube !== '' && listingFields.tubes === 1) || (listingFields.tubes === 0)) &&\n      ((aiFields.trains !== '' && listingFields.trains === 1) || (listingFields.trains === 0)) &&\n      ((aiFields.gyms !== '' && listingFields.gyms === 1) || (listingFields.gyms === 0)) &&\n      ((aiFields.restaurants !== '' && listingFields.restaurants === 1) || (listingFields.restaurants === 0)) &&\n      ((aiFields.pubs !== '' && listingFields.pubs === 1) || (listingFields.pubs === 0)) &&\n      ((aiFields.evs !== '' && listingFields.evs === 1) || (listingFields.evs === 0)) &&\n      ((aiFields.parks !== '' && listingFields.parks === 1) || (listingFields.parks === 0)) &&\n      ((aiFields.secondary_schools !== '' && listingFields.secondary_schools === 1) || (listingFields.secondary_schools === 0))) {\n      // console.log('in use effect')\n      setSearchGo(false)\n\n      loadAI()\n\n    }\n  }, [postcodeData, aiFields, searchGo])\n  \n\n\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          setProfileContent={setProfileContent} \n          userData={userData}\n        />    \n        {userData && \n                  ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].listing_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].listing_monthly_count < 101)) ?\n          <section className='listing-generator'> \n            {/* <h1>Wittle listing generator</h1> */}\n            {/* <h1>Insert your property details to build a listing or explore insights</h1> */}\n\n            <div className='listing-wrapper'>\n\n              <div className='insight-inputs'>\n\n\n                <>\n                  <h3>Input details and select features you want to include your listing</h3>\n                  <div className='input-block'>\n                    <h3>📍 Postcode</h3>\n                    <input\n                      type=\"text\"\n                      value={postcodeSubstring}\n                      onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                      placeholder=\"Enter postcode...\"></input>\n                  </div>\n                  <div className='input-block'>\n                    <h3>📍 Location</h3>\n                    <input\n                      type=\"text\"\n                      value={aiFields.location}\n                      onChange={e => setAiFields(prevState => ({ ...prevState, location: e.target.value }))}\n                      placeholder=\"Enter location...\"\n                    ></input>\n                  </div>\n                  <div className='input-block'>\n                    <h3>🌍 Size</h3>\n                    <input\n                      type=\"number\"\n                      value={aiFields.size}\n                      onChange={e => setAiFields(prevState => ({ ...prevState, size: e.target.value }))}\n                      placeholder=\"Enter size in sq.ft...\"\n                    ></input>\n                  </div>\n                  <div className='input-block'>\n                    <h3>🛌 Bedrooms</h3>\n                    <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, bedrooms: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option value={0}>Studio</option>\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option>\n                      <option>7</option>\n                    </select>\n                  </div>\n                  <div className='input-block'>\n                    <h3>🛁 Bathrooms</h3>\n                    <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, bathrooms: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option>0</option>\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                      <option>4</option>\n                      <option>5</option>\n                      <option>6</option>\n                      <option>7</option>\n                    </select>\n                  </div>\n                  <div className='input-block'>\n                    <h3>🏡 Property type</h3>\n                    <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, property_type: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option>Flat</option>\n                      <option>Bungalow</option>\n                      <option>Terraced house</option>\n                      <option>Semi-detached house</option>\n                      <option>Detached house</option>\n                    </select>\n                  </div>\n                  <div className='input-block' >\n                    <h3>🏷 Channel</h3>\n                    <select className='listing-dropdown'onChange={e => setAiFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option>Sales</option>\n                      <option>Rental</option>\n                    </select>\n                  </div>\n                  <div className='input-block' >\n                    <h3>✍🏼 Additional info</h3>\n                    {aiFields.channel === 'Rental' ? \n                      <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, additional_info: e.target.value }))}>\n                        <option>--- Select ---</option>\n                        <option>Furnished</option>\n                        <option>Unfurnished</option>\n                        <option>Part furnished</option>\n                        <option>Furnished or unfurnished</option>\n                      </select>\n                      :\n                    // aiFields.channel === 'Sales' \n                      <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, additional_info: e.target.value }))}>\n                        <option>--- Select ---</option>\n                        <option>Freehold</option>\n                        <option>Share of Freehold</option>\n                        <option>Leasehold</option>\n                      </select>\n                    }\n                  </div>\n                  <div className='input-block' onChange={e => setAiFields(prevState => ({ ...prevState, price: e.target.value }))}>\n                    <h3>💷 Price</h3>\n                    <input\n                      type=\"number\"\n                      value={aiFields.price}\n                      onChange={e => setAiFields(prevState => ({ ...prevState, price: e.target.value }))}\n                      placeholder=\"Enter price...\"\n                    ></input>\n                  </div>\n\n                  <div className='input-block' id='features'>\n                    <h3>Feature Selector</h3>\n                    <div className='feature-section'>\n                      {features.map(feature => (\n                        <div key={feature}>\n                          <label>\n                            <input className='checkbox'\n                              type=\"checkbox\"\n                              checked={aiFields.amenities.includes(feature)}\n                              onChange={() => handleCheckboxChange(feature)}\n                            />\n                            {feature}\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                    \n                  <h3 className='lifestyle-indicator'>Lifestyle elements to include</h3>\n                  <div className='input-block'>\n                    <h3>👶 Primary schools</h3>\n                    <ReactSwitch\n                      checked={listingFields.primary_schools === 1}\n                      onChange={() => toggleStatus('primary_schools')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🎓 Secondary schools</h3>\n                    <ReactSwitch\n                      checked={listingFields.secondary_schools === 1}\n                      onChange={() => toggleStatus('secondary_schools')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🚇 Tubes</h3>\n                    <ReactSwitch\n                      checked={listingFields.tubes === 1}\n                      onChange={() => toggleStatus('tubes')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🚈 Trains</h3>\n                    <ReactSwitch\n                      checked={listingFields.trains === 1}\n                      onChange={() => toggleStatus('trains')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>⛽️ Electric vehicles</h3>\n                    <ReactSwitch\n                      checked={listingFields.evs === 1}\n                      onChange={() => toggleStatus('evs')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🍽 Restaurants</h3>\n                    <ReactSwitch\n                      checked={listingFields.restaurants === 1}\n                      onChange={() => toggleStatus('restaurants')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🍺 Pubs</h3>\n                    <ReactSwitch\n                      checked={listingFields.pubs === 1}\n                      onChange={() => toggleStatus('pubs')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🌳 Parks</h3>\n                    <ReactSwitch\n                      checked={listingFields.parks === 1}\n                      onChange={() => toggleStatus('parks')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🏋️‍♂️ Gyms</h3>\n                    <ReactSwitch\n                      checked={listingFields.gyms === 1}\n                      onChange={() => toggleStatus('gyms')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  <div className='input-block'>\n                    <h3>🛒 Supermarkets</h3>\n                    <ReactSwitch\n                      checked={listingFields.supermarkets === 1}\n                      onChange={() => toggleStatus('supermarkets')}\n                      onColor='#ED6B86'\n                      offColor='#051885'  \n                    />\n                  </div>\n                  {/* <div className='input-block'>\n                  <h3>🚔 Crime</h3>\n                  <ReactSwitch\n                    checked={listingFields.crime === 1}\n                    onChange={() => toggleStatus('crime')}\n                    onColor='#ED6B86'\n                    offColor='#051885'  \n                  />\n                </div> */}\n\n                  <button onClick={() => loadPostcodeData('listing_ai_total')}>Load description</button>\n\n                  \n                  \n                  \n                </>\n\n\n\n\n\n\n              </div>\n              <div className='insight-inputs'>\n                {postcodeData ? \n                  <div className='results-header'>\n                    <h3 className='results-title'>Your listing</h3>\n                    <h3 onClick={handleCopyText} className='copy-button'>📑</h3>\n                  </div>\n                  : '' }\n\n                <div className='input-block' ref={textDivRef}>\n                  <div className='results-box' name=\"description\">\n                    {/* Description title */}\n                    {postcodeData && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h1>Key information</h1>\n                          <h5>📍 Address: {aiFields.location}</h5>\n                          <h5>💷 Price: £{aiFields.price}</h5>\n                          <h5>🌍 Size: {aiFields.size} sq.ft</h5>\n                        </div>\n                      </>\n\n                      : '' }\n                    {postcodeData && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h1>About this property</h1>\n                          <p>{generatedText}</p>\n                        </div>\n                      </>\n\n                      : '' }\n                    {postcodeData && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h1>Key features</h1>\n                          <ul>\n                            {aiFields.amenities.map((amenity, index) => (\n                              <li key={index}>{amenity}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      </>\n\n                      : '' }\n\n\n\n                    {/* Lifestyle */}\n                    {postcodeData && generatedText  ? \n                      <h1>What you should know about this area</h1>\n                      : '' }\n                    {/* Restaurants */}\n                    {restaurants1 && listingFields.restaurants === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h4>Restaurants</h4>\n                          <h5>🍽 {restaurants1.length} restaurants within 15 mins walk</h5>\n                          <h5>🍽 more than {cuisines} cuisines available</h5>\n                          <h5>🍽 {topRestaurants[0]}, {topRestaurants[1]} & {topRestaurants[2]} are well rated</h5>\n                        </div>\n                      </>\n                      : '' }\n                    {/* Pubs */}\n                    {pubs1 && listingFields.pubs === 1 && generatedText  ? \n                      <>\n                        <div className='lifestyle-block'>\n\n                          <h4>Pubs</h4>\n                          <h5>🍺 {pubs1.length} pubs within 15 mins walk</h5>\n                          <h5>🍺 {topPubs[0]}, {topPubs[1]} & {topPubs[2]} are well rated</h5>\n                        </div>\n                      </>\n                      : '' }\n                    {/* Gyms */}\n                    {gyms1 && listingFields.gyms === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n\n                          <h4>Gyms</h4>\n                          <h5>🏋️‍♂️ {gyms1.length} gyms within 15 mins walk</h5>\n                          {mainGyms.length === 3 ? <h5>🏋️‍♂️ includes {mainGyms[0]}, {mainGyms[1]} & {mainGyms[2]}</h5> : mainGyms.length === 2 ? <h5>🏋️‍♂️ includes {mainGyms[0]} & {mainGyms[1]} </h5> : mainGyms.length === 1 ? <h5>🏋️‍♂️ includes {mainGyms[0]}</h5> : '' }\n                        </div>\n                      </>\n                      : '' }\n                    {/* Supermarkets */}\n                    {supermarkets1 && listingFields.supermarkets === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n\n                          <h4>Supermarkets</h4>\n                          <h5>🛒 {supermarkets1.length} supermarkets within 15 mins walk</h5>\n                          {mainSupermarkets.length === 3 ? <h5>🛒 includes {mainSupermarkets[0]}, {mainSupermarkets[1]} & {mainSupermarkets[2]}</h5> : mainSupermarkets.length === 2 ? <h5>🛒 includes {mainSupermarkets[0]} & {mainSupermarkets[1]} </h5> : mainSupermarkets.length === 1 ? <h5>🛒 includes {mainSupermarkets[0]}</h5> : '' }\n                        </div>\n                      </>\n                      : '' }\n                    {/* Tubes */}\n                    {tubes1 && listingFields.tubes === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h4>Tube stations</h4>\n                          <h5>🚇 {tubes1.length} stations within 20 mins walk</h5>\n                          {\n                            tubes1.slice(0, 5).map((train, index) => (\n                              <h5 key={index}>🚇 {train.station_name} - {train.line} - {train.walkTimeMin} mins walk</h5>\n                            ))\n                          }\n                        </div>\n                      </>\n                      : '' }\n                    {/* Trains */}\n                    {trains1 && listingFields.trains === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h4>Train stations</h4>\n                          <h5>🚈 {trains1.length} stations within 20 mins walk</h5>\n                          {\n                            trains1.slice(0, 5).map((train, index) => (\n                              <h5 key={index}>🚈 {train.station} - {train.walkTimeMin} mins walk</h5>\n                            ))\n                          }\n                        </div>\n                      </>\n                      : '' }\n                    {/* Parks */}\n                    {postcodeData && listingFields.parks === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h4>Green space</h4>\n                          <h5>🌳 within top {100 - postcodeData[0].parks_lsoa[0].london_percentile}% of areas in london for access to greenspace</h5>\n                          <h5>🌳 {postcodeData[0].parks_postcode.park_name0} - {Math.ceil((((postcodeData[0].parks_postcode.distance0) / 1000) / 5) * 60)} mins walk</h5>\n                          <h5>🌳 {postcodeData[0].parks_postcode.park_name1} - {Math.ceil((((postcodeData[0].parks_postcode.distance1) / 1000) / 5) * 60)} mins walk</h5>\n                          <h5>🌳 {postcodeData[0].parks_postcode.park_name2} - {Math.ceil((((postcodeData[0].parks_postcode.distance2) / 1000) / 5) * 60)} mins walk</h5>\n                        </div>\n                      </>\n                      : '' }\n                    {/* EVs */}\n                    {postcodeData && listingFields.evs === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h4>Electric vehicles</h4>\n                          <h5>🚇 {postcodeData[0].ev.ev_10_mins} charging points within 10 mins walk</h5>\n                          <h5>🚇 in the top {Math.round((1 - postcodeData[0].ev.percentile) * 100)}% of areas in London for ev charging access</h5>\n                        </div>\n                      </>\n                      : '' }\n                    {/* Primary schools */}\n                    {primaryData1 && listingFields.primary_schools === 1 && generatedText ? \n                      <>\n                        <div className='lifestyle-block'>\n                          <h4>Primary schools</h4>\n                          {\n                            primaryData1.slice(0, 5).map((school, index) => (\n                              <h5 key={index}>👶 {school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</h5>\n                            ))\n                          }\n                        </div>\n                      </>\n                      : '' }\n\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n\n          \n          </section>\n          : \n          ''\n        } \n\n\n      </section> \n\n\n\n    </>\n  )\n}\n\nexport default AIListingGenrator","import t,{Component as i}from\"react\";function s(){return s=Object.assign?Object.assign.bind():function(t){for(var i=1;i<arguments.length;i++){var s=arguments[i];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},s.apply(this,arguments)}var n=t.createElement(\"svg\",{viewBox:\"-2 -5 14 20\",height:\"100%\",width:\"100%\",style:{position:\"absolute\",top:0}},t.createElement(\"path\",{d:\"M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12\",fill:\"#fff\",fillRule:\"evenodd\"})),o=t.createElement(\"svg\",{height:\"100%\",width:\"100%\",viewBox:\"-2 -5 17 21\",style:{position:\"absolute\",top:0}},t.createElement(\"path\",{d:\"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\",fill:\"#fff\",fillRule:\"evenodd\"}));function h(t){if(7===t.length)return t;for(var i=\"#\",s=1;s<4;s+=1)i+=t[s]+t[s];return i}function e(t,i,s,n,o){return function(t,i,s,n,o){var h=(t-s)/(i-s);if(0===h)return n;if(1===h)return o;for(var e=\"#\",a=1;a<6;a+=2){var r=parseInt(n.substr(a,2),16),l=parseInt(o.substr(a,2),16),c=Math.round((1-h)*r+h*l).toString(16);1===c.length&&(c=\"0\"+c),e+=c}return e}(t,i,s,h(n),h(o))}var a=function(i){function n(t){i.call(this,t);var s=t.height,n=t.width,o=t.checked;this.t=t.handleDiameter||s-2,this.i=Math.max(n-s,n-(s+this.t)/2),this.o=Math.max(0,(s-this.t)/2),this.state={h:o?this.i:this.o},this.l=0,this.u=0,this.p=this.p.bind(this),this.v=this.v.bind(this),this.g=this.g.bind(this),this.k=this.k.bind(this),this.m=this.m.bind(this),this.M=this.M.bind(this),this.T=this.T.bind(this),this.$=this.$.bind(this),this.C=this.C.bind(this),this.D=this.D.bind(this),this.O=this.O.bind(this),this.S=this.S.bind(this)}return i&&(n.__proto__=i),(n.prototype=Object.create(i&&i.prototype)).constructor=n,n.prototype.componentDidMount=function(){this.W=!0},n.prototype.componentDidUpdate=function(t){t.checked!==this.props.checked&&this.setState({h:this.props.checked?this.i:this.o})},n.prototype.componentWillUnmount=function(){this.W=!1},n.prototype.I=function(t){this.H.focus(),this.setState({R:t,j:!0,B:Date.now()})},n.prototype.L=function(t){var i=this.state,s=i.R,n=i.h,o=(this.props.checked?this.i:this.o)+t-s;i.N||t===s||this.setState({N:!0});var h=Math.min(this.i,Math.max(this.o,o));h!==n&&this.setState({h:h})},n.prototype.U=function(t){var i=this.state,s=i.h,n=i.N,o=i.B,h=this.props.checked,e=(this.i+this.o)/2;this.setState({h:this.props.checked?this.i:this.o});var a=Date.now()-o;(!n||a<250||(h&&s<=e||!h&&s>=e))&&this.A(t),this.W&&this.setState({N:!1,j:!1}),this.l=Date.now()},n.prototype.p=function(t){t.preventDefault(),\"number\"==typeof t.button&&0!==t.button||(this.I(t.clientX),window.addEventListener(\"mousemove\",this.v),window.addEventListener(\"mouseup\",this.g))},n.prototype.v=function(t){t.preventDefault(),this.L(t.clientX)},n.prototype.g=function(t){this.U(t),window.removeEventListener(\"mousemove\",this.v),window.removeEventListener(\"mouseup\",this.g)},n.prototype.k=function(t){this.X=null,this.I(t.touches[0].clientX)},n.prototype.m=function(t){this.L(t.touches[0].clientX)},n.prototype.M=function(t){t.preventDefault(),this.U(t)},n.prototype.$=function(t){Date.now()-this.l>50&&(this.A(t),Date.now()-this.u>50&&this.W&&this.setState({j:!1}))},n.prototype.C=function(){this.u=Date.now()},n.prototype.D=function(){this.setState({j:!0})},n.prototype.O=function(){this.setState({j:!1})},n.prototype.S=function(t){this.H=t},n.prototype.T=function(t){t.preventDefault(),this.H.focus(),this.A(t),this.W&&this.setState({j:!1})},n.prototype.A=function(t){var i=this.props;(0,i.onChange)(!i.checked,t,i.id)},n.prototype.render=function(){var i=this.props,n=i.checked,o=i.disabled,h=i.className,a=i.offColor,r=i.onColor,l=i.offHandleColor,c=i.onHandleColor,u=i.checkedIcon,d=i.uncheckedIcon,f=i.checkedHandleIcon,p=i.uncheckedHandleIcon,b=i.boxShadow,v=i.activeBoxShadow,g=i.height,y=i.width,w=i.borderRadius,k=function(t,i){var s={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&-1===i.indexOf(n)&&(s[n]=t[n]);return s}(i,[\"checked\",\"disabled\",\"className\",\"offColor\",\"onColor\",\"offHandleColor\",\"onHandleColor\",\"checkedIcon\",\"uncheckedIcon\",\"checkedHandleIcon\",\"uncheckedHandleIcon\",\"boxShadow\",\"activeBoxShadow\",\"height\",\"width\",\"borderRadius\",\"handleDiameter\"]),m=this.state,M=m.h,T=m.N,x=m.j,$={position:\"relative\",display:\"inline-block\",textAlign:\"left\",opacity:o?.5:1,direction:\"ltr\",borderRadius:g/2,WebkitTransition:\"opacity 0.25s\",MozTransition:\"opacity 0.25s\",transition:\"opacity 0.25s\",touchAction:\"none\",WebkitTapHighlightColor:\"rgba(0, 0, 0, 0)\",WebkitUserSelect:\"none\",MozUserSelect:\"none\",msUserSelect:\"none\",userSelect:\"none\"},C={height:g,width:y,margin:Math.max(0,(this.t-g)/2),position:\"relative\",background:e(M,this.i,this.o,a,r),borderRadius:\"number\"==typeof w?w:g/2,cursor:o?\"default\":\"pointer\",WebkitTransition:T?null:\"background 0.25s\",MozTransition:T?null:\"background 0.25s\",transition:T?null:\"background 0.25s\"},D={height:g,width:Math.min(1.5*g,y-(this.t+g)/2+1),position:\"relative\",opacity:(M-this.o)/(this.i-this.o),pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},O={height:g,width:Math.min(1.5*g,y-(this.t+g)/2+1),position:\"absolute\",opacity:1-(M-this.o)/(this.i-this.o),right:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},S={height:this.t,width:this.t,background:e(M,this.i,this.o,l,c),display:\"inline-block\",cursor:o?\"default\":\"pointer\",borderRadius:\"number\"==typeof w?w-1:\"50%\",position:\"absolute\",transform:\"translateX(\"+M+\"px)\",top:Math.max(0,(g-this.t)/2),outline:0,boxShadow:x?v:b,border:0,WebkitTransition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",MozTransition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",transition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\"},W={height:this.t,width:this.t,opacity:Math.max(2*(1-(M-this.o)/(this.i-this.o)-.5),0),position:\"absolute\",left:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},z={height:this.t,width:this.t,opacity:Math.max(2*((M-this.o)/(this.i-this.o)-.5),0),position:\"absolute\",left:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"};return t.createElement(\"div\",{className:h,style:$},t.createElement(\"div\",{className:\"react-switch-bg\",style:C,onClick:o?null:this.T,onMouseDown:function(t){return t.preventDefault()}},u&&t.createElement(\"div\",{style:D},u),d&&t.createElement(\"div\",{style:O},d)),t.createElement(\"div\",{className:\"react-switch-handle\",style:S,onClick:function(t){return t.preventDefault()},onMouseDown:o?null:this.p,onTouchStart:o?null:this.k,onTouchMove:o?null:this.m,onTouchEnd:o?null:this.M,onTouchCancel:o?null:this.O},p&&t.createElement(\"div\",{style:W},p),f&&t.createElement(\"div\",{style:z},f)),t.createElement(\"input\",s({},{type:\"checkbox\",role:\"switch\",\"aria-checked\":n,checked:n,disabled:o,style:{border:0,clip:\"rect(0 0 0 0)\",height:1,margin:-1,overflow:\"hidden\",padding:0,position:\"absolute\",width:1}},k,{ref:this.S,onFocus:this.D,onBlur:this.O,onKeyUp:this.C,onChange:this.$})))},n}(i);a.defaultProps={disabled:!1,offColor:\"#888\",onColor:\"#080\",offHandleColor:\"#fff\",onHandleColor:\"#fff\",uncheckedIcon:n,checkedIcon:o,boxShadow:null,activeBoxShadow:\"0 0 2px 3px #3bf\",height:28,width:56};export{a as default};\n"],"names":["setProfileContent","profileContent","profileDetail","setProfileDetail","className","onClick","style","fontWeight","backgroundColor","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","loading","setLoading","textDivRef","useRef","search","setSearch","listingSelection","setListingSelection","postcodeSubstring","setPostcodeSubstring","aiReady","setAiReady","listingFields","setListingFields","postcode","description","bedrooms","bathrooms","property_type","tenure","size","on_road_parking","off_road_parking","balcony","primary_schools","secondary_schools","tubes","trains","restaurants","pubs","supermarkets","gyms","parks","evs","crime","aiFields","setAiFields","postcodeData","setPostcodes","primaryData","setPrimaryData","primaryData1","setPrimaryData1","secondaryData","setSecondaryData","secondaryData1","setSecondaryData1","topPrimaries","setTopPrimaries","topSecondaries","setTopSecondaries","setRestaurants","setGyms","setPubs","setSupermarkets","ev","setEv","restaurants1","setRestaurants1","gyms1","setGyms1","pubs1","setPubs1","supermarkets1","setSupermarkets1","ev1","setEv1","cuisines","setCuisines","topRestaurants","setTopRestaurants","topPubs","setTopPubs","mainGyms","setMainGyms","mainSupermarkets","setMainSupermarkets","setTubes","setTrains","tubes1","setTubes1","trains1","setTrains1","aiSearch","setAiSearch","searchGo","setSearchGo","useEffect","isUserAuth","async","data","axios","getUserToken","headers","Authorization","getAccessToken","error","console","log","getUser","walkDistanceKm20","R","toRad","value","Math","PI","kmPerMinute","nearbyPrimaries","filter","item","dLat","parseFloat","latitude","longitude","dLon","a","sin","cos","c","atan2","sqrt","distanceKm","distance_between","walkTimeMin","round","distancePercent","max_distance","school_type","within_catchment","additional_status","sort","b","firstSchoolNames","slice","getPrimaries","loadPrimaryData","getSecondaries","nearbySecondaries","maxDistancePercent","minDistancePercent","min_distance","includes","secondaryPercentile","ceil","secondaries","total_score_percentile","prevState","schoolText","school1_name","school2_name","loadSecondaryData","walkDistanceKm15","getData","nearbyRestaurants","rating","cuisinesSize","Set","map","restaurant","cuisine","countUniqueCuisines","topThreeRestaurants","restaurant_name","length","loadRestaurantData","uniqueGyms","nearbyStudios","Lat","long","topThreeStudios","i","gym","gym_group","toLowerCase","has","push","add","loadFitnessData","specificSupermarkets","uniqueSupermarkets","nearbySupermarkets","distance","topThreeSupermarkets","supermarket","supermarket_brand","loadSupermarketData","nearbyTubes","lat","uniqueStations","tube","station_name","lineCounts","reduce","acc","line","distinctLineCount","Object","keys","loadTubesData","nearbyChargers","EVPercentile","percentile","loadEVdata","nearbyPubs","topThreePubs","pub","name","loadPubsData","nearbyTrains","station","loadTrainsData","parkPercentile","parks_lsoa","london_percentile","parks_postcode","park_name0","park_name1","loadParks","toggleStatus","key","prevData","increaseUsageCount","column","listingType","status","message","generatedText","setGeneratedText","details","loadAI","navbarColour","usage_stats","package","listing_monthly_count","type","onChange","e","target","toUpperCase","replace","placeholder","location","channel","additional_info","price","id","feature","checked","amenities","prev","handleCheckboxChange","onColor","offColor","loadPostcodeData","text","current","innerText","textarea","document","createElement","body","appendChild","select","execCommand","removeChild","ref","amenity","index","train","distance0","distance1","park_name2","distance2","ev_10_mins","school","school_name","ofsted_results","s","assign","bind","t","arguments","n","prototype","hasOwnProperty","call","apply","this","viewBox","height","width","position","top","d","fill","fillRule","o","h","r","parseInt","substr","l","toString","handleDiameter","max","state","u","p","v","g","k","m","M","T","$","C","D","O","S","__proto__","create","constructor","componentDidMount","W","componentDidUpdate","props","setState","componentWillUnmount","I","H","focus","j","B","Date","now","L","N","min","U","A","preventDefault","button","clientX","window","addEventListener","removeEventListener","X","touches","render","disabled","offHandleColor","onHandleColor","checkedIcon","uncheckedIcon","f","checkedHandleIcon","uncheckedHandleIcon","boxShadow","activeBoxShadow","y","w","borderRadius","indexOf","x","display","textAlign","opacity","direction","WebkitTransition","MozTransition","transition","touchAction","WebkitTapHighlightColor","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","margin","background","cursor","pointerEvents","right","transform","outline","border","left","z","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","role","clip","overflow","padding","onFocus","onBlur","onKeyUp","defaultProps"],"sourceRoot":""}