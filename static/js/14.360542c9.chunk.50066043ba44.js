"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[14],{6014:function(r,t,e){var n=e(7981),i=e(2616);t.Z=function(r,t,e){void 0===e&&(e={});for(var o=e.steps||64,a=e.properties?e.properties:!Array.isArray(r)&&"Feature"===r.type&&r.properties?r.properties:{},s=[],u=0;u<o;u++)s.push((0,n.Z)(r,t,-360*u/o,e).geometry.coordinates);return s.push(s[0]),(0,i.yu)([s],a)}},7981:function(r,t,e){e.d(t,{Z:function(){return i}});var n=e(2616);function i(r,t,e,i){void 0===i&&(i={});var o=function(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if("Feature"===r.type&&null!==r.geometry&&"Point"===r.geometry.type)return r.geometry.coordinates;if("Point"===r.type)return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}(r),a=(0,n.Ht)(o[0]),s=(0,n.Ht)(o[1]),u=(0,n.Ht)(e),c=(0,n.lF)(t,i.units),h=Math.asin(Math.sin(s)*Math.cos(c)+Math.cos(s)*Math.sin(c)*Math.cos(u)),f=a+Math.atan2(Math.sin(u)*Math.sin(c)*Math.cos(s),Math.cos(c)-Math.sin(s)*Math.sin(h)),l=(0,n.vi)(f),y=(0,n.vi)(h);return(0,n.xm)([l,y],i.properties)}},2616:function(r,t,e){e.d(t,{Ht:function(){return h},lF:function(){return u},vi:function(){return c},xm:function(){return a},yu:function(){return s}});var n=6371008.8,i={centimeters:637100880,centimetres:637100880,degrees:57.22891354143274,feet:20902260.511392,inches:39.37*n,kilometers:6371.0088,kilometres:6371.0088,meters:n,metres:n,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:n/1852,radians:1,yards:6967335.223679999};function o(r,t,e){void 0===e&&(e={});var n={type:"Feature"};return(0===e.id||e.id)&&(n.id=e.id),e.bbox&&(n.bbox=e.bbox),n.properties=t||{},n.geometry=r,n}function a(r,t,e){if(void 0===e&&(e={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!f(r[0])||!f(r[1]))throw new Error("coordinates must contain numbers");return o({type:"Point",coordinates:r},t,e)}function s(r,t,e){void 0===e&&(e={});for(var n=0,i=r;n<i.length;n++){var a=i[n];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return o({type:"Polygon",coordinates:r},t,e)}function u(r,t){void 0===t&&(t="kilometers");var e=i[t];if(!e)throw new Error(t+" units is invalid");return r/e}function c(r){return 180*(r%(2*Math.PI))/Math.PI}function h(r){return r%360*Math.PI/180}function f(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}}}]);
//# sourceMappingURL=14.360542c9.chunk.js.f3cf18bd43f6.map