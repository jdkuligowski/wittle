{"version":3,"file":"static/js/389.8273ceed.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/Footer.js","components/whiteLabel/propertyDetails/componentDetails/EVDetails.js","components/whiteLabel/propertyDetails/componentDetails/FitnessDetails.js","components/whiteLabel/propertyDetails/componentDetails/PrimaryDetails.js","components/whiteLabel/propertyDetails/componentDetails/PubDetails.js","components/whiteLabel/propertyDetails/componentDetails/RestaurantDetails.js","components/whiteLabel/propertyDetails/componentDetails/SecondaryDetails.js","components/whiteLabel/propertyDetails/componentDetails/SupermarketDetails.js","components/whiteLabel/propertyDetails/variableDetails/SinglePrimarySchool.js","components/whiteLabel/propertyDetails/variableDetails/SingleSecondarySchool.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","\n\n\nconst Footer = ({ textColour, pageType }) => {\n\n\n\n  return (\n    <>\n      <section className='website-footer no-print' id={pageType}>\n        <p style={{ color: textColour }}>Wittle Technology Limited is a registered company in England and Wales with corporation number 14326945.</p>\n        <p style={{ color: textColour }}>Copyright © Wittle Technology Limited. All rights reserved.</p>\n      </section>\n    </>\n  )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst EVDetails = ({ ev1, listType, setEv1, postcodeData, tableMapView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  // state for storing new supermarket data \n  const [ev2, setEv2] = useState([])\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n  // set state for icon selection\n  const [selectedEvs, setSelectedEvs] = useState()\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 50\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you click icon\n  const handleEvClick = (gym) => {\n    console.log('selectd gym ->', gym)\n    setSelectedEvs(gym)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n\n\n  // ? Section 3: Functinos for sorting table headers\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...ev1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setEv1(sortedData)\n  }\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as ev2\n      setEv2([...ev1])\n    } else {\n      setEv2(\n        ev1.filter(item => {\n          return (\n            item.location.toLowerCase().includes(term.toLowerCase()) ||\n            // item.power.toLowerCase().includes(term.toLowerCase()) ||\n            item.fast_charging.toLowerCase().includes(term.toLowerCase())\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (ev1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, ev1])\n\n\n\n  return (\n    <>\n      {ev1 ?\n        <section className=\"primary-details-section\">\n\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='gym-name sort-section' onClick={() => handleSort('location')}>\n                  <h5>Charger location</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column3' className='gym-group sort-section' onClick={() => handleSort('power')}>\n                  <h5>Power</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {listType === 'short list' ?\n                  <div id='column4' className='sort-section' onClick={() => handleSort('walkTimeMin')}>\n                    <h5>Distance</h5>\n                    <h5 className='sort-button'>↕️</h5>\n                  </div>\n                  :\n                  <h5 id='column4'></h5>\n                }\n\n                <h5 id='column5' className='gym-final'>Fast Charging</h5>\n              </div>\n              <div className='school-table-details'>\n                {ev2 ? ev2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column gym-name' id='column2'>\n                          <h5>{item.location}</h5>\n                        </div>\n                        <div className='column gym-group' id='column3'>\n                          <h5>{item.power} kW</h5>\n                        </div>\n\n                        <div className='column' id='column4'>\n                          {listType === 'short list' ?\n                            <h5>{item.walkTimeMin} mins</h5>\n                            :\n                            <h5></h5>\n                          }\n                        </div>\n                        <div className='column gym-final' id='column5'>\n                          <h5>{item.fast_charging}</h5>\n                        </div>\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {ev2 ? ev2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.location}</h5>\n                              <div className='details'>\n                                <div className='icon' id='evs'></div>\n                                <h5>{item.power}kW</h5>\n                              </div>\n                              {listType === 'short list' ?\n                                <div className='details'>\n                                  <div className='icon' id='distance'></div>\n                                  <h5>{item.walkTimeMin} mins</h5>\n                                </div> : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {ev2 &&\n                        ev2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.longitude}\n                            latitude={item.latitude}\n                            onClick={() => handleEvClick(item)}\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n\n                      {selectedEvs ?\n                        <Popup\n                          longitude={selectedEvs.longitude}\n                          latitude={selectedEvs.latitude}\n                          closeOnClick={false}\n                          className=\"item-popup\"\n                          onClose={() => setSelectedEvs(null)}\n\n                        >\n                          <div className=\"popup-content\">\n\n                            <div className='popup-border'>\n                              <h5 className='title'>{selectedEvs.location}</h5>\n                              <p>⛽️ Power:{selectedEvs.power} kW</p>\n                              <p>⛽️ Fast charging: {selectedEvs.fast_charging}</p>\n                            </div>\n                          </div>\n                        </Popup>\n                        : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {ev2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(ev2.length / 50)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        :\n        <section className='loading-screen'>\n          <Loading />\n        </section>\n      }\n    </>\n  )\n}\n\nexport default EVDetails\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst FitnessDetails = ({ gyms1, listType, setGyms1, postcodeData, tableMapView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  // state for storing new supermarket data \n  const [gyms2, setGyms2] = useState([])\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n  // set state for icon selection\n  const [selectedGyms, setSelectedGyms] = useState()\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you click icon\n  const handleGymClick = (gym) => {\n    console.log('selectd gym ->', gym)\n    setSelectedGyms(gym)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n\n\n  // ? Section 3: Functinos for sorting table headers\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...gyms1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setGyms1(sortedData)\n  }\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as gyms2\n      setGyms2([...gyms1])\n    } else {\n      setGyms2(\n        gyms1.filter(item => {\n          return (\n            item.gym_name.toLowerCase().includes(term.toLowerCase()) ||\n            item.gym_group.toLowerCase().includes(term.toLowerCase()) ||\n            item.class_type.toLowerCase().includes(term.toLowerCase())\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (gyms1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, gyms1])\n\n\n\n  return (\n    <>\n      {gyms1 ?\n        <section className=\"primary-details-section\">\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='gym-name sort-section' onClick={() => handleSort('gym_name')}>\n                  <h5>Studio name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column3' className='gym-group sort-section' onClick={() => handleSort('gym_group')}>\n                  <h5>Studio group</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {listType === 'short list' ?\n                  <div id='column4' className='sort-section' onClick={() => handleSort('walkTimeMin')}>\n                    <h5>Distance</h5>\n                    <h5 className='sort-button'>↕️</h5>\n                  </div>\n                  :\n                  <h5 id='column4'></h5>\n                }\n\n                <h5 id='column5' className='gym-final'>Class types</h5>\n              </div>\n              <div className='school-table-details'>\n                {gyms2 ? gyms2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column gym-name' id='column2'>\n                          <h5>{item.gym_name}</h5>\n                        </div>\n                        <div className='column gym-group' id='column3'>\n                          <h5>{item.gym_group}</h5>\n                        </div>\n\n                        <div className='column' id='column4'>\n                          {listType === 'short list' ?\n                            <h5>{item.walkTimeMin} mins</h5>\n                            :\n                            <h5></h5>\n                          }\n                        </div>\n                        <div className='column gym-final' id='column5'>\n                          <h5>{item.class_type}</h5>\n                        </div>\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {gyms2 ? gyms2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.gym_name}</h5>\n                              <div className='details'>\n                                <div className='icon' id='gyms'></div>\n                                <h5>{item.gym_group}</h5>\n                              </div>\n                              {listType === 'short list' ?\n                                <div className='details'>\n                                  <div className='icon' id='distance'></div>\n                                  <h5>{item.walkTimeMin} mins</h5>\n                                </div> : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {gyms2 &&\n                        gyms2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.long}\n                            latitude={item.Lat}\n                            onClick={() => handleGymClick(item)}\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n\n                      {selectedGyms ?\n                        <Popup\n                          longitude={selectedGyms.long}\n                          latitude={selectedGyms.Lat}\n                          closeOnClick={false}\n                          className=\"item-popup\"\n                          onClose={() => setSelectedGyms(null)}\n\n                        >\n                          <div className=\"popup-content\">\n\n                            <div className='popup-border'>\n                              <h5 className='title'>{selectedGyms.gym_name}</h5>\n                              <p>{selectedGyms.gym_group}</p>\n                              <p>{selectedGyms.class_type}</p>\n                            </div>\n                          </div>\n                        </Popup>\n                        : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {gyms2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(gyms2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        :\n        <section className='loading-screen'>\n          <Loading />\n        </section>\n      }\n    </>\n  )\n}\n\nexport default FitnessDetails\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport circle from '@turf/circle'\nimport destination from '@turf/destination'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\nimport SinglePrimarySchool from '../variableDetails/SinglePrimarySchool'\n\n\n\nconst PrimaryDetails = ({ primaryData1, listType, setPrimaryData1, postcodeData, tableMapView, primaryDetail, setPrimaryDetail, setSliderSelection, setPropertyView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // states for handling the view type\n  // const [tableMapView, setPrimaryView] = useState('Table')\n\n  // state for storing new primary data \n  const [primaryData2, setPrimaryData2] = useState([])\n\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [selectedSchool, setSelectedSchool] = useState(null)\n\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you clicjk button for pagination\n  const handleSchoolClick = (school) => {\n    setSelectedSchool(school)\n    console.log(school.longitude)\n    console.log(school.latitude)\n    console.log(school.max_distance)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n\n  // ? Section 3: Functinos for sorting table headers\n\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...primaryData1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setPrimaryData1(sortedData)\n  }\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as primaryData1\n      setPrimaryData2([...primaryData1])\n    } else {\n      setPrimaryData2(\n        primaryData1.filter(item => {\n          return (\n            item.school_name.toLowerCase().includes(term.toLowerCase()) ||\n            item.local_authority.toLowerCase().includes(term.toLowerCase()) ||\n            item.school_type.toLowerCase().includes(term.toLowerCase()) ||\n            item.ofsted_results && item.ofsted_results.toString().toLowerCase().includes(term.toLowerCase()) ||\n            item.total_pass_rate && item.total_pass_rate.toString().toLowerCase().includes(term.toLowerCase()) ||\n            item.total_top_rate && item.total_top_rate.toString().toLowerCase().includes(term.toLowerCase()) ||\n            (listType === 'short list' && item.within_catchment.toLowerCase().includes(term.toLowerCase())) ||\n            (listType === 'short list' && item.walkTimeMin && item.walkTimeMin.toString().toLowerCase().includes(term.toLowerCase())) ||\n            (listType === 'long list' && item.max_distance && item.max_distance.toString().toLowerCase().includes(term.toLowerCase()))\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (primaryData1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, primaryData1])\n\n\n  // function to go to the school\n  const goToPrimary = (id) => {\n    setPropertyView('Details')\n    setPrimaryDetail('School')\n    setSliderSelection('Primary schools')\n    window.localStorage.setItem('school-id', id)\n    console.log(id)\n  }\n\n\n  return (\n    <>\n      {primaryData1 && primaryDetail === 'Table' ?\n        <section className=\"primary-details-section\">\n\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='sort-section' onClick={() => handleSort('school_name')}>\n                  <h5>School name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <h5 id='column3'>Local authority</h5>\n                <h5 id='column4'>Type</h5>\n                <div id='column5' className='sort-section' onClick={() => handleSort('ofsted_results')}>\n                  <h5>Ofsted</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column6' className='sort-section' onClick={() => handleSort('pupils_at_standard')}>\n                  <h5>At standard</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column7' className='sort-section' onClick={() => handleSort('pupils_exceeding_standard')}>\n                  <h5>Exceeding standard</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {listType === 'short list' ?\n                  <>\n                    <h5 id='column8'>Catchment</h5>\n                    <div id='column9' className='sort-section' onClick={() => handleSort('distance_between')}>\n                      <h5>Dist</h5>\n                      <h5 className='sort-button'>↕️</h5>\n                    </div>\n                  </>\n\n                  : listType === 'long list' ?\n                    <>\n                      <div id='column8' className='sort-section' onClick={() => handleSort('max_distance')}>\n                        <h5>Catchment distance</h5>\n                        <h5 className='sort-button'>↕️</h5>\n                      </div>\n                    </>\n                    : ''}\n              </div>\n              <div className='school-table-details'>\n                {primaryData2 ? primaryData2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5 onClick={() => goToPrimary(item.id)}>{item.school_name}</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          <h5>{item.local_authority}</h5>\n                        </div>\n                        <div className='column' id='column4'>\n                          <h5>{item.school_type}</h5>\n                        </div>\n                        <div className='column' id='column5'>\n                          <h5>{item.ofsted_results === null ? 'N/a' : item.ofsted_results}</h5>\n                        </div>\n                        <div className='column' id='column6'>\n                          {item.school_type === 'Independent school' ? <h5>N/a</h5> : <h5>{Math.round(item.pupils_at_standard * 100)}%</h5>}\n                        </div>\n                        <div className='column' id='column7'>\n                          {item.school_type === 'Independent school' ? <h5>N/a</h5> : <h5>{Math.round(item.pupils_exceeding_standard * 100)}%</h5>}\n                        </div>\n                        {listType === 'short list' ?\n                          <>\n                            <div className='column' id='column8'>\n                              <h5>{item.within_catchment}</h5>\n                            </div><div className='column' id='column9'>\n                              <h5>{item.walkTimeMin} mins</h5>\n                            </div>\n                          </>\n                          : listType === 'long list' ?\n                            <div className='column' id='column8'>\n                              {item.max_distance !== null ? <h5>{item.max_distance}</h5> : <h5>Not specified</h5>}\n                            </div>\n                            : ''\n                        }\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {primaryData2 ? primaryData2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n\n                              <h5 className='title'>{index + 1}. {item.school_name}</h5>\n                              <div className='details'>\n                                <div className='icon' id='secondaries'></div>\n                                <h5>{item.school_type}</h5>\n                              </div>\n                              <div className='details'>\n                                <div className='icon' id='ofsted'></div>\n                                <h5>{item.ofsted_results === null ? 'N/a' : item.ofsted_results}</h5>\n                              </div>\n                              {listType === 'short list' ?\n                                <>\n                                  <div className='details'>\n                                    <div className='icon' id='catchment'></div>\n                                    <h5>{item.within_catchment}</h5>\n                                  </div>\n                                  <div className='details'>\n                                    <div className='icon' id='distance'></div>\n                                    <h5>{item.walkTimeMin} mins</h5>\n                                  </div>\n                                </>\n                                : listType === 'long list' ?\n                                  <div className='details'>\n                                    <div className='icon' id='distance'></div>\n                                    <h5>{item.walkTimeMin} mins</h5>\n                                  </div>\n                                  : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {primaryData2 &&\n                        primaryData2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.longitude}\n                            latitude={item.latitude}\n                            onClick={() => handleSchoolClick(item)}\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n\n                      {selectedSchool && !['Does not apply', 'Check', 'Religion', 'On request', 'N/a', null].includes(selectedSchool.max_distance) ?\n                        <>\n                          {\n                            typeof parseFloat(selectedSchool.longitude) === 'number' &&\n                              typeof parseFloat(selectedSchool.latitude) === 'number' &&\n                              typeof parseFloat(selectedSchool.max_distance) === 'number'\n                              ?\n                              <>\n                                <Source\n                                  id=\"catchment-area\"\n                                  type=\"geojson\"\n                                  data={circle([parseFloat(selectedSchool.longitude), parseFloat(selectedSchool.latitude)], parseFloat(selectedSchool.max_distance), { units: 'kilometers' })}\n                                >\n                                  <Layer\n                                    id=\"catchment-area-ring\"\n                                    type=\"fill\"\n                                    paint={{\n                                      'fill-color': '#FFA7E5',\n                                      'fill-opacity': 0.3,\n                                    }} />\n                                  <Layer\n                                    id=\"catchment-area-outline\"\n                                    type=\"line\"\n                                    paint={{\n                                      'line-color': '#FFA7E5',\n                                      'line-width': 2,\n                                    }} />\n                                </Source>\n                                <Source\n                                  id=\"radius-line\"\n                                  type=\"geojson\"\n                                  data={destination([selectedSchool.longitude, selectedSchool.latitude], selectedSchool.max_distance, 90, { units: 'kilometers' }).geometry.coordinates}\n                                >\n                                  {/* data={lineString([[selectedSchool.longitude, selectedSchool.latitude],\n                              destination([selectedSchool.longitude, selectedSchool.latitude], selectedSchool.max_distance, 90, { units: 'kilometers' }).geometry.coordinates])}\n                          > */}\n                                  <Layer\n                                    id=\"radius\"\n                                    type=\"line\"\n                                    paint={{\n                                      'line-color': '#051885',\n                                      'line-width': 2,\n                                      'line-dasharray': [2, 1],\n                                    }} />\n                                </Source>\n                                <Source\n                                  id=\"radius-label\"\n                                  type=\"geojson\"\n                                  data={destination([parseFloat(selectedSchool.longitude), parseFloat(selectedSchool.latitude)], parseFloat(selectedSchool.max_distance) / 2, 90, { units: 'kilometers' })}\n                                >\n                                  <Layer\n                                    id=\"radius-label\"\n                                    type=\"symbol\"\n                                    layout={{\n                                      'text-field': `${selectedSchool.max_distance} km`,\n                                      'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],\n                                      'text-size': 12,\n                                      'text-offset': [0, -1],\n                                    }}\n                                    paint={{\n                                      'text-color': '#051885',\n\n                                    }}\n                                  />\n                                </Source>\n                              </>\n                              :\n                              <p>Invalid coordinates or distance.</p>\n                          }\n                        </>\n\n\n                        : selectedSchool ?\n                          <Popup\n                            longitude={parseFloat(selectedSchool.longitude)}\n                            latitude={parseFloat(selectedSchool.latitude)}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedSchool(null)}\n\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>This school has no catchment area</h5>\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {primaryData2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(primaryData2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        : primaryDetail === 'School' ?\n          <SinglePrimarySchool />\n\n          :\n          <section className='loading-screen'>\n            {/* <h1>Pub data loading...</h1> */}\n            <Loading />\n          </section>\n      }\n\n    </>\n  )\n}\n\nexport default PrimaryDetails\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst PubDetails = ({ pubs1, listType, setPubs1, postcodeData, tableMapView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for storing new supermarket data \n  const [pub2, setPub2] = useState([])\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n  // set state for icon selection\n  const [selectedPubs, setSelectedPubs] = useState()\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you click icon\n  const handlePubClick = (pub) => {\n    console.log('selected pub ->', pub)\n    setSelectedPubs(pub)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n\n\n  // ? Section 3: Functinos for sorting table headers\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...pubs1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setPubs1(sortedData)\n  }\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as pub2\n      setPub2([...pubs1])\n    } else {\n      setPub2(\n        pubs1.filter(item => {\n          return (\n            item.name.toLowerCase().includes(term.toLowerCase()) ||\n            item.operator.toLowerCase().includes(term.toLowerCase()) ||\n            item.walkTimeMin.toLowerCase().includes(term.toLowerCase())\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (pubs1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, pubs1])\n\n\n\n  return (\n    <>\n      {pubs1 ?\n        <section className=\"primary-details-section\">\n\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='gym-name sort-section' onClick={() => handleSort('name')}>\n                  <h5>Pub name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {/* <div id='column3' className='pub-group sort-section' onClick={() => handleSort('operator')}>\n                  <h5>Pub group</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>            */}\n                {listType === 'short list' ?\n                  <div id='column4' className='sort-section' onClick={() => handleSort('walkTimeMin')}>\n                    <h5>Distance</h5>\n                    <h5 className='sort-button'>↕️</h5>\n                  </div>\n                  :\n                  <h5 id='column4'></h5>\n                }\n\n              </div>\n              <div className='school-table-details'>\n                {pub2 ? pub2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column gym-name' id='column2'>\n                          <h5>{item.name}</h5>\n                        </div>\n                        {/* <div className='column pub-group' id='column3'>\n                          <h5>{item.operator}</h5>\n                        </div> */}\n\n                        <div className='column' id='column4'>\n                          {listType === 'short list' ?\n                            <h5>{item.walkTimeMin} mins</h5>\n                            :\n                            <h5></h5>\n                          }\n                        </div>\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {pub2 ? pub2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.name}</h5>\n                              {listType === 'short list' ?\n                                <div className='details'>\n                                  <div className='icon' id='distance'></div>\n                                  <h5>{item.walkTimeMin} mins</h5>\n                                </div> : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {pub2 &&\n                        pub2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.longitude}\n                            latitude={item.latitude}\n                            onClick={() => handlePubClick(item)}\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n\n                      {selectedPubs ?\n                        <Popup\n                          longitude={selectedPubs.longitude}\n                          latitude={selectedPubs.latitude}\n                          closeOnClick={false}\n                          className=\"item-popup\"\n                          onClose={() => setSelectedPubs(null)}\n\n                        >\n                          <div className=\"popup-content\">\n\n                            <div className='popup-border'>\n                              <h5 className='title'>{selectedPubs.name}</h5>\n                              <p>🍺 {selectedPubs.operator} pub group</p>\n                              <p>🍺 Distance: {selectedPubs.walkTimeMin} mins</p>\n                            </div>\n                          </div>\n                        </Popup>\n                        : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {pub2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(pub2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        :\n        <section className='loading-screen'>\n          {/* <h1>Pub data loading...</h1> */}\n          <Loading />\n        </section>\n      }\n    </>\n  )\n}\n\nexport default PubDetails\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst RestaurantDetails = ({ restaurants1, listType, setRestaurants1, postcodeData, tableMapView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [selectedRestaurants, setSelectdRestaurant] = useState(null)\n\n\n  // state for storing new supermarket data \n  const [restaurants2, setRestaurants2] = useState([])\n\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you click icon\n  const handleSchoolClick = (restaurant) => {\n    console.log('selectd restaurant ->', restaurant)\n    setSelectdRestaurant(restaurant)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n  // ? Section 3: Functinos for sorting table headers\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...restaurants1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setRestaurants1(sortedData)\n  }\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as restaurants2\n      setRestaurants2([...restaurants1])\n    } else {\n      setRestaurants2(\n        restaurants1.filter(item => {\n          return (\n            item.restaurant_name.toLowerCase().includes(term.toLowerCase())\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (restaurants1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, restaurants1])\n\n\n\n  return (\n    <>\n      {restaurants1 ?\n        <section className=\"primary-details-section\">\n\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='sort-section' onClick={() => handleSort('restaurant_name')}>\n                  <h5>Restaurant name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column3' className='sort-section' onClick={() => handleSort('rating')}>\n                  <h5>Rating</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {listType === 'short list' ?\n                  <div id='column4' className='sort-section' onClick={() => handleSort('walkTimeMin')}>\n                    <h5>Distance</h5>\n                    <h5 className='sort-button'>↕️</h5>\n                  </div> :\n                  <h5 id='column4'></h5>\n                }\n\n                <h5 id='column5'>Website</h5>\n              </div>\n              <div className='school-table-details'>\n                {restaurants2 ? restaurants2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>{item.restaurant_name}</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          <h5>{item.rating > 4.8 ? 'Excellent' : item.rating > 4.5 ? 'Very good' : item.rating > 4.2 ? 'Good' : item.rating > 3.9 ? 'Average' : item.rating > 0 ? 'Poor' : 'N/a'}</h5>\n                        </div>\n\n                        <div className='column' id='column4'>\n                          {listType === 'short list' ?\n                            <h5>{item.walkTimeMin} mins </h5>\n                            :\n                            <h5></h5>\n                          }\n                        </div>\n                        <div className='column' id='column5'>\n                          <a target=\"_blank\" rel='noreferrer' href={item.url}>Visit website</a>\n                        </div>\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {restaurants2 ? restaurants2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.restaurant_name}</h5>\n                              <div className='details'>\n                                <div className='icon' id='catchment'></div>\n                                <h5>{item.rating > 4.8 ? 'Excellent' : item.rating > 4.5 ? 'Very good' : item.rating > 4.2 ? 'Good' : item.rating > 3.9 ? 'Average' : item.rating > 0 ? 'Poor' : 'N/a'}</h5>\n                              </div>\n                              {listType === 'short list' ?\n                                <div className='details'>\n                                  <div className='icon' id='distance'></div>\n                                  <h5>{item.walkTimeMin} mins</h5>\n                                </div> : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {restaurants2 &&\n                        restaurants2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.longitude}\n                            latitude={item.latitude}\n                            onClick={() => handleSchoolClick(item)}\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n\n                      {selectedRestaurants ?\n                        <Popup\n                          longitude={selectedRestaurants.longitude}\n                          latitude={selectedRestaurants.latitude}\n                          closeOnClick={false}\n                          className=\"item-popup\"\n                          onClose={() => setSelectdRestaurant(null)}\n\n                        >\n                          <div className=\"popup-content\">\n\n                            <div className='popup-border'>\n                              <h5 className='title'>{selectedRestaurants.restaurant_name}</h5>\n                              <p>{selectedRestaurants.master_cuisine}</p>\n                              {/* <p>{selectedRestaurants.rating} /5</p> */}\n                            </div>\n                          </div>\n                        </Popup>\n                        : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {restaurants2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(restaurants2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        :\n        <section className='loading-screen'>\n          <Loading />\n        </section>\n      }\n    </>\n  )\n}\n\nexport default RestaurantDetails\n\n\n\n","import React, { useState, useEffect, useInsertionEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport circle from '@turf/circle'\nimport destination from '@turf/destination'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\nimport SingleSecondarySchool from '../variableDetails/SingleSecondarySchool'\n\n\nconst SecondaryDetails = ({ propertyData, secondaryData1, listType, setSecondaryData1, postcodeData, tableMapView, secondaryDetail, setSecondaryDetail, setSliderSelection, setPropertyView }) => {\n\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for storing new primary data \n  const [secondaryData2, setSecondaryData2] = useState([])\n\n\n  const [selectedSchool, setSelectedSchool] = useState(null)\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // trigger icon pop up\n  const handleSchoolClick = (school) => {\n    setSelectedSchool(school)\n  }\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n\n\n  // ? Section3: Ability to sort data by different column names\n  // function to sort data by column name\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...secondaryData1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setSecondaryData1(sortedData)\n  }\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as secondaryData1\n      setSecondaryData2([...secondaryData1])\n    } else {\n      setSecondaryData2(\n        secondaryData1.filter(item => {\n          return (\n            item.school_name.toLowerCase().includes(term.toLowerCase()) ||\n            item.local_authority.toLowerCase().includes(term.toLowerCase()) ||\n            item.school_type.toLowerCase().includes(term.toLowerCase()) ||\n            item.ofsted_results && item.ofsted_results.toString().toLowerCase().includes(term.toLowerCase()) ||\n            item.total_pass_rate && item.total_pass_rate.toString().toLowerCase().includes(term.toLowerCase()) ||\n            item.total_top_rate && item.total_top_rate.toString().toLowerCase().includes(term.toLowerCase()) ||\n            (listType === 'short list' && item.within_catchment.toLowerCase().includes(term.toLowerCase())) ||\n            (listType === 'short list' && item.walkTimeMin && item.walkTimeMin.toString().toLowerCase().includes(term.toLowerCase())) ||\n            (listType === 'long list' && item.max_distance && item.max_distance.toString().toLowerCase().includes(term.toLowerCase()))\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (secondaryData1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, secondaryData1])\n\n\n  // function to go to the school\n  const goToSecondary = (id) => {\n    setPropertyView('Details')\n    setSecondaryDetail('School')\n    setSliderSelection('Secondary schools')\n    window.localStorage.setItem('school-id', id)\n    console.log(id)\n  }\n\n  return (\n\n    <>\n      {secondaryData1 && secondaryDetail === 'Table' ?\n        <section className=\"primary-details-section\">\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='sort-section' onClick={() => handleSort('school_name')}>\n                  <h5>School name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <h5 id='column3'>Local authority</h5>\n                <h5 id='column4'>Type</h5>\n                <div id='column5' className='sort-section' onClick={() => handleSort('ofsted_results')}>\n                  <h5>Ofsted</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column6' className='sort-section' onClick={() => handleSort('total_pass_rate')}>\n                  <h5>GCSE pass rate</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column7' className='sort-section' onClick={() => handleSort('total_top_rate')}>\n                  <h5>GCSE A/A*</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {listType === 'short list' ?\n                  <>\n                    <h5 id='column8'>Catchment</h5>\n                    <div id='column9' className='sort-section' onClick={() => handleSort('distance_between')}>\n                      <h5>Dist</h5>\n                      <h5 className='sort-button'>↕️</h5>\n                    </div>\n                  </>\n\n                  : listType === 'long list' ?\n                    <>\n                      <div id='column8' className='sort-section' onClick={() => handleSort('max_distance')}>\n                        <h5>Catchment distance</h5>\n                        <h5 className='sort-button'>↕️</h5>\n                      </div>\n                    </>\n                    : ''}\n              </div>\n              <div className='school-table-details'>\n                {secondaryData2 ? secondaryData2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5 onClick={() => goToSecondary(item.id)}>{item.school_name}</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          <h5>{item.local_authority}</h5>\n                        </div>\n                        <div className='column' id='column4'>\n                          <h5>{item.school_type}</h5>\n                        </div>\n                        <div className='column' id='column5'>\n                          <h5>{item.ofsted_results === null ? 'N/a' : item.ofsted_results}</h5>\n                        </div>\n                        <div className='column' id='column6'>\n                          <h5>{(item.total_pass_rate === null ? 'N/a' : item.total_pass_rate)}</h5>\n                        </div>\n                        <div className='column' id='column7'>\n                          <h5>{(item.total_top_rate === null ? 'N/a' : item.total_top_rate)}</h5>\n                        </div>\n                        {listType === 'short list' ?\n                          <>\n                            <div className='column' id='column8'>\n                              <h5>{item.within_catchment}</h5>\n                            </div><div className='column' id='column9'>\n                              <h5>{item.walkTimeMin} mins</h5>\n                            </div>\n                          </>\n                          : listType === 'long list' ?\n                            <div className='column' id='column8'>\n                              <h5>{item.school_type === 'Independent school' ? 'N/a' : item.max_distance}</h5>\n                            </div>\n                            : ''\n                        }\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n            </div>\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {secondaryData2 ? secondaryData2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n\n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.school_name}</h5>\n                              <div className='details'>\n                                <div className='icon' id='secondaries'></div>\n                                <h5>{item.school_type}</h5>\n                              </div>\n                              <div className='details'>\n                                <div className='icon' id='ofsted'></div>\n                                <h5>{item.ofsted_results}</h5>\n                              </div>\n                              <div className='details'>\n                                <div className='icon' id='catchment'></div>\n                                <h5>{item.within_catchment}</h5>\n                              </div>\n                              <div className='details'>\n                                <div className='icon' id='distance'></div>\n                                <h5>{item.walkTimeMin} mins</h5>\n                              </div>\n                            </div>\n\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {secondaryData2 &&\n                        secondaryData2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.longitude}\n                            latitude={item.latitude}\n                            onClick={() => handleSchoolClick(item)}\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n\n                      {selectedSchool && !['Does not apply', 'Check', 'Religion', null].includes(selectedSchool.max_distance) ?\n                        <>\n                          <Source\n                            id=\"catchment-area\"\n                            type=\"geojson\"\n                            data={circle([selectedSchool.longitude, selectedSchool.latitude], selectedSchool.max_distance, { units: 'kilometers' })}\n                          >\n                            <Layer\n                              id=\"catchment-area-ring\"\n                              type=\"fill\"\n                              paint={{\n                                'fill-color': '#FFA7E5',\n                                'fill-opacity': 0.3,\n                              }} />\n                            <Layer\n                              id=\"catchment-area-outline\"\n                              type=\"line\"\n                              paint={{\n                                'line-color': '#FFA7E5',\n                                'line-width': 2,\n                              }} />\n                          </Source>\n                          <Source\n                            id=\"radius-line\"\n                            type=\"geojson\"\n                            data={destination([selectedSchool.longitude, selectedSchool.latitude], selectedSchool.max_distance, 90, { units: 'kilometers' }).geometry.coordinates}\n                          >\n                            {/* data={lineString([[selectedSchool.longitude, selectedSchool.latitude],\n                              destination([selectedSchool.longitude, selectedSchool.latitude], selectedSchool.max_distance, 90, { units: 'kilometers' }).geometry.coordinates])}\n                          > */}\n                            <Layer\n                              id=\"radius\"\n                              type=\"line\"\n                              paint={{\n                                'line-color': '#051885',\n                                'line-width': 2,\n                                'line-dasharray': [2, 1],\n                              }} />\n                          </Source>\n                          <Source\n                            id=\"radius-label\"\n                            type=\"geojson\"\n                            data={destination([selectedSchool.longitude, selectedSchool.latitude], selectedSchool.max_distance / 2, 90, { units: 'kilometers' })}\n                          >\n                            <Layer\n                              id=\"radius-label\"\n                              type=\"symbol\"\n                              layout={{\n                                'text-field': `${selectedSchool.max_distance} km`,\n                                'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],\n                                'text-size': 12,\n                                'text-offset': [0, -1],\n                              }}\n                              paint={{\n                                'text-color': '#051885',\n\n                              }}\n                            />\n                          </Source>\n                        </>\n                        : selectedSchool ?\n                          <Popup\n                            longitude={selectedSchool.longitude}\n                            latitude={selectedSchool.latitude}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedSchool(null)}\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>This school has no catchment area</h5>\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n              </div>\n\n              : ''}\n          {secondaryData2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(secondaryData2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n\n        </section>\n        : secondaryDetail === 'School' ?\n          <SingleSecondarySchool />\n          :\n          <section className='loading-screen'>\n            <Loading />\n          </section>\n      }\n    </>\n  )\n}\n\nexport default SecondaryDetails","import React, { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport Footer from '../../../tools/Footer'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst SupermarketDetails = ({ propertyData, supermarkets1, listType, setSupermarkets1, postcodeData, tableMapView }) => {\n\n  // ? Section 1: load states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for storing new supermarket data \n  const [supermarkets2, setSupermarkets2] = useState([])\n\n  // state for clicking the supermnarkewt icon\n  const [selectedSupermarkets, setSelectedSupermarkts] = useState()\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState(null)\n\n  // set search state\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 10\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // ? Section 2: Functions relating to the map\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you click icon\n  const handleSupermarketClick = (supermarket) => {\n    console.log('selectd supermarket ->', supermarket)\n    setSelectedSupermarkts(supermarket)\n  }\n\n  // load in viewport data based on location of the property\n  useEffect(() => {\n    if (postcodeData) {\n      setViewport((prevViewport) => ({\n        ...prevViewport,\n        latitude: postcodeData[0].longitude,\n        longitude: postcodeData[0].latitude,\n        zoom: 12.5,\n      }))\n    }\n  }, [postcodeData])\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n\n  // ? Section 3: Functinos for sorting table headers\n  const handleSort = (field) => {\n    let direction = 'asc'\n\n    if (sortField === field && sortDirection === 'asc') {\n      direction = 'desc'\n    }\n\n    setSortField(field)\n    setSortDirection(direction)\n\n    const sortedData = [...supermarkets1].sort((a, b) => {\n      if (!isNaN(a[field]) && !isNaN(b[field])) {\n        return direction === 'asc' ? a[field] - b[field] : b[field] - a[field]\n      }\n\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1\n      }\n\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1\n      }\n\n      return 0\n    })\n\n    setSupermarkets1(sortedData)\n  }\n\n\n\n\n  // ? Section 4: Table search\n  // function for searching the table\n  const handleSearch = (term) => {\n    if (term === '') {\n      // if search term is empty, reset primaryData2 to be the same as supermarkets1\n      setSupermarkets2([...supermarkets1])\n    } else {\n      setSupermarkets2(\n        supermarkets1.filter(item => {\n          return (\n            item.cleansed_name.toLowerCase().includes(term.toLowerCase()) ||\n            item.segment.toLowerCase().includes(term.toLowerCase()) ||\n            item.size.toLowerCase().includes(term.toLowerCase())\n          )\n        })\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (supermarkets1) {\n      handleSearch(searchTerm)\n    }\n  }, [searchTerm, supermarkets1])\n\n\n\n  return (\n    <>\n      {supermarkets1 ?\n        <section className=\"primary-details-section\">\n\n          {tableMapView === 'Table' ?\n            <div className='school-block'>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <div id='column2' className='gym-name sort-section' onClick={() => handleSort('supermarket_store_name')}>\n                  <h5>Supermarket name</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column3' className='sort-section supermarket' onClick={() => handleSort('segment')}>\n                  <h5>Segment</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                <div id='column4' className='sort-section' onClick={() => handleSort('store_size')}>\n                  <h5>Size</h5>\n                  <h5 className='sort-button'>↕️</h5>\n                </div>\n                {listType === 'short list' ?\n                  <div id='column5' className='sort-section' onClick={() => handleSort('walkTimeMin')}>\n                    <h5>Distance</h5>\n                    <h5 className='sort-button'>↕️</h5>\n                  </div>\n                  :\n                  <h5 id='column5'></h5>\n                }\n\n              </div>\n              <div className='school-table-details'>\n                {supermarkets2 ? supermarkets2.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column gym-name' id='column2'>\n                          <h5>{item.supermarket_store_name}</h5>\n                        </div>\n                        <div className='column supermarket' id='column3'>\n                          <h5>{item.segment}</h5>\n                        </div>\n                        <div className='column' id='column4'>\n                          <h5>{item.store_size}</h5>\n                        </div>\n\n                        <div className='column' id='column5'>\n                          {listType === 'short list' ?\n                            <h5>{item.walkTimeMin} mins</h5>\n                            :\n                            <h5></h5>\n                          }\n                        </div>\n\n\n                      </div>\n                      <hr className=\"dividing-line\" />\n\n                    </>\n                  )\n                }).slice(startIndex, endIndex) : ''}\n              </div>\n\n            </div>\n\n\n\n\n            : tableMapView === 'Map' ?\n\n              <div className='school-block'>\n                <div className='map-grid-view'>\n\n\n                  <div className='grid-list'>\n                    {supermarkets2 ? supermarkets2.map((item, index) => {\n                      return (\n                        <>\n                          <div className='school-content'>\n                \n                            <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                              <h5 className='title'>{index + 1}. {item.supermarket_store_name}</h5>\n                              <div className='details'>\n                                <div className='icon' id='supermarkets'></div>\n                                <h5>{item.store_size}</h5>\n                              </div>\n                              {listType === 'short list' ?\n                                <div className='details'>\n                                  <div className='icon' id='distance'></div>\n                                  <h5>{item.walkTimeMin} mins</h5>\n                                </div>\n                                : ''}\n                            </div>\n                          </div>\n                          <hr className=\"dividing-line\" />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n\n\n                  </div>\n\n                  <div className=\"map-section\">\n                    <ReactMapGL\n                      {...viewport}\n                      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                      mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                      onViewportChange={viewport => {\n                        setViewport(viewport)\n                      }}\n                      center={viewport}\n                      onMove={evt => setViewport(evt.viewport)}\n                      className=\"profile-map\"\n                    >\n                      {supermarkets2 &&\n                        supermarkets2.map((item, index) => (\n                          <Marker\n                            key={index}\n                            id={item.id}\n                            longitude={item.longitude}\n                            latitude={item.latitude}\n                            onClick={() => handleSupermarketClick(item)}\n\n                          >\n                            <div className=\"poi-background\">{index + 1}</div>\n                          </Marker>\n                        )).slice(startIndex, endIndex)}\n                      {postcodeData &&\n                        <Marker\n                          id={postcodeData[0].id}\n                          longitude={postcodeData[0].latitude}\n                          latitude={postcodeData[0].longitude}\n                        >\n                          {/* <div className=\"poi-background\">99</div> */}\n                          <h1 className='property-icon'>🏠</h1>\n\n                        </Marker>}\n                      {selectedSupermarkets ?\n                        <Popup\n                          longitude={selectedSupermarkets.longitude}\n                          latitude={selectedSupermarkets.latitude}\n                          closeOnClick={false}\n                          className=\"item-popup\"\n                          onClose={() => setSelectedSupermarkts(null)}\n\n                        >\n                          <div className=\"popup-content\">\n\n                            <div className='popup-border'>\n                              <h5 className='title'>{selectedSupermarkets.supermarket_store_name}</h5>\n                              <p>{selectedSupermarkets.store_size}</p>\n                            </div>\n                          </div>\n                        </Popup>\n                        : ''\n                      }\n                    </ReactMapGL>\n                  </div>\n                </div>\n\n\n\n              </div>\n\n              : ''}\n          {supermarkets2 ?\n            <ReactPaginate\n              pageCount={Math.ceil(supermarkets2.length / 10)}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousLabel={'<'}\n              nextLabel={'>'}\n              pageRangeDisplayed={0}\n              breakLabel={'...'}\n            />\n            : ''}\n\n\n        </section>\n        :\n        <section className='loading-screen'>\n          <Loading />\n        </section>\n      }\n    </>\n  )\n}\n\nexport default SupermarketDetails\n\n\n\n","import React, { useState, useEffect, useInsertionEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Footer from '../../../tools/Footer'\nimport WhiteSidebar from '../../WhiteSidebar'\nimport WhiteNavbar from '../../../tools/WhiteNavbar'\nimport NavBarRevised from '../../../tools/NavBarRevised'\n\n\n\n\n\nconst SinglePrimarySchool = () => {\n\n  // state for errors\n  const [errors, setErrors] = useState()\n\n  // state for navigateion\n  const navigate = useNavigate()\n\n  // state for school information\n  const [primaryData, setPrimaryData] = useState()\n\n\n  // load in specfic secondary school\n  const loadPrimaryData = () => {\n    const getPrimaries = async () => {\n      try {\n        const id = JSON.parse(localStorage.getItem('school-id'))\n        const { data } = await axios.get(`/api/primaries/${id}`)\n        console.log('single primary data ->', data)\n        setPrimaryData(data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getPrimaries()\n  }\n\n  // carry out calculation\n  useEffect(() => {\n    loadPrimaryData()\n  }, [])\n\n\n  return (\n\n    <>\n\n      {primaryData ?\n        <>\n          <section className=\"single-school-profile\">\n            <div className=\"school-core-info\">\n              <div className=\"info-left\">\n                <h1>{primaryData[0].school_name}</h1>\n                <h3 className='normal'>📈 Ofsted: {primaryData[0].ofsted_results === null ? 'N/a' : primaryData[0].ofsted_results}</h3>\n                <h3 className='normal'>🎓 {primaryData[0].students} students per year</h3>\n                <h3 className='normal'>👨‍👧 Gender: {primaryData[0].gender}</h3>\n                <h3 className='normal'>🙏 Faith: {primaryData[0].religion === null ? 'All' : primaryData[0].religion}</h3>\n                {/* <h3 className='website'>💻 {primaryData[0].school_url}</h3> */}\n                <a href={primaryData[0].school_url} target='_blank' className='website' rel=\"noreferrer\">💻 {primaryData[0].school_url}</a>\n\n              </div>\n              <div className=\"info-right\">\n                <div className='school-image' id='primary' style={{ backgroundImage: primaryData[0].image_url === null ? undefined : `url(${primaryData[0].image_url})` }}></div>\n              </div>\n            </div>\n            <div className='school-academic-highlights'>\n              <h1>Academic highlights</h1>\n              <div className='row'>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{primaryData[0].percentile === null ? 'N/a' : Math.round(primaryData[0].percentile * 100) + 1}%</h1>\n                  </div>\n                  {primaryData[0].percentile !== null ? <p>In the top {Math.round(primaryData[0].percentile * 100) + 1}% of primary schools in London</p> : <p>No performance data available for this school</p>}\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{primaryData[0].borough_percentile === null ? 'N/a' : Math.round(primaryData[0].borough_percentile * 100) + 1}%</h1>\n                  </div>\n                  {primaryData[0].borough_percentile !== null ? <p>In the top {Math.round(primaryData[0].borough_percentile * 100) + 1}% of primary schools in {primaryData[0].local_authority}</p> : <p>No performance data available for this school</p>}\n                </div>\n              </div>\n            </div>\n            <div className='school-results'>\n              <h1>KS2 Results</h1>\n\n              {primaryData && primaryData[0].school_type === 'Independent school' ?\n                <h5 className='no-results'>No KS2 results for Independent schools</h5>\n                : primaryData ?\n                  <>\n                    <div className='school-table-headers'>\n                      <h5 id='column1'>#</h5>\n                      <h5 id='column2'>Subject</h5>\n                      <h5 id='column3'>At standard (%)</h5>\n                      <h5 id='column4'>Exceeding standard (%)</h5>\n                    </div><div className='school-table-details'>\n\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>Reading</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          {primaryData[0].at_standard_reading !== null ? <h5>{primaryData[0].at_standard_reading}</h5> : <h5>No reading data avilable for this school</h5>}\n                        </div>\n                        <div className='column' id='column4'>\n                          {primaryData[0].exceeding_standard_reading !== null ? <h5>{primaryData[0].exceeding_standard_reading}</h5> : ''}\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </div><div className='school-table-details'>\n\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{2}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>Writing</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          {primaryData[0].at_standard_writing !== null ? <h5>{primaryData[0].at_standard_writing}</h5> : <h5>No writing data avilable for this school</h5>}\n                        </div>\n                        <div className='column' id='column4'>\n                          {primaryData[0].exceeding_standard_writing !== null ? <h5>{primaryData[0].exceeding_standard_writing}</h5> : ''}\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </div><div className='school-table-details'>\n\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{3}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>Maths</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          {primaryData[0].at_standard_maths !== null ? <h5>{primaryData[0].at_standard_maths}</h5> : <h5>No maths data avilable for this school</h5>}\n                        </div>\n                        <div className='column' id='column4'>\n                          {primaryData[0].at_standard_maths !== null ? <h5>{primaryData[0].at_standard_maths}</h5> : ''}\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </div><div className='school-table-details'>\n\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{4}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>Grammar, punctuation and spelling</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          {primaryData[0].at_standard_gps !== null ? <h5>{primaryData[0].at_standard_gps}</h5> : <h5>No GPS data avilable for this school</h5>}\n                        </div>\n                        <div className='column' id='column4'>\n                          {primaryData[0].at_standard_gps !== null ? <h5>{primaryData[0].at_standard_gps}</h5> : ''}\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </div><div className='school-table-details'>\n\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{5}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>Science</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          {primaryData[0].at_standard_science !== null ? <h5>{primaryData[0].at_standard_science}</h5> : <h5>No science data avilable for this school</h5>}\n                        </div>\n                        <div className='column' id='column4'>\n                          {primaryData[0].at_standard_science !== null ? <h5>{primaryData[0].at_standard_science}</h5> : ''}\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </div>\n                  </>\n                  : ''}\n            </div>\n\n          </section>\n        </>\n        : ''}\n\n\n    </>\n  )\n}\n\nexport default SinglePrimarySchool","import React, { useState, useEffect, useInsertionEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport NavBar from '../../../tools/NavBar'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Footer from '../../../tools/Footer'\nimport WhiteSidebar from '../../WhiteSidebar'\nimport WhiteNavbar from '../../../tools/WhiteNavbar'\nimport NavBarRevised from '../../../tools/NavBarRevised'\n\n\n\n\n\nconst SingleSecondarySchool = () => {\n\n  // state for errors\n  const [errors, setErrors] = useState()\n\n  // state for navigateion\n  const navigate = useNavigate()\n\n  // state for school information\n  const [secondaryData, setSecondaryData] = useState()\n\n\n  // load in specfic secondary school\n  const loadSecondaryData = () => {\n    const getSecondaries = async () => {\n      try {\n        const id = JSON.parse(localStorage.getItem('school-id'))\n\n        const { data } = await axios.get(`/api/secondaries/${id}`)\n        console.log('secondaries data ->', data)\n        setSecondaryData(data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getSecondaries()\n  }\n\n  // carry out calculation\n  useEffect(() => {\n    loadSecondaryData()\n  }, [])\n\n\n  return (\n\n    <>\n      {secondaryData ?\n        <>\n          <section className=\"single-school-profile\">\n            <div className=\"school-core-info\">\n              <div className=\"info-left\">\n                <h1>{secondaryData[0].school_name}</h1>\n                <h3 className='normal'>📈 Ofsted: {secondaryData[0].ofsted_results}</h3>\n                <h3 className='normal'>🎓 {secondaryData[0].students} students per year</h3>\n                <h3 className='normal'>👨‍👧 Gender: {secondaryData[0].gender}</h3>\n                <h3 className='normal'>🙏 Faith: {secondaryData[0].religion === null ? 'All' : secondaryData[0].religion}</h3>\n                {/* <h3 className='website'>💻 {secondaryData[0].school_url}</h3> */}\n                <a href={secondaryData[0].school_url} target='_blank' className='website' rel=\"noreferrer\">💻 {secondaryData[0].school_url}</a>\n\n              </div>\n              <div className=\"info-right\">\n                <div className='school-image' id='secondary' style={{ backgroundImage: secondaryData[0].image_url === null ? undefined : `url(${secondaryData[0].image_url})` }}></div>\n              </div>\n            </div>\n            <div className='school-academic-highlights'>\n              <h1>Academic highlights</h1>\n              <div className='row'>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{Math.round((1 - secondaryData[0].percentile) * 100) + 1}%</h1>\n                  </div>\n                  <p>In the top {Math.round((1 - secondaryData[0].percentile) * 100) + 1}% of schools in London</p>\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{Math.round((1 - secondaryData[0].borough_percentile) * 100) + 1}%</h1>\n                  </div>\n                  <p>In the top {Math.round((1 - secondaryData[0].borough_percentile) * 100) + 1}% of schools in {secondaryData[0].local_authority}</p>\n                </div>\n                <div className='item'>\n                  <div className='circle'>\n                    <h1>{secondaryData[0].results.length}</h1>\n                  </div>\n                  <p>Good curriculum with {secondaryData[0].results.length} subjects</p>\n                </div>\n              </div>\n            </div>\n            <div className='school-results'>\n              <h1>GCSE Results</h1>\n              <div className='school-table-headers'>\n                <h5 id='column1'>#</h5>\n                <h5 id='column2'>Subject</h5>\n                <h5 id='column3'>Pass rate (%)</h5>\n                <h5 id='column4'>A/ A* (%)</h5>\n              </div>\n              <div className='school-table-details'>\n                {secondaryData[0].results.map((item, index) => {\n                  return (\n                    <>\n                      <div className='school-content'>\n                        <div className='column' id='column1'>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2'>\n                          <h5>{item.subject}</h5>\n                        </div>\n                        <div className='column' id='column3'>\n                          <h5>{Math.round(item.pass_rate)}</h5>\n                        </div>\n                        <div className='column' id='column4'>\n                          <h5>{Math.round(item.top_rate)}</h5>\n                        </div>\n                      </div>\n                      <hr className='dividing-line' />\n\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n        </>\n        : ''}\n\n\n    </>\n  )\n}\n\nexport default SingleSecondarySchool"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","textColour","pageType","_Fragment","_jsxs","id","style","color","ev1","listType","setEv1","postcodeData","tableMapView","useNavigate","ev2","setEv2","useState","sortField","setSortField","sortDirection","setSortDirection","selectedEvs","setSelectedEvs","searchTerm","setSearchTerm","viewport","setViewport","latitude","longitude","zoom","showPopup","setShowPopup","iconId","setIconId","currentPage","setCurrentPage","startIndex","endIndex","iconSetting","e","console","log","parseInt","target","useEffect","prevViewport","handleSort","field","direction","sortedData","sort","a","b","isNaN","term","filter","item","location","toLowerCase","includes","fast_charging","onClick","map","index","power","walkTimeMin","slice","onMouseEnter","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","handleEvClick","gym","Popup","closeOnClick","onClose","ReactPaginate","pageCount","Math","ceil","length","onPageChange","data","selected","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","gyms1","setGyms1","gyms2","setGyms2","selectedGyms","setSelectedGyms","gym_name","gym_group","class_type","long","Lat","handleGymClick","primaryData1","setPrimaryData1","primaryDetail","setPrimaryDetail","setSliderSelection","setPropertyView","primaryData2","setPrimaryData2","selectedSchool","setSelectedSchool","school_name","local_authority","school_type","ofsted_results","toString","total_pass_rate","total_top_rate","within_catchment","max_distance","goToPrimary","window","localStorage","setItem","round","pupils_at_standard","pupils_exceeding_standard","handleSchoolClick","school","parseFloat","Source","type","circle","units","Layer","paint","destination","geometry","coordinates","layout","SinglePrimarySchool","pubs1","setPubs1","pub2","setPub2","selectedPubs","setSelectedPubs","name","operator","handlePubClick","pub","restaurants1","setRestaurants1","selectedRestaurants","setSelectdRestaurant","restaurants2","setRestaurants2","restaurant_name","rating","rel","href","url","restaurant","master_cuisine","propertyData","secondaryData1","setSecondaryData1","secondaryDetail","setSecondaryDetail","secondaryData2","setSecondaryData2","goToSecondary","SingleSecondarySchool","supermarkets1","setSupermarkets1","supermarkets2","setSupermarkets2","selectedSupermarkets","setSelectedSupermarkts","cleansed_name","segment","size","supermarket_store_name","store_size","handleSupermarketClick","supermarket","errors","setErrors","primaryData","setPrimaryData","async","JSON","parse","getItem","axios","get","error","getPrimaries","students","gender","religion","school_url","backgroundImage","image_url","undefined","percentile","borough_percentile","at_standard_reading","exceeding_standard_reading","at_standard_writing","exceeding_standard_writing","at_standard_maths","at_standard_gps","at_standard_science","secondaryData","setSecondaryData","getSecondaries","results","subject","pass_rate","top_rate"],"sourceRoot":""}