{"version":3,"file":"static/js/77.fed529ec.chunk.js","mappings":"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","sources":["components/helpers/NewLoading.js","components/whiteLabel/propertyList.js/AIListingGenrator.js","../node_modules/react-switch/dist/index.prod.mjs"],"sourcesContent":["import React from 'react'\n\nconst NewLoading = () => (\n  <div className=\"new-loading-gif\">\n    <img src={require('../../styles/3-point-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default NewLoading","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport ReactSwitch from 'react-switch'\nimport Loading from '../../helpers/Loading'\nimport NewLoading from '../../helpers/NewLoading'\n\n\n\nconst AIListingGenrator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState(false)\n\n  // state for whether ai has loaded\n  const [loadingStages, setLoadingStages] = useState(0)\n\n  // Create a reference to the div\n  const textDivRef = useRef(null)\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Listing generator')\n  const [profileDetail, setProfileDetail] = useState('Listing generator')\n\n  // lisrting options\n  const [listingSelection, setListingSelection] = useState('Property insights')\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n\n  const [aiReady, setAiReady] = useState(false)\n\n  // listing generator form\n  const [listingFields, setListingFields] = useState({\n    postcode: '',\n    description: '',\n    bedrooms: '',\n    bathrooms: '',\n    property_type: '',\n    tenure: '',\n    size: '',\n    on_road_parking: '',\n    off_road_parking: '',\n    balcony: '',\n    primary_schools: 0,\n    secondary_schools: 0,\n    tubes: 0,\n    trains: 0,\n    restaurants: 0,\n    pubs: 0,\n    supermarkets: 0,\n    gyms: 0,\n    parks: 0,\n    evs: 0,\n    crime: 0,\n  })\n\n\n  // ai listing fields\n  const [aiFields, setAiFields] = useState({\n    'location': '',\n    'size': '',\n    'property_type': '',\n    'bedrooms': '',\n    'bathrooms': '',\n    'en_suites': '',\n    'amenities': [],\n    'phrases': [],\n    'channel': '',\n    'additional_info': '',\n    'price': '',\n    'restaurants': '',\n    'pubs': '',\n    'supermarkets': '',\n    'tube': '',\n    'trains': '',\n    'parks': '',\n    'evs': '',\n    'primary_schools': '',\n    'secondary_schools': '',\n    'gyms': '',\n  })\n\n  // features to include in checkbox: \n  const features = [\n    'Balcony', 'On-road parking', 'Off-road parking',\n    'Private gated', 'Private garage', 'Shared garage',\n    'Lift', 'Open-plan', 'Concierge', 'Gym',\n    'Pool & Spa', 'Penthouse', 'Duplex', 'Garden',\n    'Short let', 'Long let', 'Chain free', 'New home', 'Period conversion',\n    'Available now', 'Planning granted', 'Development potential'\n  ]\n\n\n\n  // set state for user data\n  const [postcodeData, setPostcodes] = useState()\n\n  // set state for schools data\n  const [primaryData, setPrimaryData] = useState()\n  const [primaryData1, setPrimaryData1] = useState()\n  const [secondaryData, setSecondaryData] = useState()\n  const [secondaryData1, setSecondaryData1] = useState()\n\n  // additional scvhool states\n  const [topPrimaries, setTopPrimaries] = useState()\n  const [topSecondaries, setTopSecondaries] = useState()\n\n  // set states for lifestyle information\n  const [restaurants, setRestaurants] = useState()\n  const [gyms, setGyms] = useState()\n  const [pubs, setPubs] = useState()\n  const [supermarkets, setSupermarkets] = useState()\n  const [ev, setEv] = useState()\n\n  // set states for first calculations\n  const [restaurants1, setRestaurants1] = useState()\n  const [gyms1, setGyms1] = useState()\n  const [pubs1, setPubs1] = useState()\n  const [supermarkets1, setSupermarkets1] = useState()\n  const [ev1, setEv1] = useState()\n\n  // additional restaurant states\n  const [cuisines, setCuisines] = useState()\n  const [topRestaurants, setTopRestaurants] = useState([])\n  const [topPubs, setTopPubs] = useState([])\n\n  // additional gym states\n  const [mainGyms, setMainGyms] = useState([])\n\n  // additional supermarket states\n  const [mainSupermarkets, setMainSupermarkets] = useState([])\n\n  // set states for lifestyle information\n  const [tubes, setTubes] = useState()\n  const [trains, setTrains] = useState()\n\n  // set states for first calculations\n  const [tubes1, setTubes1] = useState()\n  const [trains1, setTrains1] = useState()\n\n  const [aiSearch, setAiSearch] = useState()\n\n  // start ai seearch\n  const [searchGo, setSearchGo] = useState(false)\n\n  const [phrases, setPhrases] = useState([''])\n\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          // console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n  // ? Section 2: Load postcode and user data\n  const loadPostcodeData = async (listingType) => {\n    try {\n      setLoadingStages(1)\n\n      setLoading(true)\n      // if its an ai load, then we need to set a state to organise the loading of the dataset\n      if (listingType === 'listing_ai_total') {\n        setAiReady(false) // Before loading the data for AI\n      }\n\n      // we need to access the postcode data in all eventualities\n      const { data } = await axios.post('/api/postcodes/', { postcode: postcodeSubstring })\n      // console.log('postcode data ->', data)\n      setPostcodes(data)\n\n      increaseUsageCount(listingType) // Pass the listing type to the increaseUsageCount function\n\n      // if the postcode data arrives and its an ai search, we want to load the rest of the data\n      if (listingType === 'listing_ai_total') {\n        setSearchGo(true)\n      }\n\n      setLoadingStages(2)\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  // set distance\n  const walkDistanceKm20 = 5 * (20 / 60) // updated for 20 mins\n\n  const R = 6371 // Radius of the earth in km\n  const toRad = (value) => value * Math.PI / 180 // Convert degrees to radians\n  const kmPerMinute = 5 / 60 // average walking speed is 5 km per hour\n\n\n\n  // ? Section 3: Load primaries data\n  const loadPrimaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getPrimaries = async () => {\n        const { data } = await axios.get('/api/primaries/')\n        // console.log('primaries data ->', data)\n        setPrimaryData(data)\n        // function for restaurants with least walking distance\n        // filter out restaurants firther than 20 mins walk away and add distanceKm and walkTimeMin to each item\n        const nearbyPrimaries = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          // logic to determine whether school is in the catchment area\n          const distancePercent = distanceKm / item.max_distance\n\n          // handle independent schools\n          if (item.school_type === 'Independent school') {\n            item.within_catchment = 'N/a'\n\n            // handle special schools\n          } else if (item.school_type === 'Special school') {\n            item.within_catchment = 'N/a'\n          } else if (item.max_distance === 'On request') {\n            item.within_catchment = 'N/a'\n\n            // handle schools with a map catchment\n          } else if (item.additional_status === 'Based on map') {\n            item.within_catchment = 'Check catchment map'\n\n            // handle schools that have religioius requirement and have no distane measurement\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.6) {\n            item.within_catchment = 'Very likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.8) {\n            item.within_catchment = 'Likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 1) {\n            item.within_catchment = 'Probably if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n            item.within_catchment = 'Unlikely, even if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n            item.within_catchment = 'Very unlikely, even if religious critera met'\n\n            // handle schools that have not specified their catchment\n          } else if (item.max_distance === 'Not specified' & item.distance_between < 0.4) {\n            item.within_catchment = 'Very likely but no distance specified'\n          } else if (item.max_distance === 'Not specified' & item.distance_between < 0.7) {\n            item.within_catchment = 'Likely but no distance specified'\n          } else if (item.max_distance === 'Not specified' & item.distance_between < 1) {\n            item.within_catchment = 'Probably but no distance specified'\n          } else if (item.max_distance === 'Not specified' & item.distance_between > 1) {\n            item.within_catchment = 'Unlikely, but no distance specified'\n\n            // handle schools that have not been incliuded in the catchment extract\n          } else if (item.max_distance === null & item.distance_between < 0.6) {\n            item.within_catchment = 'Very likely, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between < 0.8) {\n            item.within_catchment = 'Likely, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between < 1) {\n            item.within_catchment = 'Probably, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between < 1.5) {\n            item.within_catchment = 'Unlikely, but no distance data available'\n          } else if (item.max_distance === null & item.distance_between > 1.5) {\n            item.within_catchment = 'Very unlikely, but no distance data available'\n\n            // handle schools with actual distance measurements\n          } else if (distancePercent <= 0.6) {\n            item.within_catchment = 'Yes'\n          } else if (distancePercent <= 0.8) {\n            item.within_catchment = 'Very likely'\n          } else if (distancePercent <= 1.0) {\n            item.within_catchment = 'Probably'\n          } else if (distancePercent <= 1.2) {\n            item.within_catchment = 'Probably not'\n\n            // handle schools that have no catchment\n          } else if (item.max_distance === 'Does not apply') {\n            item.within_catchment = 'Yes'\n\n            // handle any other schools\n          } else {\n            item.within_catchment = 'No'\n          }\n\n          return distanceKm <= walkDistanceKm20\n\n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n        const firstSchoolNames = nearbyPrimaries.slice(0, 8)\n\n        setTopPrimaries(firstSchoolNames)\n        setPrimaryData1(nearbyPrimaries)\n      }\n      getPrimaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  // load primary data\n  useEffect(() => {\n    if (postcodeData && listingFields.primary_schools === 1) {\n      loadPrimaryData()\n    }\n  }, [postcodeData])\n\n\n\n  // function for restaurants with least walking distance\n\n  const walkDistanceKm30 = 5 * (30 / 60) // updated for 20 mins\n\n  // ? Section 4: Load secondary school data  \n  const loadSecondaryData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getSecondaries = async () => {\n        const { data } = await axios.get('/api/secondaries/')\n        // console.log('secondaries data ->', data)\n        setSecondaryData(data)\n\n        const nearbySecondaries = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          // logic to determine whether school is in the catchment area\n          const maxDistancePercent = distanceKm / item.max_distance\n          const minDistancePercent = distanceKm / item.min_distance\n\n          // handle independent schools, special schools and examination requirements\n          if (item.school_type.includes('independent')) {\n            item.within_catchment = 'N/a'\n          } else if (item.school_type.includes('special')) {\n            item.within_catchment = 'N/a'\n          } else if (item.max_distance === 'Exam' || item.max_distance === 'Test score') {\n            item.within_catchment = 'Dependent on test results'\n          } else if (item.max_distance === 'Random') {\n            item.within_catchment = 'Random selection based on performance'\n          } else if (item.max_distance === 'Catchment score') {\n            item.within_catchment = 'School uses catchment score - check'\n\n            // handle schools with a map catchment\n          } else if (item.max_distance === 'Based on map') {\n            item.within_catchment = 'Check catchment map'\n\n            // handle schools with religious requirements and no specified distance\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.7) {\n            item.within_catchment = 'Very likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 0.9) {\n            item.within_catchment = 'Likely if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between < 1.5) {\n            item.within_catchment = 'Probably if religious critera met'\n          } else if (item.max_distance === 'Religion' & item.distance_between > 1.5) {\n            item.within_catchment = 'Unlikely, even if religious critera met'\n\n            // handle schools without a catchment\n          } else if (item.max_distance === 'Does not apply') {\n            item.within_catchment = 'Yes'\n\n            // handle schools with a lower and an upper catchment\n          } else if (item.min_distance !== null & minDistancePercent <= 1) {\n            item.within_catchment = 'Yes'\n          } else if (item.min_distance !== null & maxDistancePercent <= 0.5) {\n            item.within_catchment = 'Very likely'\n          } else if (item.min_distance !== null & maxDistancePercent <= 0.7) {\n            item.within_catchment = 'Probably'\n\n            // handle schools with only uppeer catchment\n          } else if (maxDistancePercent <= 0.6) {\n            item.within_catchment = 'Yes'\n          } else if (maxDistancePercent <= 0.8) {\n            item.within_catchment = 'Very likely'\n          } else if (maxDistancePercent <= 1.0) {\n            item.within_catchment = 'Probably'\n          } else if (maxDistancePercent <= 1.2) {\n            item.within_catchment = 'Probably not'\n          } else {\n            item.within_catchment = 'No'\n          }\n\n          return distanceKm <= walkDistanceKm30\n\n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n        const firstSchoolNames = nearbySecondaries.slice(0, 8)\n\n\n        setTopSecondaries(firstSchoolNames)\n        setSecondaryData1(nearbySecondaries)\n\n        // console.log('nearby secondaries ->', nearbySecondaries)\n\n        const secondaryPercentile = 100 - Math.ceil(100 * postcodeData[0].secondaries.total_score_percentile)\n\n        setAiFields(prevState => {\n          let schoolText\n          if (secondaryPercentile <= 10) {\n            schoolText = `In top 10% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else if (secondaryPercentile <= 20) {\n            schoolText = `In top 20% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else if (secondaryPercentile <= 30) {\n            schoolText = `In top 30% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else if (secondaryPercentile <= 50) {\n            schoolText = `In top 50% of areas in London for secondary schools, with ${postcodeData[0].secondaries.school1_name} and ${postcodeData[0].secondaries.school2_name} nearby`\n          } else {\n            schoolText = 'Not specified'\n          }\n          return {\n            ...prevState,\n            secondary_schools: schoolText,\n          }\n        })\n\n      }\n      await getSecondaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.secondary_schools === 1) {\n      loadSecondaryData()\n    }\n  }, [postcodeData])\n\n\n\n\n  // ? Section 5: Load and sort restaurant data\n\n  // calculatgion for adding distances to the data based on the input coordinates\n  // Average walking speed is 5km/h. Therefore, in 15 minutes, a person can walk approximately 1.25 km\n  const walkDistanceKm15 = 5 * (15 / 60)\n\n  const loadRestaurantData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/restaurants/')\n        // console.log('restaurant data ->', data)\n        setRestaurants(data)\n\n        const nearbyRestaurants = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm15\n        }).sort((a, b) => b.rating - a.rating)\n\n        // count the number of cuisines in the area\n        const countUniqueCuisines = (restaurants) => {\n          const cuisines = new Set(restaurants.map(restaurant => restaurant.cuisine))\n          return cuisines.size\n        }\n\n        const cuisinesSize = countUniqueCuisines(nearbyRestaurants)\n\n\n        // extract the top 3 restaurants\n        const topThreeRestaurants = nearbyRestaurants\n          .filter(restaurant => restaurant.cuisine !== 'No Cuisine Data')\n          .slice(0, 3)\n          .map(restaurant => restaurant.restaurant_name)\n\n        setCuisines(cuisinesSize)\n        setRestaurants1(nearbyRestaurants)\n        setTopRestaurants(topThreeRestaurants)\n        // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n        // console.log('Nearby restaurants ->', nearbyRestaurants)\n        // console.log('Top restaurants ->', topThreeRestaurants)\n        if (listingFields.restaurants === 1) {\n          setAiFields(prevState => ({\n            ...prevState,\n            restaurants: `${nearbyRestaurants.length} restaurants within 15 min walk, with more than ${cuisinesSize} cuisines available`,\n          }))\n        }\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  // load data for nearest restaurants\n  useEffect(() => {\n    if (postcodeData && listingFields.restaurants === 1) {\n      loadRestaurantData()\n    }\n  }, [postcodeData])\n\n\n\n\n\n  // ? Section 6: Load and sort fitness data\n  const loadFitnessData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/gyms/')\n        console.log('gyms data ->', data)\n        setGyms(data)\n\n\n        const specificGyms = ['third space', 'pure gym', '1 rebel', 'virgin', 'barry\\'s', 'the gym group']\n        const uniqueGyms = new Set() // Used to store unique gym names\n\n\n\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyStudios = data.filter(item => {\n          const dLat = toRad(parseFloat(item.Lat) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.Lat))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm15\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n\n        // extract the key studios\n        const topThreeStudios = []\n\n        for (let i = 0; i < nearbyStudios.length; i++) {\n          const gym = nearbyStudios[i]\n          if (gym.gym_group && gym.gym_group.toLowerCase() !== 'other' && !uniqueGyms.has(gym.gym_group)) {\n            topThreeStudios.push(gym.gym_group)\n            uniqueGyms.add(gym.gym_group)\n\n            if (topThreeStudios.length === 3) {\n              break\n            }\n          }\n        }\n\n        setGyms1(nearbyStudios)\n        setMainGyms(topThreeStudios)\n        // console.log('nearby gyms ->', nearbyStudios)\n        // console.log('top 3 gyms ->', topThreeStudios)\n\n        if (listingFields.gyms === 1) {\n          setAiFields(prevState => ({\n            ...prevState,\n            gyms: `${nearbyStudios.length} gyms within 15 min walk, including ${topThreeStudios[0]}, ${topThreeStudios[1]} and ${topThreeStudios[2]}`,\n          }))\n        }\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.gyms === 1) {\n      loadFitnessData()\n    }\n  }, [postcodeData])\n\n\n\n  // ? Section 7: Load and sort supermarket data\n  const loadSupermarketData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/supermarkets/')\n        // console.log('supermarkets data ->', data)\n        // setSupermarkets(data)\n\n        const specificSupermarkets = ['m&s', 'waitrose', 'aldi', 'lidl', 'sainsburys', 'tesco', 'asda']\n        const uniqueSupermarkets = new Set() // Used to store unique gym names\n\n\n\n        // filter out restaurants firther than 15 mins walk away\n        const allSupermarkets = data.map(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return { ...item, distance: distanceKm }\n        })\n\n        const nearbySupermarkets = allSupermarkets\n          .filter(item => item.distance <= walkDistanceKm15)\n\n        // extract the key studios\n        const topThreeSupermarkets = []\n\n        for (let i = 0; i < nearbySupermarkets.length; i++) {\n          const supermarket = nearbySupermarkets[i]\n          if (specificSupermarkets.includes(supermarket.supermarket_brand.toLowerCase()) && !uniqueSupermarkets.has(supermarket.supermarket_brand)) {\n            topThreeSupermarkets.push(supermarket.supermarket_brand)\n            uniqueSupermarkets.add(supermarket.supermarket_brand)\n\n            if (topThreeSupermarkets.length === 3) {\n              break\n            }\n          }\n        }\n        setSupermarkets1(nearbySupermarkets)\n        setMainSupermarkets(topThreeSupermarkets)\n        // console.log('Nearby supermarkets ->', nearbySupermarkets)\n        // if (listingFields.supermarkets === 1) {\n        setAiFields(prevState => ({\n          ...prevState,\n          supermarkets: `${nearbySupermarkets.length} supermarkets within 15 min walk, including ${topThreeSupermarkets[0]}, ${topThreeSupermarkets[1]} and ${topThreeSupermarkets[2]}`,\n        }))\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.supermarkets === 1) {\n      loadSupermarketData()\n    }\n  }, [postcodeData])\n\n\n\n\n  // ? Section 8: Load and sort tubes data\n  const loadTubesData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/tubes/')\n\n\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyTubes = data.filter(item => {\n          const dLat = toRad(parseFloat(item.lat) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.long) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.lat))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm20\n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n        setTubes1(nearbyTubes)\n        console.log('Nearby tubes ->', nearbyTubes)\n\n        // Get a list of tube stations with no duplicates.\n        const uniqueStations = [...new Set(nearbyTubes.map(tube => tube.station_name))]\n\n        // Count the number of distinct lines.\n        const lineCounts = nearbyTubes.reduce((acc, tube) => {\n          acc[tube.line] = (acc[tube.line] || 0) + 1\n          return acc\n        }, {})\n\n        const distinctLineCount = Object.keys(lineCounts).length\n\n        // console.log('Unique Stations:', uniqueStations)\n        // console.log('Number of Distinct Lines:', distinctLineCount)\n\n        setAiFields(prevState => ({\n          ...prevState,\n          tube: uniqueStations.length === 1 ? `${uniqueStations.length} within 20 min walk, across ${distinctLineCount} line, including ${uniqueStations[0]}` :\n            uniqueStations.length > 1 ? `${uniqueStations.length} within 20 min walk, across ${distinctLineCount} line, including ${uniqueStations[0]} and ${uniqueStations[1]}` : '',\n        }\n        ))\n\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n\n  useEffect(() => {\n    if (postcodeData && listingFields.tubes === 1) {\n      loadTubesData()\n    }\n  }, [postcodeData])\n\n\n  // Average walking speed is 5km/h. \n  const walkDistanceKm10 = 5 * (10 / 60)\n\n\n  // ? Section 9: Load and sort EV data\n  const loadEVdata = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/evs/')\n        // console.log('ev data ->', data)\n        setEv(data)\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyChargers = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm10\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n        setEv1(nearbyChargers)\n\n        const EVPercentile = Math.round((1 - postcodeData[0].ev.percentile) * 100)\n\n\n        setAiFields(prevState => ({\n          ...prevState,\n          evs: `${nearbyChargers.length} within 10 min walk${EVPercentile < 30 ? `, which is in the top ${EVPercentile}% of areas in London for EV access` : ''}`,\n        }))\n\n      }\n\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.evs === 1) {\n      loadEVdata()\n    }\n  }, [postcodeData])\n\n\n\n\n\n  // ? Section 10: Load in pubs data\n  const loadPubsData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/pubs/')\n        // console.log('pub data ->', data)\n        setPubs(data)\n\n        const nearbyPubs = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm15\n        }).sort((a, b) => a.walkTimeMin - b.walkTimeMin)\n\n\n        // extract the top 3 restaurants\n        const topThreePubs = nearbyPubs\n          .slice(0, 3)\n          .map(pub => pub.name)\n\n        setPubs1(nearbyPubs)\n        setTopPubs(topThreePubs)\n        // console.log('cuisines ->', countUniqueCuisines(nearbyRestaurants))\n        // console.log('Nearby pubs ->', nearbyPubs)\n        setAiFields(prevState => ({\n          ...prevState,\n          pubs: `${nearbyPubs.length} within 15 min walk, including ${topThreePubs[0]} and ${topThreePubs[1]}, which are well rated`,\n        }\n        ))\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.pubs === 1) {\n      loadPubsData()\n    }\n  }, [postcodeData])\n\n\n\n  // ? Section 11: Load and sort tubes data\n  const loadTrainsData = async () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/trains/')\n        console.log('trains data ->', data)\n        setTrains(data)\n\n        // filter out restaurants firther than 15 mins walk away\n        const nearbyTrains = data.filter(item => {\n          const dLat = toRad(parseFloat(item.latitude) - parseFloat(postcodeData[0].longitude))\n          const dLon = toRad(parseFloat(item.longitude) - parseFloat(postcodeData[0].latitude))\n          const a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(toRad(parseFloat(postcodeData[0].longitude))) * Math.cos(toRad(parseFloat(item.latitude))) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n          const distanceKm = R * c\n\n          item.distance_between = distanceKm\n          item.walkTimeMin = Math.round(distanceKm / kmPerMinute)\n\n          return distanceKm <= walkDistanceKm20\n        }).sort((b, a) => b.walkTimeMin - a.walkTimeMin)\n\n\n        setTrains1(nearbyTrains)\n        console.log('Nearby trains ->', nearbyTrains)\n        setAiFields(prevState => ({\n          ...prevState,\n          trains: nearbyTrains.length === 1 ? `${nearbyTrains.length} within 20 min walk, including ${nearbyTrains[0].station}` :\n            nearbyTrains.length > 1 ? `${nearbyTrains.length} within 20 min walk, including ${nearbyTrains[0].station} and ${nearbyTrains[1].station}` : '',\n        }\n        ))\n      }\n      await getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.trains === 1) {\n      loadTrainsData()\n    }\n  }, [postcodeData])\n\n\n  // ? Section 12: Sort out the parks data\n  // parks data is already laodd from the postcode array, but we want to add it to the AI object\n  const loadParks = () => {\n    const parkPercentile = 100 - postcodeData[0].parks_lsoa[0].london_percentile\n\n    setAiFields(prevState => ({\n      ...prevState,\n      parks: `${parkPercentile <= 10 ? 'In top 10% of areas in London for access to green space, with ' :\n        parkPercentile <= 20 ? 'In top 20% of areas in London for access to green space, with ' :\n          parkPercentile <= 30 ? 'In a very good area of London for access to green space, with ' :\n            parkPercentile <= 60 ? 'In a good area of London for access to green space, with' : 'In an OK area of London for access to green space, with '} ${postcodeData[0].parks_postcode.park_name0} and ${postcodeData[0].parks_postcode.park_name1} nearby`,\n    }\n    ))\n  }\n\n  useEffect(() => {\n    if (postcodeData && listingFields.parks === 1) {\n      loadParks()\n    }\n  }, [postcodeData])\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setListingFields(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === 1 ? 0 : 1,\n    }))\n  }\n\n\n  // Copy function\n  const handleCopyText = () => {\n    const htmlContent = textDivRef.current.innerHTML\n\n    const el = document.createElement('div')\n    el.contentEditable = true\n    el.innerHTML = htmlContent\n    document.body.appendChild(el)\n    const range = document.createRange()\n    range.selectNodeContents(el)\n    const sel = window.getSelection()\n    sel.removeAllRanges()\n    sel.addRange(range)\n    el.focus()\n    document.execCommand('copy')\n    document.body.removeChild(el)\n  }\n\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async (listingType) => {\n    console.log('trying to increase')\n    try {\n      const { data } = await axios.post('/api/usage/listing/', { column: listingType }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log(data)\n      if (data.status === 'success') {\n        console.log('Usage count increased successfully')\n      } else {\n        console.error('Failed to increase usage count:', data.message)\n      }\n    } catch (error) {\n      console.error('Error:', error)\n    }\n  }\n\n  // move to insights page\n  const insightLoad = () => {\n    increaseUsageCount()\n    navigate(`/agents/property/${postcodeSubstring}`)\n  }\n\n\n\n  const handleCheckboxChange = (feature) => {\n    setAiFields(prev => {\n      // Check if the feature is already in the amenities array\n      if (prev.amenities.includes(feature)) {\n        // If it is, remove it\n        return {\n          ...prev,\n          amenities: prev.amenities.filter(a => a !== feature),\n        }\n      } else {\n        // If it isn’t, add it\n        return {\n          ...prev,\n          amenities: [...prev.amenities, feature],\n        }\n      }\n    })\n  }\n\n\n  // state for ai text\n  const [generatedText, setGeneratedText] = useState()\n\n  const loadAI = async (e) => {\n    try {\n      setLoadingStages(3)\n      const { data } = await axios.post('/api/generate_listing/generate_text/', { details: aiFields })\n\n      const paragraphs = data.message.split('\\n')\n      setLoadingStages(4)\n      // Update the state with the paragraphs\n      setGeneratedText(paragraphs)\n      setLoading(false)\n    } catch (error) {\n      console.error('Error fetching data: ', error)\n      // Handle error appropriately in UI\n    }\n  }\n\n\n  useEffect(() => {\n    if (postcodeData &&\n      searchGo &&\n      ((aiFields.supermarkets !== '' && listingFields.supermarkets === 1) || (listingFields.supermarkets === 0)) &&\n      ((aiFields.tube !== '' && listingFields.tubes === 1) || (listingFields.tubes === 0)) &&\n      ((aiFields.trains !== '' && listingFields.trains === 1) || (listingFields.trains === 0)) &&\n      ((aiFields.gyms !== '' && listingFields.gyms === 1) || (listingFields.gyms === 0)) &&\n      ((aiFields.restaurants !== '' && listingFields.restaurants === 1) || (listingFields.restaurants === 0)) &&\n      ((aiFields.pubs !== '' && listingFields.pubs === 1) || (listingFields.pubs === 0)) &&\n      ((aiFields.evs !== '' && listingFields.evs === 1) || (listingFields.evs === 0)) &&\n      ((aiFields.parks !== '' && listingFields.parks === 1) || (listingFields.parks === 0)) &&\n      ((aiFields.secondary_schools !== '' && listingFields.secondary_schools === 1) || (listingFields.secondary_schools === 0))) {\n      // console.log('in use effect')\n      setSearchGo(false)\n\n      loadAI()\n\n    }\n  }, [postcodeData, aiFields, searchGo])\n\n\n\n\n  const handleInputChange = (index, value) => {\n    const newPhrases = phrases.map((phrase, i) => i === index ? value : phrase)\n    setPhrases(newPhrases)\n    console.log('phrases ->', newPhrases)\n    setAiFields(prevState => ({ ...prevState, phrases: newPhrases }))\n  }\n\n\n  const addPhrase = () => {\n    setPhrases([...phrases, ''])\n  }\n\n\n  const removePhrase = index => {\n    if (phrases.length > 1) {\n      const newPhrases = phrases.filter((_, i) => i !== index)\n      setPhrases(newPhrases)\n    }\n  }\n\n\n  return (\n\n    <>\n\n      <div className='full-listing-wrapper'>\n\n        <div className='ai-listing-inputs'>\n\n\n          <>\n            <div className='property-insight-inputs'>\n              <h3 className='insight-title'>Input details and select features you want to include in your listing</h3>\n              <div className='double-input-block'>\n                <div className='input-block small'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block medium'>\n                  <h3>Address</h3>\n                  <input\n                    type=\"text\"\n                    value={aiFields.location}\n                    onChange={e => setAiFields(prevState => ({ ...prevState, location: e.target.value }))}\n                    placeholder=\"Enter location...\"\n                  ></input>\n                </div>\n              </div>\n\n              <div className='double-input-block'>\n                <div className='input-block half'>\n                  <h3>Size</h3>\n                  <input\n                    type=\"number\"\n                    value={aiFields.size}\n                    onChange={e => setAiFields(prevState => ({ ...prevState, size: e.target.value }))}\n                    placeholder=\"Enter size in sq.ft...\"\n                  ></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Property type</h3>\n                  <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, property_type: e.target.value }))}>\n                    <option>--- Select ---</option>\n                    <option>Flat</option>\n                    <option>Bungalow</option>\n                    <option>Terraced house</option>\n                    <option>Semi-detached house</option>\n                    <option>Detached house</option>\n                  </select>\n                </div>\n              </div>\n\n\n              <div className='double-input-block'>\n                <div className='input-block half'>\n                  <h3>Bedrooms</h3>\n                  <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, bedrooms: e.target.value }))}>\n                    <option>--- Select ---</option>\n                    <option value={0}>Studio</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    <option>6</option>\n                    <option>7</option>\n                  </select>\n                </div>\n                <div className='input-block half'>\n                  <h3>Bathrooms</h3>\n                  <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, bathrooms: e.target.value }))}>\n                    <option>--- Select ---</option>\n                    <option>0</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    <option>6</option>\n                    <option>7</option>\n                  </select>\n                </div>\n              </div>\n              <div className='input-block large' >\n                <h3>Channel</h3>\n                <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, channel: e.target.value }))}>\n                  <option>--- Select ---</option>\n                  <option>Sales</option>\n                  <option>Rental</option>\n                </select>\n              </div>\n\n              <div className='double-input-block'>\n                <div className='input-block half'>\n                  <h3>Additional info</h3>\n                  {aiFields.channel === 'Rental' ?\n                    <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, additional_info: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option>Furnished</option>\n                      <option>Unfurnished</option>\n                      <option>Part furnished</option>\n                      <option>Furnished or unfurnished</option>\n                    </select>\n                    :\n                    // aiFields.channel === 'Sales' \n                    <select className='listing-dropdown' onChange={e => setAiFields(prevState => ({ ...prevState, additional_info: e.target.value }))}>\n                      <option>--- Select ---</option>\n                      <option>Freehold</option>\n                      <option>Share of Freehold</option>\n                      <option>Leasehold</option>\n                    </select>\n                  }\n                </div>\n                <div className='input-block half'>\n                  <h3>Price</h3>\n                  <input\n                    type=\"number\"\n                    value={aiFields.price}\n                    onChange={e => setAiFields(prevState => ({ ...prevState, price: e.target.value }))}\n                    placeholder=\"Enter price...\"\n                  ></input>\n                </div>\n              </div>\n\n\n\n\n              <div className='feature-input-block' id='features'>\n                <h3>Feature Selector</h3>\n                <div className='feature-section'>\n                  {features.map(feature => (\n                    <div className='feature' key={feature}>\n                      <div className='custom-checkbox'>\n                        <input className='checkbox'\n                          type=\"checkbox\"\n                          checked={aiFields.amenities.includes(feature)}\n                          onChange={() => handleCheckboxChange(feature)}\n                        />\n                        <label className='label'>\n                          {feature}\n                        </label>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n              </div>\n\n              <div className='lifestyle-input-block'>\n                <h3 className='insight-title'>Specific phrases to include</h3>\n                {phrases.map((phrase, index) => (\n                  <div key={index} className='phrase-line'>\n                    <input\n                      type=\"text\"\n                      value={phrase}\n                      onChange={(e) => handleInputChange(index, e.target.value)}\n                      placeholder='Enter text...'\n                    />\n                    <button className='plus' onClick={addPhrase}>+</button>\n                    {phrases.length > 1 && (\n                      <button className='minus' onClick={() => removePhrase(index)}>-</button>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n\n              <div className='lifestyle-input-block'>\n                <h3 className='insight-title'>Lifestyle elements to include</h3>\n\n                <div className='lifestyle-input-wrap'>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='primaries'></div>\n                    <h3>Primary schools</h3>\n                    <ReactSwitch\n                      checked={listingFields.primary_schools === 1}\n                      onChange={() => toggleStatus('primary_schools')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='secondaries'></div>\n                    <h3>Secondary schools</h3>\n                    <ReactSwitch\n                      checked={listingFields.secondary_schools === 1}\n                      onChange={() => toggleStatus('secondary_schools')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='tubes'></div>\n                    <h3>Tubes</h3>\n                    <ReactSwitch\n                      checked={listingFields.tubes === 1}\n                      onChange={() => toggleStatus('tubes')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='trains'></div>\n                    <h3>Trains</h3>\n                    <ReactSwitch\n                      checked={listingFields.trains === 1}\n                      onChange={() => toggleStatus('trains')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='evs'></div>\n                    <h3>Electric vehicles</h3>\n                    <ReactSwitch\n                      checked={listingFields.evs === 1}\n                      onChange={() => toggleStatus('evs')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n\n\n                    <div className='lifestyle-icon' id='restaurants'></div>\n                    <h3>Restaurants</h3>\n                    <ReactSwitch\n                      checked={listingFields.restaurants === 1}\n                      onChange={() => toggleStatus('restaurants')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n\n                    <div className='lifestyle-icon' id='pubs'></div>\n                    <h3>Pubs</h3>\n                    <ReactSwitch\n                      checked={listingFields.pubs === 1}\n                      onChange={() => toggleStatus('pubs')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='parks'></div>\n                    <h3>Parks</h3>\n                    <ReactSwitch\n                      checked={listingFields.parks === 1}\n                      onChange={() => toggleStatus('parks')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='gyms'></div>\n                    <h3>Gyms</h3>\n                    <ReactSwitch\n                      checked={listingFields.gyms === 1}\n                      onChange={() => toggleStatus('gyms')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='supermarkets'></div>\n                    <h3>Supermarkets</h3>\n                    <ReactSwitch\n                      checked={listingFields.supermarkets === 1}\n                      onChange={() => toggleStatus('supermarkets')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  <div className='input-block-icons'>\n                    <div className='lifestyle-icon' id='crime'></div>\n                    <h3>Crime</h3>\n                    <ReactSwitch\n                      checked={listingFields.crime === 1}\n                      onChange={() => toggleStatus('crime')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                </div>\n\n              </div>\n\n              <div className='listing-search-section'>\n                <button className='load-insights' onClick={() => loadPostcodeData('listing_ai_total')}>Load description</button>\n              </div>\n\n\n\n\n            </div>\n          </>\n\n\n\n\n\n\n        </div>\n        <div className='ai-listing-outputs'>\n          <div className='results-header'>\n            <div className='header-text'>\n              <h3 className='results-title'>Your listing</h3>\n              {/* {postcodeData && generatedText ? <h3 className='results-sub-title'>What you should know about this property</h3> : ''} */}\n            </div>\n            <div className='header-cta'>\n              <div className='copy-button' onClick={handleCopyText}>\n                <div className='copy-icon'></div>\n                <h3>Copy</h3>\n              </div>\n            </div>\n\n          </div>\n\n          <div className='results-section' ref={textDivRef}>\n            {!loading ?\n\n              <div className='results-box' name=\"description\">\n                {/* Description title */}\n                {postcodeData && generatedText ?\n                  <>\n                    <div className='description-block'>\n                      <h1>Key information</h1>\n                      <div className='info-block'>\n                        <h5>Address: </h5>\n                        <h6>{aiFields.location}</h6>\n                      </div>\n                      <div className='info-block'>\n                        <h5>Price: </h5>\n                        <h6>£{aiFields.price}</h6>\n                      </div>\n                      <div className='info-block'>\n                        <h5>Size: </h5>\n                        <h6>{aiFields.size} sq.ft</h6>\n                      </div>\n\n                    </div>\n                  </>\n\n                  : ''}\n                {postcodeData && generatedText ?\n                  <>\n                    <div className='description-block'>\n                      <h1>About this property</h1>\n                      {/* <p>{generatedText}</p> */}\n                      {\n                        generatedText.map((paragraph, index) => (\n                          <p className='results-text' key={index}>{paragraph}</p>\n                        ))\n                      }\n                    </div>\n                  </>\n\n                  : ''}\n                {postcodeData && generatedText ?\n                  <>\n                    <div className='description-block'>\n                      <h1>Key features</h1>\n                      <ul className='results-details'>\n                        {aiFields.amenities.map((amenity, index) => (\n                          <li key={index}>{amenity}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </>\n\n                  : ''}\n\n\n\n                {/* Lifestyle */}\n                {postcodeData && generatedText ?\n\n                  <h3 className='results-sub-title'>What you should know about this area</h3>\n                  : ''}\n                {/* Restaurants */}\n                {restaurants1 && listingFields.restaurants === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='restaurants'></div>\n                        <h3>Restaurants</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{restaurants1.length} restaurants within 15 mins walk</li>\n                          <li>more than {cuisines} cuisines available</li>\n                          <li>{topRestaurants[0]}, {topRestaurants[1]} & {topRestaurants[2]} are well rated</li>\n                        </ul>\n                      </>\n                    </div><hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Pubs */}\n                {pubs1 && listingFields.pubs === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='pubs'></div>\n                        <h3>Pubs</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{pubs1.length} pubs within 15 mins walk</li>\n                          <li>{topPubs[0]}, {topPubs[1]} & {topPubs[2]} are well rated</li>\n                        </ul>\n                      </>\n                    </div><hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Gyms */}\n                {gyms1 && listingFields.gyms === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='gyms'></div>\n                        <h3>Gyms</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{gyms1.length} gyms within 15 mins walk</li>\n                          {mainGyms.length === 3 ? <li>includes {mainGyms[0]}, {mainGyms[1]} & {mainGyms[2]}</li> : mainGyms.length === 2 ? <li>includes {mainGyms[0]} & {mainGyms[1]} </li> : mainGyms.length === 1 ? <li>includes {mainGyms[0]}</li> : ''}\n                        </ul>\n                      </>\n                    </div><hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Supermarkets */}\n                {supermarkets1 && listingFields.supermarkets === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='supermarkets'></div>\n                        <h3>Supermarkets</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{supermarkets1.length} supermarkets within 15 mins walk</li>\n                          {mainSupermarkets.length === 3 ? <li>includes {mainSupermarkets[0]}, {mainSupermarkets[1]} & {mainSupermarkets[2]}</li> : mainSupermarkets.length === 2 ? <li>🛒 includes {mainSupermarkets[0]} & {mainSupermarkets[1]} </li> : mainSupermarkets.length === 1 ? <li>🛒 includes {mainSupermarkets[0]}</li> : ''}\n                        </ul>\n                      </>\n                    </div>\n                    <hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Tubes */}\n                {tubes1 && listingFields.tubes === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='tubes'></div>\n                        <h3>Tubes</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{tubes1.length} stations within 20 mins walk</li>\n                          {\n                            tubes1.slice(0, 3).map((train, index) => (\n                              <li key={index}>{train.station_name} - {train.line} - {train.walkTimeMin} mins walk</li>\n                            ))\n                          } </ul>\n                      </>\n                    </div>\n                    <hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Trains */}\n                {trains1 && listingFields.trains === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='trains'></div>\n                        <h3>Trains</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{trains1.length} stations within 20 mins walk</li>\n                          {\n                            trains1.slice(0, 3).map((train, index) => (\n                              <li key={index}>{train.station} - {train.walkTimeMin} mins walk</li>\n                            ))\n                          }\n                        </ul>\n                      </>\n                    </div>\n                    <hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Parks */}\n                {postcodeData && listingFields.parks === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='parks'></div>\n                        <h3>Parks</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>within top {100 - postcodeData[0].parks_lsoa[0].london_percentile}% of areas in london for access to greenspace</li>\n                          <li>{postcodeData[0].parks_postcode.park_name0} - {Math.ceil((((postcodeData[0].parks_postcode.distance0) / 1000) / 5) * 60)} mins walk</li>\n                          <li>{postcodeData[0].parks_postcode.park_name1} - {Math.ceil((((postcodeData[0].parks_postcode.distance1) / 1000) / 5) * 60)} mins walk</li>\n                          <li>{postcodeData[0].parks_postcode.park_name2} - {Math.ceil((((postcodeData[0].parks_postcode.distance2) / 1000) / 5) * 60)} mins walk</li>\n                        </ul>\n                      </>\n                    </div>\n                    <hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* EVs */}\n                {postcodeData && listingFields.evs === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='evs'></div>\n                        <h3>Electric vehicle charging</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          <li>{postcodeData[0].ev.ev_10_mins} charging points within 10 mins walk</li>\n                          <li>in the top {Math.round((1 - postcodeData[0].ev.percentile) * 100)}% of areas in London for ev charging access</li>\n                        </ul>\n                      </>\n                    </div>\n                    <hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Primary schools */}\n                {primaryData1 && listingFields.primary_schools === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='primaries'></div>\n                        <h3>Primary schools</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          {primaryData1.slice(0, 5).map((school, index) => (\n                            <li key={index}>{school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</li>\n                          ))}\n                        </ul>\n\n                      </>\n                    </div><hr className='results-divider' />\n                  </>\n                  : ''}\n                {/* Secondary schools */}\n                {secondaryData1 && listingFields.secondary_schools === 1 && generatedText ?\n                  <>\n                    <div className='results-block'>\n                      <div className='result-block-header'>\n                        <div className='lifestyle-icon' id='secondaries'></div>\n                        <h3>Secondary schools</h3>\n                      </div>\n                      <>\n                        <ul className='results-details'>\n                          {secondaryData1.slice(0, 5).map((school, index) => (\n                            <li key={index}>{school.school_name} - {school.ofsted_results} ofsted - {school.walkTimeMin} mins walk</li>\n                          ))}\n                        </ul>\n                      </>\n                    </div><hr className='results-divider' />\n                  </>\n                  : ''}\n\n\n              </div>\n              : loading ?\n                <>\n                  <div className='ai-loading-status'>\n                    <div className='loading-stage'>\n                      <div className='loading-icon' style={{ backgroundColor: loadingStages > 0 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }} id='ai-icon'></div>\n                      <h3 style={{ color: loadingStages > 0 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }}>Processing AI input info</h3>\n                      {loadingStages === 1 ?\n                        <NewLoading />\n                        :\n                        <p style={{ color: loadingStages > 1 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }}>Complete!</p>\n                      }\n                    </div>\n                    <div className='loading-stage'>\n                      <div className='loading-icon' style={{ backgroundColor: loadingStages > 1 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }} id='parks-beige'></div>\n                      <h3 style={{ color: loadingStages > 1 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }}>Processing lifestyle data</h3>\n                      {loadingStages === 2 ?\n                        <NewLoading />\n                        :\n                        <p style={{ color: loadingStages > 2 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }}>Complete!</p>\n                      }\n                    </div>\n                    <div className='loading-stage'>\n                      <div className='loading-icon' style={{ backgroundColor: loadingStages > 2 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }} id='listing-icon'></div>\n                      <h3 style={{ color: loadingStages > 2 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }}>Compiling listing</h3>\n                      {loadingStages === 3 ?\n                        <NewLoading />\n                        :\n                        <p style={{ color: loadingStages > 3 ? '#ED6B86' : 'rgba(237, 107, 134, 0.17)' }}>Complete!</p>\n                      }\n\n                    </div>\n\n\n                  </div>\n                </>\n                : ''\n\n\n            }\n          </div>\n\n        </div>\n      </div>\n\n    </>\n  )\n}\n\nexport default AIListingGenrator","import t,{Component as i}from\"react\";function s(){return s=Object.assign?Object.assign.bind():function(t){for(var i=1;i<arguments.length;i++){var s=arguments[i];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},s.apply(this,arguments)}var n=t.createElement(\"svg\",{viewBox:\"-2 -5 14 20\",height:\"100%\",width:\"100%\",style:{position:\"absolute\",top:0}},t.createElement(\"path\",{d:\"M9.9 2.12L7.78 0 4.95 2.828 2.12 0 0 2.12l2.83 2.83L0 7.776 2.123 9.9 4.95 7.07 7.78 9.9 9.9 7.776 7.072 4.95 9.9 2.12\",fill:\"#fff\",fillRule:\"evenodd\"})),o=t.createElement(\"svg\",{height:\"100%\",width:\"100%\",viewBox:\"-2 -5 17 21\",style:{position:\"absolute\",top:0}},t.createElement(\"path\",{d:\"M11.264 0L5.26 6.004 2.103 2.847 0 4.95l5.26 5.26 8.108-8.107L11.264 0\",fill:\"#fff\",fillRule:\"evenodd\"}));function h(t){if(7===t.length)return t;for(var i=\"#\",s=1;s<4;s+=1)i+=t[s]+t[s];return i}function e(t,i,s,n,o){return function(t,i,s,n,o){var h=(t-s)/(i-s);if(0===h)return n;if(1===h)return o;for(var e=\"#\",a=1;a<6;a+=2){var r=parseInt(n.substr(a,2),16),l=parseInt(o.substr(a,2),16),c=Math.round((1-h)*r+h*l).toString(16);1===c.length&&(c=\"0\"+c),e+=c}return e}(t,i,s,h(n),h(o))}var a=function(i){function n(t){i.call(this,t);var s=t.height,n=t.width,o=t.checked;this.t=t.handleDiameter||s-2,this.i=Math.max(n-s,n-(s+this.t)/2),this.o=Math.max(0,(s-this.t)/2),this.state={h:o?this.i:this.o},this.l=0,this.u=0,this.p=this.p.bind(this),this.v=this.v.bind(this),this.g=this.g.bind(this),this.k=this.k.bind(this),this.m=this.m.bind(this),this.M=this.M.bind(this),this.T=this.T.bind(this),this.$=this.$.bind(this),this.C=this.C.bind(this),this.D=this.D.bind(this),this.O=this.O.bind(this),this.S=this.S.bind(this)}return i&&(n.__proto__=i),(n.prototype=Object.create(i&&i.prototype)).constructor=n,n.prototype.componentDidMount=function(){this.W=!0},n.prototype.componentDidUpdate=function(t){t.checked!==this.props.checked&&this.setState({h:this.props.checked?this.i:this.o})},n.prototype.componentWillUnmount=function(){this.W=!1},n.prototype.I=function(t){this.H.focus(),this.setState({R:t,j:!0,B:Date.now()})},n.prototype.L=function(t){var i=this.state,s=i.R,n=i.h,o=(this.props.checked?this.i:this.o)+t-s;i.N||t===s||this.setState({N:!0});var h=Math.min(this.i,Math.max(this.o,o));h!==n&&this.setState({h:h})},n.prototype.U=function(t){var i=this.state,s=i.h,n=i.N,o=i.B,h=this.props.checked,e=(this.i+this.o)/2;this.setState({h:this.props.checked?this.i:this.o});var a=Date.now()-o;(!n||a<250||(h&&s<=e||!h&&s>=e))&&this.A(t),this.W&&this.setState({N:!1,j:!1}),this.l=Date.now()},n.prototype.p=function(t){t.preventDefault(),\"number\"==typeof t.button&&0!==t.button||(this.I(t.clientX),window.addEventListener(\"mousemove\",this.v),window.addEventListener(\"mouseup\",this.g))},n.prototype.v=function(t){t.preventDefault(),this.L(t.clientX)},n.prototype.g=function(t){this.U(t),window.removeEventListener(\"mousemove\",this.v),window.removeEventListener(\"mouseup\",this.g)},n.prototype.k=function(t){this.X=null,this.I(t.touches[0].clientX)},n.prototype.m=function(t){this.L(t.touches[0].clientX)},n.prototype.M=function(t){t.preventDefault(),this.U(t)},n.prototype.$=function(t){Date.now()-this.l>50&&(this.A(t),Date.now()-this.u>50&&this.W&&this.setState({j:!1}))},n.prototype.C=function(){this.u=Date.now()},n.prototype.D=function(){this.setState({j:!0})},n.prototype.O=function(){this.setState({j:!1})},n.prototype.S=function(t){this.H=t},n.prototype.T=function(t){t.preventDefault(),this.H.focus(),this.A(t),this.W&&this.setState({j:!1})},n.prototype.A=function(t){var i=this.props;(0,i.onChange)(!i.checked,t,i.id)},n.prototype.render=function(){var i=this.props,n=i.checked,o=i.disabled,h=i.className,a=i.offColor,r=i.onColor,l=i.offHandleColor,c=i.onHandleColor,u=i.checkedIcon,d=i.uncheckedIcon,f=i.checkedHandleIcon,p=i.uncheckedHandleIcon,b=i.boxShadow,v=i.activeBoxShadow,g=i.height,y=i.width,w=i.borderRadius,k=function(t,i){var s={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&-1===i.indexOf(n)&&(s[n]=t[n]);return s}(i,[\"checked\",\"disabled\",\"className\",\"offColor\",\"onColor\",\"offHandleColor\",\"onHandleColor\",\"checkedIcon\",\"uncheckedIcon\",\"checkedHandleIcon\",\"uncheckedHandleIcon\",\"boxShadow\",\"activeBoxShadow\",\"height\",\"width\",\"borderRadius\",\"handleDiameter\"]),m=this.state,M=m.h,T=m.N,x=m.j,$={position:\"relative\",display:\"inline-block\",textAlign:\"left\",opacity:o?.5:1,direction:\"ltr\",borderRadius:g/2,WebkitTransition:\"opacity 0.25s\",MozTransition:\"opacity 0.25s\",transition:\"opacity 0.25s\",touchAction:\"none\",WebkitTapHighlightColor:\"rgba(0, 0, 0, 0)\",WebkitUserSelect:\"none\",MozUserSelect:\"none\",msUserSelect:\"none\",userSelect:\"none\"},C={height:g,width:y,margin:Math.max(0,(this.t-g)/2),position:\"relative\",background:e(M,this.i,this.o,a,r),borderRadius:\"number\"==typeof w?w:g/2,cursor:o?\"default\":\"pointer\",WebkitTransition:T?null:\"background 0.25s\",MozTransition:T?null:\"background 0.25s\",transition:T?null:\"background 0.25s\"},D={height:g,width:Math.min(1.5*g,y-(this.t+g)/2+1),position:\"relative\",opacity:(M-this.o)/(this.i-this.o),pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},O={height:g,width:Math.min(1.5*g,y-(this.t+g)/2+1),position:\"absolute\",opacity:1-(M-this.o)/(this.i-this.o),right:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},S={height:this.t,width:this.t,background:e(M,this.i,this.o,l,c),display:\"inline-block\",cursor:o?\"default\":\"pointer\",borderRadius:\"number\"==typeof w?w-1:\"50%\",position:\"absolute\",transform:\"translateX(\"+M+\"px)\",top:Math.max(0,(g-this.t)/2),outline:0,boxShadow:x?v:b,border:0,WebkitTransition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",MozTransition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\",transition:T?null:\"background-color 0.25s, transform 0.25s, box-shadow 0.15s\"},W={height:this.t,width:this.t,opacity:Math.max(2*(1-(M-this.o)/(this.i-this.o)-.5),0),position:\"absolute\",left:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"},z={height:this.t,width:this.t,opacity:Math.max(2*((M-this.o)/(this.i-this.o)-.5),0),position:\"absolute\",left:0,top:0,pointerEvents:\"none\",WebkitTransition:T?null:\"opacity 0.25s\",MozTransition:T?null:\"opacity 0.25s\",transition:T?null:\"opacity 0.25s\"};return t.createElement(\"div\",{className:h,style:$},t.createElement(\"div\",{className:\"react-switch-bg\",style:C,onClick:o?null:this.T,onMouseDown:function(t){return t.preventDefault()}},u&&t.createElement(\"div\",{style:D},u),d&&t.createElement(\"div\",{style:O},d)),t.createElement(\"div\",{className:\"react-switch-handle\",style:S,onClick:function(t){return t.preventDefault()},onMouseDown:o?null:this.p,onTouchStart:o?null:this.k,onTouchMove:o?null:this.m,onTouchEnd:o?null:this.M,onTouchCancel:o?null:this.O},p&&t.createElement(\"div\",{style:W},p),f&&t.createElement(\"div\",{style:z},f)),t.createElement(\"input\",s({},{type:\"checkbox\",role:\"switch\",\"aria-checked\":n,checked:n,disabled:o,style:{border:0,clip:\"rect(0 0 0 0)\",height:1,margin:-1,overflow:\"hidden\",padding:0,position:\"absolute\",width:1}},k,{ref:this.S,onFocus:this.D,onBlur:this.O,onKeyUp:this.C,onChange:this.$})))},n}(i);a.defaultProps={disabled:!1,offColor:\"#888\",onColor:\"#080\",offHandleColor:\"#fff\",onHandleColor:\"#fff\",uncheckedIcon:n,checkedIcon:o,boxShadow:null,activeBoxShadow:\"0 0 2px 3px #3bf\",height:28,width:56};export{a as default};\n"],"names":["NewLoading","_jsx","className","children","src","require","alt","AIListingGenrator","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","loading","setLoading","loadingStages","setLoadingStages","textDivRef","useRef","search","setSearch","profileContent","setProfileContent","profileDetail","setProfileDetail","listingSelection","setListingSelection","postcodeSubstring","setPostcodeSubstring","aiReady","setAiReady","listingFields","setListingFields","postcode","description","bedrooms","bathrooms","property_type","tenure","size","on_road_parking","off_road_parking","balcony","primary_schools","secondary_schools","tubes","trains","restaurants","pubs","supermarkets","gyms","parks","evs","crime","aiFields","setAiFields","postcodeData","setPostcodes","primaryData","setPrimaryData","primaryData1","setPrimaryData1","secondaryData","setSecondaryData","secondaryData1","setSecondaryData1","topPrimaries","setTopPrimaries","topSecondaries","setTopSecondaries","setRestaurants","setGyms","setPubs","setSupermarkets","ev","setEv","restaurants1","setRestaurants1","gyms1","setGyms1","pubs1","setPubs1","supermarkets1","setSupermarkets1","ev1","setEv1","cuisines","setCuisines","topRestaurants","setTopRestaurants","topPubs","setTopPubs","mainGyms","setMainGyms","mainSupermarkets","setMainSupermarkets","setTubes","setTrains","tubes1","setTubes1","trains1","setTrains1","aiSearch","setAiSearch","searchGo","setSearchGo","phrases","setPhrases","useEffect","isUserAuth","async","data","axios","get","getUserToken","headers","Authorization","getAccessToken","error","console","log","getUser","walkDistanceKm20","R","toRad","value","Math","PI","kmPerMinute","loadPrimaryData","nearbyPrimaries","filter","item","dLat","parseFloat","latitude","longitude","dLon","a","sin","cos","c","atan2","sqrt","distanceKm","distance_between","walkTimeMin","round","distancePercent","max_distance","school_type","within_catchment","additional_status","sort","b","firstSchoolNames","slice","getPrimaries","getSecondaries","nearbySecondaries","maxDistancePercent","minDistancePercent","min_distance","includes","secondaryPercentile","ceil","secondaries","total_score_percentile","prevState","schoolText","school1_name","school2_name","loadSecondaryData","walkDistanceKm15","getData","nearbyRestaurants","rating","cuisinesSize","Set","map","restaurant","cuisine","countUniqueCuisines","topThreeRestaurants","restaurant_name","length","loadRestaurantData","uniqueGyms","nearbyStudios","Lat","long","topThreeStudios","i","gym","gym_group","toLowerCase","has","push","add","loadFitnessData","specificSupermarkets","uniqueSupermarkets","nearbySupermarkets","distance","topThreeSupermarkets","supermarket","supermarket_brand","loadSupermarketData","nearbyTubes","lat","uniqueStations","tube","station_name","lineCounts","reduce","acc","line","distinctLineCount","Object","keys","loadTubesData","nearbyChargers","EVPercentile","percentile","loadEVdata","nearbyPubs","topThreePubs","pub","name","loadPubsData","nearbyTrains","station","loadTrainsData","loadParks","parkPercentile","parks_lsoa","london_percentile","parks_postcode","park_name0","park_name1","toggleStatus","key","prevData","increaseUsageCount","post","column","listingType","status","message","generatedText","setGeneratedText","details","paragraphs","split","loadAI","addPhrase","_Fragment","_jsxs","type","onChange","e","target","toUpperCase","replace","placeholder","location","channel","additional_info","price","id","feature","checked","amenities","prev","handleCheckboxChange","phrase","index","handleInputChange","newPhrases","onClick","_","removePhrase","ReactSwitch","onColor","offColor","uncheckedIcon","checkedIcon","loadPostcodeData","handleCopyText","htmlContent","current","innerHTML","el","document","createElement","contentEditable","body","appendChild","range","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","focus","execCommand","removeChild","ref","style","backgroundColor","color","paragraph","amenity","train","distance0","distance1","park_name2","distance2","ev_10_mins","school","school_name","ofsted_results","s","assign","bind","t","arguments","n","prototype","hasOwnProperty","call","apply","this","viewBox","height","width","position","top","d","fill","fillRule","o","h","r","parseInt","substr","l","toString","handleDiameter","max","state","u","p","v","g","k","m","M","T","$","C","D","O","S","__proto__","create","constructor","componentDidMount","W","componentDidUpdate","props","setState","componentWillUnmount","I","H","j","B","Date","now","L","N","min","U","A","preventDefault","button","clientX","addEventListener","removeEventListener","X","touches","render","disabled","offHandleColor","onHandleColor","f","checkedHandleIcon","uncheckedHandleIcon","boxShadow","activeBoxShadow","y","w","borderRadius","indexOf","x","display","textAlign","opacity","direction","WebkitTransition","MozTransition","transition","touchAction","WebkitTapHighlightColor","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","margin","background","cursor","pointerEvents","right","transform","outline","border","left","z","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","role","clip","overflow","padding","onFocus","onBlur","onKeyUp","defaultProps"],"sourceRoot":""}