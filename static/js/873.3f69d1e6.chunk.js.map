{"version":3,"file":"static/js/873.3f69d1e6.chunk.js","mappings":"0MAilBA,IAtkBsBA,IAGuB,IAHtB,oBAAEC,EAAmB,UAAEC,EAAS,gBAAEC,EAAe,aAAEC,EAAY,kBAAEC,EAAiB,qBAAEC,EAAoB,gBAC7HC,EAAe,mBAAEC,EAAkB,eAAEC,EAAc,WAAEC,EAAU,cAAEC,EAAa,eAAEC,EAAc,QAAEC,EAAO,kBACvGC,EAAiB,wBAAEC,EAAuB,yBAAEC,EAAwB,aAAEC,EAAY,gBAAEC,EAAe,qBAAEC,EAAoB,wBAAEC,EAAuB,gBAClJC,EAAe,mBAAEC,GAAoBtB,EAGrC,MAAMuB,GAAWC,EAAAA,EAAAA,OAGVC,EAAoBC,IAAyBC,EAAAA,EAAAA,UAAS,UAEtDC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,OAGtDG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAQC,IAAaN,EAAAA,EAAAA,aAGrBO,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,YAErCS,EAAAA,EAAAA,QAAO,IAAIC,MAK7BC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,yBAC1CC,EAAeJ,KAAKC,MAAMC,aAAaC,QAAQ,mBACjDJ,GAAWK,IACbpC,EAAmB+B,GACnB5B,EAAciC,GAChB,GACC,IAIH,MAAMC,EAAkBC,IAEtB,MAAMC,EAAOC,SAASC,cAAc,KAGpCF,EAAKG,KAAOJ,EAGZC,EAAKI,OAAS,SAGdJ,EAAKK,IAAM,aAGXL,EAAKM,eAAiB,gEAGtBL,SAASM,KAAKC,YAAYR,GAG1BA,EAAKS,QAGLR,SAASM,KAAKG,YAAYV,EAAK,EAI3BW,EAAeC,IACnBC,QAAQC,IAAI,cAAeF,EAAKG,cAAcC,UAC9CC,OAAOtB,aAAauB,QAAQ,mBAAoBzB,KAAK0B,UAAUP,EAAKG,cAAcC,WAClFC,OAAOtB,aAAauB,QAAQ,gBAAiBzB,KAAK0B,UAAU,OAC5DhE,IACAD,EAAoB,qBACpBsB,EAAS,4BAA4B,GAOhC4C,EAAaC,IAAkBzC,EAAAA,EAAAA,UAAS,GACzC0C,EAFiB,GAEJF,EACbG,EAAWD,EAHM,IAOhBE,EAAUC,IAAe7C,EAAAA,EAAAA,UAAS,CACvC8C,SAAU,UACVC,WAAY,QACZC,KAAM,OAWFC,EAAeC,IACnB9C,GAAa,GACb6B,QAAQC,IAAI/B,GACZG,EAAU6C,SAASD,EAAE1B,OAAO4B,KAC5BnB,QAAQC,IAAIiB,SAASD,EAAE1B,OAAO4B,IAAI,EAI9BC,EAAmBC,IACvB,MAAM,SAAEC,GAAaD,EACrBb,EAAec,EAAS,EAIpBC,EAAmBC,GAEnBA,EAAS,GAAY,cACrBA,EAAS,GAAY,YACrBA,EAAS,GAAY,YACrBA,EAAS,GAAY,OACrBA,EAAS,GAAY,aACrBA,EAAS,GAAY,UACrBA,EAAS,GAAY,gBACrBA,EAAS,GAAY,MACrBA,EAAS,GAAY,OAClB,WAMT,OAEEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,WAASG,UAAU,iBAAgBD,SAAA,EAEjCE,EAAAA,EAAAA,KAAA,WAASD,UAAU,yBAAwBD,UACzCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,UAClCE,EAAAA,EAAAA,KAAA,UAAQC,QAAS3E,EAAwBwE,SAAC,oBAK5C1E,EAiaEA,GACA4E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,yBAAwBD,UACrCE,EAAAA,EAAAA,KAACE,EAAAA,EAAO,MAER,IApaJN,EAAAA,EAAAA,MAAA,WAASG,UAAU,uBAAsBD,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBD,SAAA,EACjCE,EAAAA,EAAAA,KAAA,MAAAF,SACG7E,EACE,GAAEA,EAAWkF,6BAA6BlF,EAAW,IAAMA,EAAW,GAAGmF,OAAU,YAAWnF,EAAW,GAAGmF,OAAOC,cAAgB,KAClI,MAGNT,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,cAAcE,QAAS3E,EAAwBwE,SAAC,iBAClEE,EAAAA,EAAAA,KAAA,OAAKD,UAAY,aAAkC,UAAvB/D,EAAiC,SAAW,YAAciE,QAASA,IAAMhE,EAAsB,SAAS6D,UAClIE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAOT,GAAG,aAE3BU,EAAAA,EAAAA,KAAA,OAAKD,UAAY,aAAkC,QAAvB/D,EAA+B,SAAW,YAAciE,QAASA,IAAMhE,EAAsB,OAAO6D,UAC9HE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAOT,GAAG,WAE3BU,EAAAA,EAAAA,KAAA,OAAKD,UAAY,aAAkC,SAAvB/D,EAAgC,SAAW,YAAciE,QAASA,IAAMhE,EAAsB,QAAQ6D,UAChIE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAOT,GAAG,iBAMP,UAAvBtD,GAAkCf,GACjC2E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sBAAqBD,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBD,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,SAENE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,eAENE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,gBAGNE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YAENE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aAENE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aAGNE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,gBAENE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YAELhF,GAAmD,WAAhCA,EAAgBwF,aAClCN,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aAGNE,EAAAA,EAAAA,KAAA,OAAKV,GAAG,UAAUS,UAAU,SAAQD,UAClCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,uBAIVE,EAAAA,EAAAA,KAAA,MAAID,UAAU,sBACdC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,SAC1B7E,EAAaA,EAAWsF,KAAI,CAACrC,EAAMsC,KAEhCZ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAKU,EAAQ,OAEfR,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKG,cAAcoC,oBAE1BT,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKG,cAAcC,cAE1B0B,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKwC,oBAAsBxC,EAAKkC,OAASlC,EAAKwC,kBAAkB,GAAGC,SAAWzC,EAAKwC,mBAAqBxC,EAAKkC,OAASlC,EAAKwC,kBAAkBC,SAAW,QAE/JX,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAA0C,OAArC5B,EAAKG,cAAcuC,cAA0B,WAAU1C,EAAKG,cAAcwC,kBAAoB3C,EAAKG,cAAcuC,mBAExHZ,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKG,cAAcyC,WAE1Bd,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKG,cAAc0C,cAE1Bf,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKG,cAAc2C,UAEzBlG,GAAmD,WAAhCA,EAAgBwF,aAClCN,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAK+C,yBAA2B/C,EAAK+C,wBAA0B,IAAIC,QAAQ,GAAK,QAGvFlB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAST,GAAG,UAAUW,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,UACzFE,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKkC,QAAUlC,EAAKiD,gBAAmBjD,EAAKiD,gBAAiBD,QAAQ,GAAK,QAEnFtB,EAAAA,EAAAA,MAAA,OAAKN,GAAG,WAAWS,UAAU,SAAQD,SAAA,EACnCE,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMhC,EAAYC,GAAM4B,SAAC,OACzCpF,GAAmBA,EAAgB0G,MAAKC,GAAOA,EAAIC,eAAiBpD,EAAKG,cAAciD,gBAAgBtB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAkBT,GAAG,eAAeW,QAASA,IAAMpF,EAAqBqD,MAAgB8B,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAkBT,GAAG,cAAcW,QAASA,IAAMrF,EAAkBsD,YAKtS8B,EAAAA,EAAAA,KAAA,MAAID,UAAU,0BAIjBwB,MAAM3C,EAAYC,GAAY,QAIpC5D,GACC+E,EAAAA,EAAAA,KAACwB,IAAa,CACZC,UAAWC,KAAKC,KAAK1G,EAAWkF,OAAS,IACzCyB,aAAcrC,EACdsC,mBAAoB,aACpBC,gBAAiB,SACjBC,cAAe,IACfC,UAAW,IACXC,mBAAoB,EACpBC,WAAY,QAEZ,MAGmB,QAAvBlG,GAAgCf,GAChC2E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EAExBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,SACvB7E,EAAaA,EAAWsF,KAAI,CAACrC,EAAMsC,KAEhCZ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAiBoC,IAAI,iBAAiB/G,QAAQ,OAAO6E,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAM+E,IAAKlE,EAAKG,cAAcgE,YAErJzC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAaT,GAAIpB,EAAKoB,GAAIgD,aAAcnD,EAAYW,SAAA,EACjEF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,QAAQE,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAKyC,SAAA,CAAEU,EAAQ,EAAE,KAAGtC,EAAKG,cAAcoC,mBAC9Gb,EAAAA,EAAAA,MAAA,MAAIG,UAAU,YAAWD,SAAA,CAAC,aAAW5B,EAAKG,cAAc0C,aACxDnB,EAAAA,EAAAA,MAAA,MAAIG,UAAU,YAAWD,SAAA,CAAC,UAAQ5B,EAAKG,cAAcyC,SACpDhG,GAAmD,WAAhCA,EAAgBwF,aAClCV,EAAAA,EAAAA,MAAA,MAAIG,UAAU,YAAWD,SAAA,CAAC,UAAQ5B,EAAK+C,yBAA2B/C,EAAK+C,wBAA0B,IAAIC,QAAQ,GAAK,OAElHtB,EAAAA,EAAAA,MAAA,MAAIG,UAAU,YAAWD,SAAA,CAAC,aAAW5B,GAAQA,EAAKiD,gBAAmBjD,EAAKiD,gBAAiBD,QAAQ,GAAK,GAAG,OAE5GxG,GAAmBA,EAAgB0G,MAAKC,GAAOA,EAAIC,eAAiBpD,EAAKG,cAAciD,gBAAgBtB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAkBT,GAAG,eAAeW,QAASA,IAAMpF,EAAqBqD,MAAgB8B,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAkBT,GAAG,cAAcW,QAASA,IAAMrF,EAAkBsD,YAItS8B,EAAAA,EAAAA,KAAA,MAAID,UAAU,uBAGjBwB,MAAM3C,EAAYC,GAAY,MAGnCmB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,MAAC2C,EAAAA,GAAU,IACLzD,EACJ0D,qBAAsBC,oGACtBC,SAAS,0DACTC,iBAAkB7D,IAChBC,EAAYD,EAAS,EAEvB8D,OAAQ9D,EACR+D,OAAQC,GAAO/D,EAAY+D,EAAIhE,UAC/BiB,UAAU,cAAaD,SAAA,CAEtB7E,GACCA,EAAWsF,KAAI,CAACrC,EAAMsC,KACpBR,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAELzD,GAAIpB,EAAKoB,GACTL,UAAWf,EAAKG,cAAcY,UAC9BD,SAAUd,EAAKG,cAAcW,SAC7BiB,QAASA,KAAM+C,OAtOdC,EAsOkC/E,EArO7DC,QAAQC,IAAI,sBAAuB6E,QACnC7G,EAAsB6G,GAFKA,KAsOwC,EAAAnD,UAEzCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAgBD,SAAEU,EAAQ,KANpCA,KAQNe,MAAM3C,EAAYC,GAEtB1C,GACC6D,EAAAA,EAAAA,KAACkD,EAAAA,GAAK,CACJjE,UAAW9C,EAAmBkC,cAAcY,UAC5CD,SAAU7C,EAAmBkC,cAAcW,SAC3CmE,cAAc,EACdpD,UAAU,aACVqD,QAASA,IAAMhH,EAAsB,MAAM0D,UAG3CE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,UAE5BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,QAAOD,SAAE3D,EAAmBkC,cAAcoC,uBAI5D,WAKTxF,GACC+E,EAAAA,EAAAA,KAACwB,IAAa,CACZC,UAAWC,KAAKC,KAAK1G,EAAWkF,OAAS,IACzCyB,aAAcrC,EACdsC,mBAAoB,aACpBC,gBAAiB,SACjBC,cAAe,IACfC,UAAW,IACXC,mBAAoB,EACpBC,WAAY,QAEZ,MAGmB,SAAvBlG,GAAiCf,GACjC2E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBD,SAAA,EACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAqBD,SACjC7E,EAAaA,EAAWsF,KAAI,CAACrC,EAAMsC,KAEhCR,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBD,SAAA,EACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAAsBoC,IAAI,iBAAiB/G,QAAQ,OAAO6E,QAASA,IAAM7C,EAAec,EAAKG,cAAchB,KAAM+E,IAAKlE,EAAKG,cAAcgE,UACxJzC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qBAAoBD,SAAA,CACJ,UAA5BhF,EAAgBuI,SACfzD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,CAACC,MAAOrF,EAAKG,cAAcyC,MAAO0C,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,SAAO,QACjH9D,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIE,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,CAACC,MAAOrF,EAAKG,cAAcyC,MAAO0C,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,SAAO,UAElH5I,GAAmD,WAAhCA,EAAgBwF,aAA4BpC,EAAK+C,yBACnErB,EAAAA,EAAAA,MAAA,MAAIG,UAAU,cAAaD,SAAA,CAAC,gBAAI5B,EAAK+C,yBAA0D,GAA/B/C,EAAK+C,yBAA8BC,QAAQ,GAAK,GAAG,cACjHtB,EAAAA,EAAAA,MAAA,MAAIG,UAAU,cAAaD,SAAA,CAAE5B,EAAKkC,QAAUlC,EAAKiD,gBAAmBjD,EAAKiD,gBAAiBD,QAAQ,GAAK,GAAG,YAE7GxG,GAAmBA,EAAgB0G,MAAKC,GAAOA,EAAIC,eAAiBpD,EAAKG,cAAciD,gBAAgBtB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAkBT,GAAG,eAAeW,QAASA,IAAMpF,EAAqBqD,MAAgB8B,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAkBT,GAAG,cAAcW,QAASA,IAAMrF,EAAkBsD,YAGtS0B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,sBAAqBD,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,kBAAkB4D,MAAO,CAAEC,WAAgC,YAApBnH,EAAgC,MAAQ,OAASwD,QAASA,IAAMvD,EAAmB,WAAWoD,SAAC,aACpJE,EAAAA,EAAAA,KAAA,MAAID,UAAU,kBAAkB4D,MAAO,CAAEC,WAAgC,aAApBnH,EAAiC,MAAQ,OAASwD,QAASA,IAAMvD,EAAmB,YAAYoD,SAAC,cACtJE,EAAAA,EAAAA,KAAA,MAAID,UAAU,kBAAkB4D,MAAO,CAAEC,WAAgC,cAApBnH,EAAkC,MAAQ,OAASwD,QAASA,IAAMvD,EAAmB,aAAaoD,SAAC,eACxJE,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMhC,EAAYC,GAAM4B,SAAC,gBAI5CE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAGI,YAApBtD,GAECmD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,iBAAgBD,SAAA,CAAE5B,EAAKG,cAAcoC,eAAe,KAAGvC,EAAKwC,oBAAsBxC,EAAKkC,OAASlC,EAAKwC,kBAAkB,GAAGC,SAAWzC,EAAKwC,oBAAsBxC,EAAKkC,OAASlC,EAAKwC,kBAAkBC,SAAW,OAC9NX,EAAAA,EAAAA,KAAA,MAAID,UAAU,gBAAeD,SAAE5B,EAAKG,cAAcuC,cAAiB,YAAW1C,EAAKG,cAAcuC,gBAAmB,cAAa1C,EAAKG,cAAcwC,qBACpJjB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,wBAAuBD,SAAA,EACpCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,SACjCM,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAK5B,EAAKG,cAAc0C,SAAS,mBAEnCnB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,wBAAuBD,SAAA,EACpCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCM,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAK5B,EAAKG,cAAcwF,UAAU,oBAEpCjE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,wBAAuBD,SAAA,EACpCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCM,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAK5B,EAAKG,cAAcyF,KAAK,iBAE/BlE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,wBAAuBD,SAAA,EACpCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCU,EAAAA,EAAAA,KAAA,MAAAF,SAAK5B,EAAKG,cAAc0F,sBAG5BnE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EAChCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,SAAC,cAC/BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,SAC1B5B,EAAKG,eAAiBH,EAAKG,cAAc2F,SAAW9F,EAAKG,cAAc2F,SAASC,MAAM,MAAM1D,KAAI,CAAC2D,EAAS1D,KACzGR,EAAAA,EAAAA,KAAA,MAAgBD,UAAU,eAAcD,SAAEoE,GAAjC1D,KACN,WAIW,aAApB/D,GACAuD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,SAC3B5B,EAAKwC,oBAAsBxC,EAAKkC,QAC/BR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,eACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAGyD,oBAAoB,8BAEzFvE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,iBACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAG0D,sBAAsB,gCAE3FxE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,WACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAG2D,sBAAsB,8BAE3FzE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAG4D,gBAAgB,6BAErF1E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAG6D,gBAAgB,6BAErF3E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,iBACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAG8D,uBAAuB,0BAE5F5E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,WACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAG+D,kBAAkB,0BAEvF7E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,WACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAGgE,iBAAiB,0BAEtF9E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,SACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB,GAAGiE,eAAe,0BAItFzG,EAAKwC,mBAAqBxC,EAAKkC,QAC7BR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,eACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkByD,oBAAoB,8BAEtFvE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,iBACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB0D,sBAAsB,gCAExFxE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,WACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB2D,sBAAsB,8BAExFzE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB4D,gBAAgB,6BAElF1E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,UACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB6D,gBAAgB,6BAElF3E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,iBACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB8D,uBAAuB,0BAEzF5E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,WACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkB+D,kBAAkB,0BAEpF7E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,WACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkBgE,iBAAiB,0BAEnF9E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAeT,GAAG,SACjCM,EAAAA,EAAAA,MAAA,MAAIG,UAAU,UAASD,SAAA,CAAEJ,EAAgBxB,EAAKwC,kBAAkBiE,eAAe,2BAInF/E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,SAAC,kBAC9BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,UAASD,SAAC,yBAIV,cAApBrD,GACAuD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,UAC5BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iBAAiBE,QAASA,IAAM7C,EAAec,EAAKG,cAAcuG,eAAgBjB,MAAO,CAAEkB,gBAAkB,OAAM3G,EAAKG,cAAcuG,sBAErJ,aAQfrD,MAAM3C,EAAYC,GAEjB,KAGL5D,GACC+E,EAAAA,EAAAA,KAACwB,IAAa,CACZC,UAAWC,KAAKC,KAAK1G,EAAWkF,OAAS,IACzCyB,aAAcrC,EACdsC,mBAAoB,aACpBC,gBAAiB,SACjBC,cAAe,IACfC,UAAW,IACXC,mBAAoB,EACpBC,WAAY,QAEZ,MAGHjH,EAMC,IALF2E,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,wDACJE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,cAAcE,QAAS3E,EAAwBwE,SAAC,2BAalFE,EAAAA,EAAAA,KAAC8E,EAAAA,EAAQ,CACPzJ,kBAAmBA,EACnBE,yBAA0BA,EAC1BT,gBAAiBA,EACjBC,mBAAoBA,EACpBI,eAAgBA,EAChBK,aAAcA,EACdC,gBAAiBA,EACjBC,qBAAsBA,EACtBC,wBAAyBA,EACzBC,gBAAiBA,EACjBC,mBAAoBA,MAIrB,C,4FCbP,IAljBiBtB,IAC2E,IAD1E,kBAAEc,EAAiB,yBAAEE,EAAwB,gBAAET,EAAe,mBAAEC,EAAkB,gBAAEgK,EAAe,eAAE5J,EAAc,aAAEK,EAAY,iBAAEwJ,EAAgB,gBAAEC,EAAe,qBACpLvJ,EAAoB,wBAAEC,EAAuB,gBAAEC,EAAe,mBAAEC,GAAoBtB,EAEpF,MASM2K,EAAc,CAClB,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClJ,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,KAIlJC,EAAe,CACnB,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACnK,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAmBpIC,EAAgB1J,GAAwB2J,MAAMC,QAAQ5J,GACxDA,EAAqB6E,KAAIH,IAAM,CAC/BmF,MAAOnF,EAAOC,YACdkD,MAAOnD,MAEP,GAIJ,OAEEJ,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACEE,EAAAA,EAAAA,KAACwF,EAAAA,EAAK,CAACC,KAAMpK,EAAmBqK,OAAQnK,EAA0BoK,SAAS,SAAS5F,UAAU,kBAAiBD,UAC7GE,EAAAA,EAAAA,KAACwF,EAAAA,EAAMI,KAAI,CAAA9F,SACRhF,GAEC8E,EAAAA,EAAAA,MAAA,WAASG,UAAU,eAAcD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,WAASD,UAAU,eAAcD,UAC/BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,kDACJE,EAAAA,EAAAA,KAAA,MAAID,UAAU,cAAcE,QAAS1E,EAAyBuE,SAAC,YAGnEF,EAAAA,EAAAA,MAAA,WAASG,UAAU,aAAYD,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,oBAClCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aACJF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,WAAWwD,MAAOzI,EAAgBuI,SAAW,QAASwC,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUzC,QAASjE,EAAE1B,OAAO6F,UAAUzD,SAAA,EAClKE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,WACRE,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,oBAGZF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,WAAWwD,MAAOzI,EAAgBiL,MAAQ,GAAIF,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUC,KAAM3G,EAAE1B,OAAO6F,UAAUzD,SAAA,EACvJE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,GAAEzD,SAAC,QAnDpB,CAAC,uBAAwB,SAAU,SAAU,QAAS,SAAU,UAAW,SAAU,UAAW,YAAa,WAAY,yBACxI,gBAAiB,aAAc,WAAY,YAAa,UAAW,WAAY,SAAU,YAAa,SAAU,iBAAkB,cAClI,UAAW,iBAAkB,yBAA0B,aAAc,gBAAiB,UAAW,WAAY,uBAAwB,SAAU,YAAa,wBAkDhIS,KAAI,CAACyF,EAASxF,KACtBR,EAAAA,EAAAA,KAAA,UAAoBuD,MAAOyC,EAAQlG,SAAEkG,GAAxBxF,eAOrBZ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,sBAClCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACyB,aAA5BhF,EAAgBuI,SACfzD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,UACEG,UAAU,WACVwD,MAAOzI,EAAgBmL,kBAAoB,GAC3CJ,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUG,iBAAkB7G,EAAE1B,OAAO6F,UAAUzD,SAAA,EAErGE,EAAAA,EAAAA,KAAA,UAAQuD,MAAO,EAAEzD,SAAC,WACjBqF,EAAa5E,KAAI,CAACO,EAAON,KACxBR,EAAAA,EAAAA,KAAA,UAAoBuD,MAAOzC,EAAMhB,UAC/BE,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,CACZC,MAAOzC,EACP0C,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALClD,SAUjBZ,EAAAA,EAAAA,MAAA,UACEG,UAAU,WACVwD,MAAOzI,EAAgBoL,kBAAoB,GAC3CL,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUI,iBAAkB9G,EAAE1B,OAAO6F,UAAUzD,SAAA,EAErGE,EAAAA,EAAAA,KAAA,UAAQuD,MAAO,IAASzD,SAAC,WACxBqF,EAAa5E,KAAI,CAACO,EAAON,KACxBR,EAAAA,EAAAA,KAAA,UAAoBuD,MAAOzC,EAAMhB,UAC/BE,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,CACZC,MAAOzC,EACP0C,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALClD,WAYW,UAA5B1F,EAAgBuI,SAChBzD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,UACEG,UAAU,WACVwD,MAAOzI,EAAgBmL,kBAAoB,GAC3CJ,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUG,iBAAkB7G,EAAE1B,OAAO6F,UAAUzD,SAAA,EAErGE,EAAAA,EAAAA,KAAA,UAAQuD,MAAO,EAAEzD,SAAC,WACjBoF,EAAY3E,KAAI,CAACO,EAAON,KACvBR,EAAAA,EAAAA,KAAA,UAAoBuD,MAAOzC,EAAMhB,UAC/BE,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,CACZC,MAAOzC,EACP0C,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALClD,SAUjBZ,EAAAA,EAAAA,MAAA,UACEG,UAAU,WACVwD,MAAOzI,EAAgBoL,kBAAoB,GAC3CL,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUI,iBAAkB9G,EAAE1B,OAAO6F,UAAUzD,SAAA,EAErGE,EAAAA,EAAAA,KAAA,UAAQuD,MAAO,IAAWzD,SAAC,WAC1BoF,EAAY3E,KAAI,CAACO,EAAON,KACvBR,EAAAA,EAAAA,KAAA,UAAoBuD,MAAOzC,EAAMhB,UAC/BE,EAAAA,EAAAA,KAACsD,EAAAA,GAAa,CACZC,MAAOzC,EACP0C,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALClD,WAYjB,OAERZ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,cACJF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,UACEG,UAAU,WACVwD,MAAOzI,EAAgBqL,cAAgB,KACvCN,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IACvCA,EACHK,aAAc/G,EAAE1B,OAAO6F,MAAQlE,SAASD,EAAE1B,OAAO6F,MAAO,IAAM,SAC5DzD,SAAA,EAEJE,EAAAA,EAAAA,KAAA,UAAQuD,MAAO,KAAKzD,SAAC,YACrBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,UAEpBF,EAAAA,EAAAA,MAAA,UACEG,UAAU,WACVwD,MAAOzI,EAAgBsL,cAAgB,KACvCP,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IACvCA,EACHM,aAAchH,EAAE1B,OAAO6F,MAAQlE,SAASD,EAAE1B,OAAO6F,MAAO,IAAM,SAC5DzD,SAAA,EAEJE,EAAAA,EAAAA,KAAA,UAAQuD,MAAO,KAAKzD,SAAC,YACrBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,OAClBE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,IAAGzD,SAAC,gBAIxBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,mBACJF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,WAAWwD,MAAOzI,EAAgBiJ,cAAgB,GAAI8B,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAU/B,aAAc3E,EAAE1B,OAAO6F,UAAUzD,SAAA,EACvKE,EAAAA,EAAAA,KAAA,UAAQuD,MAAM,GAAEzD,SAAC,QAlLZ,CAAC,OAAQ,YAAa,WAAY,gBAAiB,WAAY,QAAS,iBAAkB,aAAc,SAAU,sBAAuB,cAChK,YAAa,WAAY,aAAc,oBAAqB,UAkLxBS,KAAI,CAAC0C,EAAUzC,KAC/BR,EAAAA,EAAAA,KAAA,UAAoBuD,MAAON,EAASnD,SAAEmD,GAAzBzC,YAKnBZ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,cACJF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,KAAA,SAAOqG,KAAK,WAAW/G,GAAG,aAAagH,KAAK,aAAaC,QAASzL,EAAgB0L,OAAQX,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUU,OAAQpH,EAAE1B,OAAO6I,eAC3KvG,EAAAA,EAAAA,KAAA,SAAOyG,QAAQ,aAAY3G,SAAC,kBAGhCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAA,SAAO0G,YAAY,iBAAiB3G,UAAU,WAAWwD,MA5NvDO,KAClB,GAAa,OAATA,EAAe,MAAO,GAE1B,MAAM6C,EAAMC,WAAW9C,GACvB,OAAO6C,EAAM,IAAM,EAAIA,EAAIE,WAAaF,EAAIzF,QAAQ,EAAE,EAwN0B4F,CAAWhM,EAAgBgJ,MACzF+B,SAAWzG,IACT,MAAMmE,EAAQnE,EAAE1B,OAAO6F,MACvBxI,GAAmB+K,IAAQ,IACtBA,EACHhC,KAAMP,EAAQqD,WAAWrD,GAAS,QACjC,WAIX3D,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,0BAClCE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,cAAaD,SAAC,+CAC3BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACrCE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,WAAWwD,MAAM,SAAStD,QAAUb,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUxF,YAAalB,EAAE1B,OAAO6F,UAAUzD,SAAC,YAC5IE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,WAAWwD,MAAM,UAAUtD,QAAUb,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUxF,YAAalB,EAAE1B,OAAO6F,UAAUzD,SAAC,kBAGhH,WAAhChF,EAAgBwF,aACfV,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,uBAClCE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,cAAaD,SAAC,qFAC3BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,qBACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAuC,IAA9BzL,EAAgBkM,UACzBnB,SAAUA,IAAMrK,EAAa,aAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGc,IAA9BtM,EAAgBkM,WACfpH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUuB,gBAAiBjI,EAAE1B,OAAO6F,UAC1F+C,KAAMxL,EAAgBuM,gBACtBtH,UAAU,SACVuH,aAAcxM,EAAgBuM,gBAAkBvM,EAAgBuM,gBAAkB,EAClFE,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgBuM,qBACd,IACXzH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,uBACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAyC,IAAhCzL,EAAgB4M,YACzB7B,SAAUA,IAAMrK,EAAa,eAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGgB,IAAhCtM,EAAgB4M,aACf9H,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAU6B,kBAAmBvI,EAAE1B,OAAO6F,UAC5F+C,KAAMxL,EAAgB6M,kBACtB5H,UAAU,SACVuH,aAAcxM,EAAgB6M,kBAAoB7M,EAAgB6M,kBAAoB,EACtFJ,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgB6M,uBACd,IACX/H,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,WACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAmC,IAA1BzL,EAAgB8M,MACzB/B,SAAUA,IAAMrK,EAAa,SAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGU,IAA1BtM,EAAgB8M,OACfhI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAU+B,YAAazI,EAAE1B,OAAO6F,UACtF+C,KAAMxL,EAAgB+M,YACtB9H,UAAU,SACVuH,aAAcxM,EAAgB+M,YAAc/M,EAAgB+M,YAAc,EAC1EN,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgB+M,iBACd,IACXjI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,iBACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAyC,IAAhCzL,EAAgBgN,YACzBjC,SAAUA,IAAMrK,EAAa,eAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGgB,IAAhCtM,EAAgBgN,aACflI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUiC,kBAAmB3I,EAAE1B,OAAO6F,UAC5F+C,KAAMxL,EAAgBiN,kBACtBhI,UAAU,SACVuH,aAAcxM,EAAgBiN,kBAAoBjN,EAAgBiN,kBAAoB,EACtFR,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgBiN,uBACd,IACXnI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAkC,IAAzBzL,EAAgBkN,KACzBnC,SAAUA,IAAMrK,EAAa,QAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGS,IAAzBtM,EAAgBkN,MACfpI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUmC,WAAY7I,EAAE1B,OAAO6F,UACrF+C,KAAMxL,EAAgBmN,WACtBlI,UAAU,SACVuH,aAAcxM,EAAgBmN,WAAanN,EAAgBmN,WAAa,EACxEV,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgBmN,gBACd,IACXrI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,iBACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAyC,IAAhCzL,EAAgBoN,YACzBrC,SAAUA,IAAMrK,EAAa,eAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGgB,IAAhCtM,EAAgBoN,aACftI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUqC,kBAAmB/I,EAAE1B,OAAO6F,UAC5F+C,KAAMxL,EAAgBqN,kBACtBpI,UAAU,SACVuH,aAAcxM,EAAgBqN,kBAAoBrN,EAAgBqN,kBAAoB,EACtFZ,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgBqN,uBACd,IACXvI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAkC,IAAzBzL,EAAgBsN,KACzBvC,SAAUA,IAAMrK,EAAa,QAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGS,IAAzBtM,EAAgBsN,MACfxI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUuC,WAAYjJ,EAAE1B,OAAO6F,UACrF+C,KAAMxL,EAAgBuN,WACtBtI,UAAU,SACVuH,aAAcxM,EAAgBuN,WAAavN,EAAgBuN,WAAa,EACxEd,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgBuN,gBACd,IACXzI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,WACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAmC,IAA1BzL,EAAgBwN,MACzBzC,SAAUA,IAAMrK,EAAa,SAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGU,IAA1BtM,EAAgBwN,OACf1I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUyC,YAAanJ,EAAE1B,OAAO6F,UACtF+C,KAAMxL,EAAgByN,YACtBxI,UAAU,SACVuH,aAAcxM,EAAgByN,YAAczN,EAAgByN,YAAc,EAC1EhB,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgByN,iBACd,IACX3I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,kBACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAA0C,IAAjCzL,EAAgB0N,aACzB3C,SAAUA,IAAMrK,EAAa,gBAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGiB,IAAjCtM,EAAgB0N,cACf5I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAU2C,mBAAoBrJ,EAAE1B,OAAO6F,UAC7F+C,KAAMxL,EAAgB2N,mBACtB1I,UAAU,SACVuH,aAAcxM,EAAgB2N,mBAAqB3N,EAAgB2N,mBAAqB,EACxFlB,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgB2N,wBACd,IACX7I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,SACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAgC,IAAvBzL,EAAgB4N,GACzB7C,SAAUA,IAAMrK,EAAa,MAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGO,IAAvBtM,EAAgB4N,IACf9I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAU6C,SAAUvJ,EAAE1B,OAAO6F,UACnF+C,KAAMxL,EAAgB6N,SACtB5I,UAAU,SACVuH,aAAcxM,EAAgB6N,SAAW7N,EAAgB6N,SAAW,EACpEpB,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgB6N,cACd,IACX/I,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,WACJE,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVR,SAAmC,IAA1BzL,EAAgB8N,MACzB/C,SAAUA,IAAMrK,EAAa,SAC7ByL,QAAQ,UACRC,SAAS,UACTC,cAAe,KACfC,YAAa,WAGU,IAA1BtM,EAAgB8N,OACfhJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,SACEqG,KAAK,QACLR,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAU+C,YAAazJ,EAAE1B,OAAO6F,UACtF+C,KAAMxL,EAAgB+N,YACtB9I,UAAU,SACVuH,aAAcxM,EAAgB+N,YAAc/N,EAAgB+N,YAAc,EAC1EtB,IAAI,IACJC,IAAI,KACJC,KAAK,OAEPzH,EAAAA,EAAAA,KAAA,MAAAF,SAAKhF,EAAgB+N,iBACd,MAEqB,YAAhC/N,EAAgBwF,aAChBV,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,uBAClCE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,cAAaD,SAAC,qFAC3BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mCAAkCD,SAAA,EAC/CE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,oBACHpE,GACCsE,EAAAA,EAAAA,KAAC8I,EAAAA,GAAM,CAAC/I,UAAU,kBAChBgJ,QAAS3D,EACT7B,MAAO3H,EACPiK,SAlfLmD,IACnBnN,EAAmBmN,GACnB7K,QAAQC,IAAI,kCAAmC4K,EAAe,EAiftCC,cAAc,EACdvC,YAAY,kBAAiB5G,SAC9B,WACC,SAIN,OAGRF,EAAAA,EAAAA,MAAA,WAASG,UAAU,sBAAqBD,SAAA,EACtCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,wCACJE,EAAAA,EAAAA,KAAA,SAAOuD,MAAOzI,EAAgBoO,aAAe,GAAIrD,SAAWzG,GAAMrE,GAAmB+K,IAAQ,IAAUA,EAAUoD,YAAa9J,EAAE1B,OAAO6F,gBAGzIvD,EAAAA,EAAAA,KAAA,WAASD,UAAU,eAAcD,SACT,SAArBkF,GAA8BhF,EAAAA,EAAAA,KAAA,UAAQD,UAAU,kBAAkBE,QAASgF,EAAgBnF,SAAC,kBAAwBE,EAAAA,EAAAA,KAAA,UAAQD,UAAU,kBAAkBE,QAAS9E,EAAe2E,SAAC,sBAGpL,QAMP,C","sources":["components/whiteLabel/advancedSearch/TopProperties.js","components/whiteLabel/b2bModals/KYCInput.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport KYCInput from '../b2bModals/KYCInput'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport { set } from 'react-ga'\n\nconst TopProperties = ({ setListingSelection, fetchData, agentFavourites, loadUserData, addAgentFavourite, deleteAgentFavourite,\n  propertyFilters, setPropertyFilters, addAgentSearch, properties, setProperties, loadProperties, loading,\n  propertyInputShow, handlePropertyInputShow, handlePropertyInputClose, toggleStatus, loadPrimaryData, primarySearchDetails, setPrimarySearchDetails,\n  selectedPrimary, setSelectedPrimary }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set view for the table\n  const [propertyViewFormat, setPropertyViewFormat] = useState('Table')\n\n  const [selectedProperties, setSelectedProperties] = useState(null)\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // state for detail view on property\n  const [propertyDetails, setPropertyDetails] = useState('Details')\n\n  const imageRefs = useRef(new Map())\n\n\n\n  // creat\n  useEffect(() => {\n    const filters = JSON.parse(localStorage.getItem('top-property-filters'))\n    const propertyData = JSON.parse(localStorage.getItem('top-properties'))\n    if (filters && propertyData) {\n      setPropertyFilters(filters)\n      setProperties(propertyData)\n    }\n  }, [])\n\n\n\n  const handleVisitUrl = (url) => {\n    // Create a new anchor element\n    const link = document.createElement('a')\n\n    // Set the URL\n    link.href = url\n\n    // Set the target\n    link.target = '_blank'\n\n    // Set rel to noreferrer to prevent sending the referrer\n    link.rel = 'noreferrer'\n\n    // Set window features\n    link.windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Append the link to the body\n    document.body.appendChild(link)\n\n    // Simulate a click on the link\n    link.click()\n\n    // Remove the link from the body\n    document.body.removeChild(link)\n  }\n\n  // function to move to the listings\n  const goToListing = (item) => {\n    console.log('postcode ->', item.property_data.postcode)\n    window.localStorage.setItem('listing-postcode', JSON.stringify(item.property_data.postcode))\n    window.localStorage.setItem('listing-route', JSON.stringify('On'))\n    fetchData()\n    setListingSelection('Property insights')\n    navigate('/agents/listing-generator')\n  }\n\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 50\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 10.5,\n  })\n\n\n  // set current page when you click icon\n  const handlePropertyClick = (property) => {\n    console.log('selectd property ->', property)\n    setSelectedProperties(property)\n  }\n\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n  const mapNumberToWord = (number) => {\n    // const value = number * 10s\n    if (number > 0.9) return 'Outstanding'\n    if (number > 0.8) return 'Excellent'\n    if (number > 0.7) return 'Very good'\n    if (number > 0.6) return 'Good'\n    if (number > 0.5) return 'Quite good'\n    if (number > 0.4) return 'Average'\n    if (number > 0.3) return 'Below average'\n    if (number > 0.2) return 'Bad'\n    if (number > 0.1) return 'Poor'\n    return 'Terrible'\n  }\n\n\n\n\n  return (\n\n    <>\n      <section className='top-properties'>\n\n        <section className='top-properties-filters'>\n          <div className='filter-block mobile'>\n            <button onClick={handlePropertyInputShow}>Edit search</button>\n          </div>\n\n        </section>\n\n        {!loading ?\n          <section className='top-property-results'>\n            <div className='top-property-title'>\n              <h3>\n                {properties ?\n                  `${properties.length} matching properties${properties[0] && properties[0].school ? ` near to ${properties[0].school.school_name}` : ''}`\n                  : ''\n                }\n              </h3>\n              <div className='view-selectors'>\n                <button className='edit-search' onClick={handlePropertyInputShow}>Edit search</button>\n                <div className={`icon-box ${propertyViewFormat === 'Table' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Table')}>\n                  <div className='icon' id='table'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Map' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Map')}>\n                  <div className='icon' id='map'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Grid' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Grid')}>\n                  <div className='icon' id='grid'></div>\n                </div>\n              </div>\n            </div>\n\n\n            {propertyViewFormat === 'Table' && properties ?\n              <div className='property-table-view'>\n                <div className='top-property-table'>\n                  <div className='table-headers'>\n                    <div id='column1' className='column'>\n                      <h5>#</h5>\n                    </div>\n                    <div id='column2' className='column' >\n                      <h5>Address</h5>\n                    </div>\n                    <div id='column3' className='column'>\n                      <h5>Postcode</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column4' className='column'>\n                      <h5>Area</h5>\n                    </div>\n                    <div id='column5' className='column'>\n                      <h5>Added</h5>\n                    </div>\n                    <div id='column6' className='column'>\n                      <h5>Price</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column7' className='column'>\n                      <h5>Bedrooms</h5>\n                    </div>\n                    <div id='column8' className='column'>\n                      <h5>Agent</h5>\n                    </div>\n                    {propertyFilters && propertyFilters.search_type === 'Wittle' ?\n                      <div id='column9' className='column'>\n                        <h5>Score</h5>\n                      </div>\n                      :\n                      <div id='column9' className='column'>\n                        <h5>Distance (m)</h5>\n                      </div>\n                    }\n                  </div>\n                  <hr className='property-divider' />\n                  <div className='table-detail'>\n                    {properties ? properties.map((item, index) => {\n                      return (\n                        <>\n                          <div className='table-content'>\n                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{index + 1}</h5>\n                            </div>\n                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.displayAddress}</h5>\n                            </div>\n                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.postcode}</h5>\n                            </div>\n                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.persona_data_list && !item.school ? item.persona_data_list[0].district : item.persona_data_list && item.school ? item.persona_data_list.district : ''}</h5>\n                            </div>\n                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.added_revised === null ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised}</h5>\n                            </div>\n                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.price}</h5>\n                            </div>\n                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.bedrooms}</h5>\n                            </div>\n                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.agent}</h5>\n                            </div>\n                            {propertyFilters && propertyFilters.search_type === 'Wittle' ?\n                              <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                <h5>{item.overall_lifestyle_score ? (item.overall_lifestyle_score / 10).toFixed(2) : ''}</h5>\n                              </div>\n                              :\n                              <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                <h5>{item.school && item.distance_meters ? (item.distance_meters).toFixed(0) : ''}</h5>\n                              </div>}\n                            <div id='column10' className='column'>\n                              <button onClick={() => goToListing(item)}>Go</button>\n                              {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n\n\n                            </div>\n                          </div>\n                          <hr className='property-divider' />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n                  </div>\n\n                </div>\n                {properties ?\n                  <ReactPaginate\n                    pageCount={Math.ceil(properties.length / 50)}\n                    onPageChange={handlePageClick}\n                    containerClassName={'pagination'}\n                    activeClassName={'active'}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    pageRangeDisplayed={0}\n                    breakLabel={'...'}\n                  />\n                  : ''}\n\n              </div>\n              : propertyViewFormat === 'Map' && properties ?\n                <div className='property-map-view'>\n                  <div className='map-block'>\n\n                    <div className='grid-list'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-content'>\n                              <div className='grid-left'>\n                                <img className='property-image' alt='property-image' loading='lazy' onClick={() => handleVisitUrl(item.property_data.url)} src={item.property_data.images} />\n                              </div>\n                              <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                                <h5 className='title' onClick={() => handleVisitUrl(item.property_data.url)}>{index + 1}. {item.property_data.displayAddress}</h5>\n                                <h5 className='sub-title'>Bedrooms: {item.property_data.bedrooms}</h5>\n                                <h5 className='sub-title'>Price: {item.property_data.price}</h5>\n                                {propertyFilters && propertyFilters.search_type === 'Wittle' ?\n                                  <h5 className='sub-title'>Score: {item.overall_lifestyle_score ? (item.overall_lifestyle_score / 10).toFixed(2) : ''}</h5>\n                                  :\n                                  <h5 className='sub-title'>Distance: {item && item.distance_meters ? (item.distance_meters).toFixed(0) : ''}m</h5>\n                                }\n                                {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n\n                              </div>\n                            </div>\n                            <hr className=\"dividing-line\" />\n                          </>\n                        )\n                      }).slice(startIndex, endIndex) : ''}\n                    </div>\n\n                    <div className=\"map-section\">\n                      <ReactMapGL\n                        {...viewport}\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                        mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                        onViewportChange={viewport => {\n                          setViewport(viewport)\n                        }}\n                        center={viewport}\n                        onMove={evt => setViewport(evt.viewport)}\n                        className=\"profile-map\"\n                      >\n                        {properties &&\n                          properties.map((item, index) => (\n                            <Marker\n                              key={index}\n                              id={item.id}\n                              longitude={item.property_data.longitude}\n                              latitude={item.property_data.latitude}\n                              onClick={() => handlePropertyClick(item)}\n                            >\n                              <div className=\"poi-background\">{index + 1}</div>\n                            </Marker>\n                          )).slice(startIndex, endIndex)}\n\n                        {selectedProperties ?\n                          <Popup\n                            longitude={selectedProperties.property_data.longitude}\n                            latitude={selectedProperties.property_data.latitude}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedProperties(null)}\n\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>{selectedProperties.property_data.displayAddress}</h5>\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                        }\n                      </ReactMapGL>\n                    </div>\n                  </div>\n                  {properties ?\n                    <ReactPaginate\n                      pageCount={Math.ceil(properties.length / 50)}\n                      onPageChange={handlePageClick}\n                      containerClassName={'pagination'}\n                      activeClassName={'active'}\n                      previousLabel={'<'}\n                      nextLabel={'>'}\n                      pageRangeDisplayed={0}\n                      breakLabel={'...'}\n                    />\n                    : ''}\n                </div>\n\n                : propertyViewFormat === 'Grid' && properties ?\n                  <div className='property-grid-view'>\n                    <div className='property-grid-items'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-item'>\n                              <div className='property-item-left'>\n                                <img className='property-item-image' alt='property-image' loading='lazy' onClick={() => handleVisitUrl(item.property_data.url)} src={item.property_data.images} />\n                                <div className='property-core-info'>\n                                  {propertyFilters.channel === 'Sales' ?\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> </h3> :\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> pcm</h3>\n                                  }\n                                  {propertyFilters && propertyFilters.search_type === 'Wittle' && item.overall_lifestyle_score ?\n                                    <h3 className='match-score'>🔥 {item.overall_lifestyle_score ? (item.overall_lifestyle_score * 10).toFixed(0) : ''}% match</h3>\n                                    : <h3 className='match-score'>{item.school && item.distance_meters ? (item.distance_meters).toFixed(0) : ''}m away</h3>\n                                  }\n                                  {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n                                </div>\n                              </div>\n                              <div className='property-item-right'>\n                                <div className='detail-selections'>\n                                  <div className='key-selectors'>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Details' ? '700' : '500' }} onClick={() => setPropertyDetails('Details')}>Details</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Insights' ? '700' : '500' }} onClick={() => setPropertyDetails('Insights')}>Insights</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Floorplan' ? '700' : '500' }} onClick={() => setPropertyDetails('Floorplan')}>Floorplan</h3>\n                                    <button onClick={() => goToListing(item)}>Explore</button>\n\n\n                                  </div>\n                                  <div className='action'>\n                                  </div>\n                                </div>\n                                {propertyDetails === 'Details' ?\n\n                                  <div className='property-body'>\n                                    <h2 className='property-title'>{item.property_data.displayAddress}, {item.persona_data_list && !item.school ? item.persona_data_list[0].district : item.persona_data_list && !item.school ? item.persona_data_list.district : ''}</h2>\n                                    <h3 className='added-details'>{item.property_data.added_revised ? `Added on ${item.property_data.added_revised}` : `Reduced on ${item.property_data.reduced_revised}`}</h3>\n                                    <div className='key-elements'>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bed'></div>\n                                        <h3>{item.property_data.bedrooms} bedrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bath'></div>\n                                        <h3>{item.property_data.bathrooms} bathrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='size'></div>\n                                        <h3>{item.property_data.size} sq. ft</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='type'></div>\n                                        <h3>{item.property_data.propertyType}</h3>\n                                      </div>\n                                    </div>\n                                    <div className='property-features'>\n                                      <h3 className='features-title'>Features</h3>\n                                      <div className='feature-list'>\n                                        {item.property_data && item.property_data.features ? item.property_data.features.split(', ').map((feature, index) => (\n                                          <li key={index} className='feature-item'>{feature}</li>\n                                        )) : ''}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  : propertyDetails === 'Insights' ?\n                                    <div className='property-body'>\n                                      {item.persona_data_list && !item.school ?\n                                        <div className='insights-body'>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='primaries'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].primary_percentile)} for primary schools</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='secondaries'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].secondary_percentile)} for secondary schools</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='parks'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].park_area_percentile)} for access to parks</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='gyms'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].gym_percentile)} for access to gyms</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='pubs'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].pub_percentile)} for access to pubs</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='restaurants'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].restaurant_percentile)} for restaurants</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='crime'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].crime_percentile)} for crime rates</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='tubes'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].tube_percentile)} for tube access</h3>\n                                          </div>\n                                          <div className='insight-row'>\n                                            <div className='insight-icon' id='evs'></div>\n                                            <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].ev_percentile)} for EV access</h3>\n                                          </div>\n                                        </div>\n                                        :\n                                        item.persona_data_list && item.school ?\n                                          <div className='insights-body'>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='primaries'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.primary_percentile)} for primary schools</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='secondaries'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.secondary_percentile)} for secondary schools</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='parks'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.park_area_percentile)} for access to parks</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='gyms'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.gym_percentile)} for access to gyms</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='pubs'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.pub_percentile)} for access to pubs</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='restaurants'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.restaurant_percentile)} for restaurants</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='crime'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.crime_percentile)} for crime rates</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='tubes'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.tube_percentile)} for tube access</h3>\n                                            </div>\n                                            <div className='insight-row'>\n                                              <div className='insight-icon' id='evs'></div>\n                                              <h3 className='insight'>{mapNumberToWord(item.persona_data_list.ev_percentile)} for EV access</h3>\n                                            </div>\n                                          </div>\n                                          :\n                                          <div className='insight-row'>\n                                            <div className='insight-icon'>😕</div>\n                                            <h3 className='insight'>No data to show</h3>\n                                          </div>\n                                      }\n                                    </div>\n                                    : propertyDetails === 'Floorplan' ?\n                                      <div className='property-body'>\n                                        <div className='floorplan-body' onClick={() => handleVisitUrl(item.property_data.floorplan_url)} style={{ backgroundImage: `url(${item.property_data.floorplan_url})` }}></div>\n                                      </div>\n                                      : ''}\n\n\n\n                              </div>\n                            </div>\n                          </>\n                        )\n                      }).slice(startIndex, endIndex)\n\n                        : ''}\n\n                    </div>\n                    {properties ?\n                      <ReactPaginate\n                        pageCount={Math.ceil(properties.length / 50)}\n                        onPageChange={handlePageClick}\n                        containerClassName={'pagination'}\n                        activeClassName={'active'}\n                        previousLabel={'<'}\n                        nextLabel={'>'}\n                        pageRangeDisplayed={0}\n                        breakLabel={'...'}\n                      />\n                      : ''}\n                  </div>\n\n                  : !properties ?\n                    <div className='no-properties'>\n                      <h1>🔎 Start a search to see some properties</h1>\n                      <button className='edit-search' onClick={handlePropertyInputShow}>Start search</button>\n                    </div>\n\n                    : ''}\n\n\n          </section>\n          : loading ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </section>\n      <KYCInput\n        propertyInputShow={propertyInputShow}\n        handlePropertyInputClose={handlePropertyInputClose}\n        propertyFilters={propertyFilters}\n        setPropertyFilters={setPropertyFilters}\n        loadProperties={loadProperties}\n        toggleStatus={toggleStatus}\n        loadPrimaryData={loadPrimaryData}\n        primarySearchDetails={primarySearchDetails}\n        setPrimarySearchDetails={setPrimarySearchDetails}\n        selectedPrimary={selectedPrimary}\n        setSelectedPrimary={setSelectedPrimary}\n      />\n\n\n    </>\n\n  )\n}\n\nexport default TopProperties","/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport { Modal } from 'react-bootstrap'\nimport ReactSwitch from 'react-switch'\nimport Select from 'react-select'\n\n\nconst KYCInput = ({ propertyInputShow, handlePropertyInputClose, propertyFilters, setPropertyFilters, adjustedFilters, loadProperties, toggleStatus, previousLocation, editAgentSearch,\n  primarySearchDetails, setPrimarySearchDetails, selectedPrimary, setSelectedPrimary }) => {\n\n  const formatSize = (size) => {\n    if (size === null) return ''\n\n    const num = parseFloat(size)\n    return num % 1 === 0 ? num.toString() : num.toFixed(1)\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000', '2'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n  // borough list\n  const boroughs = ['Barking and Dagenham', 'Barnet', 'Bexley', 'Brent', 'Camden', 'Croydon', 'Ealing', 'Enfield', 'Greenwich', 'Havering', 'Kensington and Chelsea',\n    'Hertfordshire', 'Hillingdon', 'Hounslow', 'Islington', 'Lambeth', 'Lewisham', 'Merton', 'Southwark', 'Sutton', 'Waltham Forest', 'Westminster',\n    'Hackney', 'City of London', 'Hammersmith and Fulham', 'Wandsworth', 'Tower Hamlets', 'Bromley', 'Haringey', 'Kingston upon Thames', 'Newham', 'Redbridge', 'Richmond upon Thames']\n\n  // property type list\n  const propertyTypeList = ['Flat', 'Apartment', 'Terraced', 'Semi-Detached', 'Detached', 'House', 'End of Terrace', 'Maisonette', 'Studio', 'Retirement Property', 'Ground Flat',\n    'Penthouse', 'Bungalow', 'Town House', 'Detached Bungalow', 'Duplex']\n\n\n  const schoolChange = selectedOption => {\n    setSelectedPrimary(selectedOption)\n    console.log('selected primary for search -> ', selectedOption)\n    // Additional actions on select, e.g., form updates, API calls, etc.\n  }\n\n  const schoolOptions = primarySearchDetails && Array.isArray(primarySearchDetails)\n    ? primarySearchDetails.map(school => ({\n      label: school.school_name,\n      value: school,\n    }))\n    : []\n\n\n\n  return (\n\n    <>\n      <Modal show={propertyInputShow} onHide={handlePropertyInputClose} backdrop='static' className='KYC-input-modal'>\n        <Modal.Body>\n          {propertyFilters ?\n\n            <section className='overall-body'>\n              <section className='input-header'>\n                <div className='input-title'>\n                  <h1>Find a property based on what matters to you</h1>\n                  <h1 className='close-modal' onClick={handlePropertyInputClose}>X</h1>\n                </div>\n              </section>\n              <section className='input-main'>\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Search details</h2>\n                  <div className='selection-block-single'>\n                    <h3>Channel</h3>\n                    <select className='dropdown' value={propertyFilters.channel || 'Sales'} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, channel: e.target.value }))}>\n                      <option>Sales</option>\n                      <option>Lettings</option>\n                    </select>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Area</h3>\n                    <select className='dropdown' value={propertyFilters.area || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, area: e.target.value }))}>\n                      <option value=''>All</option>\n                      {boroughs.map((borough, index) => (\n                        <option key={index} value={borough}>{borough}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Property details</h2>\n                  <div className='selection-block-double'>\n                    <h3>Price</h3>\n                    {propertyFilters.channel === 'Lettings' ?\n                      <div className='double-dropdowns'>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_min || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                        >\n                          <option value={0}>No min</option>\n                          {rentalPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_max || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                        >\n                          <option value={10000000}>No max</option>\n                          {rentalPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n\n                      </div>\n                      : propertyFilters.channel === 'Sales' ?\n                        <div className='double-dropdowns'>\n                          <select\n                            className='dropdown'\n                            value={propertyFilters.rental_price_min || ''}\n                            onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                          >\n                            <option value={0}>No min</option>\n                            {salesPrices.map((price, index) => (\n                              <option key={index} value={price}>\n                                <NumericFormat\n                                  value={price}\n                                  displayType={'text'}\n                                  thousandSeparator={true}\n                                  prefix={'£'}\n                                />\n                              </option>\n                            ))}\n                          </select>\n                          <select\n                            className='dropdown'\n                            value={propertyFilters.rental_price_max || ''}\n                            onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                          >\n                            <option value={1000000000}>No max</option>\n                            {salesPrices.map((price, index) => (\n                              <option key={index} value={price}>\n                                <NumericFormat\n                                  value={price}\n                                  displayType={'text'}\n                                  thousandSeparator={true}\n                                  prefix={'£'}\n                                />\n                              </option>\n                            ))}\n                          </select>\n\n                        </div>\n                        : ''}\n                  </div>\n                  <div className='selection-block-double'>\n                    <h3>Bedrooms</h3>\n                    <div className='double-dropdowns'>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.bedrooms_min || null}\n                        onChange={(e) => setPropertyFilters(prevData => ({\n                          ...prevData,\n                          bedrooms_min: e.target.value ? parseInt(e.target.value, 10) : null,\n                        }))}\n                      >\n                        <option value={null}>No min</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                      </select>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.bedrooms_max || null}\n                        onChange={(e) => setPropertyFilters(prevData => ({\n                          ...prevData,\n                          bedrooms_max: e.target.value ? parseInt(e.target.value, 10) : null,\n                        }))}\n                      >\n                        <option value={null}>No max</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Property type</h3>\n                    <select className='dropdown' value={propertyFilters.propertyType || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, propertyType: e.target.value }))}>\n                      <option value=''>All</option>\n                      {propertyTypeList.map((property, index) => (\n                        <option key={index} value={property}>{property}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Features</h3>\n                    <div className='select-box'>\n                      <input type=\"checkbox\" id=\"myCheckbox\" name=\"myCheckbox\" checked={propertyFilters.garden} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, garden: e.target.checked }))} />\n                      <label htmlFor=\"myCheckbox\">Garden</label>\n                    </div>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Size</h3>\n                    <input placeholder='Input min size' className='dropdown' value={formatSize(propertyFilters.size)}\n                      onChange={(e) => {\n                        const value = e.target.value\n                        setPropertyFilters(prevData => ({\n                          ...prevData,\n                          size: value ? parseFloat(value) : null,\n                        }))\n                      }}></input>\n                  </div>\n                </div>\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Advanced search type</h2>\n                  <p className='explanation'>Choose how you want to tailor your search</p>\n                  <div className='section-search-buttons'>\n                    <button className='selector' value='Wittle' onClick={(e) => setPropertyFilters(prevData => ({ ...prevData, search_type: e.target.value }))}>Wittle</button>\n                    <button className='selector' value='Amenity' onClick={(e) => setPropertyFilters(prevData => ({ ...prevData, search_type: e.target.value }))}>Amenity</button>\n                  </div>\n                </div>\n                {propertyFilters.search_type === 'Wittle' ?\n                  <div className='input-section'>\n                    <h2 className='section-sub-title'>Lifestyle details</h2>\n                    <p className='explanation'>Select what you want to include as part of your search and how much they matter</p>\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Primary schools</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.primaries === true}\n                        onChange={() => toggleStatus('primaries')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.primaries === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, primaries_score: e.target.value }))}\n                          name={propertyFilters.primaries_score}\n                          className='slider'\n                          defaultValue={propertyFilters.primaries_score ? propertyFilters.primaries_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.primaries_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Secondary schools</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.secondaries === true}\n                        onChange={() => toggleStatus('secondaries')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.secondaries === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, secondaries_score: e.target.value }))}\n                          name={propertyFilters.secondaries_score}\n                          className='slider'\n                          defaultValue={propertyFilters.secondaries_score ? propertyFilters.secondaries_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.secondaries_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Parks</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.parks === true}\n                        onChange={() => toggleStatus('parks')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.parks === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, parks_score: e.target.value }))}\n                          name={propertyFilters.parks_score}\n                          className='slider'\n                          defaultValue={propertyFilters.parks_score ? propertyFilters.parks_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.parks_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Playgrounds</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.playgrounds === true}\n                        onChange={() => toggleStatus('playgrounds')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.playgrounds === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, playgrounds_score: e.target.value }))}\n                          name={propertyFilters.playgrounds_score}\n                          className='slider'\n                          defaultValue={propertyFilters.playgrounds_score ? propertyFilters.playgrounds_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.playgrounds_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Gyms</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.gyms === true}\n                        onChange={() => toggleStatus('gyms')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.gyms === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, gyms_score: e.target.value }))}\n                          name={propertyFilters.gyms_score}\n                          className='slider'\n                          defaultValue={propertyFilters.gyms_score ? propertyFilters.gyms_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.gyms_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Restaurants</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.restaurants === true}\n                        onChange={() => toggleStatus('restaurants')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.restaurants === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, restaurants_score: e.target.value }))}\n                          name={propertyFilters.restaurants_score}\n                          className='slider'\n                          defaultValue={propertyFilters.restaurants_score ? propertyFilters.restaurants_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.restaurants_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Pubs</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.pubs === true}\n                        onChange={() => toggleStatus('pubs')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.pubs === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, pubs_score: e.target.value }))}\n                          name={propertyFilters.pubs_score}\n                          className='slider'\n                          defaultValue={propertyFilters.pubs_score ? propertyFilters.pubs_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.pubs_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Tubes</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.tubes === true}\n                        onChange={() => toggleStatus('tubes')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.tubes === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, tubes_score: e.target.value }))}\n                          name={propertyFilters.tubes_score}\n                          className='slider'\n                          defaultValue={propertyFilters.tubes_score ? propertyFilters.tubes_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.tubes_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Supermarkets</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.supermarkets === true}\n                        onChange={() => toggleStatus('supermarkets')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.supermarkets === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, supermarkets_score: e.target.value }))}\n                          name={propertyFilters.supermarkets_score}\n                          className='slider'\n                          defaultValue={propertyFilters.supermarkets_score ? propertyFilters.supermarkets_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.supermarkets_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>EVs</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.ev === true}\n                        onChange={() => toggleStatus('ev')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.ev === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, ev_score: e.target.value }))}\n                          name={propertyFilters.ev_score}\n                          className='slider'\n                          defaultValue={propertyFilters.ev_score ? propertyFilters.ev_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.ev_score}</h3>\n                      </div> : ''}\n                    <div className='selection-block-single lifestyle'>\n                      <h3>Crime</h3>\n                      <ReactSwitch\n                        checked={propertyFilters.crime === true}\n                        onChange={() => toggleStatus('crime')}\n                        onColor='#ED6B86'\n                        offColor='#D5D5D5'\n                        uncheckedIcon={null}\n                        checkedIcon={null}\n                      />\n                    </div>\n                    {propertyFilters.crime === true ?\n                      <div className='slider-container'>\n                        <input\n                          type='range'\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, crime_score: e.target.value }))}\n                          name={propertyFilters.crime_score}\n                          className='slider'\n                          defaultValue={propertyFilters.crime_score ? propertyFilters.crime_score : 0}\n                          min='0'\n                          max='10'\n                          step='1'>\n                        </input>\n                        <h3>{propertyFilters.crime_score}</h3>\n                      </div> : ''}\n                  </div>\n                  : propertyFilters.search_type === 'Amenity' ?\n                    <div className='input-section'>\n                      <h2 className='section-sub-title'>Lifestyle details</h2>\n                      <p className='explanation'>Select what you want to include as part of your search and how much they matter</p>\n                      <div className='selection-block-single lifestyle'>\n                        <h3>Primary schools</h3>\n                        {primarySearchDetails ?\n                          <Select className='select-dropdown'\n                            options={schoolOptions}\n                            value={selectedPrimary}\n                            onChange={schoolChange}\n                            isSearchable={true}\n                            placeholder=\"Select a School\"\n                          >School</Select>\n                          : ''}\n                      </div>\n                    </div>\n\n                    : ''}\n\n              </section>\n              <section className='search-name-section'>\n                <h3>Give your search a name to save it</h3>\n                <input value={propertyFilters.search_name || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, search_name: e.target.value }))}></input>\n              </section>\n\n              <section className='input-footer'>\n                {previousLocation === 'Edit' ? <button className='load-properties' onClick={editAgentSearch}>Load results</button> : <button className='load-properties' onClick={loadProperties}>Load results</button>}\n              </section>\n            </section>\n            : ''}\n\n\n        </Modal.Body>\n      </Modal >\n\n    </>\n\n  )\n}\n\nexport default KYCInput"],"names":["_ref","setListingSelection","fetchData","agentFavourites","loadUserData","addAgentFavourite","deleteAgentFavourite","propertyFilters","setPropertyFilters","addAgentSearch","properties","setProperties","loadProperties","loading","propertyInputShow","handlePropertyInputShow","handlePropertyInputClose","toggleStatus","loadPrimaryData","primarySearchDetails","setPrimarySearchDetails","selectedPrimary","setSelectedPrimary","navigate","useNavigate","propertyViewFormat","setPropertyViewFormat","useState","selectedProperties","setSelectedProperties","showPopup","setShowPopup","iconId","setIconId","propertyDetails","setPropertyDetails","useRef","Map","useEffect","filters","JSON","parse","localStorage","getItem","propertyData","handleVisitUrl","url","link","document","createElement","href","target","rel","windowFeatures","body","appendChild","click","removeChild","goToListing","item","console","log","property_data","postcode","window","setItem","stringify","currentPage","setCurrentPage","startIndex","endIndex","viewport","setViewport","latitude","longitude","zoom","iconSetting","e","parseInt","id","handlePageClick","data","selected","mapNumberToWord","number","_jsxs","_Fragment","children","className","_jsx","onClick","Loading","length","school","school_name","search_type","map","index","displayAddress","persona_data_list","district","added_revised","reduced_revised","price","bedrooms","agent","overall_lifestyle_score","toFixed","distance_meters","some","fav","rightmove_id","slice","ReactPaginate","pageCount","Math","ceil","onPageChange","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","alt","src","images","onMouseEnter","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","handlePropertyClick","property","Popup","closeOnClick","onClose","channel","NumericFormat","value","displayType","thousandSeparator","prefix","style","fontWeight","bathrooms","size","propertyType","features","split","feature","primary_percentile","secondary_percentile","park_area_percentile","gym_percentile","pub_percentile","restaurant_percentile","crime_percentile","tube_percentile","ev_percentile","floorplan_url","backgroundImage","KYCInput","adjustedFilters","previousLocation","editAgentSearch","salesPrices","rentalPrices","schoolOptions","Array","isArray","label","Modal","show","onHide","backdrop","Body","onChange","prevData","area","borough","rental_price_min","rental_price_max","bedrooms_min","bedrooms_max","type","name","checked","garden","htmlFor","placeholder","num","parseFloat","toString","formatSize","ReactSwitch","primaries","onColor","offColor","uncheckedIcon","checkedIcon","primaries_score","defaultValue","min","max","step","secondaries","secondaries_score","parks","parks_score","playgrounds","playgrounds_score","gyms","gyms_score","restaurants","restaurants_score","pubs","pubs_score","tubes","tubes_score","supermarkets","supermarkets_score","ev","ev_score","crime","crime_score","Select","options","selectedOption","isSearchable","search_name"],"sourceRoot":""}