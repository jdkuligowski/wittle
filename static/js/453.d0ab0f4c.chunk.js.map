{"version":3,"file":"static/js/453.d0ab0f4c.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/whiteLabel/EPCMatcher/PropertyFinder.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst PropertyFinder = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setLoading(true)\n    setSearch(false)\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function for adding favourites based on relevant row\n  const addFavourite = async (property) => {\n    if (isUserAuth()) {\n      try {\n        const { data } = await axios.post('/api/epc_favourite/', {\n          postcode: property.postcode,\n          address: property.address,\n          category: sessionName,\n        }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('session name->', sessionName)\n\n        if (data.message && !isFavourited(property)) {\n          setFavouritedProperties(prevState => [...prevState, { postcode: property.postcode, address: property.address, category: sessionName }])\n        }\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to delete favourites\n  const deleteFavourite = async (property) => {\n    if (isUserAuth()) {\n\n      try {\n        const { data } = await axios.delete('/api/epc_favourite/', {\n          data: {\n            postcode: property.postcode,\n            address: property.address,\n          },\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        if (data.message) {\n          setFavouritedProperties(prevState => prevState.filter(fav => fav.postcode !== property.postcode || fav.address !== property.address))\n        }\n      } catch (error) {\n        console.error('Error deleting favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n\n  function isFavourited(item) {\n    return favouritedProperties.some(fav => fav.postcode === item.postcode && fav.address === item.address)\n  }\n\n\n  const fetchFavourites = async () => {\n    try {\n      const { data } = await axios.get('/api/epc_favourite/', {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setFavouritedProperties(data)\n    } catch (error) {\n      console.error('Error fetching favourites:', error)\n    }\n  }\n\n  useEffect(() => {\n    fetchFavourites()\n  }, [])\n\n\n\n\n  useEffect(() => {\n    if (sessionName) {\n      sessionStorage.setItem('sessionName', sessionName)\n    }\n  }, [sessionName])\n\n\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    // window.location.reload()\n\n    navigate('/login')\n  }\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ?\n                <section className='property-finder'>\n                  <div className='listing-options'>\n                    <div className='listing-buttons'>\n                      {/* <h5 onClick={() => setFavouriteTab('Listings')} style={{ borderBottom: favouriteTab === 'Listings' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: favouriteTab === 'Listings' ? '0.5em' : 'initial', fontWeight: favouriteTab === 'Listings' ? '700' : '400' }}>Listings</h5>\n                      <h5 onClick={() => setFavouriteTab('Property prospects')} style={{ borderBottom: favouriteTab === 'Property prospects' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: favouriteTab === 'Property prospects' ? '0.5em' : 'initial', fontWeight: favouriteTab === 'Property prospects' ? '700' : '400' }}>Property prospects</h5> */}\n                    </div>\n                    <div className='logout-button' onClick={removeItemFromStorage}>\n                      <div className='logout-icon'></div>\n                    </div>\n\n\n                  </div>\n                  <hr className='title-line' />\n                  <div className='epc-matcher'>\n                    <div className='input-section'>\n                      <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n                      {!loading ?\n                        <>\n                          <div className='single-input-block'>\n\n                            <div className='input-block large'>\n                              <h3>Property category</h3>\n                              <input\n                                type=\"text\"\n                                value={sessionName}\n                                onChange={e => setSessionName(e.target.value)}\n                                placeholder=\"Enter category\"\n                              />\n                            </div>\n                          </div>\n                          <div className='double-input-block'>\n\n                            <div className='input-block half'>\n                              <h3>Postcode</h3>\n                              <input\n                                type=\"text\"\n                                value={postcodeSubstring}\n                                onChange={e => setPostcodeSubstring(e.target.value)}\n                                placeholder=\"Enter postcode...\"></input>\n                            </div>\n                            <div className='input-block half'>\n                              <h3>Road name</h3>\n                              <input\n                                type=\"text\"\n                                value={roadSubstring}\n                                onChange={e => setRoadSubstring(e.target.value)}\n                              ></input>\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n\n                            <div className='input-block large'>\n                              <h3>Efficiency (numbers) or Rating (letters)</h3>\n                              <select onChange={(e) => setInputType(e.target.value)}>\n                                <option>Efficiency</option>\n                                <option>Rating</option>\n                              </select>\n                            </div>\n                          </div>\n                          {inputType === 'Efficiency' ?\n                            <>\n                              <div className='double-input-block'>\n\n                                <div className='input-block half'>\n                                  <h3>Current Energy Efficiency</h3>\n                                  <input\n                                    type=\"number\"\n                                    value={currentEnergy}\n                                    onChange={e => setCurrentEnergy(e.target.value)}\n                                  ></input>\n                                </div>\n                                <div className='input-block half'>\n                                  <h3>Potential Energy Efficiency</h3>\n                                  <input\n                                    type=\"number\"\n                                    value={potentialEnergy}\n                                    onChange={e => setPotentialEnergy(e.target.value)}\n                                  ></input>\n                                </div>\n                              </div>\n                            </>\n                            :\n                            <>\n                              <div className='double-input-block'>\n\n                                <div className='input-block half'>\n                                  <h3>Current Energy Rating</h3>\n                                  <input\n                                    type=\"text\"\n                                    value={currentEnergy}\n                                    onChange={e => setCurrentEnergy(e.target.value)}\n                                  ></input>\n                                </div>\n                                <div className='input-block half'>\n                                  <h3>Potential Energy Rating</h3>\n                                  <input\n                                    type=\"text\"\n                                    value={potentialEnergy}\n                                    onChange={e => setPotentialEnergy(e.target.value)}\n                                  ></input>\n                                </div>\n                              </div>\n                            </>\n                          }\n                          <div className='search-section'>\n                            <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n                          </div>\n                        </>\n                        :\n                        <Loading />}\n                    </div>\n\n\n                    <div className='property-results'>\n                      <div className='results-block'>\n                        {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n                          search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                            search && propertyList.length > 0 ?\n                              <>\n                                <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                                {/* <div className='results-headers'>\n                                  <h5 id='column1' className='column'>#</h5>\n                                  <div id='column2' className='column'>\n                                    <h5>Address</h5>\n                                  </div>\n                                  <div id='column3' className='column'>\n                                    <h5>Postcode</h5>\n                                  </div>\n                                  <div id='column4' className='column'>\n                                    <h5>Last inspection</h5>\n                                  </div>\n                                  <div id='column5' className='column'>\n                                    <h5></h5>\n                                  </div>\n                                </div>\n                                <hr className='property-divider' /> */}\n                                <div className='results-details'>\n                                  {propertyList ? propertyList\n                                    .map((item, index) => {\n                                      return (\n                                        <>\n                                          <div className='results-content' key={index}>\n                                            <h5 className='row-value'>{index + 1}</h5>\n                                            <div className='results-items'>\n                                              <div className='results-line'>\n                                                <div className='result-icon' id='catchment'></div>\n                                                <div className='results-text'>\n                                                  <h5 className='text-title' >Address: </h5>\n                                                  <h5 className='text-result'>{item.address}</h5>\n                                                </div>\n                                              </div>\n                                              <div className='results-line'>\n                                                <div className='result-icon' id='house'></div>\n                                                <div className='results-text'>\n                                                  <h5 className='text-title'>Floor area: </h5>\n                                                  <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                                </div>\n                                              </div>\n                                              <div className='results-line'>\n                                                <div className='result-icon' id='location'></div>\n                                                <div className='results-text'>\n                                                  <h5 className='text-title'>Postcode: </h5>\n                                                  <h5 className='text-result'>{item.postcode}</h5>\n                                                </div>\n                                              </div>\n                                              <div className='results-line'>\n                                                <div className='result-icon' id='building'></div>\n                                                <div className='results-text'>\n                                                  <h5 className='text-title'>Floor level: </h5>\n                                                  <h5 className='text-result'>{item.final_floor_level}</h5>\n                                                </div>\n                                              </div>\n                                              <div className='results-line'>\n                                                <div className='result-icon' id='search'></div>\n                                                <div className='results-text'>\n                                                  <h5 className='text-title'>last inspection: </h5>\n                                                  <h5 className='text-result'>{item.inspection_date}</h5>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div className='column' id='column5'>\n                                              {isFavourited(item) ?\n                                                <button className='added' onClick={() => deleteFavourite(item, index)}>✔️</button> :\n                                                <button className='add' onClick={() => addFavourite(item, index)}>+</button>\n                                              }\n                                            </div>\n                                            {/* <div className='column' id='column1'>\n                                              <h5>{index + 1}</h5>\n                                            </div>\n                                            <div className='column' id='column2'>\n                                              <h5>{item.address}</h5>\n                                            </div>\n                                            <div className='column' id='column3'>\n                                              <h5>{item.postcode}</h5>\n                                            </div>\n                                            <div className='column' id='column4'>\n                                              <h5>{item.inspection_date}</h5>\n                                            </div>\n                                            <div className='column' id='column5'>\n                                              {isFavourited(item) ?\n                                                <button className='added' onClick={() => deleteFavourite(item, index)}>✔️</button> :\n                                                <button className='add' onClick={() => addFavourite(item, index)}>+</button>\n                                              }\n                                            </div> */}\n                                          </div>\n                                          <hr className='property-divider' />\n                                        </>\n                                      )\n                                    })\n                                    : ''}\n\n                                </div>\n                              </>\n                              : ''}\n                      </div>\n\n\n                    </div>\n                  </div>\n\n                </section>\n                : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n                  <section className='property-finder'>\n                    <h1>🙏 Thanks for enjoying Wittle!</h1>\n                    <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n                  </section>\n\n                  : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n                    <section className='property-finder'>\n                      <h1>🙏 Thanks for enjoying Wittle!</h1>\n                      <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n                    </section>\n\n                    : ''}\n\n            </>\n\n          </section>\n        </section>\n      </section>\n\n\n\n\n    </>\n  )\n}\n\nexport default PropertyFinder"],"names":["Loading","_jsx","className","children","src","require","alt","axios","defaults","xsrfCookieName","xsrfHeaderName","PropertyFinder","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","loading","setLoading","search","setSearch","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","channel","setChannel","inputType","setInputType","favouritedProperties","setFavouritedProperties","sessionName","setSessionName","sessionStorage","getItem","useEffect","isUserAuth","async","data","get","getUserToken","headers","Authorization","getAccessToken","console","log","error","getUser","increaseUsageCount","post","status","message","isFavourited","item","some","fav","postcode","address","fetchFavourites","setItem","_Fragment","_jsxs","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","usage_stats","package","epc_monthly_count","onClick","token","localStorage","removeItem","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","index","id","floor_area","final_floor_level","delete","prevState","deleteFavourite","category","addFavourite"],"sourceRoot":""}