{"version":3,"file":"static/js/503.ef7c9143.chunk.js","mappings":"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","sources":["components/whiteLabel/propertyList.js/LandingPage.js","components/whiteLabel/variableSummaries/VariablesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nimport NavBar from '../../tools/NavBar'\nimport { isUserAuth, getUserToken , getAccessToken } from '../../auth/Auth'\nimport Footer from '../../tools/Footer'\nimport { NumericFormat } from 'react-number-format'\nimport WhiteSidebar from '../WhiteSidebar'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport VariablesPage from '../variableSummaries/VariablesPage'\nimport WhiteComparison from '../comparisonSection/WhiteComparison'\nimport NavBarRevised from '../../tools/NavBarRevised'\n\n\n\n\n\nconst LandingPage = () => {\n\n  // ? Section 1: Define states\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for handling locations\n  const location = useLocation()\n  const [historyStack, setHistoryStack] = useState([])\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for company data\n  const [companyData, setCompany] = useState()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('My properties')\n  const [profileDetail, setProfileDetail] = useState('My properties')  \n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  // searchbar state\n  const [searchQuery, setSearchQuery] = useState('')\n  const [statusFilter, setStatusFilter] = useState('')\n\n  // set sort fields\n  const [sortField, setSortField] = useState(null)\n\n  // set state for lisrt of properties\n  const [propertyList, setPropertyList] = useState()\n\n  // Set state for the total value of properties\n  const [propertyValueSum, setPropertyValueSum] = useState(0)\n\n  // set state for determining the channel\n  const [channel, setChannel] = useState()\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setCompany(data.company)\n          console.log('company ->', data.company)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n  \n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n  // ? Section 3: Get properties\n  const loadProperties = () => {\n    const getProperties = async () => {\n      try {\n        const { data } = await axios.get(`/api/white_properties/${companyData}`, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('agent property data ->', data)\n    \n        if (data && Array.isArray(data) && data.length > 0) {\n          setPropertyList(data)\n          const totalValue = data.reduce((acc, property) => acc + (property.price || 0), 0)\n          setPropertyValueSum(totalValue.toFixed(1))\n          setChannel(data[0].status === 'Let' ? 'Rent' : 'Sale')\n        } else {\n          console.log('No property data available')\n          // handle the case when data is not available or not in expected format\n        }\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    }\n    getProperties()\n  }\n  \n\n  // carry out calculation to load user data\n  useEffect(() => {\n    if (userData) {\n      loadProperties()\n    }\n  }, [userData])\n\n\n  \n\n\n  // ? Section4: Other useful functions\n  const sortByField = (field) => {\n    setSortField(field)\n  }\n\n\n\n  return (\n    <>\n      \n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        {propertyList ? \n          <>\n            <section className='profile-summary'>\n              <div className='welcome'>\n                <h1>You have {propertyList ? propertyList.length : ''} properties saved</h1>\n              </div>\n\n            </section>\n          \n            <section className='profile-property-list'>\n              <div className='search-section'>\n                <div className='search-section-left'>\n                  <h3>Search</h3>\n                  <input value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} placeholder='Type property name'></input>\n                </div>\n                {/* <div className='search-section-right'>\n                <h3>Status</h3>\n                <input value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)} placeholder='All'></input>\n              </div> */}\n              </div>\n              <div className='agent-property-list'>\n                <div className='property-block'>\n                  <div className='property-table-headers'>\n                    <h5 id='column1'>Property</h5>\n                    <div id='column2' className='sort-section'>\n                      <h5>Street name</h5>\n                      <h5 className='sort' onClick={() => sortByField('name')}>↕️</h5>\n                    </div>                    \n                    <div id='column3' className='sort-section'>\n                      <h5>Price</h5>\n                      <h5 className='sort' onClick={() => sortByField('price')}>↕️</h5>\n                    </div>\n                    <h5 id='column5'>Action</h5>\n                  </div>\n                  <div className='property-table-details'>\n                    {propertyList ? propertyList\n                      .filter((item) => item.name.toLowerCase().includes(searchQuery.toLowerCase()))\n                    // .filter((item) => item.status.toLowerCase().includes(statusFilter.toLowerCase()))\n                      .sort((a, b) => {\n                        if (sortField === 'name') {\n                          return a.name.localeCompare(b.name)\n                        } else if (sortField === 'price') {\n                          return a.price - b.price\n                        } else if (sortField === 'date') {\n                          return new Date(a.date) - new Date(b.date) // This works if your date is in format 'YYYY/MM/DD'\n                        }\n                        return 0\n                      })\n                      .map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-content' key={index}>\n                              <div className='column' id='column1'>\n                                <div className='property-image' style={{ backgroundImage: `url(${item.image})` }}></div>\n                              </div>\n                              <div className='column' id='column2'>\n                                <h5>{item.name}</h5>\n                              </div>\n                              <div className='column' id='column3'>\n\n                                <h5><NumericFormat value={item.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /></h5>\n                              </div>\n                              {/* <div className='column' id='column4'>\n                              <h5>{item.status}</h5>\n                            </div> */}\n                              {/* <div className='column' id='column5'>\n                              <h5>2023/06/18</h5>\n                            </div> */}\n                              <div className='column' id='column6'>\n                                <button onClick={() => navigate(`/agents/property/${item.postcode}`)}>View</button>\n                              </div>\n                            </div>\n                            <hr className='property-divider' />\n                          </>\n                        )\n                      })\n                      : ''}\n                  </div>\n                </div>\n\n              </div>\n            </section>\n          </>\n          \n          : \n          <section className='profile-summary'>\n            <div className='welcome'>\n              <h1>You don&apos;t have any properties saved yet</h1>\n            </div>\n\n          </section>\n        }\n      </section>\n\n    </>\n  )\n}\n\nexport default LandingPage","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken , getAccessToken } from '../../auth/Auth'\n\nimport PrimaryDetails from '../propertyDetails/componentDetails/PrimaryDetails'\nimport SecondaryDetails from '../propertyDetails/componentDetails/SecondaryDetails'\nimport RestaurantDetails from '../propertyDetails/componentDetails/RestaurantDetails'\nimport FitnessDetails from '../propertyDetails/componentDetails/FitnessDetails'\nimport SupermarketDetails from '../propertyDetails/componentDetails/SupermarketDetails'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport EVDetails from '../propertyDetails/componentDetails/EVDetails'\nimport PubDetails from '../propertyDetails/componentDetails/PubDetails'\n\n\n\n\nconst VariablesPage = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for property info\n  const [propertyData, setPropertyData] = useState()\n\n  // set state for company data\n  const [company, setCompany] = useState()\n\n  // set state for schools data\n  const [primaryData, setPrimaryData] = useState()\n  const [primaryData1, setPrimaryData1] = useState()\n  const [secondaryData, setSecondaryData] = useState()\n  const [secondaryData1, setSecondaryData1] = useState()\n\n  // set states for lifestyle information\n  const [restaurants, setRestaurants] = useState()\n  const [gyms, setGyms] = useState()\n  const [pubs, setPubs] = useState()\n  const [supermarkets, setSupermarkets] = useState()\n\n  // set states for lifestyle information\n  const [tubes, setTubes] = useState()\n  const [ev, setEv] = useState()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Variables')\n  const [profileDetail, setProfileDetail] = useState('Variables')  \n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(true)\n\n\n\n  // ? Section 2: load user data\n  // user data\n  const loadUserData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      try {\n        const getUser = async () => {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setCompany(data.company)\n        }\n        getUser()\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n  // ? Section 3: Load primaries data\n  const loadPrimaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getPrimaries = async () => {\n        const { data } = await axios.get('/api/primaries/')\n        const sortedData = data.sort((a, b) => b.pupils_at_standard - a.pupils_at_standard)\n        setPrimaryData(sortedData)\n        console.log('all primaries ->', sortedData)\n      }\n      getPrimaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    loadPrimaryData()\n  }, [])\n\n\n  // ? Section 4: Load secondary school data  \n  const loadSecondaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getSecondaries = async () => {\n        const { data } = await axios.get('/api/secondaries/')\n        const sortedData = data.sort((a, b) => b.total_pass_rate - a.total_pass_rate)\n        setSecondaryData(sortedData)\n        console.log('all secondaries ->', sortedData)\n      }\n      getSecondaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n  \n  useEffect(() =>{\n    loadSecondaryData()\n  }, [])\n\n\n  // ? Section 5: Load and sort restaurant data\n  const loadRestaurantData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/restaurants/')\n        const sortedData = data.sort((a, b) => b.rating - a.rating)\n        setRestaurants(sortedData)\n        console.log('all restaurants ->', sortedData)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n  \n  useEffect(() =>{\n    loadRestaurantData()\n  }, [])\n\n\n  // ? Section 6: Load and sort fitness data\n  const loadFitnessData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/gyms/')\n        // console.log('gyms data ->', data)\n        setGyms(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadFitnessData()\n  }, [])\n\n\n  // ? Section 7: Load and sort supermarket data\n  const loadSupermarketData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/supermarkets/')\n        console.log('supermarkets data ->', data)\n        setSupermarkets(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadSupermarketData()\n  }, [])\n\n\n  // ? Section 8: Load and sort EV data\n  const loadEVdata = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/evs/')\n        console.log('ev data ->', data)\n        setEv(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadEVdata()\n  }, [])\n\n\n  \n\n  // ? Section 8: Load and sort Pubs data\n  const loadPubs = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/pubs/')\n        console.log('pubs data ->', data)\n        setPubs(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadPubs()\n  }, [])\n\n\n\n\n\n\n  return (\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n          userData={userData}\n        />    \n        {profileDetail === 'Variables' ?  \n          <section className='variables-section'>\n\n            <h1>Explore the different variables</h1>\n            <div className='variables-list'>\n              <div className='variable' onClick={() => setProfileDetail('Primary schools')}>\n                <h1>🏫</h1>\n                <h3>Primary schools</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Secondary schools')}>\n                <h1>👨‍🏫</h1>\n                <h3>Secondary schools</h3>\n              </div>\n              <div className='variable'>\n                <h1>🎓</h1>\n                <h3>6th form colleges</h3>\n              </div>\n              <div className='variable'>\n                <h1>🌳</h1>\n                <h3>Green space</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Restaurants')}>\n                <h1>🍽</h1>\n                <h3>Restaurants</h3>\n              </div>\n              <div className='variable'>\n                <h1>🚇</h1>\n                <h3>Tube stations</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('EVs')}>\n                <h1>⛽️</h1>\n                <h3>Electric vehicles</h3>\n              </div>\n              <div className='variable'onClick={() => setProfileDetail('Pubs')}>\n                <h1>🍻</h1>\n                <h3>Pubs</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Fitness')}>\n                <h1>🏋️‍♂️</h1>\n                <h3>Fitness</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Supermarkets')}>\n                <h1>🛒</h1>\n                <h3>Supermarkets</h3>\n              </div>\n            </div>\n\n          </section>\n          : profileDetail === 'Primary schools' ?\n            <section  className='variables-single-section'>\n              <PrimaryDetails\n                primaryData1={primaryData}\n                setPrimaryData1={setPrimaryData}\n                listType={'long list'}\n                setProfileDetail={setProfileDetail}\n              />\n\n            </section>\n\n            : profileDetail === 'Secondary schools' ?\n              <section  className='variables-single-section'>\n                <SecondaryDetails\n                  secondaryData1={secondaryData}\n                  setSecondaryData1={setSecondaryData}\n                  listType={'long list'}\n                />\n\n              </section>\n\n              : profileDetail === 'Restaurants' ?\n                <section  className='variables-single-section'>\n                  <RestaurantDetails\n                    restaurants1={restaurants}\n                    setRestaurants1={setRestaurants}\n                    listType={'long list'}\n                  />\n\n                </section>\n\n                : profileDetail === 'Fitness' ?\n                  <section  className='variables-single-section'>\n                    <FitnessDetails\n                      gyms1={gyms}\n                      setGyms1={setGyms}\n                      listType={'long list'}\n                    />\n\n                  </section>\n\n                  : profileDetail === 'Supermarkets' ?\n                    <section className='variables-single-section'>\n                      <SupermarketDetails\n                        supermarkets1={supermarkets}\n                        setSupermarkets1={setSupermarkets}\n                        listType={'long list'}\n                      />\n\n                    </section>\n\n                    : profileDetail === 'EVs' ?\n                      <section className='variables-single-section'>\n                        <EVDetails\n                          ev1={ev}\n                          setEv1={setEv}\n                          listType={'long list'}\n                        />\n\n                      </section>\n\n                      : profileDetail === 'Pubs' ?\n                        <section className='variables-single-section'>\n                          <PubDetails\n                            pubs1={pubs}\n                            setPubs1={setPubs}\n                            listType={'long list'}\n                          />\n\n                        </section>\n\n\n\n                        : ''}\n    \n\n      </section>\n    </>\n  )\n}\n\nexport default VariablesPage"],"names":["LandingPage","navigate","useNavigate","historyStack","setHistoryStack","useLocation","useState","userData","setUserData","companyData","setCompany","errors","setErrors","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","searchQuery","setSearchQuery","statusFilter","setStatusFilter","sortField","setSortField","propertyList","setPropertyList","propertyValueSum","setPropertyValueSum","channel","setChannel","useEffect","isUserAuth","async","data","axios","get","getUserToken","headers","Authorization","getAccessToken","console","log","company","error","getUser","Array","isArray","length","totalValue","reduce","acc","property","price","toFixed","status","getProperties","sortByField","field","_jsx","_Fragment","children","_jsxs","className","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","value","onChange","e","target","placeholder","id","onClick","filter","item","name","toLowerCase","includes","sort","a","b","localeCompare","Date","date","map","index","style","backgroundImage","image","NumericFormat","displayType","thousandSeparator","prefix","postcode","VariablesPage","propertyData","setPropertyData","primaryData","setPrimaryData","primaryData1","setPrimaryData1","secondaryData","setSecondaryData","secondaryData1","setSecondaryData1","restaurants","setRestaurants","gyms","setGyms","pubs","setPubs","supermarkets","setSupermarkets","tubes","setTubes","ev","setEv","loadUserData","loadPrimaryData","sortedData","pupils_at_standard","getPrimaries","loadSecondaryData","total_pass_rate","getSecondaries","loadRestaurantData","rating","getData","loadFitnessData","loadSupermarketData","loadEVdata","loadPubs","PrimaryDetails","listType","SecondaryDetails","RestaurantDetails","restaurants1","setRestaurants1","FitnessDetails","gyms1","setGyms1","SupermarketDetails","supermarkets1","setSupermarkets1","EVDetails","ev1","setEv1","PubDetails","pubs1","setPubs1"],"sourceRoot":""}