{"version":3,"file":"static/js/573.bddfb928.chunk.js","mappings":"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","sources":["components/whiteLabel/b2bModals/KYCInput.js","components/whiteLabel/propertyList.js/TopProperties.js"],"sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport { Modal } from 'react-bootstrap'\nimport ReactSwitch from 'react-switch'\n\n\nconst KYCInput = ({ propertyInputShow, handlePropertyInputClose, propertyFilters, setPropertyFilters, boroughs, rentalPrices, salesPrices,\n  propertyTypeList, loadProperties, toggleStatus }) => {\n\n\n\n  return (\n\n    <>\n      <Modal show={propertyInputShow} onHide={handlePropertyInputClose} backdrop='static' className='KYC-input-modal'>\n        <Modal.Body>\n          <section className='overall-body'>\n            <section className='input-header'>\n              <div className='input-title'>\n                <h1>Find a property based on what matters to you</h1>\n                <h1 className='close-modal' onClick={handlePropertyInputClose}>X</h1>\n              </div>\n            </section>\n\n            <section className='input-main'>\n              <div className='input-section'>\n                <h2 className='section-sub-title'>Search details</h2>\n                <div className='selection-block-single'>\n                  <h3>Channel</h3>\n                  <select className='dropdown' value={propertyFilters.channel || 'Sales'} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, channel: e.target.value }))}>\n                    <option>Sales</option>\n                    <option>Rental</option>\n                  </select>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Area</h3>\n                  <select className='dropdown' value={propertyFilters.area || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, area: e.target.value }))}>\n                    <option value=''>All</option>\n                    {boroughs.map((borough, index) => (\n                      <option key={index} value={borough}>{borough}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className='input-section'>\n                <h2 className='section-sub-title'>Property details</h2>\n                <div className='selection-block-double'>\n                  <h3>Price</h3>\n                  {propertyFilters.channel === 'Rental' ?\n                    <div className='double-dropdowns'>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.rental_price_min || ''}\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                      >\n                        <option value={0}>No min</option>\n                        {rentalPrices.map((price, index) => (\n                          <option key={index} value={price}>\n                            <NumericFormat\n                              value={price}\n                              displayType={'text'}\n                              thousandSeparator={true}\n                              prefix={'£'}\n                            />\n                          </option>\n                        ))}\n                      </select>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.rental_price_max || ''}\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                      >\n                        <option value={10000000}>No max</option>\n                        {rentalPrices.map((price, index) => (\n                          <option key={index} value={price}>\n                            <NumericFormat\n                              value={price}\n                              displayType={'text'}\n                              thousandSeparator={true}\n                              prefix={'£'}\n                            />\n                          </option>\n                        ))}\n                      </select>\n\n                    </div>\n                    : propertyFilters.channel === 'Sales' ?\n                      <div className='double-dropdowns'>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_min || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                        >\n                          <option value={0}>No min</option>\n                          {salesPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_max || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                        >\n                          <option value={10000000}>No max</option>\n                          {salesPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n\n                      </div>\n                      : ''}\n                </div>\n                <div className='selection-block-double'>\n                  <h3>Bedrooms</h3>\n                  <div className='double-dropdowns'>\n                    <select\n                      className='dropdown'\n                      value={propertyFilters.bedrooms_min || ''}\n                      onChange={(e) => setPropertyFilters(prevData => ({\n                        ...prevData,\n                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                      }))}\n                    >\n                      <option value=''>No min</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                    </select>\n                    <select\n                      className='dropdown'\n                      value={propertyFilters.bedrooms_max || ''}\n                      onChange={(e) => setPropertyFilters(prevData => ({\n                        ...prevData,\n                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                      }))}\n                    >\n                      <option value=''>No max</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                    </select>\n                  </div>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Property type</h3>\n                  <select className='dropdown' value={propertyFilters.propertyType || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, propertyType: e.target.value }))}>\n                    <option value=''>All</option>\n                    {propertyTypeList.map((property, index) => (\n                      <option key={index} value={property}>{property}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Features</h3>\n                  <div className='select-box'>\n                    <input type=\"checkbox\" id=\"myCheckbox\" name=\"myCheckbox\" checked={propertyFilters.garden} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, garden: e.target.checked }))} />\n                    <label htmlFor=\"myCheckbox\">Garden</label>\n                  </div>\n                </div>\n                <div className='selection-block-single'>\n                  <h3>Size</h3>\n                  <input placeholder='Input min size' className='dropdown' value={propertyFilters.size || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, size: e.target.value }))}></input>\n                </div>\n              </div>\n              <div className='input-section'>\n                <h2 className='section-sub-title'>Lifestyle details</h2>\n                <p className='explanation'>Select what you want to include as part of your search and how much they matter</p>\n                <div className='selection-block-single lifestyle'>\n                  <h3>Primary schools</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.primaries === true}\n                    onChange={() => toggleStatus('primaries')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.primaries === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, primaries_score: e.target.value }))}\n                      name={propertyFilters.primaries_score}\n                      className='slider'\n                      defaultValue={propertyFilters.primaries_score ? propertyFilters.primaries_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.primaries_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Secondary schools</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.secondaries === true}\n                    onChange={() => toggleStatus('secondaries')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.secondaries === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, secondaries_score: e.target.value }))}\n                      name={propertyFilters.secondaries_score}\n                      className='slider'\n                      defaultValue={propertyFilters.secondaries_score ? propertyFilters.secondaries_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.secondaries_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Parks</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.parks === true}\n                    onChange={() => toggleStatus('parks')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.parks === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, parks_score: e.target.value }))}\n                      name={propertyFilters.parks_score}\n                      className='slider'\n                      defaultValue={propertyFilters.parks_score ? propertyFilters.parks_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.parks_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Playgrounds</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.playgrounds === true}\n                    onChange={() => toggleStatus('playgrounds')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.playgrounds === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, playgrounds_score: e.target.value }))}\n                      name={propertyFilters.playgrounds_score}\n                      className='slider'\n                      defaultValue={propertyFilters.playgrounds_score ? propertyFilters.playgrounds_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.playgrounds_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Gyms</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.gyms === true}\n                    onChange={() => toggleStatus('gyms')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.gyms === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, gyms_score: e.target.value }))}\n                      name={propertyFilters.gyms_score}\n                      className='slider'\n                      defaultValue={propertyFilters.gyms_score ? propertyFilters.gyms_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.gyms_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Restaurants</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.restaurants === true}\n                    onChange={() => toggleStatus('restaurants')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.restaurants === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, restaurants_score: e.target.value }))}\n                      name={propertyFilters.restaurants_score}\n                      className='slider'\n                      defaultValue={propertyFilters.restaurants_score ? propertyFilters.restaurants_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.restaurants_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Pubs</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.pubs === true}\n                    onChange={() => toggleStatus('pubs')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.pubs === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, pubs_score: e.target.value }))}\n                      name={propertyFilters.pubs_score}\n                      className='slider'\n                      defaultValue={propertyFilters.pubs_score ? propertyFilters.pubs_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.pubs_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Tubes</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.tubes === true}\n                    onChange={() => toggleStatus('tubes')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.tubes === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, tubes_score: e.target.value }))}\n                      name={propertyFilters.tubes_score}\n                      className='slider'\n                      defaultValue={propertyFilters.tubes_score ? propertyFilters.tubes_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.tubes_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Supermarkets</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.supermarkets === true}\n                    onChange={() => toggleStatus('supermarkets')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.supermarkets === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, supermarkets_score: e.target.value }))}\n                      name={propertyFilters.supermarkets_score}\n                      className='slider'\n                      defaultValue={propertyFilters.supermarkets_score ? propertyFilters.supermarkets_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.supermarkets_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>EVs</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.ev === true}\n                    onChange={() => toggleStatus('ev')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.ev === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, ev_score: e.target.value }))}\n                      name={propertyFilters.ev_score}\n                      className='slider'\n                      defaultValue={propertyFilters.ev_score ? propertyFilters.ev_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.ev_score}</h3>\n                  </div> : ''}\n                <div className='selection-block-single lifestyle'>\n                  <h3>Crime</h3>\n                  <ReactSwitch\n                    checked={propertyFilters.crime === true}\n                    onChange={() => toggleStatus('crime')}\n                    onColor='#ED6B86'\n                    offColor='#D5D5D5'\n                    uncheckedIcon={null}\n                    checkedIcon={null}\n                  />\n                </div>\n                {propertyFilters.crime === true ?\n                  <div className='slider-container'>\n                    <input\n                      type='range'\n                      onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, crime_score: e.target.value }))}\n                      name={propertyFilters.crime_score}\n                      className='slider'\n                      defaultValue={propertyFilters.crime_score ? propertyFilters.crime_score : 0}\n                      min='0'\n                      max='10'\n                      step='1'>\n                    </input>\n                    <h3>{propertyFilters.crime_score}</h3>\n                  </div> : ''}\n              </div>\n\n            </section>\n\n            <section className='input-footer'>\n              <button className='load-properties' onClick={loadProperties}>Load results</button>\n            </section>\n          </section>\n\n\n        </Modal.Body>\n      </Modal >\n\n    </>\n\n  )\n}\n\nexport default KYCInput","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport KYCInput from '../b2bModals/KYCInput'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport { set } from 'react-ga'\n\nconst TopProperties = ({ setListingSelection, fetchData }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [loading, setLoading] = useState(false)\n\n  const [properties, setProperties] = useState()\n\n  // managing modal for properties to be removed from list\n  const [propertyInputShow, setPropertyInputShow] = useState(false)\n\n  // set view for the table\n  const [propertyViewFormat, setPropertyViewFormat] = useState('Table')\n\n  const [selectedProperties, setSelectedProperties] = useState(null)\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // state for detail view on property\n  const [propertyDetails, setPropertyDetails] = useState('Details')\n\n  // filter array for proeprties to search\n  const [propertyFilters, setPropertyFilters] = useState({\n    channel: 'Sales',\n    area: '',\n    persona: 'Young families',\n    propertyType: '',\n    garden: false,\n    size: '',\n    bedrooms_min: '',\n    bedrooms_max: '',\n    rental_price_min: '',\n    rental_price_max: '',\n    primaries: false,\n    primaries_score: null,\n    secondaries: false,\n    secondaries_score: null,\n    parks: false,\n    parks_score: null,\n    playgrounds: false,\n    playgrounds_score: null,\n    gyms: false,\n    gyms_score: null,\n    restaurants: false,\n    restaurants_score: null,\n    pubs: false,\n    pubs_score: null,\n    tubes: false,\n    tubes_score: null,\n    supermarkets: false,\n    supermarkets_score: null,\n    ev: false,\n    ev_score: null,\n    crime: false,\n    crime_score: null,\n  })\n\n\n  // create \n  useEffect(() => {\n    const filters = JSON.parse(localStorage.getItem('top-property-filters'))\n    const propertyData = JSON.parse(localStorage.getItem('top-properties'))\n    if (filters) {\n      setPropertyFilters(filters)\n      setProperties(propertyData)\n    }\n  }, [])\n\n\n  const loadProperties = async () => {\n    setLoading(true)\n    handlePropertyInputClose()\n\n    // Create the query string from propertyFilters state\n    const queryParams = new URLSearchParams()\n    Object.entries(propertyFilters).forEach(([key, value]) => {\n      // Exclude null or undefined values and the 'channel' key\n      if (value !== null && value !== undefined && key !== 'channel') {\n        queryParams.append(key, value)\n      }\n    })\n\n    try {\n      let url = ''\n      if (propertyFilters.channel === 'Rental') {\n        url = `/api/personas/rental/?${queryParams.toString()}`\n      } else if (propertyFilters.channel === 'Sales') {\n        url = `/api/personas/sales/?${queryParams.toString()}`\n      }\n\n      // Extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n\n      data.sort((a, b) => b.overall_lifestyle_score - a.overall_lifestyle_score)\n\n\n      console.log('combined data ->', data)\n      setProperties(data)\n      window.localStorage.setItem('top-properties', JSON.stringify(data))\n\n      window.localStorage.setItem('top-property-filters', JSON.stringify(propertyFilters))\n      setLoading(false)\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n  const handleVisitUrl = (url) => {\n    // Create a new anchor element\n    const link = document.createElement('a')\n\n    // Set the URL\n    link.href = url\n\n    // Set the target\n    link.target = '_blank'\n\n    // Set rel to noreferrer to prevent sending the referrer\n    link.rel = 'noreferrer'\n\n    // Set window features\n    link.windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Append the link to the body\n    document.body.appendChild(link)\n\n    // Simulate a click on the link\n    link.click()\n\n    // Remove the link from the body\n    document.body.removeChild(link)\n  }\n\n  // function to move to the listings\n  const goToListing = (item) => {\n    console.log('postcode ->', item.property_data.postcode)\n    window.localStorage.setItem('listing-postcode', JSON.stringify(item.property_data.postcode))\n    window.localStorage.setItem('listing-route', JSON.stringify('On'))\n    fetchData()\n    setListingSelection('Property insights')\n    navigate('/agents/listing-generator')\n  }\n\n  // close modal\n  const handlePropertyInputShow = () => {\n    setPropertyInputShow(true)\n  }\n\n  // show the modal\n  const handlePropertyInputClose = (e) => {\n    setPropertyInputShow(false)\n  }\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 50\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 10.5,\n  })\n\n\n  // set current page when you click icon\n  const handlePropertyClick = (property) => {\n    console.log('selectd property ->', property)\n    setSelectedProperties(property)\n  }\n\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n  // borough list\n  const boroughs = ['Barking and Dagenham', 'Barnet', 'Bexley', 'Brent', 'Camden', 'Croydon', 'Ealing', 'Enfield', 'Greenwich', 'Havering', 'Kensington and Chelsea',\n    'Hertfordshire', 'Hillingdon', 'Hounslow', 'Islington', 'Lambeth', 'Lewisham', 'Merton', 'Southwark', 'Sutton', 'Waltham Forest', 'Westminster',\n    'Hackney', 'City of London', 'Hammersmith and Fulham', 'Wandsworth', 'Tower Hamlets', 'Bromley', 'Haringey', 'Kingston upon Thames', 'Newham', 'Redbridge', 'Richmond upon Thames']\n\n  // property type list\n  const propertyTypeList = ['Flat', 'Apartment', 'Terraced', 'Semi-Detached', 'Detached', 'House', 'End of Terrace', 'Maisonette', 'Studio', 'Retirement Property', 'Ground Flat',\n    'Penthouse', 'Bungalow', 'Town House', 'Detached Bungalow', 'Duplex']\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setPropertyFilters(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === true ? false : true,\n    }))\n  }\n\n  const mapNumberToWord = (number) => {\n    // const value = number * 10s\n    if (number > 0.9) return 'Outstanding'\n    if (number > 0.8) return 'Excellent'\n    if (number > 0.7) return 'Very good'\n    if (number > 0.6) return 'Good'\n    if (number > 0.5) return 'Quite good'\n    if (number > 0.4) return 'Average'\n    if (number > 0.3) return 'Below average'\n    if (number > 0.2) return 'Bad'\n    if (number > 0.1) return 'Poor'\n    return 'Terrible'\n  }\n\n\n  return (\n\n    <>\n      <section className='top-properties'>\n\n        <section className='top-properties-filters'>\n          <div className='filter-block mobile'>\n            <button onClick={handlePropertyInputShow}>Edit search</button>\n          </div>\n\n        </section>\n\n        {!loading ?\n          <section className='top-property-results'>\n            <div className='top-property-title'>\n              <h3>{properties ? `${properties.length} matching properties` : ''}</h3>\n              <div className='view-selectors'>\n                <button className='edit-search' onClick={handlePropertyInputShow}>Edit search</button>\n                <div className={`icon-box ${propertyViewFormat === 'Table' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Table')}>\n                  <div className='icon' id='table'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Map' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Map')}>\n                  <div className='icon' id='map'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Grid' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Grid')}>\n                  <div className='icon' id='grid'></div>\n                </div>\n              </div>\n            </div>\n\n\n            {propertyViewFormat === 'Table' && properties ?\n              <div className='property-table-view'>\n                <div className='top-property-table'>\n                  <div className='table-headers'>\n                    <div id='column1' className='column'>\n                      <h5>#</h5>\n                    </div>\n                    <div id='column2' className='column' >\n                      <h5>Address</h5>\n                    </div>\n                    <div id='column3' className='column'>\n                      <h5>Postcode</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column4' className='column'>\n                      <h5>Area</h5>\n                    </div>\n                    <div id='column5' className='column'>\n                      <h5>Added</h5>\n                    </div>\n                    <div id='column6' className='column'>\n                      <h5>Price</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column7' className='column'>\n                      <h5>Bedrooms</h5>\n                    </div>\n                    <div id='column8' className='column'>\n                      <h5>Agent</h5>\n                    </div>\n                    <div id='column9' className='column'>\n                      <h5>Score</h5>\n                    </div>\n                  </div>\n                  <hr className='property-divider' />\n                  <div className='table-detail'>\n                    {properties ? properties.map((item, index) => {\n                      return (\n                        <>\n                          <div className='table-content'>\n                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{index + 1}</h5>\n                            </div>\n                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.displayAddress}</h5>\n                            </div>\n                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.postcode}</h5>\n                            </div>\n                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.persona_data_list[0].district}</h5>\n                            </div>\n                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.added_revised === null ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised}</h5>\n                            </div>\n                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.price}</h5>\n                            </div>\n                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.bedrooms}</h5>\n                            </div>\n                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.agent}</h5>\n                            </div>\n                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                            </div>\n                            <div id='column10' className='column'>\n                              <button onClick={() => goToListing(item)}>Go</button>\n                            </div>\n                          </div>\n                          <hr className='property-divider' />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n                  </div>\n\n                </div>\n                {properties ?\n                  <ReactPaginate\n                    pageCount={Math.ceil(properties.length / 50)}\n                    onPageChange={handlePageClick}\n                    containerClassName={'pagination'}\n                    activeClassName={'active'}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    pageRangeDisplayed={0}\n                    breakLabel={'...'}\n                  />\n                  : ''}\n\n              </div>\n              : propertyViewFormat === 'Map' && properties ?\n                <div className='property-map-view'>\n                  <div className='map-block'>\n\n                    <div className='grid-list'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-content'>\n                              <div className='grid-left'>\n                                <div className='property-image' onClick={() => handleVisitUrl(item.property_data.url)} style={{ backgroundImage: `url(${item.property_data.images})` }}></div>\n                              </div>\n                              <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                                <h5 className='title' onClick={() => handleVisitUrl(item.property_data.url)}>{index + 1}. {item.property_data.displayAddress}</h5>\n                                <h5 className='sub-title'>Bedrooms: {item.property_data.bedrooms}</h5>\n                                <h5 className='sub-title'>Price: {item.property_data.price}</h5>\n                                <h5 className='sub-title'>Score: {(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                              </div>\n                            </div>\n                            <hr className=\"dividing-line\" />\n                          </>\n                        )\n                      }).slice(startIndex, endIndex) : ''}\n                    </div>\n\n                    <div className=\"map-section\">\n                      <ReactMapGL\n                        {...viewport}\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                        mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                        onViewportChange={viewport => {\n                          setViewport(viewport)\n                        }}\n                        center={viewport}\n                        onMove={evt => setViewport(evt.viewport)}\n                        className=\"profile-map\"\n                      >\n                        {properties &&\n                          properties.map((item, index) => (\n                            <Marker\n                              key={index}\n                              id={item.id}\n                              longitude={item.property_data.longitude}\n                              latitude={item.property_data.latitude}\n                              onClick={() => handlePropertyClick(item)}\n                            >\n                              <div className=\"poi-background\">{index + 1}</div>\n                            </Marker>\n                          )).slice(startIndex, endIndex)}\n\n                        {selectedProperties ?\n                          <Popup\n                            longitude={selectedProperties.property_data.longitude}\n                            latitude={selectedProperties.property_data.latitude}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedProperties(null)}\n\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>{selectedProperties.property_data.displayAddress}</h5>\n                                {/* <p>{selectedProperties.master_cuisine}</p> */}\n                                {/* <p>{selectedProperties.rating} /5</p> */}\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                        }\n                      </ReactMapGL>\n                    </div>\n                  </div>\n                  {properties ?\n                    <ReactPaginate\n                      pageCount={Math.ceil(properties.length / 50)}\n                      onPageChange={handlePageClick}\n                      containerClassName={'pagination'}\n                      activeClassName={'active'}\n                      previousLabel={'<'}\n                      nextLabel={'>'}\n                      pageRangeDisplayed={0}\n                      breakLabel={'...'}\n                    />\n                    : ''}\n                </div>\n\n                : propertyViewFormat === 'Grid' && properties ?\n                  <div className='property-grid-view'>\n                    <div className='property-grid-items'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-item'>\n                              <div className='property-item-left'>\n                                <div className='property-item-image' onClick={() => handleVisitUrl(item.property_data.url)} style={{ backgroundImage: `url(${item.property_data.images})` }}></div>\n                                <div className='property-core-info'>\n                                  {propertyFilters.channel === 'Sales' ?\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> </h3> :\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> pcm</h3>\n                                  }\n                                  {item.overall_lifestyle_score ? <h3 className='match-score'>🔥 {(item.overall_lifestyle_score * 10).toFixed(0)}% match</h3> : ''}\n                                </div>\n                              </div>\n                              <div className='property-item-right'>\n                                <div className='detail-selections'>\n                                  <div className='key-selectors'>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Details' ? '700' : '500' }} onClick={() => setPropertyDetails('Details')}>Details</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Insights' ? '700' : '500' }} onClick={() => setPropertyDetails('Insights')}>Insights</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Floorplan' ? '700' : '500' }} onClick={() => setPropertyDetails('Floorplan')}>Floorplan</h3>\n                                    <button onClick={() => goToListing(item)}>Explore</button>\n\n\n                                  </div>\n                                  <div className='action'>\n                                  </div>\n                                </div>\n                                {propertyDetails === 'Details' ?\n\n                                  <div className='property-body'>\n                                    <h2 className='property-title'>{item.property_data.displayAddress}, {item.persona_data_list[0].district}</h2>\n                                    <h3 className='added-details'>{item.property_data.added_revised ? `Added on ${item.property_data.added_revised}` : `Reduced on ${item.property_data.reduced_revised}`}</h3>\n                                    <div className='key-elements'>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bed'></div>\n                                        <h3>{item.property_data.bedrooms} bedrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bath'></div>\n                                        <h3>{item.property_data.bathrooms} bathrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='size'></div>\n                                        <h3>{item.property_data.size} sq. ft</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='type'></div>\n                                        <h3>{item.property_data.propertyType}</h3>\n                                      </div>\n                                    </div>\n                                    <div className='property-features'>\n                                      <h3 className='features-title'>Features</h3>\n                                      <div className='feature-list'>\n                                        {item.property_data.features.split(', ').map((feature, index) => (\n                                          <li key={index} className='feature-item'>{feature}</li>\n                                        ))}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  : propertyDetails === 'Insights' ?\n                                    <div className='property-body'>\n                                      <div className='insights-body'>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='primaries'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].primary_percentile)} for primary schools</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='secondaries'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].secondary_percentile)} for secondary schools</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='parks'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].park_area_percentile)} for access to parks</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='gyms'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].gym_percentile)} for access to gyms</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='pubs'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].pub_percentile)} for access to pubs</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='restaurants'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].restaurant_percentile)} for restaurants</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='crime'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].crime_percentile)} for crime rates</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='tubes'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].tube_percentile)} for tube access</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='evs'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].ev_percentile)} for EV access</h3>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    : propertyDetails === 'Floorplan' ?\n                                      <div className='property-body'>\n                                        <div className='floorplan-body' onClick={() => handleVisitUrl(item.property_data.floorplan_url)} style={{ backgroundImage: `url(${item.property_data.floorplan_url})` }}></div>\n                                      </div>\n                                      : ''}\n\n\n\n                              </div>\n                            </div>\n                          </>\n                        )\n                      }).slice(startIndex, endIndex)\n\n                        : ''}\n\n                    </div>\n                    {properties ?\n                      <ReactPaginate\n                        pageCount={Math.ceil(properties.length / 50)}\n                        onPageChange={handlePageClick}\n                        containerClassName={'pagination'}\n                        activeClassName={'active'}\n                        previousLabel={'<'}\n                        nextLabel={'>'}\n                        pageRangeDisplayed={0}\n                        breakLabel={'...'}\n                      />\n                      : ''}\n                  </div>\n\n                  : !properties ?\n                    <div className='no-properties'>\n                      <h1>🔎 Start a search to see some properties</h1>\n                      <button className='edit-search' onClick={handlePropertyInputShow}>Start search</button>\n                    </div>\n\n                    : ''}\n\n\n          </section>\n          : loading ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </section>\n      <KYCInput\n        propertyInputShow={propertyInputShow}\n        handlePropertyInputClose={handlePropertyInputClose}\n        propertyFilters={propertyFilters}\n        setPropertyFilters={setPropertyFilters}\n        boroughs={boroughs}\n        salesPrices={salesPrices}\n        rentalPrices={rentalPrices}\n        propertyTypeList={propertyTypeList}\n        loadProperties={loadProperties}\n        toggleStatus={toggleStatus}\n      />\n\n\n    </>\n\n  )\n}\n\nexport default TopProperties"],"names":["_ref","propertyInputShow","handlePropertyInputClose","propertyFilters","setPropertyFilters","boroughs","rentalPrices","salesPrices","propertyTypeList","loadProperties","toggleStatus","_jsx","_Fragment","children","Modal","show","onHide","backdrop","className","Body","_jsxs","onClick","value","channel","onChange","e","prevData","target","area","map","borough","index","rental_price_min","price","NumericFormat","displayType","thousandSeparator","prefix","rental_price_max","bedrooms_min","bedrooms_max","propertyType","property","type","id","name","checked","garden","htmlFor","placeholder","size","ReactSwitch","primaries","onColor","offColor","uncheckedIcon","checkedIcon","primaries_score","defaultValue","min","max","step","secondaries","secondaries_score","parks","parks_score","playgrounds","playgrounds_score","gyms","gyms_score","restaurants","restaurants_score","pubs","pubs_score","tubes","tubes_score","supermarkets","supermarkets_score","ev","ev_score","crime","crime_score","setListingSelection","fetchData","navigate","useNavigate","loading","setLoading","useState","properties","setProperties","setPropertyInputShow","propertyViewFormat","setPropertyViewFormat","selectedProperties","setSelectedProperties","showPopup","setShowPopup","iconId","setIconId","propertyDetails","setPropertyDetails","persona","useEffect","filters","JSON","parse","localStorage","getItem","propertyData","handleVisitUrl","url","link","document","createElement","href","rel","windowFeatures","body","appendChild","click","removeChild","goToListing","item","console","log","property_data","postcode","window","setItem","stringify","handlePropertyInputShow","currentPage","setCurrentPage","startIndex","endIndex","viewport","setViewport","latitude","longitude","zoom","iconSetting","parseInt","handlePageClick","data","selected","mapNumberToWord","number","Loading","length","displayAddress","persona_data_list","district","added_revised","reduced_revised","bedrooms","agent","overall_lifestyle_score","toFixed","slice","ReactPaginate","pageCount","Math","ceil","onPageChange","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","style","backgroundImage","images","onMouseEnter","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","handlePropertyClick","Popup","closeOnClick","onClose","fontWeight","bathrooms","features","split","feature","primary_percentile","secondary_percentile","park_area_percentile","gym_percentile","pub_percentile","restaurant_percentile","crime_percentile","tube_percentile","ev_percentile","floorplan_url","KYCInput","async","queryParams","URLSearchParams","Object","entries","forEach","_ref2","key","undefined","append","toString","axios","get","headers","Authorization","getAccessToken","sort","a","b","error"],"sourceRoot":""}