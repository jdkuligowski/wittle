{"version":3,"file":"static/js/462.40bee5cc.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/b2bModals/RemoveProperties.js","components/whiteLabel/EPCMatcher/LeadGenSections/LeadGenSaved.js","components/whiteLabel/EPCMatcher/LeadGenerator.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/metaProps.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list!</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport { CarouselItem } from 'react-bootstrap'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl,\n  savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites, handleSavedActionShow, setLatestFavourites, setSavedActionShow }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState('Lettings')\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index] && channel === 'Lettings') {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      } else if (!matchingProperties[index] && channel === 'Sales') {\n        const matches = await liveSalesProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setMatchingProperties({})\n    setExpandedItems(new Set())\n    setLoading(true)\n    setSearch(false)\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n  const liveSalesProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function for adding favourites based on relevant row\n  const addPartialFavourite = async (epcData) => {\n    if (isUserAuth()) {\n      const random12DigitNumber = Math.floor(Math.random() * 1e12)\n      const newFavourites = [{\n        'rightmove_id': random12DigitNumber.toString(),\n        'postcode': epcData.postcode,\n        'address': epcData.address,\n        'agent': '',\n        'type': '',\n        'addedOn': '',\n        'propertyType': '',\n        'price': null,\n        'bathrooms': null,\n        'bedrooms': null,\n        'let_available_date': null,\n        'date_added_db': null,\n        'url': '',\n        'current_epc': epcData.current_energy_efficiency,\n        'potential_epc': epcData.potential_energy_efficiency,\n        'action': 'Saved',\n        'added_revised': null,\n        'reduced_revised': null,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setExpandedItems(new Set())\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className='buttons'>\n                                  {savedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                    <div className='saved-message'>\n                                      <h3>Saved</h3>\n                                    </div>\n                                    :\n                                    archivedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                      <div className='saved-message'>\n                                        <h3>Archived</h3>\n                                      </div>\n                                      :\n                                      <>\n                                        <div className='heart-icon' onClick={() => addPartialFavourite(item)} ></div>\n                                        <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                          {expandedItems.has(index) ? '-' : '+'}\n                                        </button>\n                                      </>\n                                  }\n                                </div>\n\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n      <SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\n\nexport default ManualMatcher","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst RemoveProperties = ({ propertyRemoveShow, handleRemovePropertyClose, removeProperty }) => {\n\n  const closeAndLeave = () => {\n    // setLeadGenSection('Saved properties')\n    handleRemovePropertyClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={propertyRemoveShow} onHide={handleRemovePropertyClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleRemovePropertyClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>Are you sure you don&apos;t want to see these properties any more?</h3>\n                <h3 className='sub-message'>Once you do this, they won&apos;t appear in your latest or saved properties.</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={removeProperty}>Remove</button>\n                <button className='stay' onClick={handleRemovePropertyClose}>Go back</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default RemoveProperties","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Select from 'react-select'\n\n\nconst LeadGenSaved = ({ savedProperties, userData, csvData, getCurrentDate, archiveFavourite, handleVisitUrl, loadUserData, setSavedProperties }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state to determine what kind of view we want to see on the page\n  const [savedPropertyView, setSavedPropertyView] = useState('Grid')\n\n  // state to determine whether the row has been expanded or not\n  const [expandedRows, setExpandedRows] = useState({})\n\n  // state to determmine whether the item is being edited or not\n  const [editModes, setEditModes] = useState({})\n\n  // state for the expanded row data\n  const [formData, setFormData] = useState({})\n\n\n  // Function to toggle row expansion\n  const toggleRowExpansion = (rightmoveId) => {\n    const item = savedProperties.find(prop => prop.rightmove_id === rightmoveId)\n    if (!expandedRows[rightmoveId]) {\n      setFormData({\n        owner_name: item.owner_name,\n        owner_email: item.owner_email,\n        owner_mobile: item.owner_mobile,\n        emails_sent: item.emails_sent,\n        letters_sent: item.letters_sent,\n        valuation_booked: item.valuation_booked,\n        notes: item.notes || '',\n      })\n    }\n    setExpandedRows(prevExpandedRows => ({\n      ...prevExpandedRows,\n      [rightmoveId]: !prevExpandedRows[rightmoveId],\n    }))\n  }\n\n  // Function to toggle edit mode\n  const toggleEditMode = rightmoveId => {\n    setEditModes(prevEditModes => ({\n      ...prevEditModes,\n      [rightmoveId]: !prevEditModes[rightmoveId],\n    }))\n  }\n\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to update the saved item: \n  const handleSave = async (rightmoveId) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.patch(`/api/epc_favourite/update_favourites/${rightmoveId}/`, formData, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        // // Assuming response.data contains the updated favorite\n        // const updatedFavorite = response.data\n\n        // // Update the local state\n        // setSavedProperties(prevProperties =>\n        //   prevProperties.map(prop =>\n        //     prop.rightmove_id === rightmoveId ? { ...prop, ...updatedFavorite } : prop\n        //   )\n        // )\n        loadUserData()\n        toggleEditMode(rightmoveId) // Exit edit mode\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  const handleDropdownChange = (selectedOption) => {\n    if (selectedOption.value === 'export') {\n      // Handle Export\n      // You might need to programmatically click a hidden CSVLink here\n      document.querySelector('.csv-link').click()\n    } else if (selectedOption.value === 'archive') {\n      // Handle Archive\n      archiveFavourite(userData.epc_favourites.map(fav => fav.rightmove_id))\n    }\n  }\n\n  const options = [\n    { value: 'export', label: 'Extract' },\n    { value: 'archive', label: 'Archive' }\n  ]\n\n  return (\n\n    <>\n      <div className='results-block'>\n        {savedProperties && savedProperties.length > 0 ?\n          <>\n            <div className='title-section'>\n              <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n              {userData && userData.epc_favourites && (\n\n                <>\n                  <Select\n                    className='select-dropdown'\n                    options={options}\n                    onChange={handleDropdownChange}\n                    isSearchable={false}\n                    placeholder=\"Select an action\"\n                  />\n                  <CSVLink\n                    data={csvData}\n                    className='export csv-link' // Added a class for easy selection\n                    filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                    style={{ display: 'none' }} // Hide the link as it's now triggered programmatically\n                  >\n                  </CSVLink>\n                </>\n              )}\n            </div>\n            <div className='results-table'>\n\n              <div className='results-headers'>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5>Price</h5>\n                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9' className='column'>\n                  <h5>Agent</h5>\n                </div>\n                <div id='column10' className='column'>\n                  <h5></h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              <div className='saved-properties'>\n\n                <div className='results-details'>\n                  {savedProperties ? savedProperties.map((item, index) => {\n                    const isRowExpanded = expandedRows[item.rightmove_id]\n                    const isEditMode = editModes[item.rightmove_id]\n\n                    return (\n                      <>\n                        <div className='results-content'>\n                          <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{index + 1}</h5>\n                          </div>\n                          <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.address}</h5>\n                          </div>\n                          <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.postcode}</h5>\n                          </div>\n                          <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                          </div>\n                          <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                          </div>\n                          <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.channel}</h5>\n                          </div>\n                          <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.price}</h5>\n                          </div>\n                          <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.bedrooms}</h5>\n                          </div>\n                          <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                            <h5>{item.agent}</h5>\n                          </div>\n                          {savedPropertyView === 'Grid' ?\n                            <div className='column' id='column10' onClick={() => toggleRowExpansion(item.rightmove_id)}>\n                              <h5 className='expander'>{isRowExpanded ? 'v' : '^'}</h5>\n                            </div>\n                            : savedPropertyView === 'Table' ?\n                              <>\n                              </>\n                              : ''}\n                        </div>\n                        {isRowExpanded && (\n                          <div className='expanded-tracking-details'>\n                            <div className='expanded-tracking-content'>\n                              <div className='tracking-left'>\n                                <div className='tracking-row'>\n                                  <h3 className='row-title'>Owner name: </h3>\n                                  {!isEditMode ? <h3 className='row-result'>{item.owner_name}</h3> : <input type='text' value={formData.owner_name} onChange={e => setFormData({ ...formData, owner_name: e.target.value })} className='row-input wide'></input>}\n                                </div>\n                                <div className='tracking-row'>\n                                  <h3 className='row-title'>Owner email: </h3>\n                                  {!isEditMode ? <h3 className='row-result'>{item.owner_email}</h3> : <input type='text' value={formData.owner_email} onChange={e => setFormData({ ...formData, owner_email: e.target.value })} className='row-input wide'></input>}\n                                </div>\n                                <div className='tracking-row'>\n                                  <h3 className='row-title'>Owner phone: </h3>\n                                  {!isEditMode ? <h3 className='row-result'>{item.owner_mobile}</h3> : <input type='text' value={formData.owner_mobile} onChange={e => setFormData({ ...formData, owner_mobile: e.target.value })} className='row-input wide'></input>}\n                                </div>\n                              </div>\n                              <div className='tracking-middle'>\n                                <div className='tracking-row'>\n                                  <h3 className='row-title'>Emails sent: </h3>\n                                  {!isEditMode ? <h3 className='row-result'>{item.emails_sent}</h3> : <input type='text' value={formData.emails_sent} onChange={e => setFormData({ ...formData, emails_sent: e.target.value })} className='row-input narrow'></input>}\n                                </div>\n                                <div className='tracking-row'>\n                                  <h3 className='row-title'>Letters sent: </h3>\n                                  {!isEditMode ? <h3 className='row-result'>{item.letters_sent}</h3> : <input type='text' value={formData.letters_sent} onChange={e => setFormData({ ...formData, letters_sent: e.target.value })} className='row-input narrow'></input>}\n                                </div>\n                                <div className='tracking-row'>\n                                  <h3 className='row-title'>Valuation booked: </h3>\n                                  {!isEditMode ? <h3 className='row-result'>{item.valuation_booked}</h3> : <input type='text' value={formData.valuation_booked} onChange={e => setFormData({ ...formData, valuation_booked: e.target.value })} className='row-input narrow'></input>}\n                                </div>\n                              </div>\n                              <div className='tracking-right'>\n                                <div className='tracking-row'>\n                                  {!isEditMode ? <h3 className='row-result'>{item.notes}</h3> : <textarea placeholder='Notes' value={formData.notes} onChange={e => setFormData({ ...formData, notes: e.target.value })}></textarea>}\n                                </div>\n                              </div>\n                            </div>\n                            <div className='expanded-tracking-actions'>\n                              <button className='save' onClick={() => {\n                                if (isEditMode) {\n                                  handleSave(item.rightmove_id)\n                                } else {\n                                  toggleEditMode(item.rightmove_id)\n                                }\n                              }}>\n                                {isEditMode ? 'Save' : 'Edit'}\n                              </button>\n                              <button className='delete' onClick={() => deleteFavourite(item.rightmove_id)}>Delete</button>\n                            </div>\n                          </div>\n                        )}\n                        <hr className='property-divider' />\n\n\n                      </>\n                    )\n                  })\n\n                    : ' '}\n                </div>\n              </div>\n            </div>\n\n          </>\n          : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default LeadGenSaved\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\nimport RemoveProperty from '../b2bModals/RemoveProperties'\nimport RemoveProperties from '../b2bModals/RemoveProperties'\nimport LeadGenSaved from './LeadGenSections/LeadGenSaved'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [subcodeSubstring, setSubcodeString] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    subcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n  const [removedIds, setRemovedIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n  const [filteredMatchingProperties, setFilteredMatchingProperties] = useState([])\n  const [filteredSalesMatchingProperties, setFilteredSalesMatchingProperties] = useState([])\n  const [filteredNoProperties, setFiltedNoProperties] = useState([])\n  const [filteredSalesNoProperties, setFiltedSalesNoProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n  const [matchType, setMatchType] = useState('Matching')\n  const [salesMatchType, setSalesMatchType] = useState('Matching')\n  const [expandedMultipleMatches, setExpandedMultpleMatches] = useState(new Set())\n  const [expandedSalesMultipleMatches, setExpandedSalesMultpleMatches] = useState(new Set())\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const removedProperties = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Removed')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites, ...removedProperties].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            setRemovedIds(removedProperties)\n            console.log('removed properties ->', removedProperties)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            console.log('saved properties ->', savedProperties)\n            setArchivedProperties(archivedFavourites)\n            setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n\n          } else {\n            const allFavouriteIds = []\n            // loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            // loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n\n          }\n\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        handleSavedActionShow()\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function to setting the favurites to the archives: \n  const removeProperty = async () => {\n    if (isUserAuth()) {\n      console.log(selectedRows)\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      // console.log(selectedRows)\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n      console.log(combinedFavourites)\n\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/remove_property/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        setMatchType('Matching')\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n        handleRemovePropertyClose()\n\n\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log('selected property->', selectedProperty)\n    if (e.target.checked) {\n      console.log('checked')\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n        owner_name: item.owner_name,\n        owner_email: item.owner_email,\n        owner_mobile: item.owner_mobile,\n        emails_sent: item.emails_sent,\n        letters_sent: item.letters_sent,\n        valuation_booked: item.valuation_booked,\n        notes: item.notes,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, deletedProperties, dateFilter) => {\n    setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id))\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, deletedProperties, dateFilter) => {\n    setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id))\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n    }\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n  // input the sub postcode on the form\n  const inputSubcode = (e) => {\n    setSubcodeString(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, subcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    let days\n    let filterType = 'within' // Default filter type\n\n    switch (dateFilter) {\n      case '1day': days = 1; break\n      case '2days': days = 2; break\n      case '3days': days = 3; break\n      case '7days': days = 7; break\n      case '4weeks': days = 28; break\n      case '8weeks': days = 56; break\n      case '12weeks': days = 84; break\n      case '16weeks': days = 112; break\n      case '>8weeks': days = 56; filterType = 'beyond'; break\n      case '>12weeks': days = 84; filterType = 'beyond'; break\n      case '>16weeks': days = 112; filterType = 'beyond'; break\n      default: return properties\n    }\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      const mostRecentDate = addedDate || reducedDate // Use the non-null date\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      return filterType === 'within' ? isWithinLastDays(mostRecentDate, days) : isBeyondDays(mostRecentDate, days)\n    })\n  }\n\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(multipleMatches, dateFilter)\n    setFilteredMatchingProperties(filtered)\n  }, [multipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesMultipleMatches, dateFilter)\n    setFilteredSalesMatchingProperties(filtered)\n  }, [salesMultipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(noMatches, dateFilter)\n    setFiltedNoProperties(filtered)\n  }, [noMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesNoMatches, dateFilter)\n    setFiltedSalesNoProperties(filtered)\n  }, [salesNoMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    return date >= new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n  const isBeyondDays = (date, days) => {\n    const now = new Date()\n    return date < new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n  // managing modal for properties to be removed from list\n  const [propertyRemoveShow, setPropertyRemoveShow] = useState(false)\n\n  // close modal\n  const handleRemovePropertyClose = () => {\n    setPropertyRemoveShow(false)\n  }\n\n  // show the modal\n  const handlePropertyRemoveShow = (e) => {\n    setPropertyRemoveShow(true)\n  }\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  const toggleRowExpansion = (index) => {\n    setExpandedMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const toggleSalesRowExpansion = (index) => {\n    setExpandedSalesMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const addManualFavourite = async (matchingProperties, epcData, index) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.property_data.rightmove_id,\n        'postcode': matchingProperties.property_data.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.property_data.agent,\n        'type': matchingProperties.property_data.type,\n        'addedOn': matchingProperties.property_data.addedOn,\n        'propertyType': matchingProperties.property_data.propertyType,\n        'price': matchingProperties.property_data.price,\n        'bathrooms': matchingProperties.property_data.bathrooms,\n        'bedrooms': matchingProperties.property_data.bedrooms,\n        'let_available_date': matchingProperties.property_data.let_available_date,\n        'date_added_db': matchingProperties.property_data.date_added_db,\n        'url': matchingProperties.property_data.url,\n        'current_epc': matchingProperties.property_data.current_epc,\n        'potential_epc': matchingProperties.property_data.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.property_data.added_revised,\n        'reduced_revised': matchingProperties.property_data.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        toggleRowExpansion(index)\n        toggleSalesRowExpansion(index)\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        {userData && userData.usage_stats[0].package === 'Trial expired' ?\n\n          <section className='main-body remove-margin'>\n            <section className='main-body-details'  >\n              <section className='listing-generator'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'></div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n                </div>\n                <div className='no-access-body'>\n                  <div className='no-access-image'></div>\n                  <h1 className='no-access-title'>Oops! Dead end</h1>\n                  <h3 className='no-access-message'>You no longer have access to this content. Get in touch to upgrade your account and access the Wittle magic.</h3>\n                  {/* <div className='no-access-email'>\n                    <a href=\"mailto:james@wittle.co\" style={{ textDecoration: 'none' }}>\n                      <button className='email-button'>Get in touch</button>\n                    </a>\n                  </div> */}\n                </div>\n              </section>\n            </section>\n          </section>\n          :\n          <section className='main-body'>\n            <section className='main-body-details'>\n\n              <>\n                {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n                <section className='property-finder'>\n                  <div className='listing-options'>\n                    <div className='listing-buttons'>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Explore properties')} style={{ borderBottom: leadGenSection === 'Explore properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore properties' ? '700' : '400' }}>Explore properties</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Archived properties')} style={{ borderBottom: leadGenSection === 'Archived properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived properties' ? '700' : '400' }}>Archived properties</h5>\n                      <h5 className='no-print' id='manual-matcher' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                    </div>\n                    <div className='logout-button' onClick={removeItemFromStorage}>\n                      <div className='logout-icon'></div>\n                    </div>\n\n\n                  </div>\n                  <hr className='title-line' />\n\n                  <div className='lead-generator'>\n\n                    <div className='property-results'>\n                      {leadGenSection === 'Home' ?\n                        <>\n                          <div className='lead-gen-inputs'>\n                            <h3 className='sub-title'>Set your search criteria</h3>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Postcode(s)</h3>\n                                <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.postcode}\n                                  onChange={inputPostcode}\n                                  placeholder=\"Enter postcode...\"\n                                />\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Sub postcode(s)</h3>\n                                <p>Add sub postcodes, e.g. &ldquo;SW4 0,SW5 0&rdquo;. You can also chain these.</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.subcode}\n                                  onChange={inputSubcode}\n                                  placeholder=\"Enter subcode...\"\n                                />\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Channel</h3>\n                                <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                  <option>Lettings</option>\n                                  <option>Sales</option>\n                                  <option>Both</option>\n\n                                </select>\n                              </div>\n                            </div>\n                            <div>\n\n                              <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                                <h3 className='sub-title'>Add some more detail</h3>\n\n                                {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                              </div>\n                              {expand ?\n                                <>\n\n                                  {\n                                    leadGenDetails.channel === 'Lettings' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Bedrooms</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.bedrooms_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({\n                                                ...prevData,\n                                                bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                              }))}\n                                            >\n                                              <option value=''>No min</option>\n                                              <option value=\"1\">1</option>\n                                              <option value=\"2\">2</option>\n                                              <option value=\"3\">3</option>\n                                              <option value=\"4\">4</option>\n                                              <option value=\"5\">5</option>\n                                              <option value=\"6\">6</option>\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.bedrooms_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({\n                                                ...prevData,\n                                                bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                              }))}\n                                            >\n                                              <option value=''>No max</option>\n                                              <option value=\"1\">1</option>\n                                              <option value=\"2\">2</option>\n                                              <option value=\"3\">3</option>\n                                              <option value=\"4\">4</option>\n                                              <option value=\"5\">5</option>\n                                              <option value=\"6\">6</option>\n                                              <option value=\"7\">7</option>\n                                            </select>\n                                          </div>\n\n                                        </div>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.rental_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {rentalPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.rental_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                            >\n                                              <option value={10000000}>No max</option>\n                                              {rentalPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                        <div className='single-input-block'>\n                                          <div className='input-block large'>\n                                            <h3>Furnishing status</h3>\n                                            <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                              <option>Either furnished or unfurnished</option>\n                                              <option>Furnished</option>\n                                              <option>Unfurnished</option>\n                                            </select>\n                                          </div>\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Sales' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Bedrooms</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.bedrooms_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({\n                                                  ...prevData,\n                                                  bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                                }))}\n                                              >\n                                                <option value=''>No min</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.bedrooms_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({\n                                                  ...prevData,\n                                                  bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                                }))}\n                                              >\n                                                <option value=''>No max</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                                <option value=\"7\">7</option>\n                                              </select>\n                                            </div>\n\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n                                        :\n                                        leadGenDetails.channel === 'Both' ?\n                                          <>\n                                            <div className='single-title-double'>\n                                              <h3>Bedrooms</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.bedrooms_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({\n                                                    ...prevData,\n                                                    bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                                  }))}\n                                                >\n                                                  <option value=''>No min</option>\n                                                  <option value=\"1\">1</option>\n                                                  <option value=\"2\">2</option>\n                                                  <option value=\"3\">3</option>\n                                                  <option value=\"4\">4</option>\n                                                  <option value=\"5\">5</option>\n                                                  <option value=\"6\">6</option>\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.bedrooms_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({\n                                                    ...prevData,\n                                                    bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                                  }))}\n                                                >\n                                                  <option value=''>No max</option>\n                                                  <option value=\"1\">1</option>\n                                                  <option value=\"2\">2</option>\n                                                  <option value=\"3\">3</option>\n                                                  <option value=\"4\">4</option>\n                                                  <option value=\"5\">5</option>\n                                                  <option value=\"6\">6</option>\n                                                  <option value=\"7\">7</option>\n                                                </select>\n                                              </div>\n\n                                            </div>\n                                            <div className='single-title-double'>\n                                              <h3>Rental price</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.rental_price_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                                >\n                                                  <option value={0}>No min</option>\n                                                  {rentalPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.rental_price_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                                >\n                                                  <option value={10000000}>No max</option>\n                                                  {rentalPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n\n                                              </div>\n\n                                            </div>\n                                            <div className='single-input-block'>\n                                              <div className='input-block large'>\n                                                <h3>Rental furnishing status</h3>\n                                                <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                  <option>Either furnished or unfurnished</option>\n                                                  <option>Furnished</option>\n                                                  <option>Unfurnished</option>\n                                                </select>\n                                              </div>\n                                            </div>\n                                            <div className='single-title-double'>\n                                              <h3>Sales price</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.sales_price_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                                >\n                                                  <option value={0}>No min</option>\n                                                  {salesPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.sales_price_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                                >\n                                                  <option value={100000000}>No max</option>\n                                                  {salesPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n\n                                              </div>\n\n                                            </div>\n                                          </>\n\n\n                                          : ''}\n\n                                </>\n                                : ''}\n                            </div>\n                            <div className='lead-gen-save'>\n                              <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                            </div>\n                          </div>\n\n                        </>\n                        :\n                        leadGenSection === 'Explore properties' && !rentalLoading ?\n                          <>\n                            <div className='results-block'>\n                              <div className=\"property-insight-nav\">\n                                <div className=\"property-insight-buttons\">\n                                  <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                  <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                                </div>\n                                <div className='action-section'>\n                                  <div className='save-section'>\n                                    <div className=\"bin-icon\"></div>\n                                    <h3 onClick={handlePropertyRemoveShow}>Hide selection</h3>\n                                  </div>\n                                  <div className='save-section'>\n                                    <div className=\"print-icon\"></div>\n                                    <h3 onClick={addFavourite}>Track selection</h3>\n                                  </div>\n\n                                </div>\n\n                              </div>\n                              {channelView === 'Lettings' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All properties</option>\n                                      <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                      <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                      <option value=\">16weeks\">Added over 16 weeks ago</option>\n                                    </select>\n                                  </div>\n                                  <div className='matching-status'>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('Matching')} style={{ color: matchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: matchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('Multiple matches')} style={{ color: matchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('No matches')} style={{ color: matchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                  </div>\n\n                                  {matchType === 'Matching' ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                        <div className='select-all-box'>\n                                          {/* <h5>Select all</h5> */}\n                                          <div className='custom-checkbox'>\n                                            <input\n                                              className='checkbox'\n                                              type=\"checkbox\"\n                                              checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                              onChange={handleSelectAllChange}\n                                            />\n                                            <label className='label'>\n\n                                            </label>\n\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <div className='results-table'>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details'>\n                                          {filteredProperties ? filteredProperties.map((item, index) => {\n                                            const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.epc_data_list[0].address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        {/* <h3>❤️</h3> */}\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          {/* <h3>⭐️</h3> */}\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n                                                        <div className='custom-checkbox'>\n\n                                                          <input\n                                                            className='checkbox'\n                                                            type=\"checkbox\"\n                                                            checked={checkboxStatus[index]}\n                                                            onChange={(e) => handleCheckboxChange(e, index)}\n                                                          />\n                                                          <label className='label'>\n\n                                                          </label>\n                                                        </div>\n                                                    }\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n                                      </div>\n\n\n                                    </>\n                                    : matchType === 'Multiple matches' ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {filteredMatchingProperties.length} rental properties that we do not have an exact match for</h3>\n                                        </div>\n                                        <div className='results-table'>\n\n                                          <div className='results-headers'>\n                                            <h5 id='column1' className='column'>#</h5>\n                                            <div id='column2' className='column' >\n                                              <h5>Listed address</h5>\n                                            </div>\n                                            <div id='column3' className='column' onClick={sortByPostcode}>\n                                              <h5>Postcode</h5>\n                                              <h5>⬇️</h5>\n                                            </div>\n                                            <div id='column4' className='column'>\n                                              <h5>Added</h5>\n                                            </div>\n                                            <div id='column5' className='column'>\n                                              <h5>Size (sq. m)</h5>\n                                            </div>\n                                            <div id='column6' className='column'>\n                                              <h5>Property type</h5>\n                                            </div>\n                                            <div id='column7' className='column' onClick={sortByPrice}>\n                                              <h5>Price</h5>\n                                              <h5>⬇️</h5>\n                                            </div>\n                                            <div id='column8' className='column'>\n                                              <h5>Bedrooms</h5>\n                                            </div>\n                                            <div id='column9' className='column'>\n                                              <h5>Agent</h5>\n                                            </div>\n                                            <div id='column10' className='column'>\n                                              <h5>Action</h5>\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n                                          <div className='results-details'>\n                                            {filteredMatchingProperties ? filteredMatchingProperties.map((item, index) => {\n                                              const isExpanded = expandedMultipleMatches.has(index)\n                                              return (\n                                                <>\n                                                  <div className={'results-content'}>\n                                                    <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{index + 1}</h5>\n                                                    </div>\n                                                    <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.displayAddress}</h5>\n                                                    </div>\n                                                    <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.postcode}</h5>\n                                                    </div>\n                                                    <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                    </div>\n                                                    <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                    </div>\n                                                    <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.propertyType}</h5>\n                                                    </div>\n                                                    <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.price}</h5>\n                                                    </div>\n                                                    <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.bedrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.agent}</h5>\n                                                    </div>\n                                                    <div className='column' id='column10'>\n                                                      {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          {/* <h3>❤️</h3> */}\n                                                          <h3>Saved</h3>\n                                                        </div>\n                                                        :\n                                                        archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                          <div className='saved-message'>\n                                                            {/* <h3>⭐️</h3> */}\n                                                            <h3>Archived</h3>\n                                                          </div>\n                                                          :\n\n                                                          <h3 className='expansion' onClick={() => toggleRowExpansion(index)}>\n                                                            {expandedMultipleMatches.has(index) ? '^' : 'v'}\n                                                          </h3>}\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  {isExpanded && (\n                                                    <>\n                                                      <h3 className='matching-title'>Matching properties</h3>\n                                                      <div className='expanded-section-titles'>\n                                                        <p className='column' id='column1'>#</p>\n                                                        <p className='column' id='column2'>Address</p>\n                                                        <p className='column' id='column3'>Postcode</p>\n                                                        <p className='column' id='column4'>Current EPC</p>\n                                                        <p className='column' id='column5'>Potential EPC</p>\n                                                        <p className='column' id='column6'>Floor</p>\n                                                        <p className='column' id='column7'>Size</p>\n                                                        <p className='column' id='column8'></p>\n                                                      </div>\n\n                                                      {item.epc_data_list.map((epcItem, epcIndex) => (\n\n\n                                                        <div className='expanded-content' key={epcIndex} >\n                                                          <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                          <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                          <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                          <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                          <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                          <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                          <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                          <div className='column' id='column8' >\n                                                            {/* <div className='heart-icon' onClick={() => addManualFavourite(item, epcItem, index)} ></div> */}\n                                                            <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                          </div>\n\n                                                        </div>\n                                                      ))}\n                                                    </>\n\n\n\n\n                                                  )}\n\n\n\n\n                                                </>\n                                              )\n                                            })\n                                              : ' '}\n                                          </div>\n                                        </div>\n\n                                      </>\n\n                                      : matchType === 'No matches' ?\n                                        <>\n                                          <div className='title-section'>\n                                            <h3 className='sub-title'>There are {filteredNoProperties.length} rental properties that we do not have any match for</h3>\n                                          </div>\n                                          <div className='results-table'>\n\n                                            <div className='results-headers'>\n                                              <h5 id='column1' className='column'>#</h5>\n                                              <div id='column2' className='column' >\n                                                <h5>Listed address</h5>\n                                              </div>\n                                              <div id='column3' className='column' onClick={sortByPostcode}>\n                                                <h5>Postcode</h5>\n                                                <h5>⬇️</h5>\n                                              </div>\n                                              <div id='column4' className='column'>\n                                                <h5>Added</h5>\n                                              </div>\n                                              <div id='column5' className='column'>\n                                                <h5>Reduced</h5>\n                                              </div>\n                                              <div id='column6' className='column'>\n                                                <h5>Property type</h5>\n                                              </div>\n                                              <div id='column7' className='column' onClick={sortByPrice}>\n                                                <h5>Price</h5>\n                                                <h5>⬇️</h5>\n                                              </div>\n                                              <div id='column8' className='column'>\n                                                <h5>Bedrooms</h5>\n                                              </div>\n                                              <div id='column9' className='column'>\n                                                <h5>Agent</h5>\n                                              </div>\n                                              {/* <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div> */}\n                                            </div>\n                                            <hr className='property-divider' />\n                                            <div className='results-details'>\n                                              {filteredNoProperties ? filteredNoProperties.map((item, index) => {\n\n                                                return (\n                                                  <>\n                                                    <div className={'results-content'}>\n                                                      <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{index + 1}</h5>\n                                                      </div>\n                                                      <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.displayAddress}</h5>\n                                                      </div>\n                                                      <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.postcode}</h5>\n                                                      </div>\n                                                      <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                      </div>\n                                                      <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                      </div>\n                                                      <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.propertyType}</h5>\n                                                      </div>\n                                                      <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.price}</h5>\n                                                      </div>\n                                                      <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.bedrooms}</h5>\n                                                      </div>\n                                                      <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.agent}</h5>\n                                                      </div>\n                                                      {/* <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        // <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          // <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n\n                                                        ''\n                                                    }\n                                                  </div> */}\n                                                    </div>\n                                                    <hr className='property-divider' />\n\n                                                  </>\n                                                )\n                                              })\n                                                : ' '}\n                                            </div>\n                                          </div>\n\n                                        </>\n\n                                        : ''\n                                  }\n\n\n                                </>\n                                : channelView === 'Sales' ?\n                                  <>\n                                    <div className='filter-section'>\n                                      <h3>Filter properties</h3>\n                                      <select\n                                        className='dropdown'\n                                        value={dateFilter}\n                                        onChange={(e) => setDateFilter(e.target.value)}\n                                      >\n                                        <option value=\"1day\">Updated in the last 24 hours</option>\n                                        <option value=\"2days\">Updated in the last 48 hours</option>\n                                        <option value=\"3days\">Updated in the last 72 hours</option>\n                                        <option value=\"7days\">Updated in the last week</option>\n                                        <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                        <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                        <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                        <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                        <option value=\"all\">All properties</option>\n                                        <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                        <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                        <option value=\">16weeks\">Added over 16 weeks ago</option>\n\n                                      </select>\n                                    </div>\n                                    <div className='matching-status'>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('Matching')} style={{ color: salesMatchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('Multiple matches')} style={{ color: salesMatchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('No matches')} style={{ color: salesMatchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                    </div>\n                                    {salesLoading ?\n                                      <div className='property-table-loading'>\n                                        <Loading />\n                                      </div>\n                                      : !salesLoading ?\n                                        <>\n                                          {salesMatchType === 'Matching' ?\n                                            <>\n                                              <div className='title-section'>\n                                                <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n                                                <div className='select-all-box'>\n                                                  {/* <h5>Select all</h5> */}\n                                                  <div className='custom-checkbox'>\n                                                    <input\n                                                      className='checkbox'\n                                                      type=\"checkbox\"\n                                                      checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                      onChange={handleSelectAllSalesChange}\n                                                    />\n                                                    <label className='label'>\n\n                                                    </label>\n\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              <div className='results-table'>\n\n                                                <div className='results-headers'>\n                                                  <h5 id='column1' className='column'>#</h5>\n                                                  <div id='column2' className='column' >\n                                                    <h5>Address</h5>\n                                                  </div>\n                                                  <div id='column3' className='column' onClick={sortByPostcode}>\n                                                    <h5>Postcode</h5>\n                                                    <h5>⬇️</h5>\n                                                  </div>\n                                                  <div id='column4' className='column'>\n                                                    <h5>Added</h5>\n                                                  </div>\n                                                  <div id='column5' className='column'>\n                                                    <h5>Reduced</h5>\n                                                  </div>\n                                                  <div id='column6' className='column'>\n                                                    <h5>Property type</h5>\n                                                  </div>\n                                                  <div id='column7' className='column' onClick={sortByPrice}>\n                                                    <h5>Price</h5>\n                                                    <h5>⬇️</h5>\n                                                  </div>\n                                                  <div id='column8' className='column'>\n                                                    <h5>Bedrooms</h5>\n                                                  </div>\n                                                  <div id='column9' className='column'>\n                                                    <h5>Agent</h5>\n                                                  </div>\n                                                  <div id='column10' className='column'>\n                                                    <h5>Select</h5>\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n                                                <div className='results-details'>\n                                                  {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                                    const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                                    return (\n                                                      <>\n                                                        <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                          <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{index + 1}</h5>\n                                                          </div>\n                                                          <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.epc_data_list[0].address}</h5>\n                                                          </div>\n                                                          <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.postcode}</h5>\n                                                          </div>\n                                                          <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                          </div>\n                                                          <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                          </div>\n                                                          <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.propertyType}</h5>\n                                                          </div>\n                                                          <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.price}</h5>\n                                                          </div>\n                                                          <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.bedrooms}</h5>\n                                                          </div>\n                                                          <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.agent}</h5>\n                                                          </div>\n                                                          <div className='column' id='column10'>\n                                                            {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                              <div className='saved-message'>\n                                                                {/* <h3>❤️</h3> */}\n                                                                <h3>Saved</h3>\n                                                              </div>\n                                                              :\n                                                              archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  {/* <h3>⭐️</h3> */}\n                                                                  <h3>Archived</h3>\n                                                                </div>\n                                                                :\n                                                                <div className='custom-checkbox'>\n\n                                                                  <input\n                                                                    className='checkbox'\n                                                                    type=\"checkbox\"\n                                                                    checked={salesCheckboxStatus[index]}\n                                                                    onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                                  />\n                                                                  <label className='label'>\n\n                                                                  </label>\n                                                                </div>\n                                                            }\n                                                          </div>\n                                                        </div>\n                                                        <hr className='property-divider' />\n\n                                                      </>\n                                                    )\n                                                  })\n                                                    : ' '}\n                                                </div>\n                                              </div>\n\n                                            </>\n\n                                            : salesMatchType === 'Multiple matches' ?\n\n                                              <>\n                                                <div className='title-section'>\n                                                  <h3 className='sub-title'>There are {filteredSalesMatchingProperties.length} properties for sale that we do not have an exact match for</h3>\n                                                </div>\n                                                <div className='results-table'>\n                                                  <div className='results-headers'>\n                                                    <h5 id='column1' className='column'>#</h5>\n                                                    <div id='column2' className='column' >\n                                                      <h5>Listed address</h5>\n                                                    </div>\n                                                    <div id='column3' className='column' onClick={sortByPostcode}>\n                                                      <h5>Postcode</h5>\n                                                      <h5>⬇️</h5>\n                                                    </div>\n                                                    <div id='column4' className='column'>\n                                                      <h5>Added</h5>\n                                                    </div>\n                                                    <div id='column5' className='column'>\n                                                      <h5>Size (sq. m)</h5>\n                                                    </div>\n                                                    <div id='column6' className='column'>\n                                                      <h5>Property type</h5>\n                                                    </div>\n                                                    <div id='column7' className='column' onClick={sortByPrice}>\n                                                      <h5>Price</h5>\n                                                      <h5>⬇️</h5>\n                                                    </div>\n                                                    <div id='column8' className='column'>\n                                                      <h5>Bedrooms</h5>\n                                                    </div>\n                                                    <div id='column9' className='column'>\n                                                      <h5>Agent</h5>\n                                                    </div>\n                                                    <div id='column10' className='column'>\n                                                      <h5>Action</h5>\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  <div className='results-details'>\n                                                    {filteredSalesMatchingProperties ? filteredSalesMatchingProperties.map((item, index) => {\n                                                      const isExpanded = expandedSalesMultipleMatches.has(index)\n                                                      return (\n                                                        <>\n                                                          <div className={'results-content'}>\n                                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{index + 1}</h5>\n                                                            </div>\n                                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.displayAddress}</h5>\n                                                            </div>\n                                                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.postcode}</h5>\n                                                            </div>\n                                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                            </div>\n                                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                            </div>\n                                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.propertyType}</h5>\n                                                            </div>\n                                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.price}</h5>\n                                                            </div>\n                                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.bedrooms}</h5>\n                                                            </div>\n                                                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.agent}</h5>\n                                                            </div>\n                                                            <div className='column' id='column10'>\n                                                              {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  {/* <h3>❤️</h3> */}\n                                                                  <h3>Saved</h3>\n                                                                </div>\n                                                                :\n                                                                archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                  <div className='saved-message'>\n                                                                    {/* <h3>⭐️</h3> */}\n                                                                    <h3>Archived</h3>\n                                                                  </div>\n                                                                  :\n\n                                                                  <h3 className='expansion' onClick={() => toggleSalesRowExpansion(index)}>\n                                                                    {expandedSalesMultipleMatches.has(index) ? '^' : 'v'}\n                                                                  </h3>}\n                                                            </div>\n                                                          </div>\n                                                          <hr className='property-divider' />\n                                                          {isExpanded && (\n                                                            <>\n                                                              <h3 className='matching-title'>Matching properties</h3>\n                                                              <div className='expanded-section-titles'>\n                                                                <p className='column' id='column1'>#</p>\n                                                                <p className='column' id='column2'>Address</p>\n                                                                <p className='column' id='column3'>Postcode</p>\n                                                                <p className='column' id='column4'>Current EPC</p>\n                                                                <p className='column' id='column5'>Potential EPC</p>\n                                                                <p className='column' id='column6'>Floor</p>\n                                                                <p className='column' id='column7'>Size</p>\n                                                                <p className='column' id='column8'></p>\n                                                              </div>\n\n                                                              {item.epc_data_list.map((epcItem, epcIndex) => (\n\n\n\n\n                                                                <div className='expanded-content' key={epcIndex} >\n                                                                  <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                                  <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                                  <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                                  <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                                  <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                                  <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                                  <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                                  <div className='column' id='column8' >\n                                                                    <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                                  </div>\n\n                                                                </div>\n                                                              ))}\n                                                            </>\n\n\n\n\n                                                          )}\n\n\n\n\n                                                        </>\n                                                      )\n                                                    })\n                                                      : ' '}\n                                                  </div>\n                                                </div>\n\n                                              </>\n                                              : salesMatchType === 'No matches' ?\n                                                <>\n                                                  <div className='title-section'>\n                                                    <h3 className='sub-title'>There are {filteredSalesNoProperties.length} properties for sale that we do not have any match for</h3>\n                                                  </div>\n                                                  <div className='results-table'>\n\n                                                    <div className='results-headers'>\n                                                      <h5 id='column1' className='column'>#</h5>\n                                                      <div id='column2' className='column' >\n                                                        <h5>Listed address</h5>\n                                                      </div>\n                                                      <div id='column3' className='column' onClick={sortByPostcode}>\n                                                        <h5>Postcode</h5>\n                                                        <h5>⬇️</h5>\n                                                      </div>\n                                                      <div id='column4' className='column'>\n                                                        <h5>Added</h5>\n                                                      </div>\n                                                      <div id='column5' className='column'>\n                                                        <h5>Reduced</h5>\n                                                      </div>\n                                                      <div id='column6' className='column'>\n                                                        <h5>Property type</h5>\n                                                      </div>\n                                                      <div id='column7' className='column' onClick={sortByPrice}>\n                                                        <h5>Price</h5>\n                                                        <h5>⬇️</h5>\n                                                      </div>\n                                                      <div id='column8' className='column'>\n                                                        <h5>Bedrooms</h5>\n                                                      </div>\n                                                      <div id='column9' className='column'>\n                                                        <h5>Agent</h5>\n                                                      </div>\n                                                      {/* <div id='column10' className='column'>\n                                                <h5>Select</h5>\n                                              </div> */}\n                                                    </div>\n                                                    <hr className='property-divider' />\n                                                    <div className='results-details'>\n                                                      {filteredSalesNoProperties ? filteredSalesNoProperties.map((item, index) => {\n\n                                                        return (\n                                                          <>\n                                                            <div className={'results-content'}>\n                                                              <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{index + 1}</h5>\n                                                              </div>\n                                                              <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.displayAddress}</h5>\n                                                              </div>\n                                                              <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.postcode}</h5>\n                                                              </div>\n                                                              <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                              </div>\n                                                              <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                              </div>\n                                                              <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.propertyType}</h5>\n                                                              </div>\n                                                              <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.price}</h5>\n                                                              </div>\n                                                              <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.bedrooms}</h5>\n                                                              </div>\n                                                              <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.agent}</h5>\n                                                              </div>\n                                                              {/* <div className='column' id='column10'>\n                                                        {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                          <div className='saved-message'>\n                                                            // <h3>❤️</h3>\n                                                            <h3>Saved</h3>\n                                                          </div>\n                                                          :\n                                                          archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                            <div className='saved-message'>\n                                                              // <h3>⭐️</h3>\n                                                              <h3>Archived</h3>\n                                                            </div>\n                                                            :\n    \n                                                            ''\n                                                        }\n                                                      </div> */}\n                                                            </div>\n                                                            <hr className='property-divider' />\n\n                                                          </>\n                                                        )\n                                                      })\n                                                        : ' '}\n                                                    </div>\n                                                  </div>\n\n                                                </>\n                                                : ''}\n\n\n                                        </>\n                                        : ''}\n                                  </>\n                                  :\n\n                                  ''}\n                            </div>\n                          </>\n                          : leadGenSection === 'Explore properties' && rentalLoading ?\n                            <div className='property-table-loading'>\n                              <Loading />\n                            </div>\n                            : leadGenSection === 'Saved properties' ?\n                              <>\n                                <LeadGenSaved\n                                  savedProperties={savedProperties}\n                                  userData={userData}\n                                  csvData={csvData}\n                                  getCurrentDate={getCurrentDate}\n                                  archiveFavourite={archiveFavourite}\n                                  handleVisitUrl={handleVisitUrl}\n                                  loadUserData={loadUserData}\n                                  setSavedProperties={setSavedProperties}\n                                />\n                              </>\n                              : leadGenSection === 'Archived properties' ?\n                                <>\n                                  <div className='results-block'>\n                                    {archivedProperties && archivedProperties.length > 0 ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n\n\n                                        </div>\n                                        <div className='results-table'>\n\n                                          <div className='results-headers'>\n                                            <h5 id='column1' className='column'>#</h5>\n                                            <div id='column2' className='column'>\n                                              <h5>Address</h5>\n                                            </div>\n                                            <div id='column3' className='column'>\n                                              <h5>Postcode</h5>\n                                            </div>\n                                            <div id='column4' className='column'>\n                                              <h5>Added</h5>\n                                            </div>\n                                            <div id='column5' className='column'>\n                                              <h5>Reduced</h5>\n                                            </div>\n                                            <div id='column6' className='column'>\n                                              <h5>Property type</h5>\n                                            </div>\n                                            <div id='column7' className='column'>\n                                              <h5>Price</h5>\n                                            </div>\n                                            <div id='column8' className='column'>\n                                              <h5>Bedrooms</h5>\n                                            </div>\n                                            <div id='column9' className='column'>\n                                              <h5>Agent</h5>\n                                            </div>\n                                            <div id='column10' className='column'>\n                                              <h5>Channel</h5>\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n                                          <div className='results-details archive'>\n                                            {archivedProperties ? archivedProperties.map((item, index) => {\n                                              return (\n                                                <>\n                                                  <div className='results-content'>\n                                                    <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{index + 1}</h5>\n                                                    </div>\n                                                    <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.address}</h5>\n                                                    </div>\n                                                    <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.postcode}</h5>\n                                                    </div>\n                                                    <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.added_revised}</h5>\n                                                    </div>\n                                                    <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.reduced_revised}</h5>\n                                                    </div>\n                                                    <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.property_type}</h5>\n                                                    </div>\n                                                    <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.price}</h5>\n                                                    </div>\n                                                    <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.bedrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.agent}</h5>\n                                                    </div>\n                                                    <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                                                      <h5>{item.channel}</h5>\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n\n\n                                                </>\n                                              )\n                                            })\n                                              : ' '}\n                                          </div>\n                                        </div>\n                                      </>\n                                      : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n                                    }\n                                  </div>\n\n\n                                </>\n                                : leadGenSection === 'Manual matcher' ?\n                                  <ManualMatcher\n                                    increaseUsageCount={increaseUsageCount}\n                                    setErrors={setErrors}\n                                    userData={userData}\n                                    loadUserData={loadUserData}\n                                    savedProperties={savedProperties}\n                                    archivedProperties={archivedProperties}\n                                    handleVisitUrl={handleVisitUrl}\n                                    savedActionShow={savedActionShow}\n                                    setSavedActionShow={setSavedActionShow}\n                                    handleSavedActionClose={handleSavedActionClose}\n                                    setLeadGenSection={setLeadGenSection}\n                                    latestFavourites={latestFavourites}\n                                    handleSavedActionShow={handleSavedActionShow}\n                                    setLatestFavourites={setLatestFavourites}\n                                  />\n                                  :\n                                  ''\n                      }\n                    </div>\n                  </div>\n\n\n                </section>\n\n\n              </>\n\n            </section>\n          </section>\n        }\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n      < RemoveProperties\n        propertyRemoveShow={propertyRemoveShow}\n        handleRemovePropertyClose={handleRemovePropertyClose}\n        removeProperty={removeProperty}\n      />\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","_Fragment","Modal","show","onHide","backdrop","Body","_jsxs","onClick","closeAndLeave","increaseUsageCount","setErrors","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","handleSavedActionShow","setLatestFavourites","setSavedActionShow","loading","setLoading","useState","navigate","useNavigate","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","liveSalesProperties","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","some","isUserAuth","newFavourites","Math","floor","random","toString","epcData","response","post","headers","Authorization","getAccessToken","addPartialFavourite","style","backgroundColor","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","rightmove_id","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","addFavourite","SavedProperties","propertyRemoveShow","handleRemovePropertyClose","removeProperty","csvData","getCurrentDate","archiveFavourite","setSavedProperties","savedPropertyView","setSavedPropertyView","expandedRows","setExpandedRows","editModes","setEditModes","formData","setFormData","toggleEditMode","rightmoveId","prevEditModes","epc_favourites","Select","options","label","selectedOption","document","querySelector","click","fav","isSearchable","CSVLink","filename","display","isRowExpanded","isEditMode","find","prop","owner_name","owner_email","owner_mobile","emails_sent","letters_sent","valuation_booked","notes","prevExpandedRows","toggleRowExpansion","patch","handleSave","deleteFavourite","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","errors","setUserData","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","subcodeSubstring","setSubcodeString","favouritedProperties","setFavouritedProperties","setArchivedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","subcode","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedRows","setSelectedRows","selectedSalesRows","setSelectedSalesRows","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","favouriteIds","setFavouriteIds","removedIds","setRemovedIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","filteredMatchingProperties","setFilteredMatchingProperties","filteredSalesMatchingProperties","setFilteredSalesMatchingProperties","filteredNoProperties","setFiltedNoProperties","filteredSalesNoProperties","setFiltedSalesNoProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","matchType","setMatchType","salesMatchType","setSalesMatchType","expandedMultipleMatches","setExpandedMultpleMatches","expandedSalesMultipleMatches","setExpandedSalesMultpleMatches","getUserToken","lead_gen_details","filteredFavourites","action","archivedFavourites","removedProperties","newFavouriteIds","dataCsv","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","getUser","useEffect","deselectAllRows","deselectAllSalesRows","addressPostcode","property_type","date_added","deletedProperties","postcodeValue","subcodeValue","bedroomsMin","bedroomsMax","priceMin","priceMax","additionalRental","deletedPropertyIds","property_data","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","window","open","removeItemFromStorage","token","localStorage","removeItem","salesPrices","rentalPrices","filterPropertiesByDate","properties","days","filterType","addedDate","parseDate","reducedDate","mostRecentDate","isWithinLastDays","isBeyondDays","filtered","dateStr","day","month","year","split","date","now","getFullYear","getMonth","getDate","sortByPrice","sorted","priceA","parseInt","priceB","salesSorted","multipleRentalSorted","multipleSalesSorted","noRentalSorted","noSalesSorted","sortByPostcode","localeCompare","setPropertyRemoveShow","status","message","newExpandedRows","toggleSalesRowExpansion","addManualFavourite","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","usage_stats","package","borderBottom","textUnderlineOffset","fontWeight","prevData","NumericFormat","displayType","thousandSeparator","prefix","put","LeadGenSaved","String","padStart","favourite_ids","ManualMatcher","existingFavouriteIds","row","color","checked","every","Boolean","selectAllRows","existingCombinations","allRows","isRowSelected","selectedRow","handleCheckboxChange","updatedStatus","selectedProperty","prevRows","isExpanded","size","toFixed","epcItem","epcIndex","selectAllSalesRows","salesCheckboxChange","RemoveProperties","combinedFavourites","module","exports","Object","defineProperty","obj","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","_react2","__esModule","default","_core","_metaProps","CSVDownload","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","subClass","superClass","create","constructor","setPrototypeOf","_inherits","buildURI","apply","undefined","arguments","_props","separator","enclosingCharacter","uFEFF","specs","page","Component","defaultProps","assign","propTypes","_extends","source","hasOwnProperty","bind","event","isAsync","navigator","msSaveOrOpenBlob","preventDefault","blob","Blob","toCSV","msSaveBlob","_this2","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","rest","keys","indexOf","_objectWithoutProperties","href","createElement","download","ref","link","handleClick","_typeof","Symbol","iterator","_toConsumableArray","arr","arr2","from","isSafari","test","userAgent","isJsons","array","isArrays","jsonsHeaders","json","reduce","concat","jsons2arrays","jsons","headerLabels","headerKeys","header","object","getHeaderValue","foundValue","o","p","splice","elementOrEmpty","element","joiner","column","join","arrays2csv","jsons2csv","string2csv","csv","dataURI","URL","webkitURL","createObjectURL","_Download2","_interopRequireDefault","_Link2","PropsNotForwarded","_propTypes","oneOfType","string","func","isRequired","bool"],"sourceRoot":""}