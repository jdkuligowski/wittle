{"version":3,"file":"static/js/218.ce1f3387.chunk.js","mappings":"wMA4IA,UA7HkB,KAGhB,MAAMA,GAAWC,EAAAA,EAAAA,OAGVC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,kBAC9CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,kBAG5CG,EAAUC,IAAeJ,EAAAA,EAAAA,aAGzBK,EAAaC,IAAcN,EAAAA,EAAAA,aAG3BO,EAAQC,IAAaR,EAAAA,EAAAA,YAqC5B,OAJAS,EAAAA,EAAAA,YAAU,MA1BJC,EAAAA,EAAAA,MACcC,WACd,IACE,MAAM,KAAEC,SAAeC,EAAAA,GAAAA,IAAW,sBAAoBC,EAAAA,EAAAA,SAAmB,CACvEC,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAG7BC,QAAQC,IAAI,eAAgBP,GAC5BR,EAAYQ,GACZN,EAAWM,EAAKQ,SAChBF,QAAQC,IAAI,aAAcP,EAAKQ,QAIjC,CAHE,MAAOC,GACPb,GAAU,GACVU,QAAQC,IAAIE,EACd,GAEFC,IAEA1B,EAAS,kBACTsB,QAAQC,IAAI,cAOA,GACb,KAID,+BACE,qBAASI,UAAU,qBAAoB,WACrC,gBAAKA,UAAU,cAAa,UAC1B,SAAC,IAAW,CACVC,aAAa,eAGjB,gBAAKD,UAAU,aAAY,UACzB,SAAC,IAAa,CACZxB,kBAAmBA,EACnBD,eAAgBA,EAChBG,cAAeA,EACfC,iBAAkBA,OAGtB,SAAC,IAAY,CACXA,iBAAkBA,EAClBH,kBAAmBA,KAGrB,+BACE,oBAASwB,UAAU,YAAW,UAC5B,qBAASA,UAAU,oBAAmB,WAEpC,oBAASA,UAAU,kBAAiB,UAClC,gBAAKA,UAAU,UAAS,UACtB,iCACE,2CAAiB,4BAAOpB,EAAWA,EAASsB,WAAa,GAAE,WAC3D,iJAMN,oBAASF,UAAU,kBAAiB,UAClC,iBAAKA,UAAU,gBAAe,WAC5B,iBAAKA,UAAU,eAAeG,QAAS,IAAM9B,EAAS,6BAA6B,WACjF,gBAAK2B,UAAU,eAAeI,GAAG,WACjC,wDACA,yLAEF,iBAAKJ,UAAU,eAAeG,QAAS,IAAM9B,EAAS,kBAAkB,WACtE,gBAAK2B,UAAU,eAAeI,GAAG,WACjC,+CACA,uJAEF,iBAAKJ,UAAU,eAAeI,GAAG,cAAa,WAC5C,gBAAKJ,UAAU,eAAeI,GAAG,WACjC,6CACA,sIAcb,C","sources":["components/whiteLabel/WhiteHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken , getAccessToken } from '../auth/Auth'\n\n\n\nimport NavBarRevised from '../tools/NavBarRevised'\nimport WhiteNavbar from '../tools/WhiteNavbar'\nimport WhiteSidebar from './WhiteSidebar'\n\n\n\n\n\nconst WhiteHome = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('My properties')\n  const [profileDetail, setProfileDetail] = useState('My properties')  \n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for company data\n  const [companyData, setCompany] = useState()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setCompany(data.company)\n          console.log('company ->', data.company)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n  \n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          setProfileContent={setProfileContent} \n        />\n        {/* {profileContent === 'My properties' ? */}\n        <>\n          <section className='main-body'>\n            <section className='main-body-details'>\n\n              <section className='profile-summary'>\n                <div className='welcome'>\n                  <>\n                    <h1>Welcome back <span>{userData ? userData.first_name : ''}!</span></h1>\n                    <h3>Thanks for being part of the Wittle pilot! Please keep us in the loop with how you&apos;re enjoying our products.</h3>\n                  </>\n\n\n                </div>\n              </section>\n              <section className='product-section'>\n                <div className='product-suite'>\n                  <div className='product-card' onClick={() => navigate('/agents/listing-generator')}>\n                    <div className='summary-icon' id='icon1'></div>\n                    <h1>Property listing generator</h1>\n                    <h3>Generate a listing based on property features and our lifestyle insights library. Build your own or use our AI listing generator to do the work for you.</h3>\n                  </div>\n                  <div className='product-card' onClick={() => navigate('/agents/finder')}>\n                    <div className='summary-icon' id='icon2'></div>\n                    <h1>Property services</h1>\n                    <h3>Find the full address of properties on the market and see detailed insights about what&apos;s going on around the property.</h3>\n                  </div>\n                  <div className='product-card' id='coming-soon'>\n                    <div className='summary-icon' id='icon3'></div>\n                    <h1>Valuation guide</h1>\n                    <h3>Get property valuation in seconds and see insights into what is driving the valuation.</h3>\n                    {/* <p>Coming soon!</p> */}\n                  </div>\n                </div>\n              </section>\n            </section>\n          </section>\n\n        </>\n      </section>\n\n\n\n\n    </>\n\n\n\n  )\n}\n\nexport default WhiteHome"],"names":["navigate","useNavigate","profileContent","setProfileContent","useState","profileDetail","setProfileDetail","userData","setUserData","companyData","setCompany","errors","setErrors","useEffect","isUserAuth","async","data","axios","getUserToken","headers","Authorization","getAccessToken","console","log","company","error","getUser","className","navbarColour","first_name","onClick","id"],"sourceRoot":""}