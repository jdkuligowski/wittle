{"version":3,"file":"static/js/453.f023837e.chunk.js","mappings":"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","sources":["components/tools/NavBar.js","components/tools/TImeline2.js","components/tools/Timeline3.js","components/tools/Timeline4.js","components/tools/WhiteNavbar.js","components/wittleSearch/PropertyDetailsWittle.js"],"sourcesContent":["import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst NavBar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state to manage navbar colour depending on page\n  // const [navbarColour, setNavBarColour] = useState('#051885')\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  const responseMessage = (response) => {\n    console.log(response)\n  }\n\n  const errorMessage = (error) => {\n    console.log(error)\n  }\n\n\n  // post google information for authentication\n  const googleLogin = async (response) => {\n    try {\n      // await axios.post('/api/auth/google/', registerData)\n      const auth = { 'auth_token': response.credential }\n      console.log(auth)\n      const { data } = await axios.post('/api/auth/google/', {\n        body: JSON.stringify(auth),\n      })\n      console.log(data)\n    } catch (err) {\n      setErrors(err)\n      console.log(err)\n      console.log(err.response.data)\n    }\n  }\n\n  return (\n    <>\n      <section className='nav-section' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n          <h4 onClick={() => navigate('/agents')} className='agent-button'>For agents</h4>\n          <h4 onClick={() => navigate('/blogs/school-search-simplified')} className='agent-button'>Insights</h4>\n        </div>\n        <div className='menu-container' onClick={handleMenuShow}>\n          <div className=\"menu-trigger\">\n            <span>\n              <div className='burger-icon'>\n                <hr className='burger-icon-line' />\n                <hr className='burger-icon-line' />\n                <hr className='burger-icon-line' />\n              </div>\n            </span>\n          </div>\n        </div>\n        <button className='agent-login'>Agent login</button>\n      </section>\n      <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      />\n    </>\n  )\n\n}\n\nexport default NavBar","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst Timeline2 = () => {\n\n\n\n\n  return (\n    <section className='property-search-wrapper'>\n      <div className='timeline-bar-2'>\n        <div className='progress-circles-2'>\n          <div className='milestone-1'>\n            <h1></h1>\n          </div>\n          <div className='milestone-2'>\n            <h1></h1>\n          </div>\n          <div className='milestone-3'>\n            <h1></h1>\n          </div>\n          <div className='milestone-4'>\n            <h1></h1>\n          </div>\n          <div className='milestone-5'>\n            <h1></h1>\n          </div>\n        </div>\n      </div>\n      <div className='timeline-background-2'>\n        {/* <h1>.</h1> */}\n      </div>\n    </section>\n  )\n\n}\n\nexport default Timeline2","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst Timeline3 = () => {\n\n\n\n\n  return (\n    <section className='property-search-wrapper'>\n      <div className='timeline-bar-3'>\n        <div className='progress-circles-3'>\n          <div className='milestone-1'>\n            <h1></h1>\n          </div>\n          <div className='milestone-2'>\n            <h1></h1>\n          </div>\n          <div className='milestone-3'>\n            <h1></h1>\n          </div>\n          <div className='milestone-4'>\n            <h1></h1>\n          </div>\n          <div className='milestone-5'>\n            <h1></h1>\n          </div>\n        </div>\n      </div>\n      <div className='timeline-background-3'>\n        {/* <h1>.</h1> */}\n      </div>\n    </section>\n  )\n\n}\n\nexport default Timeline3","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst Timeline4 = () => {\n\n\n\n\n  return (\n    <section className='property-search-wrapper'>\n      <div className='timeline-bar-4'>\n        <div className='progress-circles-4'>\n          <div className='milestone-1'>\n            <h1></h1>\n          </div>\n          <div className='milestone-2'>\n            <h1></h1>\n          </div>\n          <div className='milestone-3'>\n            <h1></h1>\n          </div>\n          <div className='milestone-4'>\n            <h1></h1>\n          </div>\n          <div className='milestone-5'>\n            <h1></h1>\n          </div>\n        </div>\n      </div>\n      <div className='timeline-background-4'>\n        {/* <h1>.</h1> */}\n      </div>\n    </section>\n  )\n\n}\n\nexport default Timeline4","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n// import  Modal from 'react-modal'\nimport { getAccessToken, isUserAuth, getUserToken } from '../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\n\n\nimport Timeline1 from '../tools/Timeline1'\nimport Timeline2 from '../tools/TImeline2'\nimport Timeline3 from '../tools/Timeline3'\nimport Timeline4 from '../tools/Timeline4'\nimport Timeline5 from '../tools/Timeline5'\nimport NavBar from '../tools/NavBar'\nimport WhiteNavbar from '../tools/WhiteNavbar'\n\nconst PropertyDetailsWittle = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set error state for capturing errors\n  const [errors, setErrors] = useState(false)\n\n  // states for filling out the form\n  const [formData, setFormData] = useState({\n    start_search: true,\n    search_name: '',\n    search_type: 'Wittle',\n    search_channel: 'Buying',\n    restaurant_selection: false,\n    restaurant_decision: '',\n    restaurant_distance: 0,\n    restaurant_cuisine_1: '',\n    restaurant_cuisine_2: '',\n    takeaway_selection: false,\n    takeaway_decision: '',\n    takeaway_distance: 0,\n    takeaway_cuisine_1: '',\n    takeaway_cuisine_2: '',\n    pubs_selection: false,\n    pubs_distance: 0,\n    cafes_selection: '',\n    cafes_decision: '',\n    cafes_detail: '',\n    cafes_distance: 0,\n    tube_selection: false,\n    tube_decision: '',\n    tube_detail: '',\n    tube_distance: 0,\n    train_selection: false,\n    train_decision: '',\n    train_detail: '',\n    train_distance: 0,\n    primary_selection: false,\n    primary_religion: '',\n    primary_mode: '',\n    primary_distance: 0,\n    college_selection: false,\n    college_religion: '',\n    college_mode: '',\n    college_distance: 0,\n    secondary_selection: false,\n    secondary_religion: '',\n    secondary_mode: '',\n    secondary_distance: 0,\n    supermarket_selection: false,\n    supermarket_decision: '',\n    supermarket_segment: '',\n    supermarket_size: '',\n    supermarket_distance: 0,\n    gym_selection: false,\n    gym_studio_name: '',\n    gym_class_type: '',\n    gym_distance: 0,\n    park_selection: false,\n    park_type: '',\n    park_distance: 0,\n    workplace_selection: false,\n    workplace_detail: '',\n    workplace_transport: '',\n    workplace_distance: 0,\n    family_selection: false,\n    family_detail_1: '',\n    family_distance_1: 0,\n    family_detail_2: '',\n    family_distance_2: 0,\n    family_detail_3: '',\n    family_distance_3: 0,\n    family_mode_1: '',\n    family_mode_2: '',\n    family_mode_3: '',\n    property_price_min: '0',\n    property_price_max: '10000000',\n    property_bed_min: '0',\n    property_bed_max: '5',\n    property_type: 'Any',\n    owner: 31,\n  })\n\n\n\n  // get form data from storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('wittle-form-input'))\n    if (data) setFormData(data)\n  }, [])\n\n\n  // ? Setting up the ability to retain the form data across pages by saving the data to local storage for us to access on another pagee\n  // define function to set state to storage\n  const setStateToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-form-input', JSON.stringify(formData))\n    console.log(formData)\n  }\n\n  // execute setting state to local storage\n  // useEffect(() => {\n  //   if (formData) {\n  //     setStateToLocalStorage()\n  //   }\n  // }, [formData])\n\n  // general update for drop down menus\n  const handleChange = e => {\n    const test = e.target.value\n    if (test.includes('£')) {\n      const newValue = test.replace('£', '').replace(',', '').replace(',', '')\n      setFormData({ ...formData, [e.target.name]: newValue })\n    } else {\n      setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n\n\n  // ? Managing state for modal pop up for saving the search\n  // Setting state and handles for submit modal\n  const [show, setShow] = useState(false)\n\n  // closing thee modal\n  const handleClose = () => {\n    setShow(false)\n  }\n\n  // showing the modal\n  const handleShow = () => setShow(true)\n\n  // no access modal\n  const [noAccess, noAccessShow] = useState(false)\n\n  // closing access modal\n  const accessClose = () => {\n    noAccessShow(false)\n  }\n\n  // showing access modal\n  const accessShow = () => noAccessShow(true)\n\n  // function with logic for different modal depending on log in status\n  const accessLogic = () => {\n    isUserAuth() ? handleShow() : accessShow()\n    const randomName = 'Admin ' + Math.random().toString(36).slice(2, 15)\n    console.log(randomName)\n    setFormData({ ...formData, search_name: randomName })\n  }\n\n  // function for logic when you click login from the access modal\n  const loginLogic = () => {\n    accessClose()\n    openDropdown()\n  }\n\n\n\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    accessClose()\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // update registration data\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    console.log(e.target.name)\n    console.log(e.target.value)\n    setErrors(false)\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      handleRegisterClose()\n      accessLogic()\n    } catch (err) {\n      // setErrors(err.response.status + ' ' + err.response.statusText)\n    }\n  }\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n\n  // ? Posting the results of the wittle-search form to the database\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    if (isUserAuth())\n      try {\n        const { data } = await axios.post('/api/property-search/', formData, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        window.localStorage.setItem('wittle-form-input', JSON.stringify(formData))\n        navigate('/wittle-results')\n        console.log('submitted form ->', data)\n      } catch (error) {\n        setErrors(true)\n      }\n    else\n      try {\n        const { data } = await axios.post('/api/property-search/xplw7aq5r', formData)\n        window.localStorage.setItem('wittle-form-input', JSON.stringify(formData))\n        navigate('/wittle-results')\n        console.log('submitted form ->', data)\n      } catch (error) {\n        setErrors(true)\n        console.log(error.response.data.detail)\n      }\n  }\n\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    // window.location.reload()\n    setIsActive(false)\n  }\n\n  // handling the dropdown section of the navbar\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar  \n  // send form to back end to log in\n  const loginSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      setIsActive(false)\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const loginChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  return (\n    <>\n      <section className='main-form-pages'>\n        <WhiteNavbar />\n        <section className='form-input-page'>\n          {/* Top section of the page with header and timeline bar */}\n          <section className='title-section'>\n            <h1>The final step</h1>\n            <Timeline4 />\n            <div className='form-selections-large'>\n              {formData.restaurant_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Restaurants</button> : ''}\n              {formData.cafes_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Cafes</button> : ''}\n              {formData.takeaway_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Takeaways</button> : ''}\n              {formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Pubs & Bars</button> : ''}\n              {formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Tubes</button> : ''}\n              {formData.train_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Trains</button> : ''}\n              {formData.supermarket_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Supermarkets</button> : ''}\n              {formData.gym_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Gyms</button> : ''}\n              {formData.park_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Parks</button> : ''}\n              {formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Workplace</button> : ''}\n              {formData.primary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Primary Schools</button> : ''}\n              {formData.secondary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Secondary Schools</button> : ''}\n              {formData.college_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>6th Forms</button> : ''}\n              {formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Friends & Family</button> : ''}\n            </div>\n            <div className='form-selections-small'>\n              {formData.restaurant_selection || formData.cafes_selection || formData.takeaway_selection || formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Hospitality</button> : ''}\n              {formData.train_selection || formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Travel</button> : ''}\n              {formData.supermarket_selection || formData.gym_selection || formData.park_selection || formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Lifestyle</button> : ''}\n              {formData.primary_selection || formData.secondary_selection || formData.college_selection || formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Family</button> : ''}\n\n            </div>\n          </section>\n\n          {/* Lower section of the page containing the main content */}\n          <section className='main-content-detail'>\n            <div className='form-selection'>\n              <h1>Property details</h1>\n\n              <div className='form-filling-section-1' id='property-search-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <p className='search-bold'>Are you interested in buying or renting?</p>\n                    <div className='form-detail' id='final-step'>\n                      <div className='form-detail-address'>\n                        <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='search_channel' onChange={handleChange}>\n                          <option>Buying</option>\n                          <option>Renting</option>\n                        </select>\n                      </div>\n                    </div>\n                    <p className='search-bold'>Price range</p>\n                    {formData.search_channel === 'Renting' ?\n                      <>\n                        <div className='form-detail' id='final-step'>\n                          <div className='form-detail-address' id='property'>\n                            <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_price_min' onChange={handleChange} >Pick cuisine\n                              <option value={0}>No min</option>\n                              <option><NumericFormat value={500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={600} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={700} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={800} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={900} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={4000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={4500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={5000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={6000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={7000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={8000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                            </select>\n                          </div>\n                          <div className='form-detail-address'>\n                            <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_price_max' onChange={handleChange} >Pick cuisine\n                              <option value={10000000}>No max</option>\n                              <option><NumericFormat value={500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={600} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={700} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={800} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={900} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2250} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2750} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={4000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={4500} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={5000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={6000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={7000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={8000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={10000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                            </select>\n                          </div>\n                        </div>\n                      </>\n\n                      :\n                      <>\n                        <div className='form-detail' id='final-step'>\n                          <div className='form-detail-address' id='property'>\n                            <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_price_min' onChange={handleChange} >Pick cuisine\n                              <option value={0}>No min</option>\n                              <option><NumericFormat value={200000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={300000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={400000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={600000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={700000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={800000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={900000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1250000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1750000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={4000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={5000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                            </select>\n                          </div>\n                          <div className='form-detail-address'>\n                            <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_price_max' onChange={handleChange} >Pick cuisine\n                              <option value={10000000}>No max</option>\n                              <option><NumericFormat value={300000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={400000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={600000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={700000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={800000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={900000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1250000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={1750000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={2500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={3500000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={4000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={5000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                              <option><NumericFormat value={10000000} displayType={'text'} thousandSeparator={true} prefix={'£'} /></option>\n                            </select>\n                          </div>\n                        </div>\n                      </>\n                    }\n                    <p className='search-bold'>Number of bedrooms</p>\n                    <div className='form-detail' id='final-step'>\n                      <div className='form-detail-address' id='property'>\n                        <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_bed_min' onChange={handleChange} >Pick cuisine\n                          <option value={0}>No min</option>\n                          <option>1</option>\n                          <option>2</option>\n                          <option>3</option>\n                          <option>4</option>\n                        </select>\n                      </div>\n                      <div className='form-detail-address'>\n                        <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_bed_max' onChange={handleChange} >Pick cuisine\n                          <option value={5}>No max</option>\n                          <option>1</option>\n                          <option>2</option>\n                          <option>3</option>\n                          <option>4</option>\n                          <option>5</option>\n                        </select>\n                      </div>\n                    </div>\n                    <p className='search-bold'>Property type</p>\n                    <div className='cuisine-dropdowns' id='property-type'>\n                      <select className='property-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='property_type' onChange={handleChange} >Pick cuisine\n                        <option>Any</option>\n                        <option>House</option>\n                        <option>Flat</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className='form-filling-image-right' id='property-image'>\n\n                  </div>\n                </div>\n              </div>\n\n              <button className='next' onClick={accessLogic} data-toggle='modal' >Next</button>\n              {/* Modal for saving searchc */}\n              <Modal show={noAccess} onHide={accessClose} backdrop='static' className='search-modal'>\n                <Modal.Body>\n                  <div className='search-title'>\n                    <h1 className='submit-title'>Want to save your search?</h1>\n                    {/* <p className='submit-subtitle'></p> */}\n                    <h1 className='x-close' onClick={accessClose}>x</h1>\n                  </div>\n                  <p className='submit-detail'>Only fully fledged Wittlers can do that. Sign in or make an account to save your searches, compare properties and save them.</p>\n                  <div className='auth-buttons'>\n                    <button onClick={loginLogic}>Sign in</button>\n                    <button onClick={handleRegisterShow}>Register</button>\n                  </div>\n                  <h1 className='submit-second-title'>Just want to see the results?</h1>\n                  <p className='submit-detail'>You don&apos;t need an account to see your results, but you won&apos;t be able to come back to them once you&apos;ve left.</p>\n                  <div className='auth-buttons'>\n                    <Link to={'/wittle-results'}><button onClick={handleSubmit}>Results</button></Link>\n                  </div>\n                </Modal.Body>\n              </Modal>\n\n\n              <Modal show={show} onHide={handleClose} backdrop='static' className='search-modal'>\n                <Modal.Body>\n                  <div className='search-title'>\n                    <h1 className='submit-title'>Let&apos;s save your search</h1>\n                    <h1 className='x-close' onClick={handleClose}>x</h1>\n                  </div>\n                  <p className='submit-detail'>Once you have saved this search, you can view the results against it at any time.</p>\n                  <h3 className='submit-name'>Name of search</h3>\n                  <div className='search-name'>\n                    {/* <h4>Name</h4> */}\n                    <input type=\"text\" name='search_name' className='submit-input' onChange={handleChange} />\n                    <Link to={'/wittle-results'}><button onClick={handleSubmit}>Submit</button></Link>\n                  </div>\n                </Modal.Body>\n              </Modal>\n\n              {/* Modal for no access */}\n              {/* <Modal show={noAccess} onHide={accessClose} backdrop='static' className='access-modal'>\n                <Modal.Body>\n                  <h1 className='submit-title'>Oops! You need an account to complete a search</h1>\n                  <p className='submit-detail'>Log in or register for access to all Wittle content</p>\n                  <div className='search-name'>\n                    <button className='next' onClick={accessClose}>Close</button>\n                    <div className='submission'>\n                      <button id='login' className='next' onClick={loginLogic}>Login</button>\n                      <button className='next' onClick={handleRegisterShow}>Register</button>\n                    </div>\n                  </div>\n                </Modal.Body>\n              </Modal> */}\n\n              {/* Modal for regitration when no access */}\n              <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n                <Modal.Body>\n                  <form className='form-detail' onSubmit={registerSubmit} >\n                    <div className='register-title'>\n                      <h1>Unlock the benefits of Wittle</h1>\n                      <h1 className='x-close'>x</h1>\n                    </div>\n\n                    <p>Set up an account to help you find the perfect home</p>\n                    <hr />\n                    <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n                    <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n                    <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n                    {/* {errors && <p className = 'denied-text'>Please input username</p>} */}\n                    <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n                    {/* {errors && <p className = 'denied-text'>Please input email</p>} */}\n                    <input type='password' name='password' className='input' placeholder='Password' value={registerData.password} onChange={registerChange} />\n                    {/* {errors && <p className = 'denied-text'>Please input password</p>} */}\n                    <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n                    {/* Submit */}\n                    {/* <hr/> */}\n                    <button type='submit'>Register</button>\n                  </form>\n                  <div className='register-bottom'>\n                    <button className='register-close' onClick={handleRegisterClose}>Close</button>\n                  </div>\n                </Modal.Body>\n              </Modal>\n            </div>\n          </section>\n        </section>\n      </section>\n\n    </>\n  )\n\n}\n\nexport default PropertyDetailsWittle"],"names":["navbarColour","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","className","style","backgroundColor","onClick","handleMenuClose","removeItemFromStorage","token","localStorage","removeItem","window","location","reload","isUserAuth","formData","setFormData","start_search","search_name","search_type","search_channel","restaurant_selection","restaurant_decision","restaurant_distance","restaurant_cuisine_1","restaurant_cuisine_2","takeaway_selection","takeaway_decision","takeaway_distance","takeaway_cuisine_1","takeaway_cuisine_2","pubs_selection","pubs_distance","cafes_selection","cafes_decision","cafes_detail","cafes_distance","tube_selection","tube_decision","tube_detail","tube_distance","train_selection","train_decision","train_detail","train_distance","primary_selection","primary_religion","primary_mode","primary_distance","college_selection","college_religion","college_mode","college_distance","secondary_selection","secondary_religion","secondary_mode","secondary_distance","supermarket_selection","supermarket_decision","supermarket_segment","supermarket_size","supermarket_distance","gym_selection","gym_studio_name","gym_class_type","gym_distance","park_selection","park_type","park_distance","workplace_selection","workplace_detail","workplace_transport","workplace_distance","family_selection","family_detail_1","family_distance_1","family_detail_2","family_distance_2","family_detail_3","family_distance_3","family_mode_1","family_mode_2","family_mode_3","property_price_min","property_price_max","property_bed_min","property_bed_max","property_type","owner","useEffect","data","JSON","parse","getItem","handleChange","e","test","target","value","includes","newValue","replace","name","show","setShow","handleClose","noAccess","noAccessShow","accessClose","accessLogic","randomName","Math","random","toString","slice","console","log","handleRegisterClose","registerChange","setUserTokenToLocalStorage","setItem","handleSubmit","async","preventDefault","axios","headers","Authorization","getAccessToken","stringify","error","response","detail","openDropdown","id","placeholder","onChange","displayType","thousandSeparator","prefix","onHide","backdrop","to","type","onSubmit","err"],"sourceRoot":""}