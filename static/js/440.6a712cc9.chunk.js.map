{"version":3,"file":"static/js/440.6a712cc9.chunk.js","mappings":"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","sources":["components/whiteLabel/b2bModals/KYCInput.js","components/whiteLabel/propertyList.js/TopProperties.js"],"sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport { Modal } from 'react-bootstrap'\nimport ReactSwitch from 'react-switch'\n\n\nconst KYCInput = ({ propertyInputShow, handlePropertyInputClose, propertyFilters, setPropertyFilters, adjustedFilters, loadProperties, toggleStatus, previousLocation, editAgentSearch }) => {\n\n  const formatSize = (size) => {\n    if (size === null) return ''\n\n    const num = parseFloat(size)\n    return num % 1 === 0 ? num.toString() : num.toFixed(1)\n  }\n\n  // useEffect(() => \n  //   console.log('property filters ->', propertyFilters)\n  // )\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000', '2'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n  // borough list\n  const boroughs = ['Barking and Dagenham', 'Barnet', 'Bexley', 'Brent', 'Camden', 'Croydon', 'Ealing', 'Enfield', 'Greenwich', 'Havering', 'Kensington and Chelsea',\n    'Hertfordshire', 'Hillingdon', 'Hounslow', 'Islington', 'Lambeth', 'Lewisham', 'Merton', 'Southwark', 'Sutton', 'Waltham Forest', 'Westminster',\n    'Hackney', 'City of London', 'Hammersmith and Fulham', 'Wandsworth', 'Tower Hamlets', 'Bromley', 'Haringey', 'Kingston upon Thames', 'Newham', 'Redbridge', 'Richmond upon Thames']\n\n  // property type list\n  const propertyTypeList = ['Flat', 'Apartment', 'Terraced', 'Semi-Detached', 'Detached', 'House', 'End of Terrace', 'Maisonette', 'Studio', 'Retirement Property', 'Ground Flat',\n    'Penthouse', 'Bungalow', 'Town House', 'Detached Bungalow', 'Duplex']\n\n  return (\n\n    <>\n      <Modal show={propertyInputShow} onHide={handlePropertyInputClose} backdrop='static' className='KYC-input-modal'>\n        <Modal.Body>\n          {propertyFilters ?\n\n            <section className='overall-body'>\n              <section className='input-header'>\n                <div className='input-title'>\n                  <h1>Find a property based on what matters to you</h1>\n                  <h1 className='close-modal' onClick={handlePropertyInputClose}>X</h1>\n                </div>\n              </section>\n              <section className='input-main'>\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Search details</h2>\n                  <div className='selection-block-single'>\n                    <h3>Channel</h3>\n                    <select className='dropdown' value={propertyFilters.channel || 'Sales'} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, channel: e.target.value }))}>\n                      <option>Sales</option>\n                      <option>Lettings</option>\n                    </select>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Area</h3>\n                    <select className='dropdown' value={propertyFilters.area || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, area: e.target.value }))}>\n                      <option value=''>All</option>\n                      {boroughs.map((borough, index) => (\n                        <option key={index} value={borough}>{borough}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Property details</h2>\n                  <div className='selection-block-double'>\n                    <h3>Price</h3>\n                    {propertyFilters.channel === 'Lettings' ?\n                      <div className='double-dropdowns'>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_min || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                        >\n                          <option value={0}>No min</option>\n                          {rentalPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_max || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                        >\n                          <option value={10000000}>No max</option>\n                          {rentalPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n\n                      </div>\n                      : propertyFilters.channel === 'Sales' ?\n                        <div className='double-dropdowns'>\n                          <select\n                            className='dropdown'\n                            value={propertyFilters.rental_price_min || ''}\n                            onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                          >\n                            <option value={0}>No min</option>\n                            {salesPrices.map((price, index) => (\n                              <option key={index} value={price}>\n                                <NumericFormat\n                                  value={price}\n                                  displayType={'text'}\n                                  thousandSeparator={true}\n                                  prefix={'£'}\n                                />\n                              </option>\n                            ))}\n                          </select>\n                          <select\n                            className='dropdown'\n                            value={propertyFilters.rental_price_max || ''}\n                            onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                          >\n                            <option value={1000000000}>No max</option>\n                            {salesPrices.map((price, index) => (\n                              <option key={index} value={price}>\n                                <NumericFormat\n                                  value={price}\n                                  displayType={'text'}\n                                  thousandSeparator={true}\n                                  prefix={'£'}\n                                />\n                              </option>\n                            ))}\n                          </select>\n\n                        </div>\n                        : ''}\n                  </div>\n                  <div className='selection-block-double'>\n                    <h3>Bedrooms</h3>\n                    <div className='double-dropdowns'>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.bedrooms_min || null}\n                        onChange={(e) => setPropertyFilters(prevData => ({\n                          ...prevData,\n                          bedrooms_min: e.target.value ? parseInt(e.target.value, 10) : null,\n                        }))}\n                      >\n                        <option value={null}>No min</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                      </select>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.bedrooms_max || null}\n                        onChange={(e) => setPropertyFilters(prevData => ({\n                          ...prevData,\n                          bedrooms_max: e.target.value ? parseInt(e.target.value, 10) : null,\n                        }))}\n                      >\n                        <option value={null}>No max</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Property type</h3>\n                    <select className='dropdown' value={propertyFilters.propertyType || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, propertyType: e.target.value }))}>\n                      <option value=''>All</option>\n                      {propertyTypeList.map((property, index) => (\n                        <option key={index} value={property}>{property}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Features</h3>\n                    <div className='select-box'>\n                      <input type=\"checkbox\" id=\"myCheckbox\" name=\"myCheckbox\" checked={propertyFilters.garden} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, garden: e.target.checked }))} />\n                      <label htmlFor=\"myCheckbox\">Garden</label>\n                    </div>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Size</h3>\n                    <input placeholder='Input min size' className='dropdown' value={formatSize(propertyFilters.size)}\n                      onChange={(e) => {\n                        const value = e.target.value\n                        setPropertyFilters(prevData => ({\n                          ...prevData,\n                          size: value ? parseFloat(value) : null,\n                        }))\n                      }}></input>\n                  </div>\n                </div>\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Lifestyle details</h2>\n                  <p className='explanation'>Select what you want to include as part of your search and how much they matter</p>\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Primary schools</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.primaries === true}\n                      onChange={() => toggleStatus('primaries')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.primaries === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, primaries_score: e.target.value }))}\n                        name={propertyFilters.primaries_score}\n                        className='slider'\n                        defaultValue={propertyFilters.primaries_score ? propertyFilters.primaries_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.primaries_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Secondary schools</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.secondaries === true}\n                      onChange={() => toggleStatus('secondaries')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.secondaries === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, secondaries_score: e.target.value }))}\n                        name={propertyFilters.secondaries_score}\n                        className='slider'\n                        defaultValue={propertyFilters.secondaries_score ? propertyFilters.secondaries_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.secondaries_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Parks</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.parks === true}\n                      onChange={() => toggleStatus('parks')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.parks === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, parks_score: e.target.value }))}\n                        name={propertyFilters.parks_score}\n                        className='slider'\n                        defaultValue={propertyFilters.parks_score ? propertyFilters.parks_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.parks_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Playgrounds</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.playgrounds === true}\n                      onChange={() => toggleStatus('playgrounds')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.playgrounds === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, playgrounds_score: e.target.value }))}\n                        name={propertyFilters.playgrounds_score}\n                        className='slider'\n                        defaultValue={propertyFilters.playgrounds_score ? propertyFilters.playgrounds_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.playgrounds_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Gyms</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.gyms === true}\n                      onChange={() => toggleStatus('gyms')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.gyms === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, gyms_score: e.target.value }))}\n                        name={propertyFilters.gyms_score}\n                        className='slider'\n                        defaultValue={propertyFilters.gyms_score ? propertyFilters.gyms_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.gyms_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Restaurants</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.restaurants === true}\n                      onChange={() => toggleStatus('restaurants')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.restaurants === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, restaurants_score: e.target.value }))}\n                        name={propertyFilters.restaurants_score}\n                        className='slider'\n                        defaultValue={propertyFilters.restaurants_score ? propertyFilters.restaurants_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.restaurants_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Pubs</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.pubs === true}\n                      onChange={() => toggleStatus('pubs')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.pubs === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, pubs_score: e.target.value }))}\n                        name={propertyFilters.pubs_score}\n                        className='slider'\n                        defaultValue={propertyFilters.pubs_score ? propertyFilters.pubs_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.pubs_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Tubes</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.tubes === true}\n                      onChange={() => toggleStatus('tubes')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.tubes === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, tubes_score: e.target.value }))}\n                        name={propertyFilters.tubes_score}\n                        className='slider'\n                        defaultValue={propertyFilters.tubes_score ? propertyFilters.tubes_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.tubes_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Supermarkets</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.supermarkets === true}\n                      onChange={() => toggleStatus('supermarkets')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.supermarkets === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, supermarkets_score: e.target.value }))}\n                        name={propertyFilters.supermarkets_score}\n                        className='slider'\n                        defaultValue={propertyFilters.supermarkets_score ? propertyFilters.supermarkets_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.supermarkets_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>EVs</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.ev === true}\n                      onChange={() => toggleStatus('ev')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.ev === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, ev_score: e.target.value }))}\n                        name={propertyFilters.ev_score}\n                        className='slider'\n                        defaultValue={propertyFilters.ev_score ? propertyFilters.ev_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.ev_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Crime</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.crime === true}\n                      onChange={() => toggleStatus('crime')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.crime === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, crime_score: e.target.value }))}\n                        name={propertyFilters.crime_score}\n                        className='slider'\n                        defaultValue={propertyFilters.crime_score ? propertyFilters.crime_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.crime_score}</h3>\n                    </div> : ''}\n                </div>\n\n              </section>\n              <section className='search-name-section'>\n                <h3>Give your search a name to save it</h3>\n                <input value={propertyFilters.search_name || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, search_name: e.target.value }))}></input>\n              </section>\n\n              <section className='input-footer'>\n                {previousLocation === 'Edit' ? <button className='load-properties' onClick={editAgentSearch}>Load results</button> : <button className='load-properties' onClick={loadProperties}>Load results</button>}\n              </section>\n            </section>\n            : ''}\n\n\n        </Modal.Body>\n      </Modal >\n\n    </>\n\n  )\n}\n\nexport default KYCInput","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport KYCInput from '../b2bModals/KYCInput'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport { set } from 'react-ga'\n\nconst TopProperties = ({ setListingSelection, fetchData, agentFavourites, loadUserData, addAgentFavourite, deleteAgentFavourite,\n  propertyFilters, setPropertyFilters, addAgentSearch, properties, setProperties, loadProperties, loading,\n  propertyInputShow, handlePropertyInputShow, handlePropertyInputClose, toggleStatus }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n\n\n\n\n  // set view for the table\n  const [propertyViewFormat, setPropertyViewFormat] = useState('Table')\n\n  const [selectedProperties, setSelectedProperties] = useState(null)\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // state for detail view on property\n  const [propertyDetails, setPropertyDetails] = useState('Details')\n\n  const imageRefs = useRef(new Map())\n\n\n\n  // creat\n  useEffect(() => {\n    const filters = JSON.parse(localStorage.getItem('top-property-filters'))\n    const propertyData = JSON.parse(localStorage.getItem('top-properties'))\n    if (filters) {\n      setPropertyFilters(filters)\n      setProperties(propertyData)\n    }\n  }, [])\n\n\n\n\n\n\n  const handleVisitUrl = (url) => {\n    // Create a new anchor element\n    const link = document.createElement('a')\n\n    // Set the URL\n    link.href = url\n\n    // Set the target\n    link.target = '_blank'\n\n    // Set rel to noreferrer to prevent sending the referrer\n    link.rel = 'noreferrer'\n\n    // Set window features\n    link.windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Append the link to the body\n    document.body.appendChild(link)\n\n    // Simulate a click on the link\n    link.click()\n\n    // Remove the link from the body\n    document.body.removeChild(link)\n  }\n\n  // function to move to the listings\n  const goToListing = (item) => {\n    console.log('postcode ->', item.property_data.postcode)\n    window.localStorage.setItem('listing-postcode', JSON.stringify(item.property_data.postcode))\n    window.localStorage.setItem('listing-route', JSON.stringify('On'))\n    fetchData()\n    setListingSelection('Property insights')\n    navigate('/agents/listing-generator')\n  }\n\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 50\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 10.5,\n  })\n\n\n  // set current page when you click icon\n  const handlePropertyClick = (property) => {\n    console.log('selectd property ->', property)\n    setSelectedProperties(property)\n  }\n\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n  const mapNumberToWord = (number) => {\n    // const value = number * 10s\n    if (number > 0.9) return 'Outstanding'\n    if (number > 0.8) return 'Excellent'\n    if (number > 0.7) return 'Very good'\n    if (number > 0.6) return 'Good'\n    if (number > 0.5) return 'Quite good'\n    if (number > 0.4) return 'Average'\n    if (number > 0.3) return 'Below average'\n    if (number > 0.2) return 'Bad'\n    if (number > 0.1) return 'Poor'\n    return 'Terrible'\n  }\n\n\n\n\n  return (\n\n    <>\n      <section className='top-properties'>\n\n        <section className='top-properties-filters'>\n          <div className='filter-block mobile'>\n            <button onClick={handlePropertyInputShow}>Edit search</button>\n          </div>\n\n        </section>\n\n        {!loading ?\n          <section className='top-property-results'>\n            <div className='top-property-title'>\n              <h3>{properties ? `${properties.length} matching properties` : ''}</h3>\n              <div className='view-selectors'>\n                <button className='edit-search' onClick={handlePropertyInputShow}>Edit search</button>\n                <div className={`icon-box ${propertyViewFormat === 'Table' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Table')}>\n                  <div className='icon' id='table'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Map' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Map')}>\n                  <div className='icon' id='map'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Grid' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Grid')}>\n                  <div className='icon' id='grid'></div>\n                </div>\n              </div>\n            </div>\n\n\n            {propertyViewFormat === 'Table' && properties ?\n              <div className='property-table-view'>\n                <div className='top-property-table'>\n                  <div className='table-headers'>\n                    <div id='column1' className='column'>\n                      <h5>#</h5>\n                    </div>\n                    <div id='column2' className='column' >\n                      <h5>Address</h5>\n                    </div>\n                    <div id='column3' className='column'>\n                      <h5>Postcode</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column4' className='column'>\n                      <h5>Area</h5>\n                    </div>\n                    <div id='column5' className='column'>\n                      <h5>Added</h5>\n                    </div>\n                    <div id='column6' className='column'>\n                      <h5>Price</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column7' className='column'>\n                      <h5>Bedrooms</h5>\n                    </div>\n                    <div id='column8' className='column'>\n                      <h5>Agent</h5>\n                    </div>\n                    <div id='column9' className='column'>\n                      <h5>Score</h5>\n                    </div>\n                  </div>\n                  <hr className='property-divider' />\n                  <div className='table-detail'>\n                    {properties ? properties.map((item, index) => {\n                      return (\n                        <>\n                          <div className='table-content'>\n                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{index + 1}</h5>\n                            </div>\n                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.displayAddress}</h5>\n                            </div>\n                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.postcode}</h5>\n                            </div>\n                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.persona_data_list[0].district}</h5>\n                            </div>\n                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.added_revised === null ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised}</h5>\n                            </div>\n                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.price}</h5>\n                            </div>\n                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.bedrooms}</h5>\n                            </div>\n                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.agent}</h5>\n                            </div>\n                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                            </div>\n                            <div id='column10' className='column'>\n                              <button onClick={() => goToListing(item)}>Go</button>\n                              {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n\n\n                            </div>\n                          </div>\n                          <hr className='property-divider' />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n                  </div>\n\n                </div>\n                {properties ?\n                  <ReactPaginate\n                    pageCount={Math.ceil(properties.length / 50)}\n                    onPageChange={handlePageClick}\n                    containerClassName={'pagination'}\n                    activeClassName={'active'}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    pageRangeDisplayed={0}\n                    breakLabel={'...'}\n                  />\n                  : ''}\n\n              </div>\n              : propertyViewFormat === 'Map' && properties ?\n                <div className='property-map-view'>\n                  <div className='map-block'>\n\n                    <div className='grid-list'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-content'>\n                              <div className='grid-left'>\n                                <img className='property-image' alt='property-image' loading='lazy' onClick={() => handleVisitUrl(item.property_data.url)} src={item.property_data.images} />\n                              </div>\n                              <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                                <h5 className='title' onClick={() => handleVisitUrl(item.property_data.url)}>{index + 1}. {item.property_data.displayAddress}</h5>\n                                <h5 className='sub-title'>Bedrooms: {item.property_data.bedrooms}</h5>\n                                <h5 className='sub-title'>Price: {item.property_data.price}</h5>\n                                <h5 className='sub-title'>Score: {(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                                {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n\n                              </div>\n                            </div>\n                            <hr className=\"dividing-line\" />\n                          </>\n                        )\n                      }).slice(startIndex, endIndex) : ''}\n                    </div>\n\n                    <div className=\"map-section\">\n                      <ReactMapGL\n                        {...viewport}\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                        mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                        onViewportChange={viewport => {\n                          setViewport(viewport)\n                        }}\n                        center={viewport}\n                        onMove={evt => setViewport(evt.viewport)}\n                        className=\"profile-map\"\n                      >\n                        {properties &&\n                          properties.map((item, index) => (\n                            <Marker\n                              key={index}\n                              id={item.id}\n                              longitude={item.property_data.longitude}\n                              latitude={item.property_data.latitude}\n                              onClick={() => handlePropertyClick(item)}\n                            >\n                              <div className=\"poi-background\">{index + 1}</div>\n                            </Marker>\n                          )).slice(startIndex, endIndex)}\n\n                        {selectedProperties ?\n                          <Popup\n                            longitude={selectedProperties.property_data.longitude}\n                            latitude={selectedProperties.property_data.latitude}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedProperties(null)}\n\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>{selectedProperties.property_data.displayAddress}</h5>\n                                {/* <p>{selectedProperties.master_cuisine}</p> */}\n                                {/* <p>{selectedProperties.rating} /5</p> */}\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                        }\n                      </ReactMapGL>\n                    </div>\n                  </div>\n                  {properties ?\n                    <ReactPaginate\n                      pageCount={Math.ceil(properties.length / 50)}\n                      onPageChange={handlePageClick}\n                      containerClassName={'pagination'}\n                      activeClassName={'active'}\n                      previousLabel={'<'}\n                      nextLabel={'>'}\n                      pageRangeDisplayed={0}\n                      breakLabel={'...'}\n                    />\n                    : ''}\n                </div>\n\n                : propertyViewFormat === 'Grid' && properties ?\n                  <div className='property-grid-view'>\n                    <div className='property-grid-items'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-item'>\n                              <div className='property-item-left'>\n                                <img className='property-item-image' alt='property-image' loading='lazy' onClick={() => handleVisitUrl(item.property_data.url)} src={item.property_data.images} />\n                                <div className='property-core-info'>\n                                  {propertyFilters.channel === 'Sales' ?\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> </h3> :\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> pcm</h3>\n                                  }\n                                  {item.overall_lifestyle_score ? <h3 className='match-score'>🔥 {(item.overall_lifestyle_score * 10).toFixed(0)}% match</h3> : ''}\n                                  {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n                                </div>\n                              </div>\n                              <div className='property-item-right'>\n                                <div className='detail-selections'>\n                                  <div className='key-selectors'>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Details' ? '700' : '500' }} onClick={() => setPropertyDetails('Details')}>Details</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Insights' ? '700' : '500' }} onClick={() => setPropertyDetails('Insights')}>Insights</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Floorplan' ? '700' : '500' }} onClick={() => setPropertyDetails('Floorplan')}>Floorplan</h3>\n                                    <button onClick={() => goToListing(item)}>Explore</button>\n\n\n                                  </div>\n                                  <div className='action'>\n                                  </div>\n                                </div>\n                                {propertyDetails === 'Details' ?\n\n                                  <div className='property-body'>\n                                    <h2 className='property-title'>{item.property_data.displayAddress}, {item.persona_data_list[0].district}</h2>\n                                    <h3 className='added-details'>{item.property_data.added_revised ? `Added on ${item.property_data.added_revised}` : `Reduced on ${item.property_data.reduced_revised}`}</h3>\n                                    <div className='key-elements'>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bed'></div>\n                                        <h3>{item.property_data.bedrooms} bedrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bath'></div>\n                                        <h3>{item.property_data.bathrooms} bathrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='size'></div>\n                                        <h3>{item.property_data.size} sq. ft</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='type'></div>\n                                        <h3>{item.property_data.propertyType}</h3>\n                                      </div>\n                                    </div>\n                                    <div className='property-features'>\n                                      <h3 className='features-title'>Features</h3>\n                                      <div className='feature-list'>\n                                        {item.property_data.features.split(', ').map((feature, index) => (\n                                          <li key={index} className='feature-item'>{feature}</li>\n                                        ))}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  : propertyDetails === 'Insights' ?\n                                    <div className='property-body'>\n                                      <div className='insights-body'>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='primaries'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].primary_percentile)} for primary schools</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='secondaries'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].secondary_percentile)} for secondary schools</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='parks'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].park_area_percentile)} for access to parks</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='gyms'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].gym_percentile)} for access to gyms</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='pubs'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].pub_percentile)} for access to pubs</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='restaurants'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].restaurant_percentile)} for restaurants</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='crime'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].crime_percentile)} for crime rates</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='tubes'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].tube_percentile)} for tube access</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='evs'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].ev_percentile)} for EV access</h3>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    : propertyDetails === 'Floorplan' ?\n                                      <div className='property-body'>\n                                        <div className='floorplan-body' onClick={() => handleVisitUrl(item.property_data.floorplan_url)} style={{ backgroundImage: `url(${item.property_data.floorplan_url})` }}></div>\n                                      </div>\n                                      : ''}\n\n\n\n                              </div>\n                            </div>\n                          </>\n                        )\n                      }).slice(startIndex, endIndex)\n\n                        : ''}\n\n                    </div>\n                    {properties ?\n                      <ReactPaginate\n                        pageCount={Math.ceil(properties.length / 50)}\n                        onPageChange={handlePageClick}\n                        containerClassName={'pagination'}\n                        activeClassName={'active'}\n                        previousLabel={'<'}\n                        nextLabel={'>'}\n                        pageRangeDisplayed={0}\n                        breakLabel={'...'}\n                      />\n                      : ''}\n                  </div>\n\n                  : !properties ?\n                    <div className='no-properties'>\n                      <h1>🔎 Start a search to see some properties</h1>\n                      <button className='edit-search' onClick={handlePropertyInputShow}>Start search</button>\n                    </div>\n\n                    : ''}\n\n\n          </section>\n          : loading ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </section>\n      <KYCInput\n        propertyInputShow={propertyInputShow}\n        handlePropertyInputClose={handlePropertyInputClose}\n        propertyFilters={propertyFilters}\n        setPropertyFilters={setPropertyFilters}\n        loadProperties={loadProperties}\n        toggleStatus={toggleStatus}\n      />\n\n\n    </>\n\n  )\n}\n\nexport default TopProperties"],"names":["_ref","propertyInputShow","handlePropertyInputClose","propertyFilters","setPropertyFilters","adjustedFilters","loadProperties","toggleStatus","previousLocation","editAgentSearch","salesPrices","rentalPrices","_jsx","_Fragment","children","Modal","show","onHide","backdrop","className","Body","_jsxs","onClick","value","channel","onChange","e","prevData","target","area","map","borough","index","rental_price_min","price","NumericFormat","displayType","thousandSeparator","prefix","rental_price_max","bedrooms_min","parseInt","bedrooms_max","propertyType","property","type","id","name","checked","garden","htmlFor","placeholder","size","num","parseFloat","toString","toFixed","formatSize","ReactSwitch","primaries","onColor","offColor","uncheckedIcon","checkedIcon","primaries_score","defaultValue","min","max","step","secondaries","secondaries_score","parks","parks_score","playgrounds","playgrounds_score","gyms","gyms_score","restaurants","restaurants_score","pubs","pubs_score","tubes","tubes_score","supermarkets","supermarkets_score","ev","ev_score","crime","crime_score","search_name","setListingSelection","fetchData","agentFavourites","loadUserData","addAgentFavourite","deleteAgentFavourite","addAgentSearch","properties","setProperties","loading","handlePropertyInputShow","navigate","useNavigate","propertyViewFormat","setPropertyViewFormat","useState","selectedProperties","setSelectedProperties","showPopup","setShowPopup","iconId","setIconId","propertyDetails","setPropertyDetails","useRef","Map","useEffect","filters","JSON","parse","localStorage","getItem","propertyData","handleVisitUrl","url","link","document","createElement","href","rel","windowFeatures","body","appendChild","click","removeChild","goToListing","item","console","log","property_data","postcode","window","setItem","stringify","currentPage","setCurrentPage","startIndex","endIndex","viewport","setViewport","latitude","longitude","zoom","iconSetting","handlePageClick","data","selected","mapNumberToWord","number","Loading","length","displayAddress","persona_data_list","district","added_revised","reduced_revised","bedrooms","agent","overall_lifestyle_score","some","fav","rightmove_id","slice","ReactPaginate","pageCount","Math","ceil","onPageChange","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","alt","src","images","onMouseEnter","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","handlePropertyClick","Popup","closeOnClick","onClose","style","fontWeight","bathrooms","features","split","feature","primary_percentile","secondary_percentile","park_area_percentile","gym_percentile","pub_percentile","restaurant_percentile","crime_percentile","tube_percentile","ev_percentile","floorplan_url","backgroundImage","KYCInput"],"sourceRoot":""}