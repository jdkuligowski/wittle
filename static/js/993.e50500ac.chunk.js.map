{"version":3,"file":"static/js/993.e50500ac.chunk.js","mappings":"wKA8GA,UAzGsBA,KACpB,MAAOC,EAAeC,IAAeC,EAAAA,EAAAA,UAAS,KACvCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IACjCK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAGVC,EAAKC,IAAUV,EAAAA,EAAAA,UAAS,OACxBW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,OAEnCa,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAS,IAAIC,gBAAgBV,EAASW,QACtCC,EAAiBH,EAAOI,IAAI,OAC5BC,EAAmBL,EAAOI,IAAI,SAEpCR,EAAOO,GACPL,EAASO,GAEJF,GAAkBE,GACrBZ,EAAS,IACX,GAEC,CAACF,IAkCJ,OACEe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAcE,QAASA,IAAMlB,EAAS,UAIvDa,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gBAAeD,SAAA,EAC5BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kBAEHF,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLC,KAAK,WACLC,MAAO9B,EACP+B,SA7BUC,IACtB/B,EAAY+B,EAAEC,OAAOH,OACrBI,QAAQC,IAAIH,EAAEC,OAAOH,MAAM,EA4BfM,UAAQ,QAIZV,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0BACHF,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLC,KAAK,kBACLC,MAAO3B,EACP4B,SAnCsBC,IAClC5B,EAAmB4B,EAAEC,OAAOH,OAC5BI,QAAQC,IAAIH,EAAEC,OAAOH,MAAM,EAkCfM,UAAQ,OAIX/B,IAAWqB,EAAAA,EAAAA,MAAA,KAAGD,UAAU,SAAQD,SAAA,CAAC,IAAEnB,SAEtCiB,EAAAA,EAAAA,KAAA,UAAQG,UAAU,UAAUG,KAAK,SAASD,QArEfU,UAIjC,GAHAC,EAAMC,iBAGFvC,IAAkBG,EAMtB,IACE+B,QAAQC,IAAI,CAAExB,MAAKE,QAAOb,kBAC1B,MAAMwC,QAAiBC,EAAAA,EAAMC,KAAK,2BAA4B,CAAE/B,MAAKE,QAAO8B,SAAU3C,IACtFM,EAAWkC,EAASI,KAAKvC,SACzBI,EAAS,SACX,CAAE,MAAOoC,GACPX,QAAQW,MAAMA,EAChB,MAZEvC,EAAW,0BAYb,EAoDoFkB,SAAC,2BAMlF,C","sources":["components/auth/CompleteReset.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport NavBar from '../tools/NavBar'\n\nconst CompleteReset = () => {\n  const [passwordValue, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  // State to hold uid and token\n  const [uid, setUid] = useState(null)\n  const [token, setToken] = useState(null)\n\n  useEffect(() => {\n    // Extract the uid and token from the URL\n    const params = new URLSearchParams(location.search)\n    const uidFromParams = (params.get('uid'))\n    const tokenFromParams = (params.get('token'))\n\n    setUid(uidFromParams)\n    setToken(tokenFromParams)\n\n    if (!uidFromParams || !tokenFromParams) {\n      navigate('/')\n    }\n\n  }, [location])\n\n  const handlePasswordResetConfirm = async (event) => {\n    event.preventDefault()\n\n    // Ensure the passwords match\n    if (passwordValue !== confirmPassword) {\n      setMessage('Passwords do not match.')\n      return\n    }\n\n    // Now uid and token are available for the POST request\n    try {\n      console.log({ uid, token, passwordValue })\n      const response = await axios.post('api/auth/password-reset/', { uid, token, password: passwordValue })\n      setMessage(response.data.message)\n      navigate('/login')\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  // setting password\n  const changePassword = (e) => {\n    setPassword(e.target.value)\n    console.log(e.target.value)\n  }\n\n  // setting password confirmation\n  const changePasswordConfirmation = (e) => {\n    setConfirmPassword(e.target.value)\n    console.log(e.target.value)\n  }\n\n  return (\n    <>\n      <div className='login-page'>\n        <div className='login-content'>\n          <div className='logo-section'>\n            <div className='wittle-logo' onClick={() => navigate('/')}></div>\n          </div>\n          {/* <div className='form-section'> */}\n          {/* <form className='form-detail' > */}\n          <h1>Reset Password</h1>\n          <div className='input-section'>\n            <div className='login-input'>\n              <p>New Password</p>\n\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={passwordValue}\n                onChange={changePassword}\n                required\n              />\n            </div>\n\n            <div className='login-input'>\n\n              <p>Confirm New Password</p>\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={changePasswordConfirmation}\n                required\n              />\n            </div>\n\n            {message && <p className='error1'>*{message}</p>}\n          </div>\n          <button className='sign-up' type=\"submit\" onClick={handlePasswordResetConfirm}>Set New Password</button>\n\n          {/* </form> */}\n          {/* </div> */}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CompleteReset\n"],"names":["CompleteReset","passwordValue","setPassword","useState","confirmPassword","setConfirmPassword","message","setMessage","location","useLocation","navigate","useNavigate","uid","setUid","token","setToken","useEffect","params","URLSearchParams","search","uidFromParams","get","tokenFromParams","_jsx","_Fragment","children","className","_jsxs","onClick","type","name","value","onChange","e","target","console","log","required","async","event","preventDefault","response","axios","post","password","data","error"],"sourceRoot":""}