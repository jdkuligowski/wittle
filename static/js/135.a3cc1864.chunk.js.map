{"version":3,"file":"static/js/135.a3cc1864.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/ProfileMobileSlider.js","components/whiteLabel/EPCMatcher/LeadGenerator.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\n// import ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport ReactMapGL from 'react-map-gl'\n\nimport mapboxgl from 'mapbox-gl'\nimport MapboxDraw from '@mapbox/mapbox-gl-draw'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSecton] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    // area: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    price_min: null,\n    price_max: null,\n    channel: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenSecton('Properties')\n            setLeadGenDetails(data.lead_gen_details[0])\n            loadCombinedPropertiesFromUser(data)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n          }\n\n          // set favourites for the fsavd proprties tab\n          const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null)\n          setSavedProperties(filteredFavourites)\n\n          // set the data to be extracted to csv in the saved properties tab\n          const dataCsv = transformCSVData(data.epc_favourites)\n          setCsvData(dataCsv)\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.postcode + fav.address))\n      const newFavourites = selectedRows.filter(row => !existingCombinations.has(row.postcode + row.address))\n\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n        // setSelectedRows([])\n        setLeadGenSecton('Saved properties')\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n    const selectedProperty = singleMatches[index]\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.postcode + fav.address))\n\n    const allRows = singleMatches.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.postcode + row.address))\n    setCheckboxStatus(singleMatches.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(singleMatches.map(() => false))\n    setSelectedRows([])\n  }\n\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null)\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addedOn: item.market_status,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data loading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data) => {\n    setLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    try {\n      const { data } = await axios.get(`/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}`)\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setLeadGenSecton('Properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setLeadGenSecton('Properties')\n    }\n\n    setLoading(true)\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    window.open(url, '_blank') // This will open the URL in a new tab\n  }\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ?\n                <section className='property-finder'>\n                  <div className='listing-options'>\n                    <div className='listing-buttons'>\n                      <h5 className='no-print' onClick={() => setLeadGenSecton('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSecton('Properties')} style={{ borderBottom: leadGenSection === 'Properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Properties' ? '700' : '400' }}>Properties</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSecton('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                      {/* <h5 className='no-print' onClick={() => setLeadGenSecton('AI listing generator')} style={{ borderBottom: leadGenSection === 'AI listing generator' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'AI listing generator' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'AI listing generator' ? '700' : '400' }}>AI listing generator</h5> */}\n                    </div>\n                    <div className='logout-button' onClick={removeItemFromStorage}>\n                      <div className='logout-icon'></div>\n                    </div>\n\n\n                  </div>\n                  <hr className='title-line' />\n\n                  <div className='lead-generator'>\n\n                    <div className='property-results'>\n                      {leadGenSection === 'Home' ?\n                        <>\n                          <div className='lead-gen-inputs'>\n                            <h3 className='sub-title'>Set your search criteria</h3>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Postcode(s)</h3>\n                                <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.postcode}\n                                  onChange={inputPostcode}\n                                  placeholder=\"Enter postcode...\"\n                                />\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Channel</h3>\n                                <select className='dropdown' value={leadGenDetails.channel || 'Both'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                  <option>Both</option>\n                                  <option>Lettings</option>\n                                  <option>Sales</option>\n                                </select>\n                              </div>\n                            </div>\n                            <div>\n\n                              <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                                <h3 className='sub-title'>Add some more detail</h3>\n\n                                {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                              </div>\n                              {expand ?\n                                <>\n                                  <div className='single-title-double'>\n                                    <h3>Bedrooms</h3>\n                                    <div className='double-dropdowns'>\n                                      <select className='dropdown' value={leadGenDetails.bedrooms_min || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bedrooms_min: e.target.value }))}>\n                                        <option value={0}>No min</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                        <option>6</option>\n                                      </select>\n                                      <select className='dropdown' value={leadGenDetails.bedrooms_max || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bedrooms_max: e.target.value }))}>\n                                        <option>No max</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                        <option>6</option>\n                                        <option>7</option>\n                                      </select>\n                                    </div>\n\n                                  </div>\n                                  <div className='single-title-double'>\n                                    <h3>Bathrooms</h3>\n                                    <div className='double-dropdowns'>\n                                      <select className='dropdown' value={leadGenDetails.bathrooms_min || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bathrooms_min: e.target.value }))}>\n                                        <option>No min</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                      </select>\n                                      <select className='dropdown' value={leadGenDetails.bathrooms_max || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bathrooms_max: e.target.value }))}>\n                                        <option>No max</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                      </select>\n                                    </div>\n\n                                  </div><div className='single-title-double'>\n                                    <h3>Price</h3>\n                                    <div className='double-dropdowns'>\n                                      <select className='dropdown' value={leadGenDetails.price_min || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, price_min: e.target.value }))}>\n                                        <option>No min</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                      </select>\n                                      <select className='dropdown' value={leadGenDetails.price_max || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, price_max: e.target.value }))}>\n                                        <option>No max</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                      </select>\n                                    </div>\n\n                                  </div>\n\n                                </>\n                                : ''}\n                            </div>\n                            <div className='lead-gen-save'>\n                              <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                            </div>\n                          </div>\n\n                        </>\n                        :\n                        leadGenSection === 'Properties' && !loading ?\n                          <>\n                            <div className='results-block'>\n                              <div className=\"property-insight-nav\">\n                                <div className=\"property-insight-buttons\">\n                                  <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                  <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                                </div>\n                                <div className='save-section'>\n                                  <div className=\"print-icon\"></div>\n\n                                  <h3 onClick={addFavourite}>Save selection</h3>\n                                </div>\n                              </div>\n                              {channelView === 'Lettings' ?\n                                <>\n                                  <div className='title-section'>\n                                    <h3 className='sub-title'>There are {singleMatches.length} rental properties that match your criteria</h3>\n                                    <div className='select-all-box'>\n                                      <h5>Select all</h5>\n                                      <input\n                                        type=\"checkbox\"\n                                        checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                        onChange={handleSelectAllChange} \n                                      />\n                                    </div>\n                                  </div>\n                                  <div className='results-headers'>\n                                    <h5 id='column1' className='column'>#</h5>\n                                    <div id='column2' className='column' >\n                                      <h5>Address</h5>\n                                    </div>\n                                    <div id='column3' className='column'>\n                                      <h5>Postcode</h5>\n                                    </div>\n                                    <div id='column4' className='column'>\n                                      <h5>Added</h5>\n                                    </div>\n                                    <div id='column5' className='column'>\n                                      <h5>Property type</h5>\n                                    </div>\n                                    <div id='column6' className='column'>\n                                      <h5>Price</h5>\n                                    </div>\n                                    <div id='column7' className='column'>\n                                      <h5>Bedrooms</h5>\n                                    </div>\n                                    <div id='column8' className='column'>\n                                      <h5>Agent</h5>\n                                    </div>\n                                    <div id='column9' className='column'>\n                                      <h5>Select</h5>\n                                    </div>\n                                  </div>\n                                  <hr className='property-divider' />\n                                  <div className='results-details'>\n                                    {singleMatches ? singleMatches.map((item, index) => {\n                                      return (\n                                        <>\n                                          <div className='results-content'>\n                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{index + 1}</h5>\n                                            </div>\n                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.epc_data_list[0].address}</h5>\n                                            </div>\n                                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.postcode}</h5>\n                                            </div>\n                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.addedOn}</h5>\n                                            </div>\n                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.propertyType}</h5>\n                                            </div>\n                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.price}</h5>\n                                            </div>\n                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.bedrooms}</h5>\n                                            </div>\n                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.agent}</h5>\n                                            </div>\n                                            <div className='column' id='column9'>\n                                              <input\n                                                type=\"checkbox\"\n                                                checked={checkboxStatus[index]}\n                                                onChange={(e) => handleCheckboxChange(e, index)} // Pass the index here\n                                              />\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n\n                                        </>\n                                      )\n                                    })\n                                      : ' '}\n                                  </div>\n\n\n                                </>\n                                : ''}\n                            </div>\n                          </>\n                          : leadGenSection === 'Properties' && loading ?\n                            <div className='property-table-loading'>\n                              <Loading />\n                            </div>\n                            : leadGenSection === 'Saved properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {savedProperties && savedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                        {userData && userData.epc_favourites && (\n                                          <CSVLink data={csvData} className='export' filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`} style={{ textDecoration: 'none' }}>\n                                            <div className='header-cta'>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        )}\n\n                                      </div><div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                      </div><hr className='property-divider' /><div className='results-details'>\n                                        {savedProperties ? savedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.market_status}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_type}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              :\n                              ''\n                      }\n                    </div>\n                  </div>\n\n\n                </section>\n                : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n                  <section className='property-finder'>\n                    <h1>🙏 Thanks for enjoying Wittle!</h1>\n                    <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n                  </section>\n\n                  : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n                    <section className='property-finder'>\n                      <h1>🙏 Thanks for enjoying Wittle!</h1>\n                      <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n                    </section>\n\n                    : ''}\n\n            </>\n\n          </section>\n        </section>\n      </section>\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","_Fragment","_jsxs","onClick","style","fontWeight","backgroundColor","axios","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","loading","setLoading","search","setSearch","variableSide","setVariableSide","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","channel","setChannel","inputType","setInputType","favouritedProperties","setFavouritedProperties","savedProperties","setSavedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","setLeadGenSecton","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","postcode","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","price_min","price_max","selectedRows","setSelectedRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","map","loadUserData","isUserAuth","async","data","get","getUserToken","headers","Authorization","getAccessToken","console","log","lead_gen_details","length","loadCombinedPropertiesFromUser","filteredFavourites","epc_favourites","filter","fav","rightmove_id","dataCsv","transformCSVData","error","getUser","useEffect","deselectAllRows","item","index","url","address","addedOn","market_status","property_type","price","bedrooms","bathrooms","let_available_date","date_added","date_added_db","agent","postcodeValue","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","handleVisitUrl","window","open","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","usage_stats","package","epc_monthly_count","borderBottom","textUnderlineOffset","token","localStorage","removeItem","type","value","onChange","e","target","toUpperCase","replace","prevData","placeholder","response","put","id","post","CSVLink","filename","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","getDate","textDecoration","property_data","existingCombinations","Set","newFavourites","row","has","checked","every","Boolean","selectAllRows","allRows","propertyType","handleCheckboxChange","updatedStatus","selectedProperty","prevRows"],"sourceRoot":""}