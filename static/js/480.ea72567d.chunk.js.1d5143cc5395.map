{"version":3,"file":"static/js/480.ea72567d.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/b2bModals/RemoveProperties.js","components/whiteLabel/b2bModals/ArchivedPropertiesModal.js","components/whiteLabel/EPCMatcher/LeadGenSections/LeadGenSaved.js","components/whiteLabel/b2bModals/UnhiddenModal.js","components/whiteLabel/EPCMatcher/LeadGenSections/HiddenProperties.js","components/whiteLabel/b2bModals/ArchivedToSavedModal.js","components/whiteLabel/EPCMatcher/LeadGenSections/ArchivedProperties.js","components/whiteLabel/EPCMatcher/LetterSection/CreateTemplate.js","components/whiteLabel/EPCMatcher/LetterSection/CreateCampaign.js","components/whiteLabel/EPCMatcher/LetterSection/Campaigns/CampaignOverview.js","components/whiteLabel/EPCMatcher/LetterSection/SetSignatures.js","components/whiteLabel/EPCMatcher/LetterSection/LettersHubs.js","components/whiteLabel/EPCMatcher/LeadGenerator.js","components/whiteLabel/EPCMatcher/LetterSection/TemplatePDFs.js/BasicTemplate.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/transparent-spinner.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport { CarouselItem } from 'react-bootstrap'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl,\n  savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites, handleSavedActionShow, setLatestFavourites, setSavedActionShow }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState('Lettings')\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index] && channel === 'Lettings') {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      } else if (!matchingProperties[index] && channel === 'Sales') {\n        const matches = await liveSalesProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setMatchingProperties({})\n    setExpandedItems(new Set())\n    setLoading(true)\n    setSearch(false)\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n  const liveSalesProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function for adding favourites based on relevant row\n  const addPartialFavourite = async (epcData) => {\n    if (isUserAuth()) {\n      const random12DigitNumber = Math.floor(Math.random() * 1e12)\n      const newFavourites = [{\n        'rightmove_id': random12DigitNumber.toString(),\n        'postcode': epcData.postcode,\n        'address': epcData.address,\n        'agent': '',\n        'type': '',\n        'addedOn': '',\n        'propertyType': '',\n        'price': null,\n        'bathrooms': null,\n        'bedrooms': null,\n        'let_available_date': null,\n        'date_added_db': null,\n        'url': '',\n        'current_epc': epcData.current_energy_efficiency,\n        'potential_epc': epcData.potential_energy_efficiency,\n        'action': 'Saved',\n        'added_revised': null,\n        'reduced_revised': null,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setExpandedItems(new Set())\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className='buttons'>\n                                  {savedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                    <div className='saved-message'>\n                                      <h3>Saved</h3>\n                                    </div>\n                                    :\n                                    archivedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                      <div className='saved-message'>\n                                        <h3>Archived</h3>\n                                      </div>\n                                      :\n                                      <>\n                                        <div className='heart-icon' onClick={() => addPartialFavourite(item)} ></div>\n                                        <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                          {expandedItems.has(index) ? '-' : '+'}\n                                        </button>\n                                      </>\n                                  }\n                                </div>\n\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n      <SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\n\nexport default ManualMatcher","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst RemoveProperties = ({ propertyRemoveShow, handleRemovePropertyClose, removeProperty }) => {\n\n  const closeAndLeave = () => {\n    // setLeadGenSection('Saved properties')\n    handleRemovePropertyClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={propertyRemoveShow} onHide={handleRemovePropertyClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleRemovePropertyClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>Are you sure you don&apos;t want to see these properties any more?</h3>\n                <h3 className='sub-message'>Once you do this, they won&apos;t appear in your latest or saved properties.</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={removeProperty}>Remove</button>\n                <button className='stay' onClick={handleRemovePropertyClose}>Go back</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default RemoveProperties","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst ArchivedPropertiesModal = ({ archivedActionShow, handleArchivedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Archived properties')\n    handleArchivedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={archivedActionShow} onHide={handleArchivedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleArchivedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your archived list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to archived</button>\n                <button className='stay' onClick={handleArchivedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default ArchivedPropertiesModal","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Select from 'react-select'\nimport ArchivedPropertiesModal from '../../b2bModals/ArchivedPropertiesModal'\nimport Swal from 'sweetalert2'\n\n\nconst LeadGenSaved = ({ savedProperties, userData, csvData, setCsvData, getCurrentDate, handleVisitUrl, loadUserData, setSavedProperties,\n  setLatestFavourites, latestFavourites, setLeadGenSection }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state to determine what kind of view we want to see on the page\n  const [savedPropertyView, setSavedPropertyView] = useState('Grid')\n\n  // state to determine whether the row has been expanded or not\n  const [expandedRows, setExpandedRows] = useState({})\n\n  // state to determmine whether the item is being edited or not\n  const [editModes, setEditModes] = useState({})\n\n  // state for the expanded row data\n  const [formData, setFormData] = useState({})\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n  const [onMarket, setOnMarket] = useState([])\n  const [offMarket, setOffMarket] = useState([])\n\n  // state for whether we see on market or off market\n  const [marketView, setMarketView] = useState('Live')\n\n  // state for controlling the filters opening and closing\n  const [filterView, setFilterView] = useState(false)\n\n  const [channel, setChannel] = useState('')\n  const [postcode, setPostcode] = useState('')\n  const [bedroomsMin, setBedroomsMin] = useState('')\n  const [bedroomsMax, setBedroomsMax] = useState('')\n  const [priceMin, setPriceMin] = useState('')\n  const [priceMax, setPriceMax] = useState('')\n  const [trackingData, setTrackingData] = useState('')\n  const [minPriceOptions, setMinPriceOptions] = useState([])\n  const [maxPriceOptions, setMaxPriceOptions] = useState([])\n\n  useEffect(() => {\n    if (savedProperties) {\n      let data = savedProperties\n      // filter by channel\n      if (channel) {\n        data = data.filter(item => item.channel === channel)\n      }\n      // filter by postcode\n      if (postcode) {\n        data = data.filter(item => item.postcode.toUpperCase().startsWith(postcode.toUpperCase()))\n      }\n      // Filter by bedrooms\n      if (bedroomsMin) {\n        data = data.filter(item => parseInt(item.bedrooms) >= parseInt(bedroomsMin))\n      }\n      if (bedroomsMax) {\n        data = data.filter(item => parseInt(item.bedrooms) <= parseInt(bedroomsMax))\n      }\n      // Filter by prce\n      if (priceMin) {\n        data = data.filter(item => parseInt(item.price_numeric) >= parseInt(priceMin))\n      }\n      if (priceMax) {\n        data = data.filter(item => parseInt(item.price_numeric) <= parseInt(priceMax))\n      }\n      if (trackingData) {\n        data = data.filter(item => parseInt(item.live_tracking) === parseInt(trackingData))\n      }\n      const offMarketProperties = data.filter(item => item.market_status === 'Off Market')\n      const onMarketProperties = data.filter(item => item.market_status === 'Live')\n      setOffMarket(offMarketProperties)\n      setOnMarket(onMarketProperties)\n    }\n  }, [savedProperties, channel, postcode, bedroomsMin, bedroomsMax, priceMin, priceMax, trackingData])\n\n  useEffect(() => {\n    // Conditionally set price options based on the channel\n    if (channel === 'rent') {\n      setMinPriceOptions(rentalPriceOptions)\n      setMaxPriceOptions(rentalPriceOptions)\n    } else if (channel === 'sale') {\n      setMinPriceOptions(salesPriceOptions)\n      setMaxPriceOptions(salesPriceOptions)\n    } else {\n      setMinPriceOptions([])\n      setMaxPriceOptions([])\n    }\n  }, [channel])\n\n  const bedroomOptions = [\n    { value: '1', label: '1' },\n    { value: '2', label: '2' },\n    { value: '3', label: '3' },\n    { value: '4', label: '4' },\n    { value: '5', label: '5' },\n    { value: '6', label: '6' },\n    { value: '7', label: '7' }\n  ]\n\n  const rentalPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100 + i * 100}`, label: `£${100 + i * 100}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000 + i * 200}`, label: `£${1000 + i * 200}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000 + i * 250}`, label: `£${2000 + i * 250}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000 + i * 500}`, label: `£${4000 + i * 500}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000 + i * 1000}`, label: `£${8000 + i * 1000}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${12000 + i * 2000}`, label: `£${12000 + i * 2000}` }))\n  ]\n\n  const salesPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100000 + i * 100000}`, label: `£${(100000 + i * 100000).toLocaleString()}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000000 + i * 200000}`, label: `£${(1000000 + i * 200000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000000 + i * 250000}`, label: `£${(2000000 + i * 250000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000000 + i * 500000}`, label: `£${(4000000 + i * 500000).toLocaleString()}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000000 + i * 1000000}`, label: `£${(8000000 + i * 1000000).toLocaleString()}` })),\n    ...Array.from({ length: 6 }, (_, i) => ({ value: `${12000000 + i * 2000000}`, label: `£${(12000000 + i * 2000000).toLocaleString()}` }))\n  ]\n\n\n  // function for clearing filters\n  const clearFilters = () => {\n    setChannel('')\n    setPostcode('')\n    setBedroomsMin('')\n    setBedroomsMax('')\n    setTrackingData('')\n    setPriceMin('')\n    setPriceMax('')\n  }\n\n  // Function to toggle row expansion\n  const toggleRowExpansion = (rightmoveId) => {\n    const item = savedProperties.find(prop => prop.rightmove_id === rightmoveId)\n\n    // Toggle the expanded state\n    setExpandedRows(prevExpandedRows => ({\n      ...prevExpandedRows,\n      [rightmoveId]: !prevExpandedRows[rightmoveId],\n    }))\n\n    // Reinitialize formData for the item if expanding\n    if (!expandedRows[rightmoveId]) {\n      // Check if formData already exists for this item to avoid overwriting unsaved edits\n      if (!formData[rightmoveId]) {\n        setFormData(prevFormData => ({\n          ...prevFormData,\n          [rightmoveId]: {\n            owner_name: item.owner_name || '',\n            owner_email: item.owner_email || '',\n            owner_mobile: item.owner_mobile || null,\n            emails_sent: item.emails_sent || null,\n            letters_sent: item.letters_sent || null,\n            hand_cards: item.hand_cards || null,\n            notes: item.notes || '',\n            live_tracking: item.live_tracking || 0,\n          },\n        }))\n      }\n    } else {\n      // Optionally, clear formData for the item if collapsing the row\n      // Comment out or adjust based on whether you want to retain formData for collapsed rows\n      /*\n      setFormData(prevFormData => {\n        const newData = { ...prevFormData };\n        delete newData[rightmoveId];\n        return newData;\n      });\n      */\n    }\n  }\n\n\n  // Function to toggle edit mode\n  const toggleEditMode = (rightmoveId, item) => {\n    if (!editModes[rightmoveId]) {\n      // Initialize formData for the specific item\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        [rightmoveId]: {\n          owner_name: item.owner_name || '',\n          owner_email: item.owner_email || '',\n          owner_mobile: item.owner_mobile || null,\n          emails_sent: item.emails_sent || null,\n          letters_sent: item.letters_sent || null,\n          hand_cards: item.hand_cards || null,\n          notes: item.notes || '',\n          live_tracking: item.live_tracking || 0,\n\n        },\n      }))\n    } else {\n      // Optionally clear formData for the item if exiting edit mode\n      // setFormData(prevFormData => {\n      //   const newData = { ...prevFormData }\n      //   delete newData[rightmoveId]\n      //   return newData\n      // })\n    }\n\n    setEditModes(prevEditModes => ({\n      ...prevEditModes,\n      [rightmoveId]: !prevEditModes[rightmoveId],\n    }))\n  }\n\n\n\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(favouriteIds.length)\n        loadUserData()\n        handleArchivedActionShow()\n        setSelectedRows([])\n\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to update the saved item: \n  const handleSave = async (rightmoveId) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.patch(`/api/epc_favourite/update_favourites/${rightmoveId}/`, formData[rightmoveId], {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        loadUserData()\n        setEditModes(prevEditModes => ({\n          ...prevEditModes,\n          [rightmoveId]: false,\n        }))\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n        // Handle error\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to move properties into the letter sequence\n  const moveToLetters = async (favouriteIds) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/move_to_letters/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('Response:', response.data)\n        Swal.fire({\n          title: '😎 action complete',\n          text: `${favouriteIds.length} properties prepared for outbound letters`,\n          confirmButtonText: 'Go to letter hub',\n          confirmButtonColor: '#ED6B86',\n          cancelButtonText: 'Stay here',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            setLeadGenSection('Letter campaigns')\n          }\n        })\n        loadUserData()\n        setSelectedRows([])\n\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n\n  }\n\n\n  // function for determining what to do with the drop down selector\n  const handleDropdownChange = (selectedOption) => {\n    if (selectedOption.value === 'export') {\n      // Handle Export\n      // You might need to programmatically click a hidden CSVLink here\n      document.querySelector('.csv-link').click()\n      setSelectedRows([])\n    } if (selectedOption.value === 'archive') {\n      // Handle Archive\n      archiveFavourite(selectedRows.map(row => row.rightmove_id))\n    } else if (selectedOption.value === 'letter') {\n      // Handle Archive\n      moveToLetters(selectedRows.map(row => row.rightmove_id))\n    }\n  }\n\n  const options = [\n    { value: 'export', label: 'Extract' },\n    { value: 'archive', label: 'Archive' },\n    { value: 'letter', label: 'Letters' }\n  ]\n\n\n  // ? Section 4: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n    console.log('selected row ->', item)\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setSelectAllStatus(savedProperties.length === selectedRows.length)\n  }\n\n  const selectAllRows = () => {\n    if (marketView === 'Live') {\n      setSelectedRows(onMarket)\n    } else if (marketView === 'Off Market') {\n      setSelectedRows(offMarket)\n    }\n    setSelectAllStatus(true)\n  }\n\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  const transformSelectedRowsToCSV = (selectedRows) => {\n    return selectedRows.map((item, index) => ({\n      item: index + 1,\n      url: item.url,\n      address: item.address,\n      postcode: item.postcode,\n      addressPostcode: `${item.address}, ${item.postcode}`,\n      addedOn: item.added_revised,\n      property_type: item.property_type,\n      price: item.price,\n      bedrooms: item.bedrooms,\n      bathrooms: item.bathrooms,\n      let_available_date: item.let_available_date,\n      date_added: item.date_added_db,\n      agent: item.agent,\n      channel: item.channel,\n      owner_name: item.owner_name,\n      owner_email: item.owner_email,\n      owner_mobile: item.owner_mobile,\n      emails_sent: item.emails_sent,\n      letters_sent: item.letters_sent,\n      hand_cards: item.hand_cards,\n      notes: item.notes,\n\n    }))\n  }\n\n  useEffect(() => {\n    if (selectedRows) {\n      const csvData = transformSelectedRowsToCSV(selectedRows)\n      setCsvData(csvData)\n    }\n  }, [selectedRows]) // Re-run when selectedRows changes\n\n  // manageing modal for saved iitems added \n  const [archivedActionShow, setArchivedActionShow] = useState(false)\n\n  // close modal\n  const handleArchivedActionClose = () => {\n    setArchivedActionShow(false)\n  }\n\n  // show the modal\n  const handleArchivedActionShow = (e) => {\n    setArchivedActionShow(true)\n    setSelectedRows([])\n  }\n\n\n\n\n\n\n  return (\n\n    <>\n      <div className='results-block'>\n        {savedProperties && savedProperties.length > 0 ?\n          <>\n            <div className=\"property-insight-nav\">\n\n              <div className=\"property-insight-buttons\">\n                <h3 className={`insight-button ${marketView === 'Live' ? 'active' : 'inactive'}`} id='left' onClick={() => setMarketView('Live')}>Live properties</h3>\n                <h3 className={`insight-button ${marketView === 'Off Market' ? 'active' : 'inactive'}`} id='right' onClick={() => setMarketView('Off Market')}>Withdrawn or sold</h3>\n              </div>\n            </div>\n\n            <div className='title-section'>\n              <h3 className='sub-title'>You have {onMarket && marketView === 'Live' ? `${onMarket.length} on market` : offMarket && marketView === 'Off Market' ? `${offMarket.length} off market` : ''} properties ready to be extracted</h3>\n              <div className='tracking-actions'>\n                {userData && userData.company_favourites && (\n                  <>\n                    <Select\n                      className='select-dropdown'\n                      options={options}\n                      onChange={handleDropdownChange}\n                      isSearchable={false}\n                      placeholder=\"Select an action\"\n                    />\n                    <CSVLink\n                      data={csvData || []}\n                      className='export csv-link' // Added a class for easy selection\n                      filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                      style={{ display: 'none' }} // Hide the link as it's now triggered programmatically\n                    >\n                    </CSVLink>\n                  </>\n                )}\n                <div\n                  className={`filter-icon ${filterView ? 'active' : 'inactive'}`}\n                  onClick={() => setFilterView(!filterView)}\n                  style={{ backgroundColor: filterView ? '#1A276C' : 'inherit' }}>\n                </div>\n              </div>\n            </div>\n            {filterView ?\n              <div className={`filter-row-section ${filterView ? 'active' : 'inactive'}`}>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Channel</h3>\n                  <select onChange={(e) => setChannel(e.target.value)}>\n                    <option value={''}>Select...</option>\n                    <option value={'sale'}>Sale</option>\n                    <option value={'rent'}>Rent</option>\n                  </select>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Postcode</h3>\n                  <input className='filter-input' onChange={(e) => setPostcode(e.target.value)}></input>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Bedrooms</h3>\n                  <select className='small' value={bedroomsMin} onChange={e => setBedroomsMin(e.target.value)}>\n                    <option value={''}>Min</option>\n                    {bedroomOptions.map(option => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                  <select className='small' value={bedroomsMax} onChange={e => setBedroomsMax(e.target.value)}>\n                    <option value={''}>Max</option>\n                    {bedroomOptions.filter(option => option.value >= bedroomsMin).map(option => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Price</h3>\n                  <select className='small' value={priceMin} onChange={e => setPriceMin(e.target.value)}>\n                    <option value={''}>Min</option>\n                    {minPriceOptions.map((option) => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                  <select className='small' value={priceMax} onChange={e => setPriceMax(e.target.value)}>\n                    <option value={''}>Max</option>\n                    {maxPriceOptions.map((option) => (\n                      <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className='filter-block'>\n                  <h3 className='filter-title'>Tracking</h3>\n                  <select onChange={(e) => setTrackingData(e.target.value)}>\n                    <option value={''}>All</option>\n                    <option value={'1'}>Yes</option>\n                    <option value={'0'}>No</option>\n                  </select>\n                </div>\n                <button className='clear-filters' onClick={clearFilters}>Clear</button>\n              </div>\n              : ''}\n\n            <div className='results-table'>\n              <div className='results-headers'>\n                <div id='column11' className='column'>\n                  <div className='custom-checkbox'>\n                    <input\n                      className='checkbox'\n                      type=\"checkbox\"\n                      checked={\n                        marketView === 'Live' && selectedRows && onMarket ? selectedRows.length === onMarket.length && onMarket.length > 0 :\n                          marketView === 'Off Market' && selectedRows && offMarket ? selectedRows.length === offMarket.length && offMarket.length > 0 :\n                            false\n                      }\n                      onChange={handleSelectAllChange}\n                    />\n                    <label className='label'></label>\n                  </div>\n                </div>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5>Price</h5>\n                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9saved' className='column'>\n                  <h5>Agent</h5>\n                </div>\n                <div id='column10saved' className='column'>\n                  <h5></h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              {/* <div className='saved-properties'> */}\n              <div className={`results-details archive ${filterView ? 'active' : 'inactive'}`}>\n                {(marketView === 'Live' ? onMarket : offMarket).map((item, index) => {\n                  const isRowExpanded = expandedRows[item.rightmove_id]\n                  const isEditMode = editModes[item.rightmove_id]\n                  const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.rightmove_id)\n                  return (\n                    <>\n                      <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                        <div className='column' id='column11'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type='checkbox'\n                              checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                              onChange={(e) => handleRowSelectionChange(e, item)}\n                            />\n                            <label className='label'>\n                            </label>\n                          </div>\n                        </div>\n                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.address}</h5>\n                        </div>\n                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.postcode}</h5>\n                        </div>\n                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                        </div>\n                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                        </div>\n                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.channel}</h5>\n                        </div>\n                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.price}</h5>\n                        </div>\n                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.bedrooms}</h5>\n                        </div>\n                        <div className='column' id='column9saved' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.agent}</h5>\n                        </div>\n                        {savedPropertyView === 'Grid' ?\n                          <>\n                            <div className='column' id='column10saved' onClick={() => toggleRowExpansion(item.rightmove_id)}>\n                              <h5 className='expander'>{isRowExpanded ? 'v' : '^'}</h5>\n                            </div>\n\n                          </>\n                          : savedPropertyView === 'Table' ?\n                            <>\n                            </>\n                            : ''}\n                      </div>\n                      {isRowExpanded && (\n                        <div className='expanded-tracking-details'>\n                          <div className='expanded-tracking-content'>\n                            <div className='tracking-left'>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Owner name: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.owner_name}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].owner_name || ''}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], owner_name: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Owner email: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.owner_email}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].owner_email || ''}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], owner_email: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Owner phone: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.owner_mobile}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].owner_mobile || null}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], owner_mobile: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Currently Tracking: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.live_tracking === 1 ? 'Yes' : 'No'}</h3> :\n                                  <input\n                                    type='checkbox'\n                                    checked={!!formData[item.rightmove_id].live_tracking} // Convert `live_tracking` to boolean for checked attribute\n                                    onChange={(e) => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: {\n                                        ...formData[item.rightmove_id],\n                                        live_tracking: e.target.checked ? 1 : 0, // Assign 1 if checked, 0 if not\n                                      },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                            </div>\n                            <div className='tracking-middle'>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Emails sent: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.emails_sent}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].emails_sent || 0}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], emails_sent: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Letters sent: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.letters_sent}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].letters_sent || 0}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], letters_sent: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                              <div className='tracking-row'>\n                                <h3 className='row-title'>Hand written cards: </h3>\n                                {!isEditMode ?\n                                  <h3 className='row-result'>{item.hand_cards}</h3> :\n                                  <input\n                                    type='text'\n                                    value={formData[item.rightmove_id].hand_cards || 0}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: { ...formData[item.rightmove_id], hand_cards: e.target.value },\n                                    })}\n                                    className='row-input wide'\n                                  />\n                                }\n                              </div>\n                            </div>\n                            <div className='tracking-right'>\n                              <div className='tracking-row'>\n                                {!isEditMode ? (\n                                  <h3 className='row-result'>{item.notes}</h3>\n                                ) : (\n                                  <textarea\n                                    placeholder='Notes'\n                                    value={formData[item.rightmove_id].notes || ''}\n                                    onChange={e => setFormData({\n                                      ...formData,\n                                      [item.rightmove_id]: {\n                                        ...formData[item.rightmove_id],\n                                        notes: e.target.value,\n                                      },\n                                    })}\n                                  ></textarea>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div className='expanded-tracking-actions'>\n                            <button className='save' onClick={() => {\n                              if (isEditMode) {\n                                handleSave(item.rightmove_id)\n                              } else {\n                                toggleEditMode(item.rightmove_id, item) // Pass 'item' to populate formData for edit mode\n                              }\n                            }}>\n                              {isEditMode ? 'Save' : 'Edit'}\n                            </button>\n                            <button className='delete' onClick={() => deleteFavourite(item.rightmove_id)}>Delete</button>\n                          </div>\n                        </div>\n                      )}\n                      <hr className='property-divider' />\n                    </>\n                  )\n                })}\n                {/* </div> */}\n              </div>\n            </div>\n\n          </>\n          : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n        }\n      </div>\n      <ArchivedPropertiesModal\n        archivedActionShow={archivedActionShow}\n        handleArchivedActionClose={handleArchivedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\nexport default LeadGenSaved\n\n","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst UnhiddenModal = ({ hiddenSavedShow, handleHiddenSavedClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleHiddenSavedClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={hiddenSavedShow} onHide={handleHiddenSavedClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleHiddenSavedClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve moved {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} back to your saved list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleHiddenSavedClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default UnhiddenModal","\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport UnhiddenModal from '../../b2bModals/UnhiddenModal'\n\nconst HiddenProperties = ({ hiddenProperties, handleVisitUrl, loadUserData, setLeadGenSection, latestFavourites, setLatestFavourites }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n\n  // ? Section 4: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setSelectAllStatus(hiddenProperties.length === selectedRows.length)\n  }\n\n  const selectAllRows = () => {\n    setSelectedRows(hiddenProperties)\n    setSelectAllStatus(true)\n  }\n\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (selectedRows) => {\n    if (isUserAuth()) {\n      console.log(selectedRows)\n      // Extract rightmove_id from each selected row\n      const rightmoveIds = selectedRows.map(row => row.rightmove_id)\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/multiple/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_ids: rightmoveIds },\n        })\n        setLatestFavourites(rightmoveIds.length)\n        loadUserData()\n        handleHiddenSavedShow()\n        setSelectedRows([])\n        console.log('Response:', response.data)\n      } catch (error) {\n        console.error('Error deleting favourites:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // manageing modal for saved iitems added \n  const [hiddenSavedShow, setHiddenSavedShow] = useState(false)\n\n  // close modal\n  const handleHiddenSavedClose = () => {\n    setHiddenSavedShow(false)\n  }\n\n  // show the modal\n  const handleHiddenSavedShow = (e) => {\n    setHiddenSavedShow(true)\n    setSelectedRows([])\n  }\n\n  return (\n    <>\n      <div className='results-block'>\n        {hiddenProperties && hiddenProperties.length > 0 ?\n          <>\n            <div className='title-section'>\n              <h3 className='sub-title'>You have hidden {hiddenProperties.length} properties</h3>\n              <div className='action-section hidden'>\n                <div className='save-section'>\n                  <h3 onClick={() => deleteFavourite(selectedRows)}>Move properties</h3>\n                </div>\n              </div>\n            </div>\n            <div className='saved-select-row hidden'>\n              <div className='select-all-box hidden'>\n                <div className='custom-checkbox'>\n                  <input\n                    className='checkbox'\n                    type=\"checkbox\"\n                    checked={selectedRows.length === hiddenProperties.length && hiddenProperties.length > 0}\n                    onChange={handleSelectAllChange}\n                  />\n                  <label className='label'></label>\n                </div>\n              </div>\n            </div>\n            <div className='results-table'>\n\n              <div className='results-headers'>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Property type</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5>Price</h5>\n                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9' className='column'>\n                  <h5>Agent</h5>\n                </div>\n                <div id='column10' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column11' className='column'>\n                  <h5></h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              <div className='results-details archive'>\n                {hiddenProperties ? hiddenProperties.map((item, index) => {\n                  return (\n                    <>\n                      <div className='results-content'>\n                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.address}</h5>\n                        </div>\n                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.postcode}</h5>\n                        </div>\n                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.added_revised}</h5>\n                        </div>\n                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.reduced_revised}</h5>\n                        </div>\n                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.property_type}</h5>\n                        </div>\n                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.price}</h5>\n                        </div>\n                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.bedrooms}</h5>\n                        </div>\n                        <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.agent}</h5>\n                        </div>\n                        <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.channel}</h5>\n                        </div>\n                        <div className='column' id='column11'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type='checkbox'\n                              checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                              onChange={(e) => handleRowSelectionChange(e, item)}\n                            />\n                            <label className='label'>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className='property-divider' />\n                    </>\n                  )\n                })\n                  : ' '}\n              </div>\n            </div>\n          </>\n          : <h3 className='sub-title'>You don&apos;t have any hidden properties. If you&apos;re not interested in a property, hide it to remove it from the main results page.</h3>\n        }\n      </div>\n      <UnhiddenModal \n        hiddenSavedShow={hiddenSavedShow}\n        handleHiddenSavedClose={handleHiddenSavedClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n    </>\n  )\n}\n\nexport default HiddenProperties","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst ArchviedToSavedModal = ({ archviedSavedShow, handleArchivedSavedClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleArchivedSavedClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={archviedSavedShow} onHide={handleArchivedSavedClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleArchivedSavedClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve moved {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} back to your saved list 🤝</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleArchivedSavedClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default ArchviedToSavedModal","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { CSVLink } from 'react-csv'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport ArchviedToSavedModal from '../../b2bModals/ArchivedToSavedModal'\n\n\nconst ArchivedProperties = ({ archivedProperties, handleVisitUrl, loadUserData, setLeadGenSection, latestFavourites, setLatestFavourites }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n\n  // ? Section 4: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setSelectAllStatus(archivedProperties.length === selectedRows.length)\n  }\n\n  const selectAllRows = () => {\n    setSelectedRows(archivedProperties)\n    setSelectAllStatus(true)\n  }\n\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  const updateFavourites = async (selectedRows) => {\n    if (isUserAuth()) {\n      try {\n        const rightmoveIds = selectedRows.map(row => row.rightmove_id)\n        const response = await axios.put('/api/epc_favourite/update_favourites/archive-to-saved/', { favourite_ids: rightmoveIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('Response:', response.data)\n        setLatestFavourites(rightmoveIds.length)\n        loadUserData()\n        handleArchivedSavedShow()\n        setSelectedRows([])\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // manageing modal for saved iitems added \n  const [archviedSavedShow, setArchivedSavedShow] = useState(false)\n\n  // close modal\n  const handleArchivedSavedClose = (e) => {\n    setArchivedSavedShow(false)\n  }\n\n  // show the modal\n  const handleArchivedSavedShow = (e) => {\n    setArchivedSavedShow(true)\n    setSelectedRows([])\n  }\n\n\n\n\n  return (\n\n    <>\n      <div className='results-block'>\n        {archivedProperties && archivedProperties.length > 0 ?\n          <>\n            <div className='title-section'>\n              <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n              <div className='action-section hidden'>\n                <div className='save-section'>\n                  <h3 onClick={() => updateFavourites(selectedRows)}>Move properties</h3>\n                </div>\n              </div>\n            </div>\n\n            <div className='results-table'>\n\n              <div className='results-headers'>\n                <div id='column11' className='column'>\n                  <div className='custom-checkbox'>\n                    <input\n                      className='checkbox'\n                      type=\"checkbox\"\n                      checked={selectedRows.length === archivedProperties.length && archivedProperties.length > 0}\n                      onChange={handleSelectAllChange}\n                    />\n                    <label className='label'></label>\n                  </div>                </div>\n                <h5 id='column1' className='column'>#</h5>\n                <div id='column2' className='column'>\n                  <h5>Address</h5>\n                </div>\n                <div id='column3' className='column'>\n                  <h5>Postcode</h5>\n                </div>\n                <div id='column4' className='column'>\n                  <h5>Added</h5>\n                </div>\n                <div id='column5' className='column'>\n                  <h5>Reduced</h5>\n                </div>\n                <div id='column6' className='column'>\n                  <h5>Property type</h5>\n                </div>\n                <div id='column7' className='column'>\n                  <h5>Price</h5>\n                </div>\n                <div id='column8' className='column'>\n                  <h5>Bedrooms</h5>\n                </div>\n                <div id='column9' className='column'>\n                  <h5>Channel</h5>\n                </div>\n                <div id='column10' className='column'>\n                  <h5>Agent</h5>\n                </div>\n              </div>\n              <hr className='property-divider' />\n              <div className='results-details archive'>\n                {archivedProperties ? archivedProperties.map((item, index) => {\n                  return (\n                    <>\n                      <div className='results-content'>\n                        <div className='column' id='column11'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type='checkbox'\n                              checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                              onChange={(e) => handleRowSelectionChange(e, item)}\n                            />\n                            <label className='label'>\n                            </label>\n                          </div>\n                        </div>\n                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{index + 1}</h5>\n                        </div>\n                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.address}</h5>\n                        </div>\n                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.postcode}</h5>\n                        </div>\n                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.added_revised}</h5>\n                        </div>\n                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.reduced_revised}</h5>\n                        </div>\n                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.property_type}</h5>\n                        </div>\n                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.price}</h5>\n                        </div>\n                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.bedrooms}</h5>\n                        </div>\n                        <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.channel}</h5>\n                        </div>\n                        <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                          <h5>{item.agent}</h5>\n                        </div>\n\n                      </div>\n\n                      <hr className='property-divider' />\n\n\n                    </>\n                  )\n                })\n                  : ' '}\n              </div>\n            </div>\n          </>\n          : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n        }\n      </div>\n      <ArchviedToSavedModal\n        archviedSavedShow={archviedSavedShow}\n        handleArchivedSavedClose={handleArchivedSavedClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n\n    </>\n  )\n}\n\nexport default ArchivedProperties","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Modal } from 'react-bootstrap'\nimport Select from 'react-select'\nimport ReactSwitch from 'react-switch'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\nimport BasicTemplate from './TemplatePDFs.js/BasicTemplate'\nimport ReactDOMServer from 'react-dom/server'\n\n\n\nconst CreateTemplate = ({ createTemplateShow, handleCreateTemplateClose, signature, loadUserData, templateAction, currentTemplate, exampleData, setCampaignLoading }) => {\n\n  // loading for template\n  const [templateLoading, setTemplateLoading] = useState(false)\n\n\n  // state for handling the position of components on the letter template\n  const [letterTemplate, setLetterTemplate] = useState({\n    template_name: '',\n    template_body_1: '',\n    template_body_2: '',\n    template_body_3: '',\n    template_body_4: '',\n    template_body_5: '',\n    template_type: 'Basic template',\n    sender_name: 1,\n    sender_company: 1,\n    sender_role: 1,\n    sender_mobile: 1,\n    sender_landline: 1,\n    sender_email: 1,\n    sender_footer: 1,\n    logo_width: 250,\n    logo_height: 50,\n    logo_position: 'Right',\n    opening: 'Dear ',\n    closing: 'Best wishes',\n  })\n\n  useEffect(() => {\n    if (templateAction === 'edit') {\n      setLetterTemplate(currentTemplate)\n    } else if (templateAction === 'new') {\n      setLetterTemplate({\n        template_name: '',\n        template_body_1: '',\n        template_body_2: '',\n        template_body_3: '',\n        template_body_4: '',\n        template_body_5: '',\n        template_type: 'Basic template',\n        sender_name: 1,\n        sender_company: 1,\n        sender_role: 1,\n        sender_mobile: 1,\n        sender_landline: 1,\n        sender_email: 1,\n        sender_footer: 1,\n        logo_width: 250,\n        logo_height: 50,\n        logo_position: 'Right',\n        opening: 'Dear ',\n        closing: 'Best wishes',\n      })\n    }\n  }, [templateAction])\n\n  // update paragraphs and characters remaining\n  const paragraphChange = (e) => {\n    const { name, value } = e.target\n\n    // Ensure letterTemplate is defined and has properties before proceeding\n    if (letterTemplate) {\n      const otherTotal = Object.keys(letterTemplate).reduce((total, key) => {\n        // Use optional chaining and nullish coalescing to avoid errors\n        return key !== name ? total + ((letterTemplate[key] && letterTemplate[key].length) || 0) : total\n      }, 0)\n\n      const maxCharsForThis = 2200 - otherTotal\n      const newText = value.slice(0, Math.max(0, maxCharsForThis)) // Ensure non-negative\n\n      setLetterTemplate(prevState => ({\n        ...prevState,\n        [name]: newText,\n      }))\n    }\n  }\n\n\n\n  // calculation to determine the inputs on the form and the toggle\n  const toggleStatus = (key) => {\n    setLetterTemplate(prevData => ({\n      ...prevData,\n      [key]: prevData[key] === 1 ? 0 : 1,\n    }))\n  }\n\n  // function to save the template\n\n  const postTemplate = async () => {\n    setCampaignLoading(true)\n    handleCreateTemplateClose()\n\n    const extractedAddress = exampleData.address\n    const addressComponents = extractedAddress.split(',').map(component => component.trim())\n    const addressFields = addressComponents.slice(0, 4) // Adjust as necessary\n    if (exampleData.postcode) {\n      addressFields.push(exampleData.postcode) // Include postcode if present\n    }\n\n    console.log('template ->', letterTemplate)\n    // Generate the HTML content for the template\n    const htmlContent = ReactDOMServer.renderToStaticMarkup(\n      <BasicTemplate\n        signature={signature}\n        selectedTemplate={letterTemplate}\n        ownerData={exampleData.owner_name}\n        address={addressFields}\n      />\n    )\n\n    // Prepare the data for the API request\n    const templateData = {\n      ...letterTemplate,\n      htmlContent, // Include the generated HTML content\n      recipient: exampleData,\n    }\n\n    console.log('template body ->', templateData)\n    try {\n      const response = await axios.post('/api/letter_templates/add/', templateData, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Letter template ->', response)\n      await loadUserData() // Reload user data to reflect the new template\n\n      // Show a success message\n      Swal.fire({\n        title: '😎 Action complete',\n        text: 'New template added successfully',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Error adding template:', error)\n      // Show an error message\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an issue adding your template',\n        confirmButtonText: 'Try Again 🔄',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } finally {\n      setCampaignLoading(false) // Reset loading state\n    }\n  }\n\n  // function to save the editedtemplate\n  const editTemplate = async () => {\n    setTemplateLoading(true)\n    try {\n      const response = await axios.put(`/api/letter_templates/edit/${letterTemplate.id}/`, letterTemplate, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Letter template ->', response)\n      loadUserData()\n      handleCreateTemplateClose()\n      Swal.fire({\n        title: '😎 action complete',\n        text: 'Template updated',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Error updating template:', error)\n    } finally {\n      setTemplateLoading(false)\n    }\n  }\n\n  return (\n\n    <>\n      <Modal show={createTemplateShow} onHide={handleCreateTemplateClose} backdrop='static' className='create-template-modal'>\n        <Modal.Body>\n          <>\n            <div className='template-wrapper'>\n              <div className='template-header'>\n                <h1>Wittle letter template builder</h1>\n                <div className='close' onClick={handleCreateTemplateClose}>x</div>\n              </div>\n              <div className='template-body'>\n                <div className='template-inputs'>\n                  <div className='input-top'>\n                    <h3 className='template-name'>Template name</h3>\n                    <input className='template-name-input' value={letterTemplate.template_name} onChange={(e) => setLetterTemplate({ ...letterTemplate, template_name: e.target.value })}></input>\n                  </div>\n                  <div className='input-details'>\n                    <div className='sub-title'>\n                      <h3>Details</h3>\n                    </div>\n                    <div className='details-array'>\n                      <div className='detail-line'>\n                        <h3>Intro</h3>\n                        <input className='detail-inputs' value={letterTemplate.opening} onChange={(e) => setLetterTemplate({ ...letterTemplate, opening: e.target.value })}></input>\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Outro</h3>\n                        <input className='detail-inputs' value={letterTemplate.closing} onChange={(e) => setLetterTemplate({ ...letterTemplate, closing: e.target.value })}></input>\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Name</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_name === 1}\n                          onChange={() => toggleStatus('sender_name')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Company</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_company === 1}\n                          onChange={() => toggleStatus('sender_company')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Role</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_role === 1}\n                          onChange={() => toggleStatus('sender_role')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Mobile</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_mobile === 1}\n                          onChange={() => toggleStatus('sender_mobile')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Landline</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_landline === 1}\n                          onChange={() => toggleStatus('sender_landline')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Email</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_email === 1}\n                          onChange={() => toggleStatus('sender_email')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                      <div className='detail-line'>\n                        <h3>Footer</h3>\n                        <ReactSwitch\n                          checked={letterTemplate.sender_footer === 1}\n                          onChange={() => toggleStatus('sender_footer')}\n                          onColor='#ED6B86'\n                          offColor='#D5D5D5'\n                          uncheckedIcon={null}\n                          checkedIcon={null}\n                        />\n                      </div>\n                    </div>\n\n                  </div>\n                  <div className='input-details'>\n                    <div className='sub-title'>\n                      <h3>Logo details</h3>\n                      <div className='logo-position'>\n                        <button className='position-button' onClick={() => setLetterTemplate({ ...letterTemplate, logo_position: 'Left' })} style={{ backgroundColor: letterTemplate.logo_position === 'Left' ? '#ED6B86' : 'inherit' }}>Left</button>\n                        <button className='position-button' onClick={() => setLetterTemplate({ ...letterTemplate, logo_position: 'Centre' })} style={{ backgroundColor: letterTemplate.logo_position === 'Centre' ? '#ED6B86' : 'inherit' }}>Centre</button>\n                        <button className='position-button' onClick={() => setLetterTemplate({ ...letterTemplate, logo_position: 'Right' })} style={{ backgroundColor: letterTemplate.logo_position === 'Right' ? '#ED6B86' : 'inherit' }}>Right</button>\n                      </div>\n                      <div className='logo-sizing'>\n                        <div className='logo-size-item'>\n                          <h3>Height</h3>\n                          <input type='number' max={125} value={letterTemplate.logo_height} onChange={(e) => setLetterTemplate({ ...letterTemplate, logo_height: e.target.value })}></input>\n                        </div>\n                        <div className='logo-size-item'>\n                          <h3>Width</h3>\n                          <input type='number' max={350} value={letterTemplate.logo_width} onChange={(e) => setLetterTemplate({ ...letterTemplate, logo_width: e.target.value })}></input>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='input-body'>\n                    <div className='sub-title'>\n                      <h3>Template body</h3>\n                      {letterTemplate ? (\n                        <div className='characters'>\n                          {2200 - (\n                            (letterTemplate.template_body_1 ? letterTemplate.template_body_1.length : 0) +\n                            (letterTemplate.template_body_2 ? letterTemplate.template_body_2.length : 0) +\n                            (letterTemplate.template_body_3 ? letterTemplate.template_body_3.length : 0) +\n                            (letterTemplate.template_body_4 ? letterTemplate.template_body_4.length : 0) +\n                            (letterTemplate.template_body_5 ? letterTemplate.template_body_5.length : 0)\n                          )} characters remaining\n                        </div>\n                      ) : ''}\n                    </div>\n                    <div className='text-block'>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 1</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_1.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_1' value={letterTemplate.template_body_1} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 2</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_2.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_2' value={letterTemplate.template_body_2} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 3</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_3.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_3' value={letterTemplate.template_body_3} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 4</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_4.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_4' value={letterTemplate.template_body_4} className='input-text-body' onChange={paragraphChange}></textarea>\n                      <div className='sub-sub-title'>\n                        <h3>Paragraph 5</h3>\n                        {/* <h3 className='characters'>{550 - letterTemplate.template_body_4.length} characters remaining</h3> */}\n                      </div>\n                      <textarea name='template_body_5' value={letterTemplate.template_body_5} className='input-text-body' onChange={paragraphChange}></textarea>\n                    </div>\n\n                  </div>\n                  <div className='save-section'>\n                    {templateAction === 'new' ? <button onClick={() => postTemplate()}>Save template</button> : templateAction === 'edit' ? <button onClick={() => editTemplate()}>Save template</button> : ''}\n                  </div>\n\n                </div>\n                <div className='template-section'>\n                  {/* <div className='template-border'> */}\n                  <div className='template-content'>\n                    <div className='logo-section' style={{ justifyContent: letterTemplate.logo_position === 'Left' ? 'Flex-start' : letterTemplate.logo_position === 'Centre' ? 'Center' : 'flex-end' }}>\n                      <div className='logo-box' style={{ justifyContent: letterTemplate.logo_position === 'Left' ? 'Flex-start' : letterTemplate.logo_position === 'Centre' ? 'Center' : 'flex-end', height: `${letterTemplate.logo_height}px`, width: `${letterTemplate.logo_width}px` }}>\n                        {signature ? <img src={signature.logo} alt=\"Logo\" className='logo' /> : ''}\n\n                      </div>\n                    </div>\n                    <div className='address-section'>\n                      <h3 className='address-details'>Owner</h3>\n                      <h3 className='address-details'>Address line 1</h3>\n                      <h3 className='address-details'>Address line 2</h3>\n                      <h3 className='address-details'>Address line 3</h3>\n                      <h3 className='address-details'>Postcode</h3>\n                    </div>\n                    {letterTemplate ?\n                      <div className='body-section'>\n                        <div className='letter-intro'>\n                          <h3 className='intro'>{letterTemplate.opening} </h3>\n                          <h3 className='intro'> Homeowner,</h3>\n                        </div>\n                        <h3 className='letter-paragraph'>{letterTemplate.template_body_1}</h3>\n                        <h3 className='letter-paragraph'>{letterTemplate.template_body_2}</h3>\n                        <h3 className='letter-paragraph'>{letterTemplate.template_body_3}</h3>\n                        <h3 className='letter-paragraph'>{letterTemplate.template_body_4}</h3>\n                        <h3 className='letter-paragraph'>{letterTemplate.template_body_5}</h3>\n                      </div>\n                      : ''}\n                    <div className='sign-off-section'>\n                      <h3 className='sign-off-line'>{letterTemplate.closing}</h3>\n                      {letterTemplate.sender_name ? <h3 className='sign-off-line'>{signature.first_name} {signature.last_name}</h3> : ''}\n                      {letterTemplate.sender_role ? <h3 className='sign-off-line'>{signature.role}</h3> : ''}\n                      {letterTemplate.sender_company ? <h3 className='sign-off-line'>{signature.company_name}</h3> : ''}\n                      {letterTemplate.sender_mobile ? <h3 className='sign-off-line'>{signature.mobile}</h3> : ''}\n                      {letterTemplate.sender_landline ? <h3 className='sign-off-line'>{signature.landline}</h3> : ''}\n                      {letterTemplate.sender_email ? <h3 className='sign-off-line'>{signature.email}</h3> : ''}\n                    </div>\n                  </div>\n                  {signature && letterTemplate.sender_footer ? <h3 className='letter-footer'>{signature.letter_footer}</h3> : ''}\n                </div>\n              </div>\n              {/* </div> */}\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n\n    </>\n  )\n}\n\nexport default CreateTemplate","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Modal } from 'react-bootstrap'\nimport Select from 'react-select'\nimport ReactSwitch from 'react-switch'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\n\n\nconst CreateCampaign = ({ createCampaignShow, handleCreateCampaignClose, letterTemplates, loadUserData, editData }) => {\n\n  const maxSteps = 5 // Assuming 5 is the max number of steps\n\n  const [numberOfSteps, setNumberofSteps] = useState(1)\n\n  const [campaign, setCampaign] = useState({\n    campaign_name: '',\n    campaign_status: 'Not launched',\n    campaign_start_date: null,\n    campaign_type: '1 step',\n    template_names: ['', '', '', '', ''], // Adjusted for up to 5 steps\n    template_dates: [null, null, null, null, null], // Adjusted for dates, first date always null since \"on launch\"\n\n  })\n\n  useEffect(() => {\n    if (editData !== 'None') {\n      setCampaign(editData)\n      const numberOfSteps = parseInt(editData.campaign_type.split(' ')[0])\n      setNumberofSteps(numberOfSteps)\n    } else if (campaign) {\n      const numberOfSteps = parseInt(campaign.campaign_type.split(' ')[0])\n      setNumberofSteps(numberOfSteps)\n    }\n  }, [editData])\n\n  // useEffect(() => {\n  //   if (campaign) {\n  //     const numberOfSteps = parseInt(campaign.campaign_type.split(' ')[0])\n  //     setNumberofSteps(numberOfSteps)\n  //   }\n  // }, campaign)\n\n  const handleCampaignChange = (e) => {\n    const { name, value } = e.target\n    setCampaign({ ...campaign, [name]: value })\n  }\n\n  const handleStepChange = (index, e) => {\n    const { name, value } = e.target\n    const newSteps = [...campaign.steps]\n    newSteps[index] = { ...newSteps[index], [name]: value }\n    setCampaign({ ...campaign, steps: newSteps })\n  }\n\n  const handleTemplateChange = (index, value) => {\n    setCampaign({\n      ...campaign,\n      [`template_${index + 1}_name`]: value,\n    })\n  }\n\n  const handleDateChange = (index, value) => {\n    if (index === 0) return // Skip for the first template since it's \"on launch\"\n    setCampaign({\n      ...campaign,\n      [`template_${index + 1}_date`]: value,\n    })\n  }\n\n\n  const addStep = () => {\n    const currentSteps = numberOfSteps\n\n    if (currentSteps < maxSteps) {\n      const newCampaignType = `${currentSteps + 1} step${currentSteps + 1 > 1 ? 's' : ''}`\n\n      setCampaign(prevCampaign => ({\n        ...prevCampaign,\n        campaign_type: newCampaignType,\n        [`template_${currentSteps + 1}_name`]: '',\n        [`template_${currentSteps + 1}_date`]: '', // Considering all steps except the first can have a date.\n      }))\n\n      // Directly setting numberOfSteps here based on the updated campaign_type.\n      setNumberofSteps(currentSteps + 1)\n    }\n  }\n\n\n  const removeStep = () => {\n    // Determine the current number of steps\n    const currentSteps = numberOfSteps\n\n    if (currentSteps > 1) {\n      // Prepare updates for removing the highest step's data\n      const updates = {\n        campaign_type: `${currentSteps - 1} step${currentSteps - 1 > 1 ? 's' : ''}`,\n      }\n\n      // Use null or an empty string to clear out the data for the highest step\n      updates[`template_${currentSteps}_name`] = ''\n      updates[`template_${currentSteps}_date`] = null\n\n      setCampaign(prevCampaign => ({\n        ...prevCampaign,\n        ...updates,\n      }))\n\n      // Directly updating numberOfSteps here based on the decrement\n      setNumberofSteps(currentSteps - 1)\n    }\n  }\n\n  const saveCampaign = async () => {\n    try {\n      const response = await axios.post('/api/letter_campaigns/add/', campaign, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      loadUserData()\n      handleCreateCampaignClose()\n      Swal.fire({\n        title: '😎 action complete',\n        text: 'Campaign saved',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Failed to save the campaign', error)\n      Swal.fire('Error', 'There was an issue saving the campaign.', 'error')\n    }\n  }\n\n\n  const editCampaign = async () => {\n    console.log('edit campaign id ->', editData.id)\n    try {\n      const response = await axios.put(`/api/letter_campaigns/edit/${editData.id}/`, campaign, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      loadUserData()\n      handleCreateCampaignClose()\n      Swal.fire({\n        title: '😎 action complete',\n        text: 'Campaign updated',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Failed to save the campaign', error)\n      Swal.fire('Error', 'There was an issue updating the campaign.', 'error')\n    }\n  }\n\n\n\n\n\n  return (\n    <Modal show={createCampaignShow} onHide={handleCreateCampaignClose} backdrop='static' className='create-campaign-modal'>\n      <Modal.Body>\n        <div className='campaign-wrapper'>\n          <div className='campaign-header'>\n            <h2>Wittle campaign builder</h2>\n            <div className='close' onClick={handleCreateCampaignClose}>x</div>\n          </div>\n          <div className='campaign-sub-header'>\n            <h3>Set up your campaign sequences. Select your templates and the dates you&apos;d like them to be sent 📩. You can add up to 5 steps.</h3>\n          </div>\n          <div className='campaign-title-section'>\n            <h3>Campaign name</h3>\n            <input\n              name=\"campaign_name\"\n              value={campaign.campaign_name}\n              onChange={handleCampaignChange}\n            ></input>\n          </div>\n\n          <div className='campaign-headers'>\n            <h3 className='step-header'>Step</h3>\n            <h3 className='template-header'>Template</h3>\n            <h3 className='date-title'>Send date</h3>\n          </div>\n          <div className=\"campaign-stages\">\n            {numberOfSteps && Array.from({ length: numberOfSteps }).map((_, index) => (\n              <div key={index} className=\"campaign-step\">\n                <h3 className='step-column'>Step {index + 1}</h3>\n                <select\n                  className='template-dropdown'\n                  value={campaign[`template_${index + 1}_name`] || ''}\n                  onChange={(e) => handleTemplateChange(index, e.target.value)}\n\n                >\n                  <option value=\"\">Select Template</option>\n                  {letterTemplates.map((template, templateIndex) => (\n                    <option key={templateIndex} value={template.template_name}>\n                      {template.template_name}\n                    </option>\n                  ))}\n                </select>\n\n                {index === 0 ? (\n                  <div className='on-launch'>On launch</div>\n                ) : (\n                  <div className='date-input-container'>\n                    <input\n                      className='date-input'\n                      type=\"number\"\n                      min=\"0\"\n                      value={campaign[`template_${index + 1}_date`] || ''}\n                      onChange={(e) => handleDateChange(index, e.target.value)}\n                    />\n                    <span className='days-later'>days later</span>\n                  </div>\n                )}\n\n                {numberOfSteps && numberOfSteps > 1 && index === numberOfSteps - 1 && <h3 className='remove' onClick={() => removeStep()}>❌</h3>}\n              </div>\n            ))}\n            <div className='footer-buttons'>\n              {numberOfSteps && numberOfSteps < 5 && <button className='add-step' onClick={addStep}>Add Step</button>}\n              {editData === 'None' ?\n                <button className='save-campaign' onClick={saveCampaign}>Save Campaign</button>\n                :\n                <button className='save-campaign' onClick={editCampaign}>Update Campaign</button>\n              }\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal >\n  )\n}\n\nexport default CreateCampaign","\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../../auth/Auth'\nimport axios from 'axios'\nimport Select from 'react-select'\nimport ReactSwitch from 'react-switch'\nimport Swal from 'sweetalert2'\nimport CreateCampaign from '../CreateCampaign'\nimport BasicTemplate from '../TemplatePDFs.js/BasicTemplate'\nimport ReactDOMServer from 'react-dom/server'\nimport Loading from '../../../../helpers/Loading'\n\n\nconst CampaignOverview = ({ letterTab, setLetterTab, letterCampaigns, loadUserData, letterTemplates, letterProperties, signature, editCredts,\n  setEditCredits, initiateCheckoutSession, creditValue, addCreditValue, availableCredits }) => {\n\n  // state for the overall campaign screen\n  const [campaignScreen, setCampaignScreen] = useState('Overview')\n\n  // state for which campaign is selected\n  const [activeCampaign, setActiveCampaign] = useState('')\n\n  // state for which campaign detail tab is selected\n  const [campaignDetail, setCampaignDetail] = useState('Leads')\n\n  // managing modal for the building campaign\n  const [createCampaignShow, setCreateCampaignShow] = useState(false)\n\n  // state for selecting rows\n  const [campaignSelectedRows, setCampaignSelectedRows] = useState([])\n  const [campaignSelectAllStatus, setCampaignSelectAllStatus] = useState(false)\n\n  // states for properties in campaign or not\n  const [propertiesInCampaign, setPropertiesInCampaign] = useState()\n  const [propertiesNotInCampaign, setPropertiesNotInCampaign] = useState()\n\n  // state for storing the campaign analytics\n  const [campaignAnalytics, setCampaignAnalytics] = useState()\n\n  // state for the the loading sign when campaign is being launched\n  const [campaignLoading, setCampaignLoading] = useState(false)\n\n  // state for determingin the number of columns\n  const [maxStep, setMaxStep] = useState(0)\n\n  useEffect(() => {\n    if (letterProperties && activeCampaign) {\n      // Logic to execute when letterProperties updates\n      const inCampaign = letterProperties.filter(property => property.letter_campaign === activeCampaign.campaign_name)\n      const notInCampaign = letterProperties.filter(property => property.letter_campaign === 'None')\n      setPropertiesInCampaign(inCampaign)\n      console.log('properties in campaign ->', inCampaign)\n      console.log('properties not in campaign ->', notInCampaign)\n      setPropertiesNotInCampaign(notInCampaign)\n    }\n  }, [letterProperties])\n\n  // show campaign modal\n  const handleCreateCampaignShow = (e) => {\n    setCreateCampaignShow(true)\n  }\n\n  // close campaign modal\n  const handleCreateCampaignClose = () => {\n    setCreateCampaignShow(false)\n  }\n\n\n  // function for going to the specific campaign\n  const selectCampaign = (item) => {\n    setCampaignScreen('Specific')\n    setActiveCampaign(item)\n    console.log('selected campaign ->', item)\n    const inCampaign = letterProperties.filter(property => property.letter_campaign === item.campaign_name)\n    const notInCampaign = letterProperties.filter(property => property.letter_campaign === 'None')\n    setPropertiesInCampaign(inCampaign)\n    setPropertiesNotInCampaign(notInCampaign)\n    console.log('properties in campaign ->', inCampaign)\n    console.log('properties not in campaign ->', notInCampaign)\n  }\n\n\n  // delete template\n  const deleteCampaign = async (item) => {\n    try {\n      const response = await axios.delete(`/api/letter_campaigns/delete/${item.id}/`, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      loadUserData()\n    } catch (error) {\n      console.error('Error deleting template:', error)\n    }\n  }\n\n  // ? Section 1: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n    console.log('selected row ->', item)\n    if (e.target.checked) {\n      setCampaignSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setCampaignSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Check or uncheck the 'Select All' checkbox based on whether all rows are selected\n    setCampaignSelectAllStatus(letterProperties.length === campaignSelectedRows.length)\n  }\n\n  // function for selecting rows\n  const selectAllRows = () => {\n    setCampaignSelectedRows(propertiesInCampaign)\n    setCampaignSelectAllStatus(true)\n  }\n\n  // function for deseleting rows\n  const deselectAllRows = () => {\n    setCampaignSelectedRows([])\n    setCampaignSelectAllStatus(false)\n  }\n\n  // function for selecting all rows\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  const addPropertiesToCampaign = async (properties, activeCampaign) => {\n\n    const propertyIds = properties.map(property => property.rightmove_id)\n\n    try {\n      const response = await axios.put('/api/epc_favourite/add_to_campaign/', {\n        property_ids: propertyIds,\n        campaign_name: activeCampaign.campaign_name,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Properties added to campaign successfully:', response.data)\n      loadUserData()\n      setCampaignSelectedRows([])\n      Swal.fire({\n        title: '😎 action complete',\n        text: `${properties.length} properties added to campaign`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      // Handle success (e.g., showing a success message or updating UI state)\n    } catch (error) {\n      console.error('Error adding properties to campaign:', error.response.data)\n    }\n  }\n\n\n\n  const removePropertiesFromCampaign = async (properties, activeCampaign) => {\n    const propertyIds = properties.map(property => property.rightmove_id)\n\n    if (propertyIds.length === 0) {\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'You must select the properties you want to remove from your campaign',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    }\n\n    try {\n      const response = await axios.put('/api/epc_favourite/remove_from_campaign/', {\n        property_ids: propertyIds,\n        campaign_name: activeCampaign,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Properties removed to campaign successfully:', response.data)\n      loadUserData()\n      setCampaignSelectedRows([])\n\n      Swal.fire({\n        title: '😎 action complete',\n        text: `${properties.length} properties removed from campaign`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      // Handle success (e.g., showing a success message or updating UI state)\n    } catch (error) {\n      console.error('Error removing properties to campaign:', error.response.data)\n      // Handle error (e.g., showing an error message)\n    }\n  }\n\n\n  // Function to launch campaign with HTML content processing\n  const launchCampaign = async (activeCampaign, propertiesInCampaign, letterTemplates, signature) => {\n    setCampaignLoading(true)\n    // Determine the number of steps/templates required from the campaign_type\n    const steps = parseInt(activeCampaign.campaign_type.split(' ')[0])\n\n    const templatesNeeded = []\n    for (let i = 1; i <= steps; i++) {\n      const templateName = activeCampaign[`template_${i}_name`]\n      if (templateName) {\n        const template = letterTemplates.find(t => t.template_name === templateName)\n        if (template) {\n          templatesNeeded.push({ template, step: i }) // Include the step number with the template\n        }\n      }\n    }\n\n    const itemsWithHtmlContent = propertiesInCampaign.flatMap(item => {\n      return templatesNeeded.map(({ template, step }) => { // Destructure to get template and step\n        const extractedAddress = item.address\n        const addressComponents = extractedAddress.split(',').map(component => component.trim())\n        const addressFields = addressComponents.slice(0, 4) // Adjust as necessary\n        if (item.postcode) {\n          addressFields.push(item.postcode) // Include postcode if present\n        }\n\n        // Generate HTML content for this item and template\n        const htmlContent = ReactDOMServer.renderToStaticMarkup(\n          <BasicTemplate\n            signature={signature}\n            selectedTemplate={template}\n            ownerData={item}\n            address={addressFields}\n          />\n        )\n\n        return {\n          // campaign: activeCampaign,\n          step, // Include the step of the campaign\n          template_name: template.template_name,\n          htmlContent,\n          recipient: item,\n        }\n      })\n    })\n\n    console.log('data for campaign -> ', itemsWithHtmlContent)\n    // Post the array of items with HTML content to the backend for processing\n    try {\n      const response = await axios.post('/api/letter_campaigns/create_campaign/', {\n        campaign: activeCampaign,\n        sequence_details: itemsWithHtmlContent,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Campaign processing response ->', response.data)\n      Swal.fire({\n        title: '😎 Action complete',\n        text: 'Congrats, you have successfully launched your campaign. Track progress on the analytics tab 📈',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      await loadUserData()\n      setCampaignLoading(false)\n      // setCampaignScreen('Specific')\n      // setCampaignDetail('Analytics')\n      // Handle successful response (e.g., show success message or update UI)\n    } catch (error) {\n      console.error('Error posting campaign data to Django:', error)\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an issue launchign your campaign',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      setCampaignLoading(false)\n    }\n  }\n\n\n  // get the campaign trakcing analytics\n  const getAnalytics = async () => {\n    try {\n      const campaignName = activeCampaign.campaign_name\n      const response = await axios.get('/api/campaign_tracking/', {\n        params: { campaign_name: campaignName },\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n\n      const processedData = response.data.reduce((acc, cur) => {\n        // Check if we already have this address in the accumulator\n        const existing = acc.find(item => item.target_address === cur.target_address)\n        if (existing) {\n          // Include PDF URL in the step object\n          existing.steps[cur.campaign_step - 1] = {\n            status: cur.status,\n            step: cur.campaign_step,\n            pdf: cur.pdf, // Include PDF URL here\n          }\n        } else {\n          // Initialize steps array with nulls based on max_step\n          const steps = Array.from({ length: cur.max_step }, () => null)\n          // Include PDF URL in the new step object\n          steps[cur.campaign_step - 1] = {\n            status: cur.status,\n            step: cur.campaign_step,\n            pdf: cur.pdf, // Include PDF URL here\n          }\n          acc.push({ ...cur, steps })\n        }\n        return acc\n      }, [])\n\n      // Calculate the maximum step\n      const maxStep = processedData.reduce((max, item) => Math.max(max, item.steps.length), 0)\n      setMaxStep(maxStep)\n      setCampaignAnalytics(processedData)\n    } catch (error) {\n      console.error('Error fetching campaign analytics:', error)\n    }\n  }\n\n\n  // lloadnig campaign analytics if active campaign is live\n  useEffect(() => {\n    if (activeCampaign && activeCampaign.campaign_status === 'Live') {\n      getAnalytics()\n    }\n  }, [activeCampaign])\n\n\n\n\n\n  return (\n\n    <>\n      {campaignScreen && campaignScreen === 'Overview' && !campaignLoading ?\n        <>\n\n          <div className='top-line'>\n\n            <div className='matching-status'>\n              <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n              <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n              <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n              <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n            </div>\n            {editCredts ?\n              <div className='credits-section'>\n                <input type='number' className='credit-input' value={creditValue} onChange={addCreditValue}></input>\n                <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n                <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n              </div>\n              : <div className='credits-section'>\n                <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n                <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n              </div>}\n          </div>\n          <div className='action-section letter'>\n            {letterCampaigns ? <h3 className='template-total'>You have {letterCampaigns.length} saved campaigns</h3> : ''}\n            <div className='save-section'>\n              <div className=\"print-icon\"></div>\n              <h3 onClick={() => handleCreateCampaignShow()}>New campaign </h3>\n            </div>\n\n          </div>\n          <CreateCampaign\n            createCampaignShow={createCampaignShow}\n            handleCreateCampaignClose={handleCreateCampaignClose}\n            letterTemplates={letterTemplates}\n            loadUserData={loadUserData}\n            editData={'None'}\n          />\n          <div className='template-list'>\n            <div className='template-table'>\n              <div className='template-headers'>\n                <h3 id='column1'>#</h3>\n                <h3 id='column2'>Name</h3>\n                <h3 id='column3'>Type</h3>\n                <h3 id='column4'>Status</h3>\n                {/* <h3 id='column5'></h3> */}\n              </div>\n              <div className='template-content'>\n                {letterCampaigns ?\n                  [...letterCampaigns]\n                    .sort((a, b) => a.id - b.id)\n                    .map((item, index) => (\n                      <div key={index} className='template-item' onClick={() => selectCampaign(item)}>\n                        <h3 className='template-number' id='column1'>{index + 1}</h3>\n                        <h3 className='template-name' id='column2'>{item.campaign_name}</h3>\n                        <h3 className='template-type' id='column3'>{item.campaign_type}</h3>\n                        <h3 className='template-status' id='column4'>{item.campaign_status}</h3>\n                        {/* <div id='column5'>\n                          <button className='delete' onClick={() => deleteCampaign(item)}>Delete</button>\n                        </div> */}\n                      </div>\n                    ))\n                  : ''}\n              </div>\n\n            </div>\n          </div>\n        </>\n        : campaignScreen === 'Specific' && !campaignLoading ?\n\n          <>\n            <div className='single-campaign-wrapper'>\n              <div className='campaign-detail-header'>\n                <div className='go-back-box' onClick={() => setCampaignScreen('Overview')}>\n                  <div className='go-back-sign'>&lt;</div>\n                  <h3>Back to campaigns</h3>\n                </div>\n                <div className='actions'>\n                  {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                    <>\n                      <div className='save-section'>\n                        <div className=\"print-icon\">\n                        </div>\n                        <h3 onClick={() => handleCreateCampaignShow()}>Edit campaign</h3>\n                        <CreateCampaign\n                          createCampaignShow={createCampaignShow}\n                          handleCreateCampaignClose={handleCreateCampaignClose}\n                          letterTemplates={letterTemplates}\n                          loadUserData={loadUserData}\n                          editData={activeCampaign}\n                        />\n                      </div>\n                      <div className='save-section'>\n                        <div className=\"print-icon\">\n                        </div>\n                        <h3 onClick={() => launchCampaign(activeCampaign, propertiesInCampaign, letterTemplates, signature)}>Launch campaign</h3>\n                      </div>\n                    </>\n                  }\n                </div>\n              </div>\n            </div>\n            <div className='matching-status'>\n              <h3 className='matching-pill' onClick={() => setCampaignDetail('Leads')} style={{ color: campaignDetail === 'Leads' ? 'white' : '#1A276C', backgroundColor: campaignDetail === 'Leads' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Leads</h3>\n              <h3 className='matching-pill' onClick={() => setCampaignDetail('Analytics')} style={{ color: campaignDetail === 'Analytics' ? 'white' : '#1A276C', backgroundColor: campaignDetail === 'Analytics' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Analytics</h3>\n              {/* <h3 className='matching-pill' onClick={() => setCampaignDetail('Sequences')} style={{ color: campaignDetail === 'Sequences' ? 'white' : '#1A276C', backgroundColor: campaignDetail === 'Sequences' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Sequences</h3> */}\n            </div>\n            {campaignDetail === 'Leads' ?\n              <>\n                <div className='campaign-lead-section'>\n\n                  <div className='action-section letter' style={{ marginTop: '1%', marginRight: '3%' }}>\n                    {propertiesInCampaign && activeCampaign && activeCampaign.campaign_status === 'Live' ? <h3 className='lead-message' style={{ fontSize: '0.8rem' }}>You have {propertiesInCampaign.length} properties in your campaign</h3> : <h3 className='lead-message' style={{ fontSize: '0.8rem' }}>You have {propertiesInCampaign.length} properties in your unlaunched campaign</h3>}\n                    {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                      <div className='save-section'>\n                        <div className=\"print-icon\"></div>\n                        <h3 onClick={() => removePropertiesFromCampaign(campaignSelectedRows, activeCampaign)}>Remove leads </h3>\n                      </div>\n                    }\n                  </div>\n                  <div className='results-table' style={{ marginTop: '1%' }}>\n                    <div className='results-headers letter'>\n                      {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                        <div id='column11' className='column'>\n                          <div className='custom-checkbox'>\n                            <input\n                              className='checkbox'\n                              type=\"checkbox\"\n                              checked={campaignSelectedRows && propertiesInCampaign ? campaignSelectedRows.length === propertiesInCampaign.length && propertiesInCampaign.length > 0 : ''}\n                              onChange={handleSelectAllChange}\n                            />\n                            <label className='label'></label>\n                          </div>\n                        </div>\n                      }\n                      <h5 id='column1' className='column'>#</h5>\n                      <div id='column2' className='column'>\n                        <h5>Address</h5>\n                      </div>\n                      <div id='column3' className='column'>\n                        <h5>Postcode</h5>\n                      </div>\n                      <div id='column4' className='column'>\n                        <h5>Agent</h5>\n                      </div>\n                      <div id='column5' className='column'>\n                        <h5>Owner</h5>\n                      </div>\n                      {/* <div id='column5' className='column'>\n                      <h5>Selection</h5>\n                    </div> */}\n\n                    </div>\n                    <hr className='property-divider' />\n                    <div className='results-details letter'>\n                      {propertiesInCampaign ? propertiesInCampaign.map((item, index) => {\n                        const isRowSelected = campaignSelectedRows.some(selectedRow => selectedRow.rightmove_id === item.rightmove_id)\n                        return (\n                          <>\n                            <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                              {activeCampaign && activeCampaign.campaign_status === 'Live' ? '' :\n                                <div className='column' id='column11'>\n                                  <div className='custom-checkbox'>\n                                    <input\n                                      className='checkbox'\n                                      type='checkbox'\n                                      checked={campaignSelectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                                      onChange={(e) => handleRowSelectionChange(e, item)}\n                                    />\n                                    <label className='label'>\n                                    </label>\n                                  </div>\n                                </div>\n                              }\n                              <div className='column' id='column1'>\n                                <h5>{index + 1}</h5>\n                              </div>\n                              <div className='column' id='column2'>\n                                <h5>{item.address}</h5>\n                              </div>\n                              <div className='column' id='column3'>\n                                <h5>{item.postcode}</h5>\n                              </div>\n                              <div className='column' id='column4'>\n                                <h5>{item.agent}</h5>\n                              </div>\n                              <div className='column' id='column5'>\n                                <h5>{item.owner_name ? item.owner_name : 'N/a'}</h5>\n                              </div>\n\n\n                            </div>\n                            <hr className='property-divider' />\n\n                          </>\n                        )\n                      })\n                        : ' '}\n                    </div>\n                  </div>\n\n                </div>\n              </>\n\n              : campaignDetail === 'Analytics' ?\n\n                <>\n                  <div className='campaign-analytics'>\n                    <div className='action-section letter' style={{ marginTop: '1%', marginRight: '3%' }}>\n                      {activeCampaign && activeCampaign.campaign_status === 'Live' ? <h3 className='template-total'>Your campaign is live! Track the status of your letters here.</h3> : <h3 className='template-total'>You can track your campaign progress here once it&apos;s been launched.</h3>}\n                    </div>\n                    {activeCampaign && activeCampaign.campaign_status === 'Live' ?\n                      <div className='results-table analytics'>\n                        <div className='results-headers analytics'>\n                          <div id='column1' className='column'><h5>#</h5></div>\n                          <div id='column2' className='column'><h5>Address</h5></div>\n                          <div id='column3' className='column'><h5>Owner</h5></div>\n                          {[...Array(maxStep)].map((_, i) => (\n                            <div key={i} className='column' id={`column${i + 4}`}>\n                              <h5 className='step-title'>Step {i + 1}</h5>\n                              <div className='sub-header'>\n                                <h5>Status</h5>\n                                <h5>Pdf</h5>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                        {/* <hr className='property-divider' /> */}\n                        <div className='results-details analytics'>\n                          {campaignAnalytics ? campaignAnalytics.map((item, index) => (\n                            <>\n                              <div key={index} className='results-content analytics'>\n                                <div className='column' id='column1'><h5>{index + 1}</h5></div>\n                                <div className='column' id='column2'><h5>{item.target_address}</h5></div>\n                                <div className='column' id='column3'><h5>{item.target_name ? item.target_name : 'N/a'}</h5></div>\n                                {item.steps.map((step, stepIndex) => (\n                                  <div className='column' key={stepIndex} id={`column${step.step + 3}`}>\n                                    <h5>{step.status}</h5>\n                                    {step.pdf === 'empty' ? '' : <h5 onClick={() => window.open(step.pdf, '_blank')} className=\"open-pdf-button\">📑</h5>}\n                                  </div>\n                                ))}\n                              </div>\n                              {/* <hr className='property-divider' /> */}\n                            </>\n                          )) : ''}\n                        </div>\n                      </div>\n                      : ''}\n                  </div>\n\n\n                </>\n\n                : campaignDetail === 'Sequences' ?\n                  <>\n\n                  </>\n\n                  : ''\n            }\n          </>\n\n          : campaignScreen === 'Specific' && campaignLoading ?\n\n            <div className='property-table-loading campaign'>\n              <Loading />\n              <h3>Hold tight, your campaign is being launched. This may take a few minutes 🚀</h3>\n            </div>\n\n            : ''}\n\n    </>\n  )\n}\nexport default CampaignOverview","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\nimport Loading from '../../../helpers/Loading'\n\n\n\nconst SetSignatures = ({ letterTab, setLetterTab, signature, setSignature, loadUserData, editCredts,\n  setEditCredits, initiateCheckoutSession, creditValue, addCreditValue, availableCredits }) => {\n\n  // state for loading the signatures\n  const [loadSignatures, setLoadSignatures] = useState(false)\n\n  // state for editing or not\n  const [editSignatures, setEditSignatures] = useState(false)\n\n\n  // function to chabnge the signatures\n  const signatureChange = (e) => {\n    const { name, value, type, files } = e.target\n    if (type === 'file') {\n      // Update the state with the file object for logo\n      setSignature(prevState => ({\n        ...prevState,\n        [name]: files[0], // Assuming single file upload\n      }))\n    } else {\n      // Update the state with value for text inputs\n      setSignature(prevState => ({\n        ...prevState,\n        [name]: value,\n      }))\n    }\n  }\n\n\n  // function to update the signature details\n  const updateSignatures = async () => {\n    setLoadSignatures(true)\n    const formData = new FormData()\n\n    // Append signature details to formData\n    Object.entries(signature).forEach(([key, value]) => {\n      if (key === 'logo' && value) {\n        // Append the file object for logo\n        formData.append(key, value)\n      } else {\n        // Append other text-based details\n        formData.append(key, value)\n      }\n    })\n\n    try {\n      const response = await axios.put('/api/letter_signatures/', formData, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n          // Content-Type is automatically set for FormData, so it's not specified here\n        },\n      })\n      console.log('Letter signature ->', response)\n      // Success handling with Swal or any other logic\n      loadUserData()\n    } catch (error) {\n      console.error('Error updating letters:', error)\n    } finally {\n      setLoadSignatures(false)\n    }\n  }\n\n\n\n  return (\n\n\n    <>\n      <div className='top-line'>\n        <div className='matching-status'>\n          <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n          <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n          <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n          <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n        </div>\n        {editCredts ?\n          <div className='credits-section'>\n            <input type='number' value={creditValue} onChange={addCreditValue}></input>\n            <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n            <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n          </div>\n          : <div className='credits-section'>\n            <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n            <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n          </div>}\n      </div>\n\n      <div className='my-details-section'>\n        <h1 className='my-details-title'>Add or update the details you want to include in your letters</h1>\n        {signature && !loadSignatures ?\n          <>\n            <div className='my-details-content'>\n              <div className='details-row'>\n                <h3 className='detail-title'>Title</h3>\n                {editSignatures ? <input name=\"title\" type='text' value={signature.title} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.title}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>First name</h3>\n                {editSignatures ? <input name=\"first_name\" type='text' value={signature.first_name} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.first_name}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Last name</h3>\n                {editSignatures ? <input name=\"last_name\" type='text' value={signature.last_name} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.last_name}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Company</h3>\n                {editSignatures ? <input name=\"company_name\" type='text' value={signature.company_name} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.company_name}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Role</h3>\n                {editSignatures ? <input name=\"role\" type='text' value={signature.role} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.role}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Mobile</h3>\n                {editSignatures ? <input name=\"mobile\" type='text' pattern=\"\\d*\" value={signature.mobile} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.mobile}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Landline</h3>\n                {editSignatures ? <input name=\"landline\" type='text' pattern=\"\\d*\" value={signature.landline} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.landline}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Email</h3>\n                {editSignatures ? <input name=\"email\" type='text' value={signature.email} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.email}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Address</h3>\n                {editSignatures ? <input name=\"address\" type='text' value={signature.address} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.address}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Footer</h3>\n                {editSignatures ? <input name=\"letter_footer\" type='text' value={signature.letter_footer} onChange={signatureChange}></input> : <h3 className='signature-fixed'>{signature.letter_footer}</h3>}\n              </div>\n              <div className='details-row'>\n                <h3 className='detail-title'>Logo</h3>\n                {editSignatures ?\n                  <input\n                    type=\"file\"\n                    name=\"logo\"\n                    accept=\"image/png, image/jpeg\"\n                    className='image-input'\n                    onChange={signatureChange}\n                  />\n                  // : signature.logo ? <h3>{signature.logo}</h3> : null\n                  : signature.logo ?\n                    <div className='logo-box'>\n                      <img src={signature.logo} alt=\"Logo\" className='signature-logo' />\n                    </div>\n                    : null\n                }\n              </div>\n            </div>\n            <div className='save'>\n              {!editSignatures ?\n                <button onClick={() => setEditSignatures(true)}>Edit details</button>\n                :\n                <>\n                  <button onClick={() => updateSignatures()}>Save details</button>\n                  <button className='stop-edit' onClick={() => setEditSignatures(false)}>Stop editing</button>\n                </>\n              }\n            </div>\n          </>\n          : loadSignatures ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </div>\n    </>\n  )\n}\n\nexport default SetSignatures","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../../auth/Auth'\nimport Swal from 'sweetalert2'\nimport Loading from '../../../helpers/Loading'\nimport CreateTemplate from './CreateTemplate'\nimport Handlebars, { create } from 'handlebars'\nimport BasicTemplate from './TemplatePDFs.js/BasicTemplate'\nimport ReactDOMServer from 'react-dom/server'\nimport CreateCampaign from './CreateCampaign'\nimport CampaignOverview from './Campaigns/CampaignOverview'\nimport SetSignatures from './SetSignatures'\nimport { loadStripe } from '@stripe/stripe-js'\n\n\n\nconst LettersHub = ({ letterProperties, setLetterProperties, userData, setUserData, signature, setSignature, loadUserData, letterTemplates, setLetterTemplates,\n  letterCampaigns, setLetterCampaigns, campaignLoading, setCampaignLoading, setLeadGenSection, availableCredits, setAvailableCredits }) => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const [letterTab, setLetterTab] = useState('Home')\n\n\n  // state for selecting rows\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectAllStatus, setSelectAllStatus] = useState(false)\n\n  // manageing modal for saved iitems added \n  const [createTemplateShow, setCreateTemplateShow] = useState(false)\n\n  // managing state for campaign selector dropdown\n  const [selectedCampaign, setSelectedCampaign] = useState()\n\n  // state to store credits\n  const [creditValue, setCreditValue] = useState(0)\n\n  // state for holding the logo\n  const [logo, setLogo] = useState(null)\n\n  // state for loading sign during pdf processing\n  const [pdfProcessing, setPdfProcessing] = useState(false)\n\n  // state for the selected row\n  const [selectedData, setSelectedData] = useState(null)\n\n  // state for selected template\n  const [selectedTemplate, setSelectedTemplate] = useState()\n\n  const [selectedTemplateName, setSelectedTemplateName] = useState('')\n\n  // state for whether its a new or ediitedtemplate\n  const [templateAction, setTemplateAction] = useState('')\n  const [currentTemplate, setCurrentTemplate] = useState('')\n\n  const [isEditPending, setIsEditPending] = useState(false)\n\n  // state for editing credts\n  const [editCredts, setEditCredits] = useState(false)\n\n  const [exampleTemplateData, setExampleTemplateData] = useState()\n\n  // state for controlling the filters opening and closing\n  const [campaignFilters, setCampaignFilters] = useState(false)\n\n  const [campaignFilteredProperties, setCampaignFilteredProperties] = useState([])\n\n  const [channel, setChannel] = useState('')\n  const [postcode, setPostcode] = useState('')\n  const [bedroomsMin, setBedroomsMin] = useState('')\n  const [bedroomsMax, setBedroomsMax] = useState('')\n  const [priceMin, setPriceMin] = useState('')\n  const [priceMax, setPriceMax] = useState('')\n  const [minPriceOptions, setMinPriceOptions] = useState([])\n  const [maxPriceOptions, setMaxPriceOptions] = useState([])\n\n  useEffect(() => {\n    if (letterProperties) {\n      let data = letterProperties\n      // filter by channel\n      if (channel) {\n        data = data.filter(item => item.channel === channel)\n      }\n      // filter by postcode\n      if (postcode) {\n        data = data.filter(item => item.postcode.toUpperCase().startsWith(postcode.toUpperCase()))\n      }\n      // Filter by bedrooms\n      if (bedroomsMin) {\n        data = data.filter(item => parseInt(item.bedrooms) >= parseInt(bedroomsMin))\n      }\n      if (bedroomsMax) {\n        data = data.filter(item => parseInt(item.bedrooms) <= parseInt(bedroomsMax))\n      }\n      // Filter by prce\n      if (priceMin) {\n        data = data.filter(item => parseInt(item.price_numeric) >= parseInt(priceMin))\n      }\n      if (priceMax) {\n        data = data.filter(item => parseInt(item.price_numeric) <= parseInt(priceMax))\n      }\n\n      setCampaignFilteredProperties(data)\n    }\n  }, [letterProperties, channel, postcode, bedroomsMin, bedroomsMax, priceMin, priceMax])\n\n  useEffect(() => {\n    // Conditionally set price options based on the channel\n    if (channel === 'rent') {\n      setMinPriceOptions(rentalPriceOptions)\n      setMaxPriceOptions(rentalPriceOptions)\n    } else if (channel === 'sale') {\n      setMinPriceOptions(salesPriceOptions)\n      setMaxPriceOptions(salesPriceOptions)\n    } else {\n      setMinPriceOptions([])\n      setMaxPriceOptions([])\n    }\n  }, [channel])\n\n  const bedroomOptions = [\n    { value: '1', label: '1' },\n    { value: '2', label: '2' },\n    { value: '3', label: '3' },\n    { value: '4', label: '4' },\n    { value: '5', label: '5' },\n    { value: '6', label: '6' },\n    { value: '7', label: '7' }\n  ]\n\n  const rentalPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100 + i * 100}`, label: `£${100 + i * 100}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000 + i * 200}`, label: `£${1000 + i * 200}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000 + i * 250}`, label: `£${2000 + i * 250}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000 + i * 500}`, label: `£${4000 + i * 500}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000 + i * 1000}`, label: `£${8000 + i * 1000}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${12000 + i * 2000}`, label: `£${12000 + i * 2000}` }))\n  ]\n\n  const salesPriceOptions = [\n    ...Array.from({ length: 9 }, (_, i) => ({ value: `${100000 + i * 100000}`, label: `£${(100000 + i * 100000).toLocaleString()}` })),\n    ...Array.from({ length: 5 }, (_, i) => ({ value: `${1000000 + i * 200000}`, label: `£${(1000000 + i * 200000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${2000000 + i * 250000}`, label: `£${(2000000 + i * 250000).toLocaleString()}` })),\n    ...Array.from({ length: 8 }, (_, i) => ({ value: `${4000000 + i * 500000}`, label: `£${(4000000 + i * 500000).toLocaleString()}` })),\n    ...Array.from({ length: 4 }, (_, i) => ({ value: `${8000000 + i * 1000000}`, label: `£${(8000000 + i * 1000000).toLocaleString()}` })),\n    ...Array.from({ length: 6 }, (_, i) => ({ value: `${12000000 + i * 2000000}`, label: `£${(12000000 + i * 2000000).toLocaleString()}` }))\n  ]\n\n\n  // function for clearing filters\n  const clearFilters = () => {\n    setChannel('')\n    setPostcode('')\n    setBedroomsMin('')\n    setBedroomsMax('')\n    setPriceMin('')\n    setPriceMax('')\n  }\n\n\n\n  useEffect(() => {\n    if (userData && userData.epc_favourites) {\n      setExampleTemplateData(userData.epc_favourites[0])\n      console.log('example data for template ->', userData.epc_favourites[0])\n    }\n  }, [userData])\n\n\n  // ? Section 1: Select row functionality\n  const handleRowSelectionChange = (e, item) => {\n    const selectedProperty = { ...item }\n    console.log('selected row ->', item)\n\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n\n    // Determine the count of rows not in a campaign\n    const rowsNotInCampaignCount = campaignFilteredProperties.filter(item => item.letter_campaign === 'None' || item.letter_campaign === null).length\n\n    // Update the 'Select All' checkbox status based on whether all eligible rows are selected\n    setSelectAllStatus(selectedRows.length === rowsNotInCampaignCount)\n  }\n\n\n  // function for selecting rows\n  const selectAllRows = () => {\n    // Filter letterProperties to include only items not in a campaign\n    const rowsNotInCampaign = campaignFilteredProperties.filter(item => item.letter_campaign === 'None' || item.letter_campaign === null)\n\n    // Set these filtered items as the selected rows\n    setSelectedRows(rowsNotInCampaign)\n\n    // Update select all status to true since all eligible rows are now selected\n    setSelectAllStatus(true)\n  }\n\n\n  // function for deseleting rows\n  const deselectAllRows = () => {\n    setSelectedRows([])\n    setSelectAllStatus(false)\n  }\n\n  // function for selecting all rows\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n\n\n  // close modal\n  const handleCreateTemplateClose = () => {\n    setCreateTemplateShow(false)\n    setCurrentTemplate({})\n    setTemplateAction('new')\n  }\n\n  // show the modal\n  const handleCreateTemplateShow = (e) => {\n    setTemplateAction('new')\n    setCurrentTemplate({})\n    setCreateTemplateShow(true)\n  }\n\n  // show the modal\n  const handleEditTemplateShow = (item) => {\n    setTemplateAction('edit')\n    setCurrentTemplate(item)\n    // setCreateTemplateShow(true)\n    setIsEditPending(true)\n  }\n\n\n  useEffect(() => {\n    if (isEditPending && currentTemplate) {\n      setCreateTemplateShow(true)\n      setIsEditPending(false)\n    }\n  }, [currentTemplate, isEditPending])\n\n\n\n  // delete template\n  const deleteTemplate = async (item) => {\n    setCampaignLoading(true)\n    try {\n      const response = await axios.delete(`/api/letter_templates/delete/${item.id}/`, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'Template deleted',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      await loadUserData()\n    } catch (error) {\n      console.error('Error deleting template:', error)\n    } finally {\n      // Use finally block to ensure setCampaignLoading(false) is called regardless of success or failure\n      setCampaignLoading(false)\n    }\n  }\n\n\n  // select campaign to add properties to\n  const handleCampaignSelection = (e) => {\n    const campaignId = e.target.value\n    setSelectedCampaign(campaignId)\n\n    // Assuming `selectedRows` or similar state holds the properties you want to add to the campaign\n    const selectedProperties = selectedRows // Or however you have access to the selected properties\n    const selectedCampaignDetails = letterCampaigns.find(campaign => campaign.id.toString() === campaignId) // Find the selected campaign details\n\n    if (selectedProperties && selectedProperties.length > 0 && selectedCampaignDetails) {\n      // Call addPropertiesToCampaign with the selected properties and campaign name\n      addPropertiesToCampaign(selectedProperties, selectedCampaignDetails.campaign_name)\n    } else {\n      console.log('No properties selected or campaign not found')\n    }\n  }\n\n\n  const addPropertiesToCampaign = async (properties, campaignName) => {\n\n    const propertyIds = properties.map(property => property.rightmove_id)\n\n    try {\n      const response = await axios.put('/api/epc_favourite/add_to_campaign/', {\n        property_ids: propertyIds,\n        campaign_name: campaignName,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('Properties added to campaign successfully:', response.data)\n      loadUserData()\n      setSelectedRows([])\n      Swal.fire({\n        title: '😎 action complete',\n        text: `${properties.length} properties added to campaign`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n    } catch (error) {\n      console.error('Error adding properties to campaign:', error.response.data)\n    }\n  }\n\n\n\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr)\n    if (!isNaN(date.getTime())) {\n      // Date is valid\n      const day = date.getDate().toString().padStart(2, '0')\n      const month = (date.getMonth() + 1).toString().padStart(2, '0') // getMonth() is zero-based\n      const year = date.getFullYear()\n      return `${day}/${month}/${year}`\n    } else {\n      // Date is invalid or input is not a valid date string\n      console.warn('Invalid date:', dateStr)\n      return dateStr // Return original string or handle as needed\n    }\n  }\n\n  // add credit to account\n\n  const initiateCheckoutSession = async (creditsAmount) => {\n    const numericAmount = Number(creditsAmount)\n\n    try {\n      const response = await axios.post('/api/usage/add_credit/', {\n        credits_amount: numericAmount,\n      }, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      window.localStorage.setItem('wittle-latest-credits', JSON.stringify('Yes'))\n      window.localStorage.setItem('wittle-credit-value', JSON.stringify(`${creditValue}`))\n      // Redirect the user to Stripe Checkout using the session URL\n      const { sessionId } = response.data\n      const stripe = await loadStripe(process.env.REACT_APP_STRIPE_API_KEY) // Accessing Stripe key\n      await stripe.redirectToCheckout({ sessionId })\n      // setCheckoutComplete(true)\n\n\n    } catch (error) {\n      console.error('Error initiating checkout session:', error)\n      // Handle error (e.g., displaying an error message)\n    }\n  }\n\n\n\n  // function for adding a value\n  const addCreditValue = (e) => {\n    setCreditValue(e.target.value)\n    console.log('credit input ->', e.target.value)\n  }\n\n  return (\n\n    <>\n      <section className='letter-section'>\n        <div className='results-block'>\n          {campaignLoading ?\n\n            <div className='property-table-loading'>\n              <Loading />\n              {/* <h3>We&apos;re making sure everything is fully loaded for you</h3> */}\n            </div>\n            :\n\n            letterTab === 'Home' && !campaignLoading ?\n              <>\n                <div className='top-line'>\n                  <div className='matching-status'>\n\n                    <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n                    <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n                    <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n                    <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n                  </div>\n                  {editCredts ?\n                    <div className='credits-section'>\n                      <input type='number' value={creditValue} onChange={addCreditValue}></input>\n                      <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n                      <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n                    </div>\n                    : <div className='credits-section'>\n                      <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n                      <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n                    </div>}\n                </div>\n                <div className='action-section letter'>\n                  {campaignFilteredProperties ? <h3 className='template-total'>You have {campaignFilteredProperties.length} properties prepared for letter campaigns</h3> : ''}\n                  <div className='letter-selections'>\n                    <select value={selectedCampaign} onChange={handleCampaignSelection} className='template-select'>\n                      <option value=\"\">Select a campaign</option>\n                      {letterCampaigns\n                        ? letterCampaigns\n                          .filter(campaign => campaign.campaign_status !== 'Live')\n                          .map((campaign, index) => (\n                            <option key={index} value={campaign.id}>\n                              {campaign.campaign_name}\n                            </option>\n                          ))\n                        : ''}\n                    </select>\n                    <div\n                      className={`filter-icon ${campaignFilters ? 'active' : 'inactive'}`}\n                      onClick={() => setCampaignFilters(!campaignFilters)}\n                      style={{ backgroundColor: campaignFilters ? '#1A276C' : 'inherit' }}>\n                    </div>\n                  </div>\n\n                </div>\n                {campaignFilters ?\n                  <div className={`filter-row-section ${campaignFilters ? 'active' : 'inactive'}`}>\n                    <div className='filter-block'>\n                      <h3 className='filter-title'>Channel</h3>\n                      <select onChange={(e) => setChannel(e.target.value)}>\n                        <option value={''}>Select...</option>\n                        <option value={'sale'}>Sale</option>\n                        <option value={'rent'}>Rent</option>\n                      </select>\n                    </div>\n                    <div className='filter-block'>\n                      <h3 className='filter-title'>Postcode</h3>\n                      <input className='filter-input' onChange={(e) => setPostcode(e.target.value)}></input>\n                    </div>\n                    <div className='filter-block'>\n                      <h3 className='filter-title'>Bedrooms</h3>\n                      <select className='small' value={bedroomsMin} onChange={e => setBedroomsMin(e.target.value)}>\n                        <option value={''}>Min</option>\n                        {bedroomOptions.map(option => (\n                          <option key={option.value} value={option.value}>{option.label}</option>\n                        ))}\n                      </select>\n                      <select className='small' value={bedroomsMax} onChange={e => setBedroomsMax(e.target.value)}>\n                        <option value={''}>Max</option>\n                        {bedroomOptions.filter(option => option.value >= bedroomsMin).map(option => (\n                          <option key={option.value} value={option.value}>{option.label}</option>\n                        ))}\n                      </select>\n                    </div>\n                    {channel !== '' &&\n                      <div className='filter-block'>\n                        <h3 className='filter-title'>Price</h3>\n                        <select className='small' value={priceMin} onChange={e => setPriceMin(e.target.value)}>\n                          <option value={''}>Min</option>\n                          {minPriceOptions.map((option) => (\n                            <option key={option.value} value={option.value}>{option.label}</option>\n                          ))}\n                        </select>\n                        <select className='small' value={priceMax} onChange={e => setPriceMax(e.target.value)}>\n                          <option value={''}>Max</option>\n                          {maxPriceOptions.map((option) => (\n                            <option key={option.value} value={option.value}>{option.label}</option>\n                          ))}\n                        </select>\n                      </div>\n                    }\n                    <button className='clear-filters' onClick={clearFilters}>Clear</button>\n                  </div>\n                  : ''}\n\n\n                <div className='results-table'>\n                  <div className='results-headers letter'>\n                    <div id='column11' className='column'>\n                      <div className='custom-checkbox'>\n                        <input\n                          className='checkbox'\n                          type=\"checkbox\"\n                          checked={\n                            campaignFilteredProperties &&\n                            selectedRows.length === campaignFilteredProperties.filter(item => item.letter_campaign === 'None' || item.letter_campaign === null).length\n                            && selectedRows.length > 0\n                          }\n                          onChange={handleSelectAllChange}\n                        />\n                        <label className='label'></label>\n                      </div>\n                    </div>\n                    <h5 id='column1' className='column'>#</h5>\n                    <div id='column2' className='column'>\n                      <h5>Address</h5>\n                    </div>\n                    <div id='column3' className='column'>\n                      <h5>Date added</h5>\n                    </div>\n                    <div id='column4' className='column'>\n                      <h5>Date removed</h5>\n                    </div>\n                    <div id='column5' className='column'>\n                      <h5>Market status</h5>\n                    </div>\n                    <div id='column6' className='column'>\n                      <h5>Channel</h5>\n                    </div>\n                    <div id='column7' className='column'>\n                      <h5>Price</h5>\n                    </div>\n                    {/* <div id='column6' className='column'>\n                      <h5>Action</h5>\n                    </div> */}\n                  </div>\n                  <hr className='property-divider' />\n                  <div className='results-details letter'>\n                    {campaignFilteredProperties ? campaignFilteredProperties.map((item, index) => {\n                      const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.rightmove_id)\n                      return (\n                        <>\n                          <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                            {item.letter_campaign === 'None' ?\n                              <div className='column' id='column11'>\n                                <div className='custom-checkbox'>\n                                  <input\n                                    className='checkbox'\n                                    type='checkbox'\n                                    checked={selectedRows.some(row => row.rightmove_id === item.rightmove_id)}\n                                    onChange={(e) => handleRowSelectionChange(e, item)}\n                                  />\n                                  <label className='label'>\n                                  </label>\n                                </div>\n                              </div>\n                              :\n                              <div className='column' id='column11'>\n                                <h6>In campaign</h6>\n                              </div>}\n                            <div className='column' id='column1'>\n                              <h5>{index + 1}</h5>\n                            </div>\n                            <div className='column' id='column2'>\n                              <h5>{item.address}</h5>\n                            </div>\n                            <div className='column' id='column3'>\n                              <h5>{item.added_revised}</h5>\n                            </div>\n                            <div className='column' id='column4'>\n                              <h5>{item.market_status === 'Live' ? '' : item.market_status === 'Off Market' && item.week_removed ? formatDate(item.week_removed) : ''}</h5>\n                            </div>\n                            <div className='column' id='column5'>\n                              <h5>{item.market_status === 'Live' ? item.market_status : `🚩 ${item.market_status}`}</h5>\n                            </div>\n                            <div className='column' id='column6'>\n                              <h5>{item.channel}</h5>\n                            </div>\n                            <div className='column' id='column7'>\n                              <h5>{item.price}</h5>\n                            </div>\n                            {/* <div className='column' id='column6'>\n                              <button key={index} onClick={() => generatePDF(item)}>See example</button>\n                            </div> */}\n\n                          </div>\n                          <hr className='property-divider' />\n                        </>\n                      )\n                    })\n                      : ' '}\n                  </div>\n                </div>\n              </>\n\n              : letterTab === 'Campaigns' && !campaignLoading ?\n\n                <CampaignOverview\n                  letterTab={letterTab}\n                  setLetterTab={setLetterTab}\n                  letterCampaigns={letterCampaigns}\n                  loadUserData={loadUserData}\n                  letterTemplates={letterTemplates}\n                  letterProperties={letterProperties}\n                  signature={signature}\n                  campaignLoading={campaignLoading}\n                  setCampaignLoading={setCampaignLoading}\n                  creditValue={creditValue}\n                  editCredts={editCredts}\n                  setEditCredits={setEditCredits}\n                  availableCredits={availableCredits}\n                  initiateCheckoutSession={initiateCheckoutSession}\n                  addCreditValue={addCreditValue}\n\n\n                />\n\n                : letterTab === 'Templates' && !campaignLoading ?\n\n                  <>\n                    <div className='top-line'>\n                      <div className='matching-status'>\n                        <h3 className='matching-pill' onClick={() => setLetterTab('My signatures')} style={{ color: letterTab === 'My signatures' ? 'white' : '#1A276C', backgroundColor: letterTab === 'My signatures' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>My signatures</h3>\n                        <h3 className='matching-pill' onClick={() => setLetterTab('Templates')} style={{ color: letterTab === 'Templates' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Templates' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Templates</h3>\n                        <h3 className='matching-pill' onClick={() => setLetterTab('Campaigns')} style={{ color: letterTab === 'Campaigns' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Campaigns' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Campaigns</h3>\n                        <h3 className='matching-pill' onClick={() => setLetterTab('Home')} style={{ color: letterTab === 'Home' ? 'white' : '#1A276C', backgroundColor: letterTab === 'Home' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Home</h3>\n                      </div>\n                      {editCredts ?\n                        <div className='credits-section'>\n                          <h3 className='credit-balance'>Top up value:</h3>\n                          <input type='number' value={creditValue} onChange={addCreditValue}></input>\n                          <button className='add-credts' onClick={() => initiateCheckoutSession(creditValue)}>Add</button>\n                          <h3 className='close-credits' onClick={() => setEditCredits(false)}>❌</h3>\n                        </div>\n                        : <div className='credits-section'>\n                          <h3 className='credit-balance'>{availableCredits ? `Current balance £${availableCredits}` : ''}</h3>\n                          <button className='add-credts' onClick={() => setEditCredits(true)}>Top up</button>\n                        </div>}\n                    </div>\n                    <div className='action-section letter'>\n                      {letterTemplates ? <h3 className='template-total'>You have {letterTemplates.length} saved templates</h3> : ''}\n                      <div className='save-section'>\n                        <div className=\"print-icon\"></div>\n                        <h3 onClick={() => handleCreateTemplateShow()}>New template </h3>\n                      </div>\n                    </div>\n\n                    <CreateTemplate\n                      handleCreateTemplateClose={handleCreateTemplateClose}\n                      createTemplateShow={createTemplateShow}\n                      signature={signature}\n                      loadUserData={loadUserData}\n                      templateAction={templateAction}\n                      currentTemplate={currentTemplate}\n                      exampleData={exampleTemplateData}\n                      setCampaignLoading={setCampaignLoading}\n                    />\n                    <div className='template-list'>\n                      <div className='template-table'>\n                        <div className='template-headers'>\n                          <h3 id='column1'>#</h3>\n                          <h3 id='column2'>Name</h3>\n                          <h3 id='column3'>Type</h3>\n                          <h3 id='column4'>Edit</h3>\n                          <h3 id='column5'>View</h3>\n                          <h3 id='column6'>Delete</h3>\n                        </div>\n                        <div className='template-content'>\n                          {letterTemplates ?\n                            [...letterTemplates]\n                              .sort((a, b) => a.template_number - b.template_number)\n                              .map((item, index) => (\n                                <div key={index} className='template-item'>\n                                  <h3 className='template-number' id='column1'>{index + 1}</h3>\n                                  <h3 className='template-name' id='column2'>{item.template_name}</h3>\n                                  <h3 className='template-type' id='column3'>{item.template_type}</h3>\n                                  <div id='column4'>\n                                    <h3 className='action' onClick={() => handleEditTemplateShow(item)}>✍🏼</h3>\n                                  </div>\n                                  <div id='column5'>\n                                    <h3 className='action' onClick={() => window.open(item.example_pdf, '_blank')}>👀</h3>\n                                  </div>\n                                  <div id='column6'>\n                                    <h3 className='action' onClick={() => deleteTemplate(item)}>🗑</h3>\n                                  </div>\n                                </div>\n                              ))\n                            : ''}\n                        </div>\n\n                      </div>\n                    </div>\n\n                  </>\n\n                  : letterTab === 'My signatures' && !campaignLoading ?\n\n                    <>\n                      <SetSignatures\n                        letterTab={letterTab}\n                        setLetterTab={setLetterTab}\n                        signature={signature}\n                        setSignature={setSignature}\n                        loadUserData={loadUserData}\n                        creditValue={creditValue}\n                        editCredts={editCredts}\n                        setEditCredits={setEditCredits}\n                        availableCredits={availableCredits}\n                        initiateCheckoutSession={initiateCheckoutSession}\n                        addCreditValue={addCreditValue}\n                      />\n                    </>\n                    : ''\n          }\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default LettersHub","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\nimport RemoveProperty from '../b2bModals/RemoveProperties'\nimport RemoveProperties from '../b2bModals/RemoveProperties'\nimport LeadGenSaved from './LeadGenSections/LeadGenSaved'\nimport HiddenProperties from './LeadGenSections/HiddenProperties'\nimport ArchivedProperties from './LeadGenSections/ArchivedProperties'\nimport { ToastContainer, toast } from 'react-toastify'\nimport Swal from 'sweetalert2'\nimport { eventBus } from '../../../utils/EventBus'\nimport LettersHub from './LetterSection/LettersHubs'\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for the number of extracts left left\n  const [leadGenRemaining, setLeadGenRemaining] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n  const [userPackage, setUserPackage] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n  const [campaignLoading, setCampaignLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [subcodeSubstring, setSubcodeString] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [savedRemanining, setSaveddRemaining] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n  const [hiddenProperties, setHiddenProperties] = useState()\n  const [letterProperties, setLetterProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Inputs')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [availableCredits, setAvailableCredits] = useState(null)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    subcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n  // managing state for the signature\n  const [signature, setSignature] = useState({\n    first_name: '',\n    last_name: '',\n    company_name: '',\n    title: '',\n    role: '',\n    mobile: null,\n    landline: null,\n    address: '',\n    email: '',\n    letter_footer: '',\n    logo: '',\n  })\n\n  // manage state for list of letters\n  const [letterTemplates, setLetterTemplates] = useState()\n\n  // manage state for list of letter campaigns\n  const [letterCampaigns, setLetterCampaigns] = useState()\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n  const [removedIds, setRemovedIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n  const [filteredMatchingProperties, setFilteredMatchingProperties] = useState([])\n  const [filteredSalesMatchingProperties, setFilteredSalesMatchingProperties] = useState([])\n  const [filteredNoProperties, setFiltedNoProperties] = useState([])\n  const [filteredSalesNoProperties, setFiltedSalesNoProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n  const [matchType, setMatchType] = useState('Matching')\n  const [salesMatchType, setSalesMatchType] = useState('Matching')\n  const [expandedMultipleMatches, setExpandedMultpleMatches] = useState(new Set())\n  const [expandedSalesMultipleMatches, setExpandedSalesMultpleMatches] = useState(new Set())\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          setRentalLoading(true)\n          setSalesLoading(true)\n          setCampaignLoading(true)\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setUserPackage(data.usage_stats[0].package)\n          setAvailableCredits(data.usage_stats[0].credits)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            // const updatedFavorites = await updateFavoritesMarketStatus(data)\n\n            const filteredFavourites = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const letters = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved' && fav.letter_sequence === 1)\n            const archivedFavourites = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const removedProperties = data.company_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Removed')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites, ...removedProperties].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            setRemovedIds(removedProperties)\n            console.log('removed properties ->', removedProperties)\n            const dataCsv = transformCSVData(data.company_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              setSalesLoading(false)\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              setRentalLoading(false)\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            setLetterProperties(letters)\n            setSignature(data.letter_signatures[0])\n            setLetterTemplates(data.letter_templates)\n            setLetterCampaigns(data.letter_campaigns)\n            console.log('letter properties ->', letters)\n            console.log('saved properties ->', filteredFavourites)\n            setArchivedProperties(archivedFavourites)\n            setHiddenProperties(removedProperties)\n            // setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n            eventBus.emit('userDataUpdated')\n            setCampaignLoading(false)\n          } else {\n            const allFavouriteIds = []\n            // loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            // loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n          }\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    const credits = JSON.parse(localStorage.getItem('wittle-latest-credits'))\n    console.log('credit path ->', credits)\n    const value = JSON.parse(localStorage.getItem('wittle-credit-value'))\n    console.log('credit value ->', value)\n    const params = new URLSearchParams(window.location.search)\n    if (credits === 'Yes' && params.get('success')) {\n      Swal.fire({\n        title: '😎 action complete',\n        text: `£${value} added to your letter credits`,\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      navigate('/agents/lead-gen')\n      setLeadGenSection('Letter campaigns')\n      loadUserData()\n      localStorage.removeItem('wittle-latest-credits')\n      localStorage.removeItem('wittle-credit-value')\n    } else if (credits === 'Yes' && params.get('cancelled')) {\n      navigate('/agents/lead-gen')\n      setLeadGenSection('Letter campaigns')\n      loadUserData()\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'There was an error processing your payment',\n        confirmButtonText: 'Thanks 🤝',\n        confirmButtonColor: '#ED6B86',\n        cancelButtonText: 'Stay here',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n          cancelButton: 'popup-swal-cancel',\n        },\n      })\n      localStorage.removeItem('wittle-latest-credits')\n      localStorage.removeItem('wittle-credit-value')\n    } else {\n      loadUserData()\n    }\n  }, [])\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        Swal.fire({\n          title: '😎 action complete',\n          text: `${newFavourites.length} properties added to your saved properties`,\n          confirmButtonText: 'Go to saved',\n          confirmButtonColor: '#ED6B86',\n          cancelButtonText: 'Stay here',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            setLeadGenSection('Tracking')\n          }\n        })\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  // function to setting the favurites to the archives: \n  const removeProperty = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      // console.log(selectedRows)\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No properties to remove')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/remove_property/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        setMatchType('Matching')\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n        handleRemovePropertyClose()\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log('selected property->', selectedProperty)\n    if (e.target.checked) {\n      console.log('checked')\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.company_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n        owner_name: item.owner_name,\n        owner_email: item.owner_email,\n        owner_mobile: item.owner_mobile,\n        emails_sent: item.emails_sent,\n        letters_sent: item.letters_sent,\n        valuation_booked: item.valuation_booked,\n        notes: item.notes,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, deletedProperties, dateFilter) => {\n    // setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id))\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, deletedProperties, dateFilter) => {\n    // setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id))\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n  // const updateFavoritesMarketStatus = async (data) => {\n  //   const propertyIds = data.company_favourites.filter(fav => fav.rightmove_id !== null).map(fav => fav.rightmove_id)\n\n  //   try {\n  //     const response = await axios.post('/api/epc_favourite/update_favourites/status_check/', {\n  //       propertyIds,\n  //     }, {\n  //       headers: {\n  //         Authorization: `Bearer ${getAccessToken()}`,\n  //       },\n  //     })\n  //     return response.data // Assuming the backend returns the full updated list\n\n  //   } catch (error) {\n  //     console.error('Failed to update market status:', error)\n  //   }\n  // }\n\n  // Then call this function within loadUserData or wherever appropriate\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore')\n    }\n    loadUserData()\n  }\n\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    // Convert input to uppercase and remove spaces\n    let inputVal = e.target.value.toUpperCase().replace(/\\s+/g, '')\n    // Split the input value by comma to get individual postcode sections\n    const postcodeSections = inputVal.split(',')\n\n    // Check if the number of postcode sections is more than 6\n    if (postcodeSections.length > 6) {\n      // Optionally, inform the user they can't add more than 6 postcode sections\n      Swal.fire({\n        title: '🫡 Wittle alerts',\n        text: 'To optimise your experience, you can only add up to 6 postcode areas.',\n        // icon: 'error',\n        confirmButtonText: '🤝 thanks',\n        confirmButtonColor: '#ED6B86',\n        backdrop: true,\n        background: '#FDF7F0',\n        customClass: {\n          title: 'popup-swal-title',\n          popup: 'popup-swal-body',\n          confirmButton: 'popup-swal-confirm',\n        },\n      })\n      // Prevent adding more by keeping only the first 6 sections\n      inputVal = postcodeSections.slice(0, 6).join(',')\n    }\n\n    // Set the formatted input value\n    setPostcodeSubstring(inputVal)\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: inputVal }))\n  }\n\n  // input the sub postcode on the form\n  const inputSubcode = (e) => {\n    setSubcodeString(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, subcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    let days\n    let filterType = 'within' // Default filter type\n\n    switch (dateFilter) {\n      case '1day': days = 1; break\n      case '2days': days = 2; break\n      case '3days': days = 3; break\n      case '7days': days = 7; break\n      case '4weeks': days = 28; break\n      case '8weeks': days = 56; break\n      case '12weeks': days = 84; break\n      case '16weeks': days = 112; break\n      case '>8weeks': days = 56; filterType = 'beyond'; break\n      case '>12weeks': days = 84; filterType = 'beyond'; break\n      case '>16weeks': days = 112; filterType = 'beyond'; break\n      default: return properties\n    }\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      const mostRecentDate = addedDate || reducedDate // Use the non-null date\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      return filterType === 'within' ? isWithinLastDays(mostRecentDate, days) : isBeyondDays(mostRecentDate, days)\n    })\n  }\n\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(multipleMatches, dateFilter)\n    setFilteredMatchingProperties(filtered)\n  }, [multipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesMultipleMatches, dateFilter)\n    setFilteredSalesMatchingProperties(filtered)\n  }, [salesMultipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(noMatches, dateFilter)\n    setFiltedNoProperties(filtered)\n  }, [noMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesNoMatches, dateFilter)\n    setFiltedSalesNoProperties(filtered)\n  }, [salesNoMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    return date >= new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n  const isBeyondDays = (date, days) => {\n    const now = new Date()\n    return date < new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n  // managing modal for properties to be removed from list\n  const [propertyRemoveShow, setPropertyRemoveShow] = useState(false)\n\n  // close modal\n  const handleRemovePropertyClose = () => {\n    setPropertyRemoveShow(false)\n  }\n\n  // show the modal\n  const handlePropertyRemoveShow = (e) => {\n    setPropertyRemoveShow(true)\n  }\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  const toggleRowExpansion = (index) => {\n    setExpandedMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const toggleSalesRowExpansion = (index) => {\n    setExpandedSalesMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const addManualFavourite = async (matchingProperties, epcData, index) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.property_data.rightmove_id,\n        'postcode': matchingProperties.property_data.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.property_data.agent,\n        'type': matchingProperties.property_data.type,\n        'addedOn': matchingProperties.property_data.addedOn,\n        'propertyType': matchingProperties.property_data.propertyType,\n        'price': matchingProperties.property_data.price,\n        'price_numeric': matchingProperties.property_data.price_numeric,\n        'bathrooms': matchingProperties.property_data.bathrooms,\n        'bedrooms': matchingProperties.property_data.bedrooms,\n        'let_available_date': matchingProperties.property_data.let_available_date,\n        'date_added_db': matchingProperties.property_data.date_added_db,\n        'url': matchingProperties.property_data.url,\n        'current_epc': matchingProperties.property_data.current_epc,\n        'potential_epc': matchingProperties.property_data.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.property_data.added_revised,\n        'reduced_revised': matchingProperties.property_data.reduced_revised,\n        'market_status': matchingProperties.property_data.market_status,\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        toggleRowExpansion(index)\n        toggleSalesRowExpansion(index)\n        Swal.fire({\n          title: '😎 action complete',\n          text: 'New property added to your saved properties',\n          confirmButtonText: 'Thanks 🤝',\n          confirmButtonColor: '#ED6B86',\n          cancelButtonText: 'Stay here',\n          backdrop: true,\n          background: '#FDF7F0',\n          customClass: {\n            title: 'popup-swal-title',\n            popup: 'popup-swal-body',\n            confirmButton: 'popup-swal-confirm',\n            cancelButton: 'popup-swal-cancel',\n          },\n        })\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        {userData && userData.usage_stats[0].package === 'Trial expired' ?\n\n          <section className='main-body remove-margin'>\n            <section className='main-body-details'  >\n              <section className='listing-generator'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'></div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n                </div>\n                <div className='no-access-body'>\n                  <div className='no-access-image'></div>\n                  <h1 className='no-access-title'>Oops! Dead end</h1>\n                  <h3 className='no-access-message'>You no longer have access to this content. Get in touch to upgrade your account and access the Wittle magic.</h3>\n                  {/* <div className='no-access-email'>\n                    <a href=\"mailto:james@wittle.co\" style={{ textDecoration: 'none' }}>\n                      <button className='email-button'>Get in touch</button>\n                    </a>\n                  </div> */}\n                </div>\n              </section>\n            </section>\n          </section>\n          :\n          <section className='main-body'>\n            <section className='main-body-details'>\n\n              <>\n                {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n                <section className='property-finder'>\n                  <div className='listing-options'>\n                    <div className='listing-buttons'>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Inputs')} style={{ borderBottom: leadGenSection === 'Inputs' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Inputs' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Inputs' ? '700' : '400' }}>Inputs</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Explore')} style={{ borderBottom: leadGenSection === 'Explore' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore' ? '700' : '400' }}>Explore</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Tracking')} style={{ borderBottom: leadGenSection === 'Tracking' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Tracking' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Tracking' ? '700' : '400' }}>Tracking</h5>\n                      {userData.id === 1 ? <h5 className='no-print' onClick={() => setLeadGenSection('Letter campaigns')} style={{ borderBottom: leadGenSection === 'Letter campaigns' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Letter campaigns' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Letter campaigns' ? '700' : '400' }}>Letter campaigns</h5> : ''}\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Archived')} style={{ borderBottom: leadGenSection === 'Archived' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived' ? '700' : '400' }}>Archived</h5>\n                      <h5 className='no-print' id='manual-matcher' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSection('Hidden properties')} style={{ borderBottom: leadGenSection === 'Hidden properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Hidden properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Hidden properties' ? '700' : '400' }}>Hidden properties</h5>\n                    </div>\n                    <div className='logout-button' onClick={removeItemFromStorage}>\n                      <div className='logout-icon'></div>\n                    </div>\n\n\n                  </div>\n                  <hr className='title-line' />\n\n                  <div className='lead-generator'>\n\n                    <div className='property-results'>\n                      {leadGenSection === 'Inputs' ?\n                        <>\n                          <div className='lead-gen-inputs'>\n                            <h3 className='sub-title'>Set your search criteria</h3>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Postcode(s)</h3>\n                                <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;. For efficiency, this is limited to 6 postcode areas.</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.postcode}\n                                  onChange={inputPostcode}\n                                  placeholder=\"Enter postcode...\"\n                                />\n\n\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Sub postcode(s)</h3>\n                                <p>Add sub postcodes, e.g. &ldquo;SW4 0,SW5 0&rdquo;. You can also chain these.</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.subcode}\n                                  onChange={inputSubcode}\n                                  placeholder=\"Enter subcode...\"\n                                />\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Channel</h3>\n                                <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                  <option>Lettings</option>\n                                  <option>Sales</option>\n                                  <option>Both</option>\n\n                                </select>\n                              </div>\n                            </div>\n                            <div>\n\n                              <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                                <h3 className='sub-title'>Add some more detail</h3>\n\n                                {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                              </div>\n                              {expand ?\n                                <>\n\n                                  {\n                                    leadGenDetails.channel === 'Lettings' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Bedrooms</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.bedrooms_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({\n                                                ...prevData,\n                                                bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                              }))}\n                                            >\n                                              <option value=''>No min</option>\n                                              <option value=\"1\">1</option>\n                                              <option value=\"2\">2</option>\n                                              <option value=\"3\">3</option>\n                                              <option value=\"4\">4</option>\n                                              <option value=\"5\">5</option>\n                                              <option value=\"6\">6</option>\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.bedrooms_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({\n                                                ...prevData,\n                                                bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                              }))}\n                                            >\n                                              <option value=''>No max</option>\n                                              <option value=\"1\">1</option>\n                                              <option value=\"2\">2</option>\n                                              <option value=\"3\">3</option>\n                                              <option value=\"4\">4</option>\n                                              <option value=\"5\">5</option>\n                                              <option value=\"6\">6</option>\n                                              <option value=\"7\">7</option>\n                                            </select>\n                                          </div>\n\n                                        </div>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.rental_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {rentalPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.rental_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                            >\n                                              <option value={10000000}>No max</option>\n                                              {rentalPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                        <div className='single-input-block'>\n                                          <div className='input-block large'>\n                                            <h3>Furnishing status</h3>\n                                            <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                              <option>Either furnished or unfurnished</option>\n                                              <option>Furnished</option>\n                                              <option>Unfurnished</option>\n                                            </select>\n                                          </div>\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Sales' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Bedrooms</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.bedrooms_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({\n                                                  ...prevData,\n                                                  bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                                }))}\n                                              >\n                                                <option value=''>No min</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.bedrooms_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({\n                                                  ...prevData,\n                                                  bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                                }))}\n                                              >\n                                                <option value=''>No max</option>\n                                                <option value=\"1\">1</option>\n                                                <option value=\"2\">2</option>\n                                                <option value=\"3\">3</option>\n                                                <option value=\"4\">4</option>\n                                                <option value=\"5\">5</option>\n                                                <option value=\"6\">6</option>\n                                                <option value=\"7\">7</option>\n                                              </select>\n                                            </div>\n\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n                                        :\n                                        leadGenDetails.channel === 'Both' ?\n                                          <>\n                                            <div className='single-title-double'>\n                                              <h3>Bedrooms</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.bedrooms_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({\n                                                    ...prevData,\n                                                    bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                                  }))}\n                                                >\n                                                  <option value=''>No min</option>\n                                                  <option value=\"1\">1</option>\n                                                  <option value=\"2\">2</option>\n                                                  <option value=\"3\">3</option>\n                                                  <option value=\"4\">4</option>\n                                                  <option value=\"5\">5</option>\n                                                  <option value=\"6\">6</option>\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.bedrooms_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({\n                                                    ...prevData,\n                                                    bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                                  }))}\n                                                >\n                                                  <option value=''>No max</option>\n                                                  <option value=\"1\">1</option>\n                                                  <option value=\"2\">2</option>\n                                                  <option value=\"3\">3</option>\n                                                  <option value=\"4\">4</option>\n                                                  <option value=\"5\">5</option>\n                                                  <option value=\"6\">6</option>\n                                                  <option value=\"7\">7</option>\n                                                </select>\n                                              </div>\n\n                                            </div>\n                                            <div className='single-title-double'>\n                                              <h3>Rental price</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.rental_price_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                                >\n                                                  <option value={0}>No min</option>\n                                                  {rentalPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.rental_price_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                                >\n                                                  <option value={10000000}>No max</option>\n                                                  {rentalPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n\n                                              </div>\n\n                                            </div>\n                                            <div className='single-input-block'>\n                                              <div className='input-block large'>\n                                                <h3>Rental furnishing status</h3>\n                                                <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                  <option>Either furnished or unfurnished</option>\n                                                  <option>Furnished</option>\n                                                  <option>Unfurnished</option>\n                                                </select>\n                                              </div>\n                                            </div>\n                                            <div className='single-title-double'>\n                                              <h3>Sales price</h3>\n                                              <div className='double-dropdowns'>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.sales_price_min || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                                >\n                                                  <option value={0}>No min</option>\n                                                  {salesPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n                                                <select\n                                                  className='dropdown'\n                                                  value={leadGenDetails.sales_price_max || ''}\n                                                  onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                                >\n                                                  <option value={100000000}>No max</option>\n                                                  {salesPrices.map((price, index) => (\n                                                    <option key={index} value={price}>\n                                                      <NumericFormat\n                                                        value={price}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        prefix={'£'}\n                                                      />\n                                                    </option>\n                                                  ))}\n                                                </select>\n\n                                              </div>\n\n                                            </div>\n                                          </>\n\n\n                                          : ''}\n\n                                </>\n                                : ''}\n                            </div>\n                            <div className='lead-gen-save'>\n                              <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                            </div>\n                          </div>\n\n                        </>\n                        :\n                        leadGenSection === 'Explore' && !rentalLoading ?\n                          <>\n                            <div className='results-block'>\n                              <div className=\"property-insight-nav\">\n                                <div className=\"property-insight-buttons\">\n                                  <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                  <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                                </div>\n                                <div className='action-section'>\n                                  <div className='save-section'>\n                                    <div className=\"bin-icon\"></div>\n                                    <h3 onClick={handlePropertyRemoveShow}>Hide selection</h3>\n                                  </div>\n                                  <div className='save-section'>\n                                    <div className=\"print-icon\"></div>\n                                    <h3 onClick={addFavourite}>Track selection</h3>\n                                  </div>\n\n                                </div>\n\n                              </div>\n                              {channelView === 'Lettings' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All properties</option>\n                                      <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                      <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                      <option value=\">16weeks\">Added over 16 weeks ago</option>\n                                    </select>\n                                  </div>\n                                  <div className='matching-status'>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('Matching')} style={{ color: matchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: matchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('Multiple matches')} style={{ color: matchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                    <h3 className='matching-pill' onClick={() => setMatchType('No matches')} style={{ color: matchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                  </div>\n\n                                  {matchType === 'Matching' ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                      </div>\n                                      <div className='results-table'>\n                                        <div className='results-headers'>\n                                          <div id='column11' className='column'>\n                                            <div className='custom-checkbox'>\n                                              <input\n                                                className='checkbox'\n                                                type=\"checkbox\"\n                                                checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                                onChange={handleSelectAllChange}\n                                              />\n                                              <label className='label'>\n                                              </label>\n                                            </div>\n                                          </div>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            {/* <h5>⬇️</h5> */}\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            {/* <h5>⬇️</h5> */}\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Bathrooms</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details explore'>\n                                          {filteredProperties ? filteredProperties.map((item, index) => {\n                                            const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column11'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>❤️</h3>\n                                                        {/* <h3>Saved</h3> */}\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>⭐️</h3>\n                                                          {/* <h3>Archived</h3> */}\n                                                        </div>\n                                                        :\n                                                        <div className='custom-checkbox'>\n\n                                                          <input\n                                                            className='checkbox'\n                                                            type=\"checkbox\"\n                                                            checked={checkboxStatus[index]}\n                                                            onChange={(e) => handleCheckboxChange(e, index)}\n                                                          />\n                                                          <label className='label'>\n\n                                                          </label>\n                                                        </div>\n                                                    }\n                                                  </div>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    {userPackage && userPackage === 'Free' ? <h5>{item.property_data.displayAddress}</h5> : <h5>{item.epc_data_list[0].address}</h5>}\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bathrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n                                      </div>\n\n\n                                    </>\n                                    : matchType === 'Multiple matches' ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {filteredMatchingProperties.length} rental properties that we do not have an exact match for</h3>\n                                        </div>\n                                        <div className='results-table'>\n\n                                          <div className='results-headers'>\n                                            <div id='column1' className='column' >\n                                              <h5>#</h5>\n                                            </div>\n                                            <div id='column2' className='column' >\n                                              <h5>Listed address</h5>\n                                            </div>\n                                            <div id='column3' className='column' onClick={sortByPostcode}>\n                                              <h5>Postcode</h5>\n                                              {/* <h5>⬇️</h5> */}\n                                            </div>\n                                            <div id='column4' className='column'>\n                                              <h5>Added</h5>\n                                            </div>\n                                            <div id='column5' className='column'>\n                                              <h5>Size (sq. m)</h5>\n                                            </div>\n                                            <div id='column6' className='column'>\n                                              <h5>Property type</h5>\n                                            </div>\n                                            <div id='column7' className='column' onClick={sortByPrice}>\n                                              <h5>Price</h5>\n                                              {/* <h5>⬇️</h5> */}\n                                            </div>\n                                            <div id='column8' className='column'>\n                                              <h5>Bedrooms</h5>\n                                            </div>\n                                            <div id='column9' className='column'>\n                                              <h5>Bathrooms</h5>\n                                            </div>\n                                            <div id='column10' className='column'>\n                                              <h5>Agent</h5>\n                                            </div>\n                                            <div id='column11' className='column'>\n                                              <h5>Action</h5>\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n                                          <div className='results-details explore'>\n                                            {filteredMatchingProperties ? filteredMatchingProperties.map((item, index) => {\n                                              const isExpanded = expandedMultipleMatches.has(index)\n                                              return (\n                                                <>\n                                                  <div className={'results-content'}>\n                                                    <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{index + 1}</h5>\n                                                    </div>\n                                                    <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.displayAddress}</h5>\n                                                    </div>\n                                                    <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.postcode}</h5>\n                                                    </div>\n                                                    <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                    </div>\n                                                    <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                    </div>\n                                                    <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.propertyType}</h5>\n                                                    </div>\n                                                    <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.price}</h5>\n                                                    </div>\n                                                    <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.bedrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.bathrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.agent}</h5>\n                                                    </div>\n                                                    <div className='column' id='column11'>\n                                                      {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>❤️</h3>\n                                                          {/* <h3>Saved</h3> */}\n                                                        </div>\n                                                        :\n                                                        archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                          <div className='saved-message'>\n                                                            <h3>⭐️</h3>\n                                                            {/* <h3>Archived</h3> */}\n                                                          </div>\n                                                          :\n\n                                                          <h3 className='expansion' onClick={() => toggleRowExpansion(index)}>\n                                                            {expandedMultipleMatches.has(index) ? '^' : 'v'}\n                                                          </h3>}\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  {isExpanded && (\n                                                    <>\n                                                      <h3 className='matching-title'>Matching properties</h3>\n                                                      <div className='expanded-section-titles'>\n                                                        <p className='column' id='column1'>#</p>\n                                                        <p className='column' id='column2'>Address</p>\n                                                        <p className='column' id='column3'>Postcode</p>\n                                                        <p className='column' id='column4'>Current EPC</p>\n                                                        <p className='column' id='column5'>Potential EPC</p>\n                                                        <p className='column' id='column6'>Floor</p>\n                                                        <p className='column' id='column7'>Size</p>\n                                                        <p className='column' id='column8'></p>\n                                                      </div>\n\n                                                      {item.epc_data_list.map((epcItem, epcIndex) => (\n                                                        <div className='expanded-content' key={epcIndex} >\n                                                          <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                          <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                          <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                          <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                          <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                          <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                          <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                          <div className='column' id='column8' >\n                                                            {/* <div className='heart-icon' onClick={() => addManualFavourite(item, epcItem, index)} ></div> */}\n                                                            <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                          </div>\n                                                        </div>\n                                                      ))}\n                                                    </>\n                                                  )}\n                                                </>\n                                              )\n                                            })\n                                              : ' '}\n                                          </div>\n                                        </div>\n\n                                      </>\n\n                                      : matchType === 'No matches' ?\n                                        <>\n                                          <div className='title-section'>\n                                            <h3 className='sub-title'>There are {filteredNoProperties.length} rental properties that we do not have any match for</h3>\n                                          </div>\n                                          <div className='results-table'>\n\n                                            <div className='results-headers'>\n                                              <h5 id='column1' className='column'>#</h5>\n                                              <div id='column2' className='column' >\n                                                <h5>Listed address</h5>\n                                              </div>\n                                              <div id='column3' className='column' onClick={sortByPostcode}>\n                                                <h5>Postcode</h5>\n                                                {/* <h5>⬇️</h5> */}\n                                              </div>\n                                              <div id='column4' className='column'>\n                                                <h5>Added</h5>\n                                              </div>\n                                              <div id='column5' className='column'>\n                                                <h5>Reduced</h5>\n                                              </div>\n                                              <div id='column6' className='column'>\n                                                <h5>Property type</h5>\n                                              </div>\n                                              <div id='column7' className='column' onClick={sortByPrice}>\n                                                <h5>Price</h5>\n                                                {/* <h5>⬇️</h5> */}\n                                              </div>\n                                              <div id='column8' className='column'>\n                                                <h5>Bedrooms</h5>\n                                              </div>\n                                              <div id='column9' className='column'>\n                                                <h5>Agent</h5>\n                                              </div>\n                                              {/* <div id='column11' className='column'>\n                                            <h5></h5>\n                                          </div> */}\n                                            </div>\n                                            <hr className='property-divider' />\n                                            <div className='results-details explore'>\n                                              {filteredNoProperties ? filteredNoProperties.map((item, index) => {\n\n                                                return (\n                                                  <>\n                                                    <div className={'results-content'}>\n                                                      <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{index + 1}</h5>\n                                                      </div>\n                                                      <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.displayAddress}</h5>\n                                                      </div>\n                                                      <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.postcode}</h5>\n                                                      </div>\n                                                      <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                      </div>\n                                                      <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                      </div>\n                                                      <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.propertyType}</h5>\n                                                      </div>\n                                                      <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.price}</h5>\n                                                      </div>\n                                                      <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.bedrooms}</h5>\n                                                      </div>\n                                                      <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                        <h5>{item.property_data.agent}</h5>\n                                                      </div>\n                                                      {/* <div className='column' id='column11'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        // <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          // <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n\n                                                        ''\n                                                    }\n                                                  </div> */}\n                                                    </div>\n                                                    <hr className='property-divider' />\n\n                                                  </>\n                                                )\n                                              })\n                                                : ' '}\n                                            </div>\n                                          </div>\n\n                                        </>\n\n                                        : ''\n                                  }\n\n\n                                </>\n                                : channelView === 'Sales' ?\n                                  <>\n                                    <div className='filter-section'>\n                                      <h3>Filter properties</h3>\n                                      <select\n                                        className='dropdown'\n                                        value={dateFilter}\n                                        onChange={(e) => setDateFilter(e.target.value)}\n                                      >\n                                        <option value=\"1day\">Updated in the last 24 hours</option>\n                                        <option value=\"2days\">Updated in the last 48 hours</option>\n                                        <option value=\"3days\">Updated in the last 72 hours</option>\n                                        <option value=\"7days\">Updated in the last week</option>\n                                        <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                        <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                        <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                        <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                        <option value=\"all\">All properties</option>\n                                        <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                        <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                        <option value=\">16weeks\">Added over 16 weeks ago</option>\n\n                                      </select>\n                                    </div>\n                                    <div className='matching-status'>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('Matching')} style={{ color: salesMatchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('Multiple matches')} style={{ color: salesMatchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                      <h3 className='matching-pill' onClick={() => setSalesMatchType('No matches')} style={{ color: salesMatchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                    </div>\n                                    {salesLoading ?\n                                      <div className='property-table-loading'>\n                                        <Loading />\n                                      </div>\n                                      : !salesLoading ?\n                                        <>\n                                          {salesMatchType === 'Matching' ?\n                                            <>\n                                              <div className='title-section'>\n                                                <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n\n                                              </div>\n                                              <div className='results-table'>\n\n                                                <div className='results-headers'>\n                                                  <div id='column11' className='column'>\n                                                    <div className='custom-checkbox'>\n                                                      <input\n                                                        className='checkbox'\n                                                        type=\"checkbox\"\n                                                        checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                        onChange={handleSelectAllSalesChange}\n                                                      />\n                                                      <label className='label'>\n                                                      </label>\n                                                    </div>\n                                                  </div>\n                                                  <h5 id='column1' className='column'>#</h5>\n                                                  <div id='column2' className='column' >\n                                                    <h5>Address</h5>\n                                                  </div>\n                                                  <div id='column3' className='column' onClick={sortByPostcode}>\n                                                    <h5>Postcode</h5>\n                                                    {/* <h5>⬇️</h5> */}\n                                                  </div>\n                                                  <div id='column4' className='column'>\n                                                    <h5>Added</h5>\n                                                  </div>\n                                                  <div id='column5' className='column'>\n                                                    <h5>Reduced</h5>\n                                                  </div>\n                                                  <div id='column6' className='column'>\n                                                    <h5>Property type</h5>\n                                                  </div>\n                                                  <div id='column7' className='column' onClick={sortByPrice}>\n                                                    <h5>Price</h5>\n                                                    {/* <h5>⬇️</h5> */}\n                                                  </div>\n                                                  <div id='column8' className='column'>\n                                                    <h5>Bedrooms</h5>\n                                                  </div>\n                                                  <div id='column9' className='column'>\n                                                    <h5>Bathrooms</h5>\n                                                  </div>\n                                                  <div id='column10' className='column'>\n                                                    <h5>Agent</h5>\n                                                  </div>\n\n                                                </div>\n                                                <hr className='property-divider' />\n                                                <div className='results-details explore'>\n                                                  {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                                    const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                                    return (\n                                                      <>\n                                                        <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                          <div className='column' id='column11'>\n                                                            {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                              <div className='saved-message'>\n                                                                <h3>❤️</h3>\n                                                                {/* <h3>Saved</h3> */}\n                                                              </div>\n                                                              :\n                                                              archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  <h3>⭐️</h3>\n                                                                  {/* <h3>Archived</h3> */}\n                                                                </div>\n                                                                :\n                                                                <div className='custom-checkbox'>\n\n                                                                  <input\n                                                                    className='checkbox'\n                                                                    type=\"checkbox\"\n                                                                    checked={salesCheckboxStatus[index]}\n                                                                    onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                                  />\n                                                                  <label className='label'>\n\n                                                                  </label>\n                                                                </div>\n                                                            }\n                                                          </div>\n                                                          <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{index + 1}</h5>\n                                                          </div>\n                                                          <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            {userPackage && userPackage === 'Free' ? <h5>{item.property_data.displayAddress}</h5> : <h5>{item.epc_data_list[0].address}</h5>}\n                                                          </div>\n                                                          <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.postcode}</h5>\n                                                          </div>\n                                                          <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                          </div>\n                                                          <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                          </div>\n                                                          <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.propertyType}</h5>\n                                                          </div>\n                                                          <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.price}</h5>\n                                                          </div>\n                                                          <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.bedrooms}</h5>\n                                                          </div>\n                                                          <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.bathrooms}</h5>\n                                                          </div>\n                                                          <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.agent}</h5>\n                                                          </div>\n\n                                                        </div>\n                                                        <hr className='property-divider' />\n\n                                                      </>\n                                                    )\n                                                  })\n                                                    : ' '}\n                                                </div>\n                                              </div>\n\n                                            </>\n\n                                            : salesMatchType === 'Multiple matches' ?\n\n                                              <>\n                                                <div className='title-section'>\n                                                  <h3 className='sub-title'>There are {filteredSalesMatchingProperties.length} properties for sale that we do not have an exact match for</h3>\n                                                </div>\n                                                <div className='results-table'>\n                                                  <div className='results-headers'>\n                                                    <h5 id='column1' className='column'>#</h5>\n                                                    <div id='column2' className='column' >\n                                                      <h5>Listed address</h5>\n                                                    </div>\n                                                    <div id='column3' className='column' onClick={sortByPostcode}>\n                                                      <h5>Postcode</h5>\n                                                      {/* <h5>⬇️</h5> */}\n                                                    </div>\n                                                    <div id='column4' className='column'>\n                                                      <h5>Added</h5>\n                                                    </div>\n                                                    <div id='column5' className='column'>\n                                                      <h5>Size (sq. m)</h5>\n                                                    </div>\n                                                    <div id='column6' className='column'>\n                                                      <h5>Property type</h5>\n                                                    </div>\n                                                    <div id='column7' className='column' onClick={sortByPrice}>\n                                                      <h5>Price</h5>\n                                                      {/* <h5>⬇️</h5> */}\n                                                    </div>\n                                                    <div id='column8' className='column'>\n                                                      <h5>Bedrooms</h5>\n                                                    </div>\n                                                    <div id='column9' className='column'>\n                                                      <h5>Bathrooms</h5>\n                                                    </div>\n                                                    <div id='column10' className='column'>\n                                                      <h5>Agent</h5>\n                                                    </div>\n                                                    <div id='column11' className='column'>\n                                                      <h5>Action</h5>\n                                                    </div>\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  <div className='results-details explore'>\n                                                    {filteredSalesMatchingProperties ? filteredSalesMatchingProperties.map((item, index) => {\n                                                      const isExpanded = expandedSalesMultipleMatches.has(index)\n                                                      return (\n                                                        <>\n                                                          <div className={'results-content'}>\n                                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{index + 1}</h5>\n                                                            </div>\n                                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.displayAddress}</h5>\n                                                            </div>\n                                                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.postcode}</h5>\n                                                            </div>\n                                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                            </div>\n                                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                            </div>\n                                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.propertyType}</h5>\n                                                            </div>\n                                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.price}</h5>\n                                                            </div>\n                                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.bedrooms}</h5>\n                                                            </div>\n                                                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.bathrooms}</h5>\n                                                            </div>\n                                                            <div className='column' id='column10' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.agent}</h5>\n                                                            </div>\n                                                            <div className='column' id='column11'>\n                                                              {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  {/* <h3>❤️</h3> */}\n                                                                  <h3>Saved</h3>\n                                                                </div>\n                                                                :\n                                                                archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                  <div className='saved-message'>\n                                                                    {/* <h3>⭐️</h3> */}\n                                                                    <h3>Archived</h3>\n                                                                  </div>\n                                                                  :\n\n                                                                  <h3 className='expansion' onClick={() => toggleSalesRowExpansion(index)}>\n                                                                    {expandedSalesMultipleMatches.has(index) ? '^' : 'v'}\n                                                                  </h3>}\n                                                            </div>\n                                                          </div>\n                                                          <hr className='property-divider' />\n                                                          {isExpanded && (\n                                                            <>\n                                                              <h3 className='matching-title'>Matching properties</h3>\n                                                              <div className='expanded-section-titles'>\n                                                                <p className='column' id='column1'>#</p>\n                                                                <p className='column' id='column2'>Address</p>\n                                                                <p className='column' id='column3'>Postcode</p>\n                                                                <p className='column' id='column4'>Current EPC</p>\n                                                                <p className='column' id='column5'>Potential EPC</p>\n                                                                <p className='column' id='column6'>Floor</p>\n                                                                <p className='column' id='column7'>Size</p>\n                                                                <p className='column' id='column8'></p>\n                                                              </div>\n                                                              {item.epc_data_list.map((epcItem, epcIndex) => (\n                                                                <div className='expanded-content' key={epcIndex} >\n                                                                  <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                                  <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                                  <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                                  <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                                  <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                                  <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                                  <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                                  <div className='column' id='column8' >\n                                                                    <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                                  </div>\n                                                                </div>\n                                                              ))}\n                                                            </>\n                                                          )}\n                                                        </>\n                                                      )\n                                                    })\n                                                      : ' '}\n                                                  </div>\n                                                </div>\n\n                                              </>\n                                              : salesMatchType === 'No matches' ?\n                                                <>\n                                                  <div className='title-section'>\n                                                    <h3 className='sub-title'>There are {filteredSalesNoProperties.length} properties for sale that we do not have any match for</h3>\n                                                  </div>\n                                                  <div className='results-table'>\n\n                                                    <div className='results-headers'>\n                                                      <h5 id='column1' className='column'>#</h5>\n                                                      <div id='column2' className='column' >\n                                                        <h5>Listed address</h5>\n                                                      </div>\n                                                      <div id='column3' className='column' onClick={sortByPostcode}>\n                                                        <h5>Postcode</h5>\n                                                        {/* <h5>⬇️</h5> */}\n                                                      </div>\n                                                      <div id='column4' className='column'>\n                                                        <h5>Added</h5>\n                                                      </div>\n                                                      <div id='column5' className='column'>\n                                                        <h5>Reduced</h5>\n                                                      </div>\n                                                      <div id='column6' className='column'>\n                                                        <h5>Property type</h5>\n                                                      </div>\n                                                      <div id='column7' className='column' onClick={sortByPrice}>\n                                                        <h5>Price</h5>\n                                                        {/* <h5>⬇️</h5> */}\n                                                      </div>\n                                                      <div id='column8' className='column'>\n                                                        <h5>Bedrooms</h5>\n                                                      </div>\n                                                      <div id='column9' className='column'>\n                                                        <h5>Agent</h5>\n                                                      </div>\n                                                      {/* <div id='column11' className='column'>\n                                                <h5></h5>\n                                              </div> */}\n                                                    </div>\n                                                    <hr className='property-divider' />\n                                                    <div className='results-details explore'>\n                                                      {filteredSalesNoProperties ? filteredSalesNoProperties.map((item, index) => {\n\n                                                        return (\n                                                          <>\n                                                            <div className={'results-content'}>\n                                                              <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{index + 1}</h5>\n                                                              </div>\n                                                              <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.displayAddress}</h5>\n                                                              </div>\n                                                              <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.postcode}</h5>\n                                                              </div>\n                                                              <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                              </div>\n                                                              <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                              </div>\n                                                              <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.propertyType}</h5>\n                                                              </div>\n                                                              <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.price}</h5>\n                                                              </div>\n                                                              <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.bedrooms}</h5>\n                                                              </div>\n                                                              <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                                <h5>{item.property_data.agent}</h5>\n                                                              </div>\n\n                                                            </div>\n                                                            <hr className='property-divider' />\n\n                                                          </>\n                                                        )\n                                                      })\n                                                        : ' '}\n                                                    </div>\n                                                  </div>\n\n                                                </>\n                                                : ''}\n\n\n                                        </>\n                                        : ''}\n                                  </>\n                                  :\n\n                                  ''}\n                            </div>\n                          </>\n                          : leadGenSection === 'Explore' && rentalLoading ?\n                            <div className='property-table-loading'>\n                              <Loading />\n                            </div>\n                            : leadGenSection === 'Tracking' ?\n                              <>\n                                <LeadGenSaved\n                                  savedProperties={savedProperties}\n                                  userData={userData}\n                                  csvData={csvData}\n                                  setCsvData={setCsvData}\n                                  getCurrentDate={getCurrentDate}\n                                  handleVisitUrl={handleVisitUrl}\n                                  loadUserData={loadUserData}\n                                  setSavedProperties={setSavedProperties}\n                                  latestFavourites={latestFavourites}\n                                  setLatestFavourites={setLatestFavourites}\n                                  setLeadGenSection={setLeadGenSection}\n                                />\n                              </>\n                              : leadGenSection === 'Letter campaigns' ?\n                                <>\n                                  <LettersHub\n                                    letterProperties={letterProperties}\n                                    setLetterProperties={letterProperties}\n                                    userData={userData}\n                                    loadUserData={loadUserData}\n                                    setLeadGenSection={setLeadGenSection}\n                                    signature={signature}\n                                    setSignature={setSignature}\n                                    letterTemplates={letterTemplates}\n                                    setLetterTemplates={setLetterTemplates}\n                                    setLetterCampaigns={setLetterCampaigns}\n                                    letterCampaigns={letterCampaigns}\n                                    campaignLoading={campaignLoading}\n                                    setCampaignLoading={setCampaignLoading}\n                                    availableCredits={availableCredits}\n                                    setAvailableCredits={setAvailableCredits}\n                                  />\n                                </>\n                                : leadGenSection === 'Archived' ?\n                                  <>\n                                    <ArchivedProperties\n                                      handleVisitUrl={handleVisitUrl}\n                                      archivedProperties={archivedProperties}\n                                      loadUserData={loadUserData}\n                                      setLeadGenSection={setLeadGenSection}\n                                      latestFavourites={latestFavourites}\n                                      setLatestFavourites={setLatestFavourites}\n                                    />\n\n\n                                  </>\n                                  : leadGenSection === 'Manual matcher' ?\n                                    <ManualMatcher\n                                      increaseUsageCount={increaseUsageCount}\n                                      setErrors={setErrors}\n                                      userData={userData}\n                                      loadUserData={loadUserData}\n                                      savedProperties={savedProperties}\n                                      archivedProperties={archivedProperties}\n                                      handleVisitUrl={handleVisitUrl}\n                                      savedActionShow={savedActionShow}\n                                      setSavedActionShow={setSavedActionShow}\n                                      handleSavedActionClose={handleSavedActionClose}\n                                      setLeadGenSection={setLeadGenSection}\n                                      latestFavourites={latestFavourites}\n                                      handleSavedActionShow={handleSavedActionShow}\n                                      setLatestFavourites={setLatestFavourites}\n                                    />\n                                    : leadGenSection === 'Hidden properties' ?\n                                      <HiddenProperties\n                                        hiddenProperties={hiddenProperties}\n                                        handleVisitUrl={handleVisitUrl}\n                                        loadUserData={loadUserData}\n                                        setLeadGenSection={setLeadGenSection}\n                                        latestFavourites={latestFavourites}\n                                        setLatestFavourites={setLatestFavourites}\n                                      />\n\n                                      :\n                                      ''\n                      }\n                    </div>\n                  </div>\n\n\n                </section>\n\n\n              </>\n\n            </section>\n          </section>\n        }\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n      < RemoveProperties\n        propertyRemoveShow={propertyRemoveShow}\n        handleRemovePropertyClose={handleRemovePropertyClose}\n        removeProperty={removeProperty}\n      />\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}","import React, { useState, useEffect, useRef } from 'react'\n// import { Modal } from 'react-bootstrap'\n\nconst BasicTemplate = ({ signature, selectedTemplate, ownerData, address, handleBasicTemplateClose, processTemplateShow }) => {\n\n\n\n\n  return (\n    <>\n      <section className=\"basic-template\" style={{\n        // backgroundColor: '#FDF7F0',\n      }}>\n        <div className=\"template-section\" style={{\n        }}>\n          <div className='template-content'>\n            <div className=\"logo-section\" style={{\n              position: 'relative', // Make this a positioned ancestor for absolute children\n              textAlign: selectedTemplate.logo_position === 'Left' ? 'left' :\n                selectedTemplate.logo_position === 'Centre' ? 'center' :\n                  'right', // Control alignment with text-align\n              height: `${selectedTemplate.logo_height}px`, // Set a height for the section\n            }}>\n              <div className=\"logo-box\" style={{\n                display: 'inline-block', // Make the logo box inline for text-align to affect it\n                width: `${selectedTemplate.logo_width}px`,\n                height: `${selectedTemplate.logo_height}px`,\n              }}>\n                {signature && <img src={signature.logo} alt=\"Logo\" style={{\n                  maxWidth: `${selectedTemplate.logo_width}px`,\n                  maxHeight: `${selectedTemplate.logo_height}px`,\n                  width: 'auto', // Adjust based on actual image size, could be '100%' if you want it to fill the logo-box\n                  height: 'auto', // Same as width, maintain aspect ratio\n                }} />}\n              </div>\n            </div>\n            <div className=\"address-section\" style={{\n              position: 'absolute',\n              top: '100px',\n            }}>\n              <h3 className=\"address-details\" style={{ fontSize: '16px', fontWeight: '500', marginTop: '2px', padding: '0', lineHeight: '1.2' }}>\n                {ownerData.owner_name || 'The Owner'}<br />\n                {address ? address[0] : ''}<br />\n                {address ? address[1] : ''}<br />\n                {address ? address[2] : ''}<br />\n                {address ? address[3] : ''}<br />\n                {address ? address[4] : ''}<br />\n              </h3>\n\n            </div>\n            <div className=\"body-section\" style={{\n              position: 'absolute',\n              top: '200px',\n            }}>\n              <div className=\"letter-intro\" style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginTop: '30px',\n\n              }}>\n                <h3 className=\"intro\" style={{\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  marginRight: '3px',\n                }}>{selectedTemplate.opening} </h3>\n                <h3 className=\"intro\" style={{\n                  fontSize: '16px',\n                  fontWeight: '500',\n                }}>{ownerData.owner_name ? `${ownerData.owner_name}, ` : 'Homeowner,'}</h3>\n              </div>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_1}</h3>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_2}</h3>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_3}</h3>\n              <h3 className=\"letter-paragraph\" style={{\n                marginTop: '15px',\n                fontSize: '16px',\n                fontWeight: '500',\n              }}>{selectedTemplate.template_body_4}</h3>\n              {/* Sign-Off Section */}\n              {/* <div className=\"sign-off-section\" style={{\n                position: 'absolute',\n                marginTop: '25px',\n              }}> */}\n              <h3 className='sign-off-line' style={{ fontSize: '16px', fontWeight: '500', marginTop: '5px', padding: '0', lineHeight: '1.2' }}>\n                {selectedTemplate.closing && (\n                  <>{selectedTemplate.closing}<br /></>\n                )}\n                {selectedTemplate.sender_name && (\n                  <>{signature.first_name} {signature.last_name}<br /></>\n                )}\n                {selectedTemplate.sender_role && (\n                  <>{signature.role}{selectedTemplate.sender_company && `, ${signature.company_name}`}<br /></>\n                )}\n                {selectedTemplate.sender_mobile && (\n                  <>{signature.mobile}<br /></>\n                )}\n                {selectedTemplate.sender_landline && (\n                  <>{signature.landline}<br /></>\n                )}\n                {selectedTemplate.sender_email && (\n                  <>{signature.email}<br /></>\n                )}\n              </h3>\n              {/* </div> */}\n            </div>\n\n          </div>\n\n          {signature && <h3 className=\"letter-footer\" style={{\n            position: 'absolute',\n            bottom: '-10px',\n            textAlign: 'center',\n            fontSize: '16px',\n            fontWeight: '500',\n            left: '0',\n            right: '0', \n            width: '100%',\n          }}>{signature.letter_footer}</h3>}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default BasicTemplate\n\n// <Modal show={processTemplateShow} onHide={handleBasicTemplateClose} backdrop='static' className='basic-template-modal'>\n//   <Modal.Body>\n//     <>\n//       <section className='basic-template' ref={templateRef}>\n//         <div className='template-section'>\n//           {/* <div className='template-border'> */}\n//           <div className='template-content'>\n//             <div className='logo-section' style={{ justifyContent: selectedTemplate.logo_position === 'Left' ? 'Flex-start' : selectedTemplate.logo_position === 'Centre' ? 'Center' : 'flex-end' }}>\n//               <div className='logo-box' style={{ justifyContent: selectedTemplate.logo_position === 'Left' ? 'Flex-start' : selectedTemplate.logo_position === 'Centre' ? 'Center' : 'flex-end', height: `${selectedTemplate.logo_height}px`, width: `${selectedTemplate.logo_width}px` }}>\n//                 {signature ? <img src={signature.logo} alt=\"Logo\" className='logo' /> : ''}\n\n//               </div>\n//             </div>\n//             <div className='address-section'>\n//               <h3 className='address-details'>{ownerData.owner_name ? ownerData.owner_name : 'The Owner'}</h3>\n//               <h3 className='address-details'>{address ? address[0] : ''}</h3>\n//               <h3 className='address-details'>{address ? address[1] : ''}</h3>\n//               <h3 className='address-details'>{address ? address[2] : ''}</h3>\n//               <h3 className='address-details'>{ownerData ? ownerData.postcode : ''}</h3>\n//             </div>\n//             {selectedTemplate ?\n//               <div className='body-section'>\n//                 <div className='letter-intro'>\n//                   <h3 className='intro'>{selectedTemplate.opening} </h3>\n//                   <h3 className='intro'>{ownerData.owner_name ? `${ownerData.owner_name}, ` : 'Homeowner,'}</h3>\n//                 </div>\n//                 <h3 className='letter-paragraph'>{selectedTemplate.template_body_1}</h3>\n//                 <h3 className='letter-paragraph'>{selectedTemplate.template_body_2}</h3>\n//                 <h3 className='letter-paragraph'>{selectedTemplate.template_body_3}</h3>\n//                 <h3 className='letter-paragraph'>{selectedTemplate.template_body_4}</h3>\n//               </div>\n//               : ''}\n//             <div className='sign-off-section'>\n//               <h3 className='sign-off-line'>{selectedTemplate.closing}</h3>\n//               {selectedTemplate.sender_name ? <h3 className='sign-off-line'>{signature.first_name} {signature.last_name}</h3> : ''}\n//               {selectedTemplate.sender_role && selectedTemplate.sender_company ? <h3 className='sign-off-line'>{signature.role}, {signature.company_name}</h3>\n//                 : selectedTemplate.sender_role && !selectedTemplate.sender_company ? <h3 className='sign-off-line'>{signature.role}</h3>\n//                   : !selectedTemplate.sender_role && selectedTemplate.sender_company ? <h3 className='sign-off-line'>{signature.company_name}</h3> : ''}\n//               {selectedTemplate.sender_mobile ? <h3 className='sign-off-line'>+44{signature.mobile}</h3> : ''}\n//               {selectedTemplate.sender_landline ? <h3 className='sign-off-line'>0{signature.landline}</h3> : ''}\n//               {selectedTemplate.sender_email ? <h3 className='sign-off-line'>{signature.email}</h3> : ''}\n//             </div>\n//           </div>\n\n//           {signature ? <h3 className='letter-footer'>{signature.letter_footer}</h3> : ''}\n//         </div>\n//       </section>\n//     </>\n//   </Modal.Body>\n// </Modal> \n\n\n"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","_Fragment","Modal","show","onHide","backdrop","Body","_jsxs","onClick","closeAndLeave","increaseUsageCount","setErrors","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","handleSavedActionShow","setLatestFavourites","setSavedActionShow","loading","setLoading","useState","navigate","useNavigate","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","liveSalesProperties","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","some","isUserAuth","newFavourites","Math","floor","random","toString","epcData","response","post","headers","Authorization","getAccessToken","addPartialFavourite","style","backgroundColor","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","rightmove_id","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","addFavourite","SavedProperties","propertyRemoveShow","handleRemovePropertyClose","removeProperty","archivedActionShow","handleArchivedActionClose","csvData","setCsvData","getCurrentDate","setSavedProperties","savedPropertyView","setSavedPropertyView","expandedRows","setExpandedRows","editModes","setEditModes","formData","setFormData","selectedRows","setSelectedRows","selectAllStatus","setSelectAllStatus","onMarket","setOnMarket","offMarket","setOffMarket","marketView","setMarketView","filterView","setFilterView","setPostcode","bedroomsMin","setBedroomsMin","bedroomsMax","setBedroomsMax","priceMin","setPriceMin","priceMax","setPriceMax","trackingData","setTrackingData","minPriceOptions","setMinPriceOptions","maxPriceOptions","setMaxPriceOptions","useEffect","startsWith","parseInt","price_numeric","live_tracking","offMarketProperties","market_status","onMarketProperties","rentalPriceOptions","salesPriceOptions","bedroomOptions","label","from","_","i","toLocaleString","addressPostcode","property_type","date_added","owner_name","owner_email","owner_mobile","emails_sent","letters_sent","hand_cards","notes","transformSelectedRowsToCSV","setArchivedActionShow","handleArchivedActionShow","company_favourites","Select","options","selectedOption","document","querySelector","click","put","favourite_ids","favouriteIds","archiveFavourite","row","Swal","title","text","confirmButtonText","confirmButtonColor","cancelButtonText","background","customClass","popup","confirmButton","cancelButton","then","result","isConfirmed","moveToLetters","isSearchable","CSVLink","filename","display","option","clearFilters","checked","isRowExpanded","isEditMode","isRowSelected","selectedRow","handleRowSelectionChange","selectedProperty","prevRows","rightmoveId","find","prop","prevExpandedRows","prevFormData","toggleRowExpansion","patch","prevEditModes","handleSave","toggleEditMode","deleteFavourite","ArchivedPropertiesModal","hiddenSavedShow","handleHiddenSavedClose","hiddenProperties","setHiddenSavedShow","handleHiddenSavedShow","rightmoveIds","rightmove_ids","UnhiddenModal","archviedSavedShow","handleArchivedSavedClose","setArchivedSavedShow","handleArchivedSavedShow","updateFavourites","ArchviedToSavedModal","createTemplateShow","handleCreateTemplateClose","signature","templateAction","currentTemplate","exampleData","setCampaignLoading","templateLoading","setTemplateLoading","letterTemplate","setLetterTemplate","template_name","template_body_1","template_body_2","template_body_3","template_body_4","template_body_5","template_type","sender_name","sender_company","sender_role","sender_mobile","sender_landline","sender_email","sender_footer","logo_width","logo_height","logo_position","opening","closing","paragraphChange","name","maxCharsForThis","Object","keys","reduce","total","key","newText","slice","max","prevState","toggleStatus","prevData","ReactSwitch","onColor","offColor","uncheckedIcon","checkedIcon","addressFields","split","component","trim","push","htmlContent","ReactDOMServer","BasicTemplate","selectedTemplate","ownerData","templateData","recipient","postTemplate","editTemplate","justifyContent","height","width","logo","first_name","last_name","role","company_name","mobile","landline","email","letter_footer","createCampaignShow","handleCreateCampaignClose","letterTemplates","editData","numberOfSteps","setNumberofSteps","campaign","setCampaign","campaign_name","campaign_status","campaign_start_date","campaign_type","template_names","template_dates","handleTemplateChange","template","templateIndex","min","handleDateChange","removeStep","currentSteps","updates","prevCampaign","addStep","newCampaignType","letterTab","setLetterTab","letterCampaigns","letterProperties","editCredts","setEditCredits","initiateCheckoutSession","creditValue","addCreditValue","availableCredits","campaignScreen","setCampaignScreen","activeCampaign","setActiveCampaign","campaignDetail","setCampaignDetail","setCreateCampaignShow","campaignSelectedRows","setCampaignSelectedRows","campaignSelectAllStatus","setCampaignSelectAllStatus","propertiesInCampaign","setPropertiesInCampaign","propertiesNotInCampaign","setPropertiesNotInCampaign","campaignAnalytics","setCampaignAnalytics","campaignLoading","maxStep","setMaxStep","inCampaign","letter_campaign","notInCampaign","handleCreateCampaignShow","campaignName","processedData","params","acc","cur","existing","target_address","steps","campaign_step","status","step","pdf","max_step","getAnalytics","color","CreateCampaign","selectCampaign","templatesNeeded","templateName","t","itemsWithHtmlContent","flatMap","_ref2","sequence_details","launchCampaign","marginTop","marginRight","fontSize","properties","propertyIds","property_ids","removePropertiesFromCampaign","target_name","stepIndex","window","open","setSignature","loadSignatures","setLoadSignatures","editSignatures","setEditSignatures","signatureChange","files","pattern","accept","FormData","entries","forEach","append","updateSignatures","setLetterProperties","setUserData","setLetterTemplates","setLetterCampaigns","setAvailableCredits","setCreateTemplateShow","selectedCampaign","setSelectedCampaign","setCreditValue","setLogo","pdfProcessing","setPdfProcessing","selectedData","setSelectedData","setSelectedTemplate","selectedTemplateName","setSelectedTemplateName","setTemplateAction","setCurrentTemplate","isEditPending","setIsEditPending","exampleTemplateData","setExampleTemplateData","campaignFilters","setCampaignFilters","campaignFilteredProperties","setCampaignFilteredProperties","epc_favourites","addPropertiesToCampaign","formatDate","dateStr","date","isNaN","getTime","warn","getDate","padStart","getMonth","getFullYear","numericAmount","creditsAmount","credits_amount","localStorage","setItem","JSON","stringify","sessionId","stripe","loadStripe","process","redirectToCheckout","SetSignatures","CreateTemplate","template_number","handleEditTemplateShow","example_pdf","deleteTemplate","CampaignOverview","campaignId","selectedProperties","selectedCampaignDetails","selectAllRows","rowsNotInCampaign","rowsNotInCampaignCount","week_removed","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","errors","leadGenRemaining","setLeadGenRemaining","userPackage","setUserPackage","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","subcodeSubstring","setSubcodeString","favouritedProperties","setFavouritedProperties","savedRemanining","setSaveddRemaining","setArchivedProperties","setHiddenProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","subcode","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedSalesRows","setSelectedSalesRows","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","setFavouriteIds","removedIds","setRemovedIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","filteredMatchingProperties","setFilteredMatchingProperties","filteredSalesMatchingProperties","setFilteredSalesMatchingProperties","filteredNoProperties","setFiltedNoProperties","filteredSalesNoProperties","setFiltedSalesNoProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","matchType","setMatchType","salesMatchType","setSalesMatchType","expandedMultipleMatches","setExpandedMultpleMatches","expandedSalesMultipleMatches","setExpandedSalesMultpleMatches","getUserToken","usage_stats","package","credits","lead_gen_details","filteredFavourites","fav","action","letters","letter_sequence","archivedFavourites","removedProperties","newFavouriteIds","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","letter_signatures","letter_templates","letter_campaigns","eventBus","emit","getUser","parse","URLSearchParams","location","removeItem","deselectAllRows","deselectAllSalesRows","valuation_booked","deletedProperties","postcodeValue","subcodeValue","additionalRental","deletedPropertyIds","property_data","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","removeItemFromStorage","token","salesPrices","rentalPrices","filterPropertiesByDate","days","filterType","addedDate","parseDate","reducedDate","mostRecentDate","isWithinLastDays","isBeyondDays","filtered","day","month","year","now","sortByPrice","sorted","priceA","priceB","salesSorted","multipleRentalSorted","multipleSalesSorted","noRentalSorted","noSalesSorted","sortByPostcode","localeCompare","setPropertyRemoveShow","message","newExpandedRows","toggleSalesRowExpansion","addManualFavourite","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","borderBottom","textUnderlineOffset","fontWeight","inputVal","postcodeSections","join","NumericFormat","displayType","thousandSeparator","prefix","LeadGenSaved","String","LettersHub","ArchivedProperties","ManualMatcher","HiddenProperties","existingFavouriteIds","every","Boolean","existingCombinations","allRows","handleCheckboxChange","updatedStatus","isExpanded","size","toFixed","epcItem","epcIndex","selectAllSalesRows","salesCheckboxChange","RemoveProperties","handleBasicTemplateClose","processTemplateShow","position","textAlign","maxWidth","maxHeight","top","padding","lineHeight","flexDirection","bottom","left","right"],"sourceRoot":""}