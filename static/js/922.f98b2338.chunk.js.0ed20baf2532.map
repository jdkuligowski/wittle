{"version":3,"file":"static/js/922.f98b2338.chunk.js","mappings":"kIAQA,IANgBA,KACdC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,OAAKG,IAAKC,EAAQ,OAAiCC,IAAI,iB,6DCsC3D,IAvC4BC,IAA6E,IAA5E,kBAAEC,EAAiB,eAAEC,EAAc,cAAEC,EAAa,iBAAEC,GAAkBJ,EAEjG,OACEN,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SACd,WAAnBM,GACCI,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,iBAAkBI,MAAO,CAAEC,WAA8B,kBAAlBN,EAAoC,MAAQ,MAAOO,gBAAmC,kBAAlBP,EAAoC,UAAY,4BAA6BP,SAAC,mBAC/OF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,mBAAoBI,MAAO,CAAEC,WAA8B,oBAAlBN,EAAsC,MAAQ,MAAOO,gBAAmC,oBAAlBP,EAAsC,UAAY,4BAA6BP,SAAC,qBACrPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,oBAAqBI,MAAO,CAAEC,WAA8B,qBAAlBN,EAAuC,MAAQ,MAAOO,gBAAmC,qBAAlBP,EAAuC,UAAY,4BAA6BP,SAAC,sBACxPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,kBAAmBI,MAAO,CAAEC,WAA8B,mBAAlBN,EAAqC,MAAQ,MAAOO,gBAAmC,mBAAlBP,EAAqC,UAAY,4BAA6BP,SAAC,oBAClPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,uBAAwBI,MAAO,CAAEC,WAA8B,wBAAlBN,EAA0C,MAAQ,MAAOO,gBAAmC,wBAAlBP,EAA0C,UAAY,4BAA6BP,SAAC,2BAGhP,cAAnBM,GACEI,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,oBAAqBI,MAAO,CAAEC,WAA8B,qBAAlBN,EAAuC,MAAQ,MAAOO,gBAAmC,qBAAlBP,EAAuC,UAAY,4BAA6BP,SAAC,YACxPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,QAASI,MAAO,CAAEC,WAA8B,SAAlBN,EAA2B,MAAQ,MAAOO,gBAAmC,SAAlBP,EAA2B,UAAY,4BAA6BP,SAAC,kBACpNF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,sBAAuBI,MAAO,CAAEC,WAA8B,uBAAlBN,EAAyC,MAAQ,MAAOO,gBAAmC,uBAAlBP,EAAyC,UAAY,4BAA6BP,SAAC,gBAG7O,UAAnBM,GACEI,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,mBAAoBI,MAAO,CAAEC,WAA8B,oBAAlBN,EAAsC,MAAQ,MAAOO,gBAAmC,oBAAlBP,EAAsC,UAAY,4BAA6BP,SAAC,eACrPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAQY,QAASA,IAAMH,EAAiB,uBAAwBI,MAAO,CAAEC,WAA8B,wBAAlBN,EAA0C,MAAQ,MAAOO,gBAAmC,wBAAlBP,EAA0C,UAAY,4BAA6BP,SAAC,mBAGnQ,QAOT,C,8OCKP,MApCwBI,IAAuF,IAAtF,gBAAEW,EAAe,uBAAEC,EAAsB,kBAAEC,EAAiB,iBAAEC,GAAkBd,EAWvG,OACEN,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEF,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACC,KAAML,EAAiBM,OAAQL,EAAwBM,SAAS,SAASvB,UAAU,qBAAoBC,UAC5GF,EAAAA,EAAAA,KAACqB,EAAAA,EAAMI,KAAI,CAAAvB,UACTF,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAAA,MAAIa,QAASK,EAAuBhB,SAAC,SAEvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,UAASC,SAAA,CAAC,eAAuC,IAArBkB,EAA0B,GAAEA,aAA+B,GAAEA,eAA8B,6BAEvIR,EAAAA,EAAAA,MAAA,OAAKX,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,QAAQY,QAtBlBa,KACpBP,EAAkB,oBAClBD,GAAwB,EAoBqChB,SAAC,iBAClDF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,OAAOY,QAASK,EAAuBhB,SAAC,2BAOnE,ECgYP,MA9ZsBI,IACgI,IAD/H,mBAAEqB,EAAkB,UAAEC,EAAS,SAAEC,EAAQ,aAAEC,EAAY,gBAAEC,EAAe,mBAAEC,EAAkB,eAAEC,EAAc,gBACjIhB,EAAe,uBAACC,EAAsB,kBAAEC,EAAiB,iBAAEC,EAAgB,sBAAEc,EAAqB,oBAAEC,EAAmB,mBAAEC,GAAqB9B,EAI9I,MAAO+B,EAASC,IAAcC,EAAAA,EAAAA,YAGxBC,GAAWC,EAAAA,EAAAA,OAGVC,EAAmBC,IAAwBJ,EAAAA,EAAAA,UAAS,KACpDK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAeC,IAAoBR,EAAAA,EAAAA,aACnCS,EAAiBC,IAAsBV,EAAAA,EAAAA,aACvCW,EAAkBC,IAAuBZ,EAAAA,EAAAA,UAAS,KAClDa,EAAcC,IAAmBd,EAAAA,EAAAA,UAAS,KAG1Ce,EAAQC,IAAahB,EAAAA,EAAAA,WAAS,IAE9BiB,EAASC,IAAclB,EAAAA,EAAAA,aAGvBmB,EAAWC,IAAgBpB,EAAAA,EAAAA,UAAS,eAEpCqB,EAAeC,IAAoBtB,EAAAA,EAAAA,UAAS,IAAIuB,MAEhDC,EAAoBC,IAAyBzB,EAAAA,EAAAA,UAAS,CAAC,GAkFxD0B,EAAiBC,UACrB,IACEC,QAAQC,IAAIC,GACZ,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAK,8BAA6BH,KAC/D,OAAOC,CACT,CAAE,MAAOG,GAEP,OADAN,QAAQC,IAAIK,GACL,EACT,GAyDF,OAEE7D,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,cAAaC,SAAA,EAC1BU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,gEACxBmC,GA4FArC,EAAAA,EAAAA,KAACD,EAAAA,EAAO,KA3FRa,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,qBAAoBC,SAAA,EAEjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,OACLC,MAAOjC,EACPkC,SAAUC,GAAKlC,EAAqBkC,EAAEC,OAAOH,OAC7CI,YAAY,0BAEhBnE,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,OACLC,MAAO/B,EACPgC,SAAUC,GAAKhC,EAAiBgC,EAAEC,OAAOH,gBAI/C3E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAEjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8CACJU,EAAAA,EAAAA,MAAA,UAAQgE,SAAWC,GAAMlB,EAAakB,EAAEC,OAAOH,OAAOzE,SAAA,EACpDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,mBAIC,eAAdwD,GACC1D,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,qBAAoBC,SAAA,EAEjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BACJF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,SACLC,MAAO7B,EACP8B,SAAUC,GAAK9B,EAAiB8B,EAAEC,OAAOH,aAG7C/D,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iCACJF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,SACLC,MAAO3B,EACP4B,SAAUC,GAAK5B,EAAmB4B,EAAEC,OAAOH,kBAMnD3E,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,qBAAoBC,SAAA,EAEjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2BACJF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,OACLC,MAAO7B,EACP8B,SAAUC,GAAK9B,EAAiB8B,EAAEC,OAAOH,aAG7C/D,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BACJF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,OACLC,MAAO3B,EACP4B,SAAUC,GAAK5B,EAAmB4B,EAAEC,OAAOH,kBAMrD3E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UAEjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJU,EAAAA,EAAAA,MAAA,UAAQX,UAAU,WAAW0E,MAAOnB,GAAW,WAAYoB,SAAWC,GAAMpB,EAAWoB,EAAEC,OAAOH,OAAOzE,SAAA,EACrGF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,cACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,mBAIdF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gBAAgBY,QAvNzBqD,UACrBF,EAAsB,CAAC,GACvBH,EAAiB,IAAIC,KACrBxB,GAAW,GACXiB,GAAU,GAGV,MAAMyB,EAAoBtC,EAAkBuC,QAAQ,OAAQ,IAE5D,IACE,MAAM,KAAEX,SAAeC,EAAAA,EAAMC,IAAK,YAAWQ,KAI7C,GAHAb,QAAQC,IAAI,mBAAoBE,GAChCnB,EAAoBmB,GAEhBA,GAAQY,MAAMC,QAAQb,IAASA,EAAKc,OAAS,EAAG,CAClD,IAAIC,EAAef,EAED,eAAdZ,EACF2B,EAAeA,EAAaC,QAAOC,KAC/B3C,GAAiB2C,EAASC,QAAQC,cAAcC,SAAS9C,EAAc6C,mBACvE3C,GAAiByC,EAASI,4BAA8BC,OAAO9C,OAC/DE,GAAmBuC,EAASM,8BAAgCD,OAAO5C,MAEhD,WAAdU,IACT2B,EAAeA,EAAaC,QAAOC,KAC/B3C,GAAiB2C,EAASC,QAAQC,cAAcC,SAAS9C,EAAc6C,mBACvE3C,GAAiByC,EAASO,wBAA0BhD,EAAciD,kBAClE/C,GAAmBuC,EAASS,0BAA4BhD,EAAgB+C,kBAI9EV,EAAeA,EAAaY,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,iBAAmB,IAAID,KAAKF,EAAEG,mBAEhFhB,EAAaD,OAAS,GACxB/B,EAAgBgC,GAChBlB,QAAQC,IAAI,kBAAmBiB,GAC/B1D,KACiC,IAAxB0D,EAAaD,QACtB/B,EAAgB,IAGlBf,GAAW,EACb,MACE6B,QAAQC,IAAI,8BACZ9B,GAAW,EAEf,CAAE,MAAOmC,GACPpB,EAAgB,IAChBzB,GAAU,GACVuC,QAAQC,IAAIK,GACZnC,GAAW,EACb,CAEAiB,GAAU,EAAK,EAkKuDrD,SAAC,6BASnEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SACC,IAA5BgD,EAAiBkC,QAAiB9B,EACjCA,GAAkC,IAAxBF,EAAagC,QAAepF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,uDAC9DoD,GAAUF,EAAagC,OAAS,GAC9BxE,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,YAAWC,SAAA,CAAC,YAAUkD,EAAagC,OAAO,wBACxDpF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC7BkD,EAAeA,EACbkD,KAAI,CAACC,EAAMC,KAER5F,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAEsG,EAAQ,KACnC5F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcwG,GAAG,eAChC7F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAE,eAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAEqG,EAAKf,iBAGtC5E,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcwG,GAAG,WAChC7F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,kBAC3BU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,cAAaC,SAAA,CAAEqG,EAAKG,WAAW,kBAGjD9F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcwG,GAAG,cAChC7F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,gBAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAEqG,EAAKlC,kBAGtCzD,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcwG,GAAG,cAChC7F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,mBAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAEqG,EAAKI,2BAGtC/F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAcwG,GAAG,YAChC7F,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,uBAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAEqG,EAAKF,4BAIxCrG,EAAAA,EAAAA,KAAA,UAAQC,UAAU,YAAYa,MAAO,CAAEE,iBAAiB4C,EAAcgD,IAAIJ,GAAS,YAAyB3F,QAASA,IAxSxHqD,WACzB,MAAM2C,EAAmB,IAAI/C,IAAIF,GAC3B2B,EAAWnC,EAAaoD,GAE9B,GAAIK,EAAiBD,IAAIJ,GACvBK,EAAiBC,OAAON,QAIxB,GAFAK,EAAiBE,IAAIP,IAEhBzC,EAAmByC,GAAQ,CAC9B,MAAMQ,QAAgB/C,EAAesB,EAASlB,UAC9CF,QAAQC,IAAI,aAAc4C,GAC1BhD,EAAsB,IAAKD,EAAoB,CAACyC,GAAQQ,GAC1D,CAEFnD,EAAiBgD,EAAiB,EAyRqHI,CAAmBT,GAAOtG,SAClJ0D,EAAcgD,IAAIJ,GAAS,IAAM,QAxCAA,GA6CrC5C,EAAcgD,IAAIJ,KACjB5F,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAEb8D,EAAmByC,IAAUzC,EAAmByC,GAAOpB,OAAS,GAC/DxE,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,SAAC,yBAC/BU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAASvG,SAAC,OACnCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAASvG,SAAC,aACnCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAASvG,SAAC,cACnCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAASvG,SAAC,WACnCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAASvG,SAAC,cACnCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,kBAI3B,IAEJzG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAC9B6D,EAAmByC,IAAUzC,EAAmByC,GAAOpB,OAAS,EAC/DrB,EAAmByC,GAAOF,KAAI,CAACY,EAAcC,KAE3CvG,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BU,EAAAA,EAAAA,MAAA,KAAGX,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,EAAeiF,EAAaE,KAAKlH,SAAA,CAAEiH,EAAgB,EAAE,QACvGnH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,EAAeiF,EAAaE,KAAKlH,SAAEgH,EAAaG,kBAClGrH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,EAAeiF,EAAaE,KAAKlH,SAAEgH,EAAa7C,YAClGrE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,EAAeiF,EAAaE,KAAKlH,SAAEgH,EAAaI,SAClGtH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,EAAeiF,EAAaE,KAAKlH,SAAEgH,EAAaK,YAClGvH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAASvG,SACjC6B,EAAgByF,MAAKjC,GAAYA,EAASkC,eAAiBP,EAAaO,gBACvE7G,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAGN8B,EAAmBwF,MAAKjC,GAAYA,EAASkC,eAAiBP,EAAaO,gBACzE7G,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAINF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAaY,QAASA,IA5P9DqD,OAAOH,EAAoB2D,KAC9C,IAAIC,EAAAA,EAAAA,MAAc,CAGhB,MAAMC,EAAgB,CAAC,CACrB,aAAgB7D,EAAmB0D,aACnC,SAAY1D,EAAmBM,SAC/B,QAAWqD,EAAQlC,QACnB,MAASzB,EAAmB8D,MAC5B,KAAQ9D,EAAmBW,KAC3B,QAAWX,EAAmB+D,QAC9B,aAAgB/D,EAAmBgE,aACnC,MAAShE,EAAmBuD,MAC5B,UAAavD,EAAmBiE,UAChC,SAAYjE,EAAmBwD,SAC/B,mBAAsBxD,EAAmBkE,mBACzC,cAAiBlE,EAAmBmE,cACpC,IAAOnE,EAAmBqD,IAC1B,YAAerD,EAAmBoE,YAClC,cAAiBpE,EAAmBqE,cACpC,OAAU,QACV,cAAiBrE,EAAmBsE,cACpC,gBAAmBtE,EAAmBuE,kBAIxC,IACE,MAAMC,QAAiBhE,EAAAA,EAAMiE,KAAK,sBAAuBZ,EAAe,CACtEa,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAI7BxE,QAAQC,IAAI,YAAamE,EAASjE,MAElCnC,EAAoB,GACpBD,IACAJ,GAGF,CAAE,MAAO2C,GACPN,QAAQM,MAAM,0BAA2BA,EAC3C,CACF,MACEjC,EAAS,kBACT2B,QAAQC,IAAI,aACd,EA8MuFwE,CAAa1B,EAAcX,SApBvCY,MA0BzCvG,EAAAA,EAAAA,MAAA,KAAGX,UAAU,SAAQC,SAAA,CAAC,oCAAkCqG,EAAKf,QAAQ,aAK7ExF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAKlB,QAIN,IAtHoCD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,4CA4H5EF,EAAAA,EAAAA,KAAC6I,EAAe,CACd5H,gBAAiBA,EACjBC,uBAAwBA,EACxBC,kBAAmBA,EACnBC,iBAAkBA,MAEnB,EC9YPmD,EAAAA,EAAMuE,SAASC,eAAiB,YAChCxE,EAAAA,EAAMuE,SAASE,eAAiB,cA4mDhC,MA1mDsBC,KAIpB,MAAMzG,GAAWC,EAAAA,EAAAA,OAGVyG,EAAQtH,IAAaW,EAAAA,EAAAA,aAGrBV,EAAUsH,IAAe5G,EAAAA,EAAAA,aAGzB6G,EAAeC,IAAoB9G,EAAAA,EAAAA,aACnC+G,EAAcC,IAAmBhH,EAAAA,EAAAA,aAGjCe,EAAQC,IAAahB,EAAAA,EAAAA,WAAS,IAG9B/B,EAAgBD,IAAqBgC,EAAAA,EAAAA,UAAS,eAC9C9B,EAAeC,IAAoB6B,EAAAA,EAAAA,UAAS,eAG5CiH,EAAcC,IAAmBlH,EAAAA,EAAAA,WAAS,IAE1CG,EAAmBC,IAAwBJ,EAAAA,EAAAA,UAAS,KACpDK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAC5CO,EAAeC,IAAoBR,EAAAA,EAAAA,aACnCS,EAAiBC,IAAsBV,EAAAA,EAAAA,aACvCW,EAAkBC,IAAuBZ,EAAAA,EAAAA,UAAS,KAClDa,EAAcC,IAAmBd,EAAAA,EAAAA,UAAS,KAC1CiB,EAASC,IAAclB,EAAAA,EAAAA,UAAS,KAEhCmB,EAAWC,IAAgBpB,EAAAA,EAAAA,UAAS,eAGpCmH,EAAsBC,IAA2BpH,EAAAA,EAAAA,UAAS,KAE1DR,EAAiB6H,IAAsBrH,EAAAA,EAAAA,aACvCP,EAAoB6H,IAAyBtH,EAAAA,EAAAA,aAE7CuH,EAAaC,IAAkBxH,EAAAA,EAAAA,UAASyH,eAAeC,QAAQ,gBAAkB,KAEjFC,GAAgBC,KAAqB5H,EAAAA,EAAAA,UAAS,CAAC,SAC/C6H,GAAqBC,KAAyB9H,EAAAA,EAAAA,aAE9C+H,GAAgBnJ,KAAqBoB,EAAAA,EAAAA,UAAS,SAE9CgI,GAAWC,KAAgBjI,EAAAA,EAAAA,UAAS,KACpCkI,GAAeC,KAAoBnI,EAAAA,EAAAA,UAAS,KAC5CoI,GAAiBC,KAAsBrI,EAAAA,EAAAA,UAAS,KAEhDsI,GAAgBC,KAAqBvI,EAAAA,EAAAA,UAAS,KAC9CwI,GAAoBC,KAAyBzI,EAAAA,EAAAA,UAAS,KACtD0I,GAAsBC,KAA2B3I,EAAAA,EAAAA,UAAS,KAE1D4I,GAAaC,KAAkB7I,EAAAA,EAAAA,UAAS,aAExC8I,GAAQC,KAAa/I,EAAAA,EAAAA,WAAS,IAE9BgJ,GAAgBC,KAAqBjJ,EAAAA,EAAAA,UAAS,CACnD8B,SAAU,GACVoH,cAAe,KACfC,cAAe,KACfC,aAAc,KACdC,aAAc,KACdC,iBAAkB,KAClBC,iBAAkB,KAClBC,gBAAiB,KACjBC,gBAAiB,KACjBxI,QAAS,GACTyI,kBAAmB,MAIdC,GAAcC,KAAmB5J,EAAAA,EAAAA,UAAS,KAC1C6J,GAAmBC,KAAwB9J,EAAAA,EAAAA,UAAS,KAGpD+J,GAASC,KAAchK,EAAAA,EAAAA,aAGvBiK,GAAUC,KAAelK,EAAAA,EAAAA,UAAS,CACvCmK,SAAU,UACVC,WAAY,QACZC,KAAM,QAGDC,GAAeC,KAAoBvK,EAAAA,EAAAA,UAAS,KAE5CwK,GAAgBC,KAAqBzK,EAAAA,EAAAA,UAASkI,GAAcnE,KAAI,KAAM,MACtE2G,GAAqBC,KAA0B3K,EAAAA,EAAAA,UAASwI,GAAmBzE,KAAI,KAAM,MAErF6G,GAAYC,KAAiB7K,EAAAA,EAAAA,UAAS,UAEtC8K,GAAcC,KAAmB/K,EAAAA,EAAAA,UAAS,KAE1CgL,GAAoBC,KAAyBjL,EAAAA,EAAAA,UAAS,KACtDkL,GAAwBC,KAA8BnL,EAAAA,EAAAA,UAAS,KAG/DoL,GAAgBC,KAAqBrL,EAAAA,EAAAA,UAAS,QAC9CsL,GAAmBC,KAAwBvL,EAAAA,EAAAA,UAAS,QAEpDnB,GAAkBe,KAAuBI,EAAAA,EAAAA,YAI1CT,GAAeA,KAEnB,IAAI6F,EAAAA,EAAAA,MAAc,CACAzD,WACd,IACE,MAAM,KAAEI,SAAeC,EAAAA,EAAMC,IAAK,sBAAoBuJ,EAAAA,EAAAA,SAAmB,CACvEtF,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAQ7B,GALAxE,QAAQC,IAAI,eAAgBE,GAC5B6E,EAAY7E,GAIRA,EAAK0J,iBAAiB5I,OAAS,EAAG,CACpCoG,GAAkBlH,EAAK0J,iBAAiB,IAExC,MAAMC,EAAqB3J,EAAK4J,eAAe5I,QAAO6I,GAA4B,OAArBA,EAAI1G,cAAwC,UAAf0G,EAAIC,SACxFC,EAAqB/J,EAAK4J,eAAe5I,QAAO6I,GAA4B,OAArBA,EAAI1G,cAAwC,cAAf0G,EAAIC,SACxFE,EAAkB,IAAIL,KAAuBI,GAAoB/H,KAAI6H,GAAOA,EAAI1G,eAEtF6F,GAAgBgB,GAChB,MAAMC,EAAUC,GAAiBlK,EAAK4J,gBAEG,aAArC5J,EAAK0J,iBAAiB,GAAGxK,QAC3BiL,GAA+BnK,EAAMgK,EAAiBnB,IACR,UAArC7I,EAAK0J,iBAAiB,GAAGxK,QAClCkL,GAA0BpK,EAAMgK,EAAiBnB,IACH,SAArC7I,EAAK0J,iBAAiB,GAAGxK,UAClCkL,GAA0BpK,EAAMgK,EAAiBnB,IACjDsB,GAA+BnK,EAAMgK,EAAiBnB,KAExDvD,EAAmBqE,GACnB9J,QAAQC,IAAI,sBAAuBrC,GACnC8H,EAAsBwE,GACtB9B,GAAWgC,GACXpK,QAAQC,IAAI,qBAAsBE,EAAK0J,iBAAiB,IACxDrM,IAEF,KAAO,CACL,MAAMgN,EAAkB,GACxBF,GAA+BnK,EAAMqK,EAAiBxB,IACtDuB,GAA0BpK,EAAMqK,EAAiBxB,IACjDhJ,QAAQC,IAAI,WAAY+I,GAE1B,CAGF,CAAE,MAAO1I,GACP7C,GAAU,GACVuC,QAAQC,IAAIK,EACd,GAEFmK,EACF,MACEpM,EAAS,kBACT2B,QAAQC,IAAI,aACd,GAKFyK,EAAAA,EAAAA,YAAU,KACR/M,IAAc,GACb,IAQH,MAsIMgN,GAAkBA,KACtB9B,GAAkBO,GAAmBjH,KAAI,KAAM,KAC/C6F,GAAgB,GAAG,EAgDf4C,GAAuBA,KAC3B7B,GAAuBO,GAAuBnH,KAAI,KAAM,KACxD+F,GAAqB,GAAG,EAKpBmC,GAAoBlK,GACHA,EAAKgB,QAAO6I,GAA4B,OAArBA,EAAI1G,cAAwC,UAAf0G,EAAIC,SACrD9H,KAAI,CAACC,EAAMC,KACtB,CACLD,KAAMC,EAAQ,EACdY,IAAKb,EAAKa,IACV5B,QAASe,EAAKf,QACdnB,SAAUkC,EAAKlC,SACf2K,gBAAkB,GAAEzI,EAAKf,YAAYe,EAAKlC,WAC1CyD,QAASvB,EAAK8B,cACd4G,cAAe1I,EAAK0I,cACpB3H,MAAOf,EAAKe,MACZC,SAAUhB,EAAKgB,SACfS,UAAWzB,EAAKyB,UAChBC,mBAAoB1B,EAAK0B,mBACzBiH,WAAY3I,EAAK2B,cACjBL,MAAOtB,EAAKsB,MACZrE,QAAS+C,EAAK/C,YAQdiL,GAAiCvK,MAAOI,EAAM+I,EAAcF,KAChE9D,GAAiB,GACjB,MAAM8F,EAAgB7K,EAAK0J,iBAAiB,GAAG3J,SACzC+K,EAAc9K,EAAK0J,iBAAiB,GAAGrC,aACvC0D,EAAc/K,EAAK0J,iBAAiB,GAAGpC,aACvC0D,EAAWhL,EAAK0J,iBAAiB,GAAGnC,iBACpC0D,EAAWjL,EAAK0J,iBAAiB,GAAGlC,iBACpC0D,EAAmBlL,EAAK0J,iBAAiB,GAAG/B,kBAElD,IACE,MAAM7E,EAAO,6DAA4D+H,kBAA8BC,kBAA4BC,sBAAgCC,sBAA6BC,uBAA8BC,KAGxN,KAAElL,SAAeC,EAAAA,EAAMC,IAAI4C,EAAK,CACpCqB,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAG7BxE,QAAQC,IAAI,mBAAoBE,GAGhC,MAAMmL,EAAgBnL,EAAKgB,QAAOiB,GAAsC,IAA9BA,EAAKmJ,cAActK,SACvDuK,EAAoBrL,EAAKgB,QAAOiB,GAAsC,IAA9BA,EAAKmJ,cAActK,SAC3DwK,EAAsBtL,EAAKgB,QAAOiB,GAAQA,EAAKmJ,cAActK,OAAS,IAE5EjB,QAAQC,IAAI,mBAAoBuL,GAChCxL,QAAQC,IAAI,gBAAiBqL,GAC7BtL,QAAQC,IAAI,sBAAuBwL,GAGnCpF,GAAaiF,GACb/E,GAAiBiF,GACjB/E,GAAmBgF,GACnBvG,GAAiB,EAEnB,CAAE,MAAO5E,GACPN,QAAQM,MAAM,gCAAkCA,EAClD,GAKIiK,GAA4BxK,MAAOI,EAAM+I,EAAcF,KAC3D5D,GAAgB,GAChB,MAAM4F,EAAgB7K,EAAK0J,iBAAiB,GAAG3J,SACzC+K,EAAc9K,EAAK0J,iBAAiB,GAAGrC,aACvC0D,EAAc/K,EAAK0J,iBAAiB,GAAGpC,aACvC0D,EAAWhL,EAAK0J,iBAAiB,GAAGjC,gBACpCwD,EAAWjL,EAAK0J,iBAAiB,GAAGhC,gBAE1C,IACE,MAAM5E,EAAO,sDAAqD+H,kBAA8BC,kBAA4BC,qBAA+BC,qBAA4BC,KAGjL,KAAEjL,SAAeC,EAAAA,EAAMC,IAAI4C,EAAK,CACpCqB,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAG7BxE,QAAQC,IAAI,mBAAoBE,GAGhC,MAAMmL,EAAgBnL,EAAKgB,QAAOiB,GAAsC,IAA9BA,EAAKmJ,cAActK,SACvDuK,EAAoBrL,EAAKgB,QAAOiB,GAAsC,IAA9BA,EAAKmJ,cAActK,SAC3DwK,EAAsBtL,EAAKgB,QAAOiB,GAAQA,EAAKmJ,cAActK,OAAS,IAE5EjB,QAAQC,IAAI,0BAA2BuL,GACvCxL,QAAQC,IAAI,sBAAuBqL,GACnCtL,QAAQC,IAAI,4BAA6BwL,GAGzC9E,GAAkB2E,GAClBzE,GAAsB2E,GACtBzE,GAAwB0E,GACxBrG,GAAgB,EAElB,CAAE,MAAO9E,GACPN,QAAQM,MAAM,gCAAkCA,EAClD,GAkEIxC,GAAkBmF,IAMtByI,OAAOC,KAAK1I,EAAK,SAHM,gEAGmB,EAuBtC2I,GAAc,CAClB,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAClJ,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAItIC,GAAe,CACnB,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACnK,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAMpIC,GAAyBA,CAACC,EAAY/C,KAC1C,IAAKA,GAA6B,QAAfA,EACjB,OAAO+C,EAGT,MAAMC,EAAsB,SAAfhD,EAAwB,EACpB,UAAfA,EAAyB,EACR,UAAfA,EAAyB,EACR,UAAfA,EAAyB,EACR,WAAfA,EAA0B,GACT,WAAfA,EAA0B,GACT,YAAfA,EAA2B,GACV,YAAfA,EAA2B,IAAM,EAG/C,OAAO+C,EAAW5K,QAAOC,IACvB,MAAM6K,EAAYC,GAAU9K,EAAS+K,cAAcjI,eAC7CkI,EAAcF,GAAU9K,EAAS+K,cAAchI,iBAErD,IAAIkI,EAOJ,GALEA,EADEJ,GAAaG,EACEH,EAAYG,EAAcH,EAAYG,EAEtCH,GAAaG,GAG3BC,EACH,OAAO,EAKT,OAFiBC,GAAiBD,EAAgBL,EAEnC,GACf,GAIJtB,EAAAA,EAAAA,YAAU,KACR,MAAM6B,EAAWT,GAAuBxF,GAAe0C,IACvDK,GAAsBkD,EAAS,GAC9B,CAACjG,GAAe0C,MAGnB0B,EAAAA,EAAAA,YAAU,KACR,MAAM6B,EAAWT,GAAuBlF,GAAoBoC,IAC5DO,GAA2BgD,EAAS,GACnC,CAAC3F,GAAoBoC,KAIxB,MAAMkD,GAAaM,IACjB,IAAKA,EAAS,OAAO,KACrB,MAAOC,EAAKC,EAAOC,GAAQH,EAAQI,MAAM,KACzC,OAAO,IAAI3K,KAAK0K,EAAMD,EAAQ,EAAGD,EAAI,EAGjCH,GAAmBA,CAACO,EAAMb,KAC9B,MAAMc,EAAM,IAAI7K,KACV8K,EAAW,IAAI9K,KAGrB,OAFA8K,EAASC,QAAQF,EAAIG,UAAYjB,GAE1Ba,GAAQE,CAAQ,EAKnBG,GAAcA,KAClB,MAAMC,EAAS,IAAI/D,IAAoBtH,MAAK,CAACC,EAAGC,KAC9C,MAAMoL,EAASC,SAAStL,EAAEoK,cAAchJ,MAAMrC,QAAQ,UAAW,KAC3DwM,EAASD,SAASrL,EAAEmK,cAAchJ,MAAMrC,QAAQ,UAAW,KACjE,MAA0B,QAAnB0I,GAA2B4D,EAASE,EAASA,EAASF,CAAM,IAE/DG,EAAc,IAAIjE,IAAwBxH,MAAK,CAACC,EAAGC,KACvD,MAAMoL,EAASC,SAAStL,EAAEoK,cAAchJ,MAAMrC,QAAQ,UAAW,KAC3DwM,EAASD,SAASrL,EAAEmK,cAAchJ,MAAMrC,QAAQ,UAAW,KACjE,MAA0B,QAAnB0I,GAA2B4D,EAASE,EAASA,EAASF,CAAM,IAErE/D,GAAsB8D,GACtB5D,GAA2BgE,GAC3B9D,GAAqC,QAAnBD,GAA2B,OAAS,MAAM,EAKxDgE,GAAiBA,KACrB,MAAML,EAAS,IAAI/D,IAAoBtH,MAAK,CAACC,EAAGC,IACjB,QAAtB0H,GAA8B3H,EAAEoK,cAAcjM,SAASuN,cAAczL,EAAEmK,cAAcjM,UAAY8B,EAAEmK,cAAcjM,SAASuN,cAAc1L,EAAEoK,cAAcjM,YAE3JqN,EAAc,IAAIjE,IAAwBxH,MAAK,CAACC,EAAGC,IAC1B,QAAtB0H,GAA8B3H,EAAEoK,cAAcjM,SAASuN,cAAczL,EAAEmK,cAAcjM,UAAY8B,EAAEmK,cAAcjM,SAASuN,cAAc1L,EAAEoK,cAAcjM,YAEjKmJ,GAAsB8D,GACtB5D,GAA2BgE,GAC3B5D,GAA2C,QAAtBD,GAA8B,OAAS,MAAM,GAO7D5M,GAAiBmB,KAAsBG,EAAAA,EAAAA,WAAS,GAGjDrB,GAAyBA,KAC7BkB,IAAmB,EAAM,EAIrBF,GAAyB2C,IAC7BzC,IAAmB,GACnB+J,GAAgB,GAAG,EAKfxK,GAAqBuC,UACzB,IAAIyD,EAAAA,EAAAA,MAAc,CAChBxD,QAAQC,IAAI,sBACZ,IACE,MAAM,KAAEE,SAAeC,EAAAA,EAAMiE,KAAK,cAAe,CAAC,EAAG,CACnDC,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAG7BxE,QAAQC,IAAIE,GACQ,YAAhBA,EAAKuN,OACP1N,QAAQC,IAAI,sCAEZD,QAAQM,MAAM,kCAAmCH,EAAKwN,QAE1D,CAAE,MAAOrN,GACPN,QAAQM,MAAM,SAAUA,EAC1B,CACF,MACEjC,EAAS,kBACT2B,QAAQC,IAAI,aACd,EAMF,OAEExD,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,WAASX,UAAU,qBAAoBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAC+R,EAAAA,EAAW,CACVC,aAAa,eAGjBhS,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CACZ1R,kBAAmBA,EACnBC,eAAgBA,EAChBC,cAAeA,EACfC,iBAAkBA,OAGtBV,EAAAA,EAAAA,KAACkS,EAAAA,EAAY,CACXxR,iBAAkBA,EAClB8I,aAAcA,EACdjJ,kBAAmBA,EACnBkJ,gBAAiBA,EACjB5H,SAAUA,KAEZ7B,EAAAA,EAAAA,KAAA,WAASC,UAAU,YAAWC,UAC5BF,EAAAA,EAAAA,KAAA,WAASC,UAAU,oBAAmBC,UAEpCF,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UAMEU,EAAAA,EAAAA,MAAA,WAASX,UAAU,kBAAiBC,SAAA,EAClCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAWY,QAASA,IAAMM,GAAkB,QAASL,MAAO,CAAEqR,aAAiC,SAAnB7H,GAA4B,oBAAsB,OAAQ8H,oBAAwC,SAAnB9H,GAA4B,QAAU,UAAWvJ,WAA+B,SAAnBuJ,GAA4B,MAAQ,OAAQpK,SAAC,UACnRF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAWY,QAASA,IAAMM,GAAkB,sBAAuBL,MAAO,CAAEqR,aAAiC,uBAAnB7H,GAA0C,oBAAsB,OAAQ8H,oBAAwC,uBAAnB9H,GAA0C,QAAU,UAAWvJ,WAA+B,uBAAnBuJ,GAA0C,MAAQ,OAAQpK,SAAC,wBAC3UF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAWY,QAASA,IAAMM,GAAkB,oBAAqBL,MAAO,CAAEqR,aAAiC,qBAAnB7H,GAAwC,oBAAsB,OAAQ8H,oBAAwC,qBAAnB9H,GAAwC,QAAU,UAAWvJ,WAA+B,qBAAnBuJ,GAAwC,MAAQ,OAAQpK,SAAC,sBACnUF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAWY,QAASA,IAAMM,GAAkB,uBAAwBL,MAAO,CAAEqR,aAAiC,wBAAnB7H,GAA2C,oBAAsB,OAAQ8H,oBAAwC,wBAAnB9H,GAA2C,QAAU,UAAWvJ,WAA+B,wBAAnBuJ,GAA2C,MAAQ,OAAQpK,SAAC,yBAC/UF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAWY,QAASA,IAAMM,GAAkB,kBAAmBL,MAAO,CAAEqR,aAAiC,mBAAnB7H,GAAsC,oBAAsB,OAAQ8H,oBAAwC,mBAAnB9H,GAAsC,QAAU,UAAWvJ,WAA+B,mBAAnBuJ,GAAsC,MAAQ,OAAQpK,SAAC,uBAE7TF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAgBY,QA9MhBwR,IAC7BC,aAAaC,WAAW,qBACxBD,aAAaC,WAAW,mBACxB/P,EAAS,SAAS,EA2M0DtC,UAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAKnBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAEdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAE7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SACX,SAAnBoK,IACCtK,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,8BAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uHACHF,EAAAA,EAAAA,KAAA,SACE0E,KAAK,OACLC,MAAO4G,GAAelH,SACtBO,SApQPC,IACrBlC,EAAqBkC,EAAEC,OAAOH,MAAMoB,cAAcd,QAAQ,OAAQ,KAClEuG,IAAkBgH,IAAQ,IAAUA,EAAUnO,SAAUQ,EAAEC,OAAOH,MAAMoB,cAAcd,QAAQ,OAAQ,OAAO,EAmQhFF,YAAY,4BAIlB/E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJU,EAAAA,EAAAA,MAAA,UAAQX,UAAU,WAAW0E,MAAO4G,GAAe/H,SAAW,WAAYoB,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUhP,QAASqB,EAAEC,OAAOH,UAAUzE,SAAA,EACnKF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,cACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,kBAKdU,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EAEEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAmBY,QAASA,IAAMyK,IAAWD,IAAQnL,SAAA,EAClEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,yBAEzBmL,IAASrL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,OAASF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,SAExEmL,IACCzK,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeI,cAAgB,GACtC/G,SAAWC,GAAM2G,IAAkBgH,IAAQ,IACtCA,EACH7G,aAAiC,KAAnB9G,EAAEC,OAAOH,MAAe,KAAOE,EAAEC,OAAOH,UACpDzE,SAAA,EAEJF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,GAAEzE,SAAC,YACjBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,UAEpBU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeK,cAAgB,GACtChH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IACtCA,EACH5G,aAAiC,KAAnB/G,EAAEC,OAAOH,MAAe,KAAOE,EAAEC,OAAOH,UACpDzE,SAAA,EAEJF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,GAAEzE,SAAC,YACjBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,OAClBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,IAAGzE,SAAC,eAMK,aAA3BqL,GAAe/H,SACb5C,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeM,kBAAoB,GAC1CjH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAU3G,iBAAkBhH,EAAEC,OAAOH,UAAUzE,SAAA,EAEpGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,EAAEzE,SAAC,WACjB8P,GAAa1J,KAAI,CAACgB,EAAOd,KACxBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,SAUjB5F,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeO,kBAAoB,GAC1ClH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAU1G,iBAAkBjH,EAAEC,OAAOH,UAAUzE,SAAA,EAEpGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,IAASzE,SAAC,WACxB8P,GAAa1J,KAAI,CAACgB,EAAOd,KACxBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,eAcrBxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJU,EAAAA,EAAAA,MAAA,UAAQX,UAAU,WAAW0E,MAAO4G,GAAeU,mBAAqB,kCAAmCrH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUvG,kBAAmBpH,EAAEC,OAAOH,UAAUzE,SAAA,EAC9MF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qCACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,2BAMW,UAA3BqL,GAAe/H,SACbxD,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeQ,iBAAmB,GACzCnH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUzG,gBAAiBlH,EAAEC,OAAOH,UAAUzE,SAAA,EAEnGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,EAAEzE,SAAC,WACjB6P,GAAYzJ,KAAI,CAACgB,EAAOd,KACvBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,SAUjB5F,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeS,iBAAmB,GACzCpH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUxG,gBAAiBnH,EAAEC,OAAOH,UAAUzE,SAAA,EAEnGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,IAAUzE,SAAC,WACzB6P,GAAYzJ,KAAI,CAACgB,EAAOd,KACvBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,gBAgBI,SAA3B+E,GAAe/H,SACb5C,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeM,kBAAoB,GAC1CjH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAU3G,iBAAkBhH,EAAEC,OAAOH,UAAUzE,SAAA,EAEpGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,EAAEzE,SAAC,WACjB8P,GAAa1J,KAAI,CAACgB,EAAOd,KACxBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,SAUjB5F,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeO,kBAAoB,GAC1ClH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAU1G,iBAAkBjH,EAAEC,OAAOH,UAAUzE,SAAA,EAEpGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,IAASzE,SAAC,WACxB8P,GAAa1J,KAAI,CAACgB,EAAOd,KACxBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,eAcrBxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8BACJU,EAAAA,EAAAA,MAAA,UAAQX,UAAU,WAAW0E,MAAO4G,GAAeU,mBAAqB,kCAAmCrH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUvG,kBAAmBpH,EAAEC,OAAOH,UAAUzE,SAAA,EAC9MF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qCACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eACRF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,yBAIdU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,mBAAkBC,SAAA,EAC/BU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeQ,iBAAmB,GACzCnH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUzG,gBAAiBlH,EAAEC,OAAOH,UAAUzE,SAAA,EAEnGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,EAAEzE,SAAC,WACjB6P,GAAYzJ,KAAI,CAACgB,EAAOd,KACvBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,SAUjB5F,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAO4G,GAAeS,iBAAmB,GACzCpH,SAAWC,GAAM2G,IAAkBgH,IAAQ,IAAUA,EAAUxG,gBAAiBnH,EAAEC,OAAOH,UAAUzE,SAAA,EAEnGF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAO,IAAUzE,SAAC,WACzB6P,GAAYzJ,KAAI,CAACgB,EAAOd,KACvBxG,EAAAA,EAAAA,KAAA,UAAoB2E,MAAO2C,EAAMpH,UAC/BF,EAAAA,EAAAA,KAACyS,EAAAA,GAAa,CACZ9N,MAAO2C,EACPoL,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,UALCpM,iBAiBrB,MAGV,OAENxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeY,QA5jBjCqD,UACxB,IAAIqE,EAKA1G,GAAYA,EAASmM,kBAAoBnM,EAASmM,iBAAiB5I,OAAS,GAE9EmD,QAAiBhE,EAAAA,EAAMsO,IAAK,yBAAwBhR,EAAS4E,MAAO8E,GAAgB,CAClF9C,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAGa,aAAtC9G,EAASmM,iBAAiBxK,QAC5B6F,GAAiB,GAC8B,UAAtCxH,EAASmM,iBAAiBxK,QACnC+F,GAAgB,GAC+B,SAAtC1H,EAASmM,iBAAiBxK,UACnC6F,GAAiB,GACjBE,GAAgB,IAElBpI,GAAkB,wBAIlBoH,QAAiBhE,EAAAA,EAAMiE,KAAK,yBAA0B+C,GAAgB,CACpE9C,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAGa,aAAtC9G,EAASmM,iBAAiBxK,QAC5B6F,GAAiB,GAC8B,UAAtCxH,EAASmM,iBAAiBxK,QACnC+F,GAAgB,GAC+B,SAAtC1H,EAASmM,iBAAiBxK,UACnC6F,GAAiB,GACjBE,GAAgB,IAElBpI,GAAkB,uBAEpBW,IAAc,EAohBsE5B,SAAC,wBAMhD,uBAAnBoK,IAA4ClB,EAmUrB,uBAAnBkB,IAA2ClB,GAC3CpJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAACD,EAAAA,EAAO,MAEW,qBAAnBuK,IACAtK,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAC3B6B,GAAmBA,EAAgBqD,OAAS,GAC3CxE,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,YAAWC,SAAA,CAAC,YAAU6B,EAAgBqD,OAAO,uCAC1DvD,GAAYA,EAASqM,iBACpBlO,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEF,EAAAA,EAAAA,KAAC8S,EAAAA,QAAO,CACNxO,KAAMgI,GACNrM,UAAU,SACV8S,SAAW,mCAl1B9BC,MACrB,MAAM/B,EAAM,IAAI7K,KACV0K,EAAOG,EAAIgC,cACXpC,EAAQqC,OAAOjC,EAAIkC,WAAa,GAAGC,SAAS,EAAG,KAErD,MAAQ,GADIF,OAAOjC,EAAIG,WAAWgC,SAAS,EAAG,QAC7BvC,KAASC,GAAM,EA60BqDkC,SAC7ClS,MAAO,CAAEuS,eAAgB,QAASnT,UAElCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAaY,QAASA,IA5pCtDqD,WACvB,IAAIyD,EAAAA,EAAAA,MACF,IACE,MAAMY,QAAiBhE,EAAAA,EAAMsO,IAAI,wCAAyC,CAAES,cAAejG,GAAgB,CACzG5E,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAI7BxE,QAAQC,IAAI,YAAamE,EAASjE,MAClCxC,IAEF,CAAE,MAAO2C,GACPN,QAAQM,MAAM,2BAA4BA,EAC5C,MAEAjC,EAAS,kBACT2B,QAAQC,IAAI,aACd,EA0oCmFmP,CAAiB1R,EAASqM,eAAe5H,KAAI6H,GAAOA,EAAI1G,gBAAevH,UAChHU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBACfD,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAEuS,eAAgB,QAASnT,SAAC,wBAM7CU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,MAAIyG,GAAG,UAAUxG,UAAU,SAAQC,SAAC,OACpCF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,WAAWxG,UAAU,SAAQC,UACnCF,EAAAA,EAAAA,KAAA,eAGJA,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBACdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC7B6B,EAAkBA,EAAgBuE,KAAI,CAACC,EAAMC,KAE1C5F,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsG,EAAQ,OAEfxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKf,aAEZxF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKlC,cAEZrE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAA4B,OAAvBqG,EAAK8B,cAAyB,MAAQ9B,EAAK8B,mBAElDrI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAA8B,OAAzBqG,EAAK+B,gBAA2B,MAAQ/B,EAAK+B,qBAEpDtI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK/C,aAEZxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKe,WAEZtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKgB,cAEZvH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKsB,WAEZ7H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,WAAUvG,UACnCF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,QAAQY,QAASA,IAhtC3DqD,WACtB,IAAIyD,EAAAA,EAAAA,MAEF,UACyBpD,EAAAA,EAAMuC,OAAO,uCAAwC,CAC1E2B,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,SAE3BrE,KAAM,CAAEmD,aAAchB,KAExB3E,IACF,CAAE,MAAO2C,GACPN,QAAQM,MAAM,4BAA6BA,EAC7C,MAEAjC,EAAS,kBACT2B,QAAQC,IAAI,aACd,EA+rCuFoP,CAAgBjN,EAAKkB,cAAcvH,SAAC,YAGjFF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAOhB,YAKRD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,iHAMb,wBAAnBoK,IACAtK,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAC3B8B,GAAsBA,EAAmBoD,OAAS,GACjDxE,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,YAAWC,SAAA,CAAC,qBAAmB8B,EAAmBoD,OAAO,oBAGnExE,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,MAAIyG,GAAG,UAAUxG,UAAU,SAAQC,SAAC,OACpCF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,WAAWxG,UAAU,SAAQC,UACnCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBAGRF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBACdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,SACrC8B,EAAqBA,EAAmBsE,KAAI,CAACC,EAAMC,KAEhD5F,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsG,EAAQ,OAEfxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKf,aAEZxF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKlC,cAEZrE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK8B,mBAEZrI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+B,qBAEZtI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK0I,mBAEZjP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKe,WAEZtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKgB,cAEZvH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKsB,WAEZ7H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,WAAW5F,QAASA,IAAMoB,GAAesE,EAAKa,KAAKlH,UAC5EF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK/C,gBAGdxD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAMhB,UAGND,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,2HAMb,mBAAnBoK,IACAtK,EAAAA,EAAAA,KAACyT,EAAa,CACZ9R,mBAAoBA,GACpBC,UAAWA,EACXC,SAAUA,EACVC,aAAcA,GACdC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,eAAgBA,GAChBhB,gBAAiBA,GACjBmB,mBAAoBA,GACpBlB,uBAAwBA,GACxBC,kBAAmBA,GACnBC,iBAAkBA,GAClBc,sBAAuBA,GACvBC,oBAAqBA,KAGvB,IAliBRnC,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAT,UACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,uBAAsBC,SAAA,EACnCU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,MAAIC,UAAY,mBAAiC,aAAhBkL,GAA6B,SAAW,YAAc1E,GAAG,OAAO5F,QAASA,IAAMuK,GAAe,YAAYlL,SAAC,cAC5IF,EAAAA,EAAAA,KAAA,MAAIC,UAAY,mBAAiC,UAAhBkL,GAA0B,SAAW,YAAc1E,GAAG,QAAQ5F,QAASA,IAAMuK,GAAe,SAASlL,SAAC,cAEzIU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAEfD,EAAAA,EAAAA,KAAA,MAAIa,QA93BbqD,UACnB,IAAIyD,EAAAA,EAAAA,MAAc,CAEhB,MAAM+L,EAAuB,IAAI5P,IAAIjC,EAASqM,eAAe5H,KAAI6H,GAAOA,EAAI1G,gBAKtEG,EAFqB,IAAIsE,MAAiBE,IAEP9G,QAAOqO,IAAQD,EAAqB9M,IAAI+M,EAAIlM,gBAIrF,GAFAtD,QAAQC,IAAIwD,GAEiB,IAAzBA,EAAcxC,OAEhB,YADAjB,QAAQC,IAAI,4BAId,IACE,MAAMmE,QAAiBhE,EAAAA,EAAMiE,KAAK,sBAAuBZ,EAAe,CACtEa,QAAS,CACPC,cAAgB,WAASC,EAAAA,EAAAA,WAI7BxE,QAAQC,IAAI,YAAamE,EAASjE,MAClCnC,GAAoByF,EAAcxC,QAClCtD,KACAI,KACAiK,GAAgB,IAChBE,GAAqB,IACrBW,GAAkBvC,GAAcnE,KAAI,KAAM,KAC1C4G,GAAuBnC,GAAmBzE,KAAI,KAAM,IAGtD,CAAE,MAAO7B,GACPN,QAAQM,MAAM,0BAA2BA,EAC3C,CACF,MACEjC,EAAS,kBACT2B,QAAQC,IAAI,aACd,EAs1BsDlE,SAAC,yBAGd,aAAhBiL,IACCvK,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAOwI,GACPvI,SAAWC,GAAMuI,GAAcvI,EAAEC,OAAOH,OAAOzE,SAAA,EAE/CF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,OAAMzE,SAAC,kCACrBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,QAAOzE,SAAC,kCACtBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,QAAOzE,SAAC,kCACtBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,QAAOzE,SAAC,8BACtBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,SAAQzE,SAAC,iCACvBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,SAAQzE,SAAC,iCACvBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,UAASzE,SAAC,kCACxBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,UAASzE,SAAC,kCACxBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,MAAKzE,SAAC,mCAQxBU,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,YAAWC,SAAA,CAAC,aAAWqN,GAAmBnI,OAAO,kDAC/DxE,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SACEC,UAAU,WACVyE,KAAK,WACLkP,QAAS7G,GAAe3H,OAAS,GAAK2H,GAAe8G,MAAMC,SAC3DlP,SAvyBTC,IACzBA,EAAEC,OAAO8O,QAdOG,MACpB,MAAMC,EAAuB,IAAIlQ,IAAIjC,EAASqM,eAAe5H,KAAI6H,GAAOA,EAAI1G,gBAEtEwM,EAAU1G,GAAmBjH,KAAIC,IAAI,IACtCA,EAAK+J,cACR9K,QAASe,EAAKmJ,cAAc,GAAGlK,YAE7BF,QAAOqO,IAAQK,EAAqBpN,IAAI+M,EAAIlM,gBAChDuF,GAAkBO,GAAmBjH,KAAI,KAAM,KAE/C6F,GAAgB8H,EAAQ,EAKtBF,GAEAjF,IACF,KAoyBoC9O,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oBAQvBW,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAIyG,GAAG,UAAUxG,UAAU,SAAQC,SAAC,OACpCF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENU,EAAAA,EAAAA,MAAA,OAAK6F,GAAG,UAAUxG,UAAU,SAASY,QAAS8Q,GAAezR,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENU,EAAAA,EAAAA,MAAA,OAAK6F,GAAG,UAAUxG,UAAU,SAASY,QAASwQ,GAAYnR,SAAA,EACxDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,WAAWxG,UAAU,SAAQC,UACnCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGRF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBACdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC7BqN,GAAqBA,GAAmBjH,KAAI,CAACC,EAAMC,KAClD,MAAM0N,EAAgBhI,GAAa1E,MAAK2M,GAAeA,EAAY1M,eAAiBlB,EAAK+J,cAAc7I,eAEvG,OACE7G,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAY,oBAAkBiU,EAAgB,kBAAoB,IAAKhU,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsG,EAAQ,OAEfxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKmJ,cAAc,GAAGlK,aAE7BxF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAcjM,cAE1BrE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAA0C,OAArCqG,EAAK+J,cAAcjI,cAAyB,MAAQ9B,EAAK+J,cAAcjI,mBAE9ErI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAA4C,OAAvCqG,EAAK+J,cAAchI,gBAA2B,MAAQ/B,EAAK+J,cAAchI,qBAEhFtI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAcvI,kBAE1B/H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAchJ,WAE1BtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAc/I,cAE1BvH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAczI,WAE1B7H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,WAAUvG,SAClC6B,EAAgByF,MAAKjC,GAAYA,EAASkC,eAAiBlB,EAAK+J,cAAc7I,gBAC7E7G,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAGN8B,EAAmBwF,MAAKjC,GAAYA,EAASkC,eAAiBlB,EAAK+J,cAAc7I,gBAC/E7G,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGNU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAE9BF,EAAAA,EAAAA,KAAA,SACEC,UAAU,WACVyE,KAAK,WACLkP,QAAS7G,GAAevG,GACxB5B,SAAWC,GA16BlCuP,EAACvP,EAAG2B,KAC/B,MAAM6N,EAAgB,IAAItH,IAC1BsH,EAAc7N,GAAS3B,EAAEC,OAAO8O,QAChC5G,GAAkBqH,GAGlB,MAAMC,EAAmB,IACpB/G,GAAmB/G,GAAO8J,cAC7B9K,QAAS+H,GAAmB/G,GAAOkJ,cAAc,GAAGlK,SAGtDrB,QAAQC,IAAIkQ,GACRzP,EAAEC,OAAO8O,QACXzH,IAAgBoI,GAAY,IAAIA,EAAUD,KAG1CnI,IAAgBoI,GAAYA,EAASjP,QAAOqO,GAAOA,EAAIlM,eAAiB6M,EAAiB7M,gBAC3F,EAy5BmE2M,CAAqBvP,EAAG2B,MAE3CxG,EAAAA,EAAAA,KAAA,SAAOC,UAAU,mBAO3BD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uBAEb,IAGH,YAOQ,UAAhBkL,IACAvK,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJU,EAAAA,EAAAA,MAAA,UACEX,UAAU,WACV0E,MAAOwI,GACPvI,SAAWC,GAAMuI,GAAcvI,EAAEC,OAAOH,OAAOzE,SAAA,EAE/CF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,OAAMzE,SAAC,kCACrBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,QAAOzE,SAAC,kCACtBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,QAAOzE,SAAC,kCACtBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,QAAOzE,SAAC,8BACtBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,SAAQzE,SAAC,iCACvBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,SAAQzE,SAAC,iCACvBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,UAASzE,SAAC,kCACxBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,UAASzE,SAAC,kCACxBF,EAAAA,EAAAA,KAAA,UAAQ2E,MAAM,MAAKzE,SAAC,kCAGvBoJ,GACCtJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAACD,EAAAA,EAAO,MAEPuJ,EA8HC,IA7HF1I,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BU,EAAAA,EAAAA,MAAA,MAAIX,UAAU,YAAWC,SAAA,CAAC,aAAWuN,GAAuBrI,OAAO,oDACnExE,EAAAA,EAAAA,MAAA,OAAKX,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SACEC,UAAU,WACVyE,KAAK,WACLkP,QAAS3G,GAAoB7H,OAAS,GAAK6H,GAAoB4G,MAAMC,SACrElP,SA74BVC,IAC9BA,EAAEC,OAAO8O,QAdYY,MACzB,MAAMR,EAAuB,IAAIlQ,IAAIjC,EAASqM,eAAe5H,KAAI6H,GAAOA,EAAI1G,gBAEtEwM,EAAUxG,GAAuBnH,KAAIC,IAAI,IAC1CA,EAAK+J,cACR9K,QAASe,EAAKmJ,cAAc,GAAGlK,YAE7BF,QAAOqO,IAAQK,EAAqBpN,IAAI+M,EAAIlM,gBAChDyF,GAAuBO,GAAuBnH,KAAI,KAAM,KAExD+F,GAAqB4H,EAAQ,EAK3BO,GAEAzF,IACF,KA04B0C/O,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oBAQvBW,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,MAAIyG,GAAG,UAAUxG,UAAU,SAAQC,SAAC,OACpCF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENU,EAAAA,EAAAA,MAAA,OAAK6F,GAAG,UAAUxG,UAAU,SAASY,QAAS8Q,GAAezR,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENU,EAAAA,EAAAA,MAAA,OAAK6F,GAAG,UAAUxG,UAAU,SAASY,QAASwQ,GAAYnR,SAAA,EACxDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,UAAUxG,UAAU,SAAQC,UAClCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAENF,EAAAA,EAAAA,KAAA,OAAKyG,GAAG,WAAWxG,UAAU,SAAQC,UACnCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGRF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBACdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC7BuN,GAAyBA,GAAuBnH,KAAI,CAACC,EAAMC,KAC1D,MAAM0N,EAAgB9H,GAAkB5E,MAAK2M,GAAeA,EAAY1M,eAAiBlB,EAAK+J,cAAc7I,eAE5G,OACE7G,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAT,SAAA,EACEU,EAAAA,EAAAA,MAAA,OAAKX,UAAY,oBAAkBiU,EAAgB,kBAAoB,IAAKhU,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsG,EAAQ,OAEfxG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAKmJ,cAAc,GAAGlK,aAE7BxF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAcjM,cAE1BrE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAA0C,OAArCqG,EAAK+J,cAAcjI,cAAyB,MAAQ9B,EAAK+J,cAAcjI,mBAE9ErI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAA4C,OAAvCqG,EAAK+J,cAAchI,gBAA2B,MAAQ/B,EAAK+J,cAAchI,qBAEhFtI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAcvI,kBAE1B/H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAchJ,WAE1BtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAc/I,cAE1BvH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,UAAU5F,QAASA,IAAMoB,GAAesE,EAAK+J,cAAclJ,KAAKlH,UACzFF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqG,EAAK+J,cAAczI,WAE1B7H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASwG,GAAG,WAAUvG,SAClC6B,EAAgByF,MAAKjC,GAAYA,EAASkC,eAAiBlB,EAAK+J,cAAc7I,gBAC7E7G,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAGN8B,EAAmBwF,MAAKjC,GAAYA,EAASkC,eAAiBlB,EAAK+J,cAAc7I,gBAC/E7G,EAAAA,EAAAA,MAAA,OAAKX,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAGNU,EAAAA,EAAAA,MAAA,OAAKX,UAAU,kBAAiBC,SAAA,EAE9BF,EAAAA,EAAAA,KAAA,SACEC,UAAU,WACVyE,KAAK,WACLkP,QAAS3G,GAAoBzG,GAC7B5B,SAAWC,GAhhCzC4P,EAAC5P,EAAG2B,KAC9B,MAAM6N,EAAgB,IAAIpH,IAC1BoH,EAAc7N,GAAS3B,EAAEC,OAAO8O,QAChC1G,GAAuBmH,GAGvB,MAAMC,EAAmB,IACpB7G,GAAuBjH,GAAO8J,cACjC9K,QAASiI,GAAuBjH,GAAOkJ,cAAc,GAAGlK,SAG1DrB,QAAQC,IAAIkQ,GACRzP,EAAEC,OAAO8O,QACXvH,IAAqBkI,GAAY,IAAIA,EAAUD,KAG/CjI,IAAqBkI,GAAYA,EAASjP,QAAOqO,GAAOA,EAAIlM,eAAiB6M,EAAiB7M,gBAChG,EA+/ByEgN,CAAoB5P,EAAG2B,MAE1CxG,EAAAA,EAAAA,KAAA,SAAOC,UAAU,mBAO3BD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uBAEb,IAGH,YASd,yBAmP1BD,EAAAA,EAAAA,KAAE6I,EAAe,CACf5H,gBAAiBA,GACjBC,uBAAwBA,GACxBC,kBAAmBA,GACnBC,iBAAkBA,OAMnB,C,wBC7nDPsT,EAAOC,QAAU,EAAjBD,M,qCCEAE,OAAOC,eAAeF,EAAS,aAAc,CAC3ChQ,OAAO,IAGT,IAUgCmQ,EAV5BC,EAAe,WAAc,SAASC,EAAiBlQ,EAAQmQ,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAM7P,OAAQ8P,IAAK,CAAE,IAAIC,EAAaF,EAAMC,GAAIC,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMV,OAAOC,eAAe/P,EAAQqQ,EAAWI,IAAKJ,EAAa,CAAE,CAAE,OAAO,SAAUK,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYT,EAAiBQ,EAAYG,UAAWF,GAAiBC,GAAaV,EAAiBQ,EAAaE,GAAqBF,CAAa,CAAG,CAA7hB,GAEfI,EAASxV,EAAQ,OAEjByV,GAM4Bf,EANKc,IAMgBd,EAAIgB,WAAahB,EAAM,CAAEiB,QAASjB,GAJnFkB,EAAQ5V,EAAQ,OAEhB6V,EAAa7V,EAAQ,OAUzB,IAII8V,EAAc,SAAUC,GAG1B,SAASD,EAAYjB,IAbvB,SAAyBmB,EAAUZ,GAAe,KAAMY,aAAoBZ,GAAgB,MAAM,IAAIa,UAAU,oCAAwC,CAcpJC,CAAgBC,KAAML,GAEtB,IAAIM,EAdR,SAAoCC,EAAMC,GAAQ,IAAKD,EAAQ,MAAM,IAAIE,eAAe,6DAAgE,OAAOD,GAAyB,kBAATA,GAAqC,oBAATA,EAA8BD,EAAPC,CAAa,CAc/NE,CAA2BL,MAAOL,EAAYW,WAAajC,OAAOkC,eAAeZ,IAAcQ,KAAKH,KAAMtB,IAGtH,OADAuB,EAAMO,MAAQ,CAAC,EACRP,CACT,CAkCA,OAlDF,SAAmBQ,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIZ,UAAU,kEAAoEY,GAAeD,EAASrB,UAAYf,OAAOsC,OAAOD,GAAcA,EAAWtB,UAAW,CAAEwB,YAAa,CAAExS,MAAOqS,EAAU5B,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe4B,IAAYrC,OAAOwC,eAAiBxC,OAAOwC,eAAeJ,EAAUC,GAAcD,EAASH,UAAYI,EAAY,CAO3eI,CAAUnB,EAAaC,GAWvBpB,EAAamB,EAAa,CAAC,CACzBX,IAAK,WACL5Q,MAAO,WACL,OAAOqR,EAAMsB,SAASC,WAAMC,EAAWC,UACzC,GACC,CACDlC,IAAK,oBACL5Q,MAAO,WACL,IAAI+S,EAASnB,KAAKtB,MACd3Q,EAAOoT,EAAOpT,KACdmE,EAAUiP,EAAOjP,QACjBkP,EAAYD,EAAOC,UACnBC,EAAqBF,EAAOE,mBAC5BC,EAAQH,EAAOG,MACf/S,EAAS4S,EAAO5S,OAChBgT,EAAQJ,EAAOI,MACf7S,EAAUyS,EAAOzS,QAErBsR,KAAKQ,MAAMgB,KAAOlI,OAAOC,KAAKyG,KAAKe,SAAShT,EAAMuT,EAAOpP,EAASkP,EAAWC,GAAqB9S,EAAQgT,EAAO7S,EACnH,GACC,CACDsQ,IAAK,YACL5Q,MAAO,WACL,OAAO4R,KAAKQ,MAAMgB,IACpB,GACC,CACDxC,IAAK,SACL5Q,MAAO,WACL,OAAO,IACT,KAGKuR,CACT,CA7CkB,CA6ChBL,EAAQE,QAAQiC,WAElB9B,EAAY+B,aAAerD,OAAOsD,OAAOjC,EAAWgC,aAnDjC,CACjBnT,OAAQ,WAmDVoR,EAAYiC,UAAYlC,EAAWkC,UACnCxD,EAAAA,QAAkBuB,C,qCC3ElBtB,OAAOC,eAAeF,EAAS,aAAc,CAC3ChQ,OAAO,IAGT,IAYgCmQ,EAZ5BsD,EAAWxD,OAAOsD,QAAU,SAAUpT,GAAU,IAAK,IAAIoQ,EAAI,EAAGA,EAAIuC,UAAUrS,OAAQ8P,IAAK,CAAE,IAAImD,EAASZ,UAAUvC,GAAI,IAAK,IAAIK,KAAO8C,EAAczD,OAAOe,UAAU2C,eAAe5B,KAAK2B,EAAQ9C,KAAQzQ,EAAOyQ,GAAO8C,EAAO9C,GAAU,CAAE,OAAOzQ,CAAQ,EAE3PiQ,EAAe,WAAc,SAASC,EAAiBlQ,EAAQmQ,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAM7P,OAAQ8P,IAAK,CAAE,IAAIC,EAAaF,EAAMC,GAAIC,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMV,OAAOC,eAAe/P,EAAQqQ,EAAWI,IAAKJ,EAAa,CAAE,CAAE,OAAO,SAAUK,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYT,EAAiBQ,EAAYG,UAAWF,GAAiBC,GAAaV,EAAiBQ,EAAaE,GAAqBF,CAAa,CAAG,CAA7hB,GAEfI,EAASxV,EAAQ,OAEjByV,GAM4Bf,EANKc,IAMgBd,EAAIgB,WAAahB,EAAM,CAAEiB,QAASjB,GAJnFkB,EAAQ5V,EAAQ,OAEhB6V,EAAa7V,EAAQ,OAYzB,IAAI0S,EAAU,SAAUqD,GAGtB,SAASrD,EAAQmC,IATnB,SAAyBmB,EAAUZ,GAAe,KAAMY,aAAoBZ,GAAgB,MAAM,IAAIa,UAAU,oCAAwC,CAUpJC,CAAgBC,KAAMzD,GAEtB,IAAI0D,EAVR,SAAoCC,EAAMC,GAAQ,IAAKD,EAAQ,MAAM,IAAIE,eAAe,6DAAgE,OAAOD,GAAyB,kBAATA,GAAqC,oBAATA,EAA8BD,EAAPC,CAAa,CAU/NE,CAA2BL,MAAOzD,EAAQ+D,WAAajC,OAAOkC,eAAehE,IAAU4D,KAAKH,KAAMtB,IAG9G,OADAuB,EAAMc,SAAWd,EAAMc,SAASiB,KAAK/B,GAC9BA,CACT,CA0GA,OAtHF,SAAmBQ,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIZ,UAAU,kEAAoEY,GAAeD,EAASrB,UAAYf,OAAOsC,OAAOD,GAAcA,EAAWtB,UAAW,CAAEwB,YAAa,CAAExS,MAAOqS,EAAU5B,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe4B,IAAYrC,OAAOwC,eAAiBxC,OAAOwC,eAAeJ,EAAUC,GAAcD,EAASH,UAAYI,EAAY,CAG3eI,CAAUvE,EAASqD,GAWnBpB,EAAajC,EAAS,CAAC,CACrByC,IAAK,WACL5Q,MAAO,WACL,OAAOqR,EAAMsB,SAASC,WAAMC,EAAWC,UACzC,GACC,CACDlC,IAAK,eACL5Q,MAAO,SAAsB6T,GAC3B,IAAIC,EAAUhB,UAAUrS,OAAS,QAAsBoS,IAAjBC,UAAU,IAAmBA,UAAU,GAE7E,GAAI5H,OAAO6I,UAAUC,iBAAkB,CACrCH,EAAMI,iBAEN,IAAIlB,EAASnB,KAAKtB,MACd3Q,EAAOoT,EAAOpT,KACdmE,EAAUiP,EAAOjP,QACjBkP,EAAYD,EAAOC,UACnB5E,EAAW2E,EAAO3E,SAClB6E,EAAqBF,EAAOE,mBAC5BC,EAAQH,EAAOG,MAGfvL,EAAUmM,GAA2B,oBAATnU,EAAsBA,IAASA,EAE3DuU,EAAO,IAAIC,KAAK,CAACjB,EAAQ,SAAW,IAAI,EAAI7B,EAAM+C,OAAOzM,EAAS7D,EAASkP,EAAWC,KAG1F,OAFA/H,OAAO6I,UAAUM,WAAWH,EAAM9F,IAE3B,CACT,CACF,GACC,CACDwC,IAAK,mBACL5Q,MAAO,SAA0B6T,GAC/B,IAAIS,EAAS1C,KAUbA,KAAKtB,MAAMpU,QAAQ2X,GARR,SAAcU,IACP,IAAZA,EAIJD,EAAOE,aAAaX,GAAO,GAHzBA,EAAMI,gBAIV,GAGF,GACC,CACDrD,IAAK,kBACL5Q,MAAO,SAAyB6T,IACgB,IAA9BjC,KAAKtB,MAAMpU,QAAQ2X,GAEjCA,EAAMI,iBAGRrC,KAAK4C,aAAaX,EACpB,GACC,CACDjD,IAAK,cACL5Q,MAAO,WACL,IAAIyU,EAAS7C,KAEb,OAAO,SAAUiC,GACf,GAAoC,oBAAzBY,EAAOnE,MAAMpU,QACtB,OAAOuY,EAAOnE,MAAMoE,aAAeD,EAAOE,iBAAiBd,GAASY,EAAOG,gBAAgBf,GAE7FY,EAAOD,aAAaX,EACtB,CACF,GACC,CACDjD,IAAK,SACL5Q,MAAO,WACL,IAAI6U,EAASjD,KAETkD,EAAUlD,KAAKtB,MACf3Q,EAAOmV,EAAQnV,KACfmE,EAAUgR,EAAQhR,QAClBkP,EAAY8B,EAAQ9B,UACpB5E,EAAW0G,EAAQ1G,SACnB8E,EAAQ4B,EAAQ5B,MAChB3X,EAAWuZ,EAAQvZ,SAGnB0X,GAFU6B,EAAQ5Y,QACH4Y,EAAQJ,aACFI,EAAQ7B,oBAC7B8B,EAtGV,SAAkC5E,EAAK6E,GAAQ,IAAI7U,EAAS,CAAC,EAAG,IAAK,IAAIoQ,KAAKJ,EAAW6E,EAAKC,QAAQ1E,IAAM,GAAkBN,OAAOe,UAAU2C,eAAe5B,KAAK5B,EAAKI,KAAcpQ,EAAOoQ,GAAKJ,EAAII,IAAM,OAAOpQ,CAAQ,CAsG1M+U,CAAyBJ,EAAS,CAAC,OAAQ,UAAW,YAAa,WAAY,QAAS,WAAY,UAAW,eAAgB,uBAGtIK,EADsC,qBAAXjK,OACA,GAAK0G,KAAKe,SAAShT,EAAMuT,EAAOpP,EAASkP,EAAWC,GAEnF,OAAO/B,EAAQE,QAAQgE,cACrB,IACA3B,EAAS,CACP4B,SAAUjH,GACT2G,EAAM,CACPO,IAAK,SAAaC,GAChB,OAAOV,EAAOU,KAAOA,CACvB,EACApV,OAAQ,QACRgV,KAAMA,EACNjZ,QAAS0V,KAAK4D,gBAEhBja,EAEJ,KAGK4S,CACT,CArHc,CAqHZ+C,EAAQE,QAAQiC,WAElBlF,EAAQmF,aAAehC,EAAWgC,aAClCnF,EAAQqF,UAAYlC,EAAWkC,UAC/BxD,EAAAA,QAAkB7B,C,mCCnJlB8B,OAAOC,eAAeF,EAAS,aAAc,CAC3ChQ,OAAO,IAGT,IAAIyV,EAA4B,oBAAXC,QAAoD,kBAApBA,OAAOC,SAAwB,SAAUxF,GAAO,cAAcA,CAAK,EAAI,SAAUA,GAAO,OAAOA,GAAyB,oBAAXuF,QAAyBvF,EAAIqC,cAAgBkD,QAAUvF,IAAQuF,OAAO1E,UAAY,gBAAkBb,CAAK,EAE3Q,SAASyF,EAAmBC,GAAO,GAAItV,MAAMC,QAAQqV,GAAM,CAAE,IAAK,IAAItF,EAAI,EAAGuF,EAAOvV,MAAMsV,EAAIpV,QAAS8P,EAAIsF,EAAIpV,OAAQ8P,IAAOuF,EAAKvF,GAAKsF,EAAItF,GAAM,OAAOuF,CAAM,CAAS,OAAOvV,MAAMwV,KAAKF,EAAQ,CAElM,IAAIG,EAAWhG,EAAQgG,SAAW,WAChC,MAAQ,iCAAiCC,KAAKlC,UAAUmC,UAE1D,EAEIC,EAAUnG,EAAQmG,QAAU,SAAiBC,GAC/C,OAAO7V,MAAMC,QAAQ4V,IAAUA,EAAMlH,OAAM,SAAUF,GACnD,MAAqE,YAA9C,qBAARA,EAAsB,YAAcyG,EAAQzG,OAAwBA,aAAezO,MACpG,GACF,EAEI8V,EAAWrG,EAAQqG,SAAW,SAAkBD,GAClD,OAAO7V,MAAMC,QAAQ4V,IAAUA,EAAMlH,OAAM,SAAUF,GACnD,OAAOzO,MAAMC,QAAQwO,EACvB,GACF,EAEIsH,EAAetG,EAAQsG,aAAe,SAAsBF,GAC9D,OAAO7V,MAAMwV,KAAKK,EAAMzU,KAAI,SAAU4U,GACpC,OAAOtG,OAAO+E,KAAKuB,EACrB,IAAGC,QAAO,SAAUjV,EAAGC,GACrB,OAAO,IAAIrC,IAAI,GAAGsX,OAAOb,EAAmBrU,GAAIqU,EAAmBpU,IACrE,GAAG,IACL,EAEIkV,EAAe1G,EAAQ0G,aAAe,SAAsBC,EAAO7S,GAGrE,IAAI8S,EAFJ9S,EAAUA,GAAWwS,EAAaK,GAG9BE,EAAa/S,EACbqS,EAAQrS,KACV8S,EAAe9S,EAAQnC,KAAI,SAAUmV,GACnC,OAAOA,EAAOC,KAChB,IACAF,EAAa/S,EAAQnC,KAAI,SAAUmV,GACjC,OAAOA,EAAOlG,GAChB,KAGF,IAAIjR,EAAOgX,EAAMhV,KAAI,SAAUqV,GAC7B,OAAOH,EAAWlV,KAAI,SAAUmV,GAC9B,OAAOG,EAAeH,EAAQE,EAChC,GACF,IACA,MAAO,CAACJ,GAAcH,OAAOb,EAAmBjW,GAClD,EAEIsX,EAAiBjH,EAAQiH,eAAiB,SAAwBrW,EAAUuP,GAC9E,IAAI+G,EAAatW,EAASN,QAAQ,eAAgB,OAAO8L,MAAM,KAAKoK,QAAO,SAAUW,EAAGC,EAAG7G,EAAGsF,GAC5F,IAAI7V,EAAQmX,EAAEC,GACd,QAAcvE,IAAV7S,GAAiC,OAAVA,EAGzB,OAAOA,EAFP6V,EAAIwB,OAAO,EAIf,GAAGlH,GAEH,YAAsB0C,IAAfqE,EAA2BtW,KAAYuP,EAAMA,EAAIvP,GAAY,GAAKsW,CAC3E,EAEII,EAAiBtH,EAAQsH,eAAiB,SAAwBC,GACpE,MAA0B,qBAAZA,GAAuC,OAAZA,EAAmB,GAAKA,CACnE,EAEIC,EAASxH,EAAQwH,OAAS,SAAgB7X,GAC5C,IAAIqT,EAAYF,UAAUrS,OAAS,QAAsBoS,IAAjBC,UAAU,GAAmBA,UAAU,GAAK,IAChFG,EAAqBH,UAAUrS,OAAS,QAAsBoS,IAAjBC,UAAU,GAAmBA,UAAU,GAAK,IAE7F,OAAOnT,EAAKgB,QAAO,SAAUT,GAC3B,OAAOA,CACT,IAAGyB,KAAI,SAAUqN,GACf,OAAOA,EAAIrN,KAAI,SAAU4V,GACvB,OAAOD,EAAeC,EACxB,IAAG5V,KAAI,SAAU8V,GACf,MAAO,GAAKxE,EAAqBwE,EAASxE,CAC5C,IAAGyE,KAAK1E,EACV,IAAG0E,KAAK,KACV,EAEIC,EAAa3H,EAAQ2H,WAAa,SAAoBhY,EAAMmE,EAASkP,EAAWC,GAClF,OAAOuE,EAAO1T,EAAU,CAACA,GAAS2S,OAAOb,EAAmBjW,IAASA,EAAMqT,EAAWC,EACxF,EAEI2E,EAAY5H,EAAQ4H,UAAY,SAAmBjY,EAAMmE,EAASkP,EAAWC,GAC/E,OAAOuE,EAAOd,EAAa/W,EAAMmE,GAAUkP,EAAWC,EACxD,EAEI4E,EAAa7H,EAAQ6H,WAAa,SAAoBlY,EAAMmE,EAASkP,EAAWC,GAClF,OAAOnP,EAAUA,EAAQ4T,KAAK1E,GAAa,KAAOrT,EAAOA,EAAKW,QAAQ,KAAM,KAC9E,EAEI8T,EAAQpE,EAAQoE,MAAQ,SAAezU,EAAMmE,EAASkP,EAAWC,GACnE,GAAIkD,EAAQxW,GAAO,OAAOiY,EAAUjY,EAAMmE,EAASkP,EAAWC,GAC9D,GAAIoD,EAAS1W,GAAO,OAAOgY,EAAWhY,EAAMmE,EAASkP,EAAWC,GAChE,GAAoB,kBAATtT,EAAmB,OAAOkY,EAAWlY,EAAMmE,EAASkP,GAC/D,MAAM,IAAItB,UAAU,sEACtB,EAEe1B,EAAQ2C,SAAW,SAAkBhT,EAAMuT,EAAOpP,EAASkP,EAAWC,GACnF,IAAI6E,EAAM1D,EAAMzU,EAAMmE,EAASkP,EAAWC,GACtClT,EAAOiW,IAAa,kBAAoB,WACxC9B,EAAO,IAAIC,KAAK,CAACjB,EAAQ,SAAW,GAAI4E,GAAM,CAAE/X,KAAMA,IACtDgY,EAAU,QAAUhY,EAAO,mBAAqBmT,EAAQ,SAAW,IAAM4E,EAEzEE,EAAM9M,OAAO8M,KAAO9M,OAAO+M,UAE/B,MAAsC,qBAAxBD,EAAIE,gBAAkCH,EAAUC,EAAIE,gBAAgBhE,EACpF,C,qCChHAlE,EAAQ7B,aAAgC0E,EAExC,IAEIsF,EAAaC,EAFD3c,EAAQ,QAMpB4c,EAASD,EAFD3c,EAAQ,QAIpB,SAAS2c,EAAuBjI,GAAO,OAAOA,GAAOA,EAAIgB,WAAahB,EAAM,CAAEiB,QAASjB,EAAO,CAEtDgI,EAAW/G,QACrCpB,EAAQ7B,QAAUkK,EAAOjH,O,qCChBvCnB,OAAOC,eAAeF,EAAS,aAAc,CAC3ChQ,OAAO,IAETgQ,EAAQsI,kBAAoBtI,EAAQsD,aAAetD,EAAQwD,eAAYX,EAEvE,IAMgC1C,EAN5Bc,EAASxV,EAAQ,OAIjB8c,IAE4BpI,EAJKc,IAIgBd,EAAIgB,WAFxC1V,EAAQ,QAITuU,EAAQwD,UAAY,CAClC7T,MAAM,EAAI4Y,EAAWC,WAAW,CAACD,EAAWE,OAAQF,EAAWnC,MAAOmC,EAAWG,OAAOC,WACxF7U,QAASyU,EAAWnC,MACpBjW,OAAQoY,EAAWE,OACnBzF,UAAWuF,EAAWE,OACtBrK,SAAUmK,EAAWE,OACrBvF,MAAOqF,EAAWK,KAClB1c,QAASqc,EAAWG,KACpBhE,aAAc6D,EAAWK,KACzB3F,mBAAoBsF,EAAWE,QAGdzI,EAAQsD,aAAe,CACxCN,UAAW,IACX5E,SAAU,4BACV8E,OAAO,EACPwB,cAAc,EACdzB,mBAAoB,KAGEjD,EAAQsI,kBAAoB,CAAC,OAAQ,U","sources":["components/helpers/Loading.js","components/tools/ProfileMobileSlider.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/EPCMatcher/LeadGenerator.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/metaProps.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list!</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\nimport SavedProperties from '../b2bModals/SavedProperties'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl,\n  savedActionShow,handleSavedActionClose, setLeadGenSection, latestFavourites, handleSavedActionShow, setLatestFavourites, setSavedActionShow  }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState()\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index]) {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setMatchingProperties({})\n    setExpandedItems(new Set())\n    setLoading(true)\n    setSearch(false)\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                  {expandedItems.has(index) ? '-' : '+'}\n                                </button>\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>❤️</h3>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>⭐️</h3>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n      <SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\n\nexport default ManualMatcher","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, newFavouriteIds, dateFilter)\n              loadCombinedPropertiesFromUser(data, newFavouriteIds, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            console.log('saved properties ->', savedProperties)\n            setArchivedProperties(archivedFavourites)\n            setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n\n          } else {\n            const allFavouriteIds = []\n            loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n\n          }\n\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        handleSavedActionShow()\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {  // Adjusted to take an array of IDs\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n        // Optionally, refresh data or update UI accordingly\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, favouriteIds, dateFilter) => {\n    setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, favouriteIds, dateFilter) => {\n    setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n    }\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    const days = dateFilter === '1day' ? 2 :\n      dateFilter === '2days' ? 3 :\n        dateFilter === '3days' ? 4 :\n          dateFilter === '7days' ? 8 :\n            dateFilter === '4weeks' ? 28 :\n              dateFilter === '8weeks' ? 56 :\n                dateFilter === '12weeks' ? 84 :\n                  dateFilter === '16weeks' ? 112 : 0\n    // dateFilter === 'all' ? 10000 : 0\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      let mostRecentDate\n      if (addedDate && reducedDate) {\n        mostRecentDate = addedDate > reducedDate ? addedDate : reducedDate\n      } else {\n        mostRecentDate = addedDate || reducedDate // Use the non-null date\n      }\n\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      const isWithin = isWithinLastDays(mostRecentDate, days)\n\n      return isWithin\n    })\n  }\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    const pastDate = new Date()\n    pastDate.setDate(now.getDate() - days)\n    // console.log(`Comparing ${date} with ${pastDate}`)\n    return date >= pastDate\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n              <section className='property-finder'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Explore properties')} style={{ borderBottom: leadGenSection === 'Explore properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore properties' ? '700' : '400' }}>Explore properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Archived properties')} style={{ borderBottom: leadGenSection === 'Archived properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived properties' ? '700' : '400' }}>Archived properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                  </div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n\n\n                </div>\n                <hr className='title-line' />\n\n                <div className='lead-generator'>\n\n                  <div className='property-results'>\n                    {leadGenSection === 'Home' ?\n                      <>\n                        <div className='lead-gen-inputs'>\n                          <h3 className='sub-title'>Set your search criteria</h3>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Postcode(s)</h3>\n                              <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                              <input\n                                type=\"text\"\n                                value={leadGenDetails.postcode}\n                                onChange={inputPostcode}\n                                placeholder=\"Enter postcode...\"\n                              />\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Channel</h3>\n                              <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                <option>Lettings</option>\n                                <option>Sales</option>\n                                <option>Both</option>\n\n                              </select>\n                            </div>\n                          </div>\n                          <div>\n\n                            <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                              <h3 className='sub-title'>Add some more detail</h3>\n\n                              {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                            </div>\n                            {expand ?\n                              <>\n                                <div className='single-title-double'>\n                                  <h3>Bedrooms</h3>\n                                  <div className='double-dropdowns'>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_min || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No min</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                    </select>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_max || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No max</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                      <option value=\"7\">7</option>\n                                    </select>\n                                  </div>\n\n                                </div>\n                                {\n                                  leadGenDetails.channel === 'Lettings' ?\n                                    <>\n                                      <div className='single-title-double'>\n                                        <h3>Price</h3>\n                                        <div className='double-dropdowns'>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_min || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                          >\n                                            <option value={0}>No min</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_max || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                          >\n                                            <option value={10000000}>No max</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n\n                                        </div>\n\n                                      </div>\n                                      <div className='single-input-block'>\n                                        <div className='input-block large'>\n                                          <h3>Furnishing status</h3>\n                                          <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                            <option>Either furnished or unfurnished</option>\n                                            <option>Furnished</option>\n                                            <option>Unfurnished</option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                    </>\n                                    :\n                                    leadGenDetails.channel === 'Sales' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                            >\n                                              <option value={100000000}>No max</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Both' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Rental price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                              >\n                                                <option value={10000000}>No max</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                          <div className='single-input-block'>\n                                            <div className='input-block large'>\n                                              <h3>Rental furnishing status</h3>\n                                              <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                <option>Either furnished or unfurnished</option>\n                                                <option>Furnished</option>\n                                                <option>Unfurnished</option>\n                                              </select>\n                                            </div>\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Sales price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n\n\n                                        : ''}\n\n                              </>\n                              : ''}\n                          </div>\n                          <div className='lead-gen-save'>\n                            <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                          </div>\n                        </div>\n\n                      </>\n                      :\n                      leadGenSection === 'Explore properties' && !rentalLoading ?\n                        <>\n                          <div className='results-block'>\n                            <div className=\"property-insight-nav\">\n                              <div className=\"property-insight-buttons\">\n                                <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                              </div>\n                              <div className='save-section'>\n                                <div className=\"print-icon\"></div>\n\n                                <h3 onClick={addFavourite}>Save selection</h3>\n                              </div>\n                            </div>\n                            {channelView === 'Lettings' ?\n                              <>\n                                <div className='filter-section'>\n                                  <h3>Filter properties</h3>\n                                  <select\n                                    className='dropdown'\n                                    value={dateFilter}\n                                    onChange={(e) => setDateFilter(e.target.value)}\n                                  >\n                                    <option value=\"1day\">Updated in the last 24 hours</option>\n                                    <option value=\"2days\">Updated in the last 48 hours</option>\n                                    <option value=\"3days\">Updated in the last 72 hours</option>\n                                    <option value=\"7days\">Updated in the last week</option>\n                                    <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                    <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                    <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                    <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                    <option value=\"all\">All matching properties</option>\n                                  </select>\n                                </div>\n                                {/* {rentalLoading ?\n                                  <div className='property-table-loading'>\n                                    <Loading />\n                                  </div>\n                                  : !rentalLoading ? */}\n                                <>\n                                  <div className='title-section'>\n                                    <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                    <div className='select-all-box'>\n                                      <h5>Select all</h5>\n                                      <div className='custom-checkbox'>\n                                        <input\n                                          className='checkbox'\n                                          type=\"checkbox\"\n                                          checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                          onChange={handleSelectAllChange}\n                                        />\n                                        <label className='label'>\n\n                                        </label>\n\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                  <div className='results-headers'>\n                                    <h5 id='column1' className='column'>#</h5>\n                                    <div id='column2' className='column' >\n                                      <h5>Address</h5>\n                                    </div>\n                                    <div id='column3' className='column' onClick={sortByPostcode}>\n                                      <h5>Postcode</h5>\n                                      <h5>⬇️</h5>\n                                    </div>\n                                    <div id='column4' className='column'>\n                                      <h5>Added</h5>\n                                    </div>\n                                    <div id='column5' className='column'>\n                                      <h5>Reduced</h5>\n                                    </div>\n                                    <div id='column6' className='column'>\n                                      <h5>Property type</h5>\n                                    </div>\n                                    <div id='column7' className='column' onClick={sortByPrice}>\n                                      <h5>Price</h5>\n                                      <h5>⬇️</h5>\n                                    </div>\n                                    <div id='column8' className='column'>\n                                      <h5>Bedrooms</h5>\n                                    </div>\n                                    <div id='column9' className='column'>\n                                      <h5>Agent</h5>\n                                    </div>\n                                    <div id='column10' className='column'>\n                                      <h5>Select</h5>\n                                    </div>\n                                  </div>\n                                  <hr className='property-divider' />\n                                  <div className='results-details'>\n                                    {filteredProperties ? filteredProperties.map((item, index) => {\n                                      const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                      return (\n                                        <>\n                                          <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{index + 1}</h5>\n                                            </div>\n                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.epc_data_list[0].address}</h5>\n                                            </div>\n                                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.postcode}</h5>\n                                            </div>\n                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                            </div>\n                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                            </div>\n                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.propertyType}</h5>\n                                            </div>\n                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.price}</h5>\n                                            </div>\n                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.bedrooms}</h5>\n                                            </div>\n                                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.agent}</h5>\n                                            </div>\n                                            <div className='column' id='column10'>\n                                              {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>❤️</h3>\n                                                  <h3>Saved</h3>\n                                                </div>\n                                                :\n                                                archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                  <div className='saved-message'>\n                                                    <h3>⭐️</h3>\n                                                    <h3>Archived</h3>\n                                                  </div>\n                                                  :\n                                                  <div className='custom-checkbox'>\n\n                                                    <input\n                                                      className='checkbox'\n                                                      type=\"checkbox\"\n                                                      checked={checkboxStatus[index]}\n                                                      onChange={(e) => handleCheckboxChange(e, index)}\n                                                    />\n                                                    <label className='label'>\n\n                                                    </label>\n                                                  </div>\n                                              }\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n\n                                        </>\n                                      )\n                                    })\n                                      : ' '}\n                                  </div>\n\n\n                                </>\n                                {/* : ''} */}\n                              </>\n                              : channelView === 'Sales' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All matching properties</option>\n                                    </select>\n                                  </div>\n                                  {salesLoading ?\n                                    <div className='property-table-loading'>\n                                      <Loading />\n                                    </div>\n                                    : !salesLoading ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n                                          <div className='select-all-box'>\n                                            <h5>Select all</h5>\n                                            <div className='custom-checkbox'>\n                                              <input\n                                                className='checkbox'\n                                                type=\"checkbox\"\n                                                checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                onChange={handleSelectAllSalesChange}\n                                              />\n                                              <label className='label'>\n\n                                              </label>\n\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details'>\n                                          {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                            const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                            return (\n                                              <>\n                                                <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.epc_data_list[0].address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n                                                        <div className='custom-checkbox'>\n\n                                                          <input\n                                                            className='checkbox'\n                                                            type=\"checkbox\"\n                                                            checked={salesCheckboxStatus[index]}\n                                                            onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                          />\n                                                          <label className='label'>\n\n                                                          </label>\n                                                        </div>\n                                                    }\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n\n\n                                      </>\n                                      : ''}\n                                </>\n                                :\n\n                                ''}\n                          </div>\n                        </>\n                        : leadGenSection === 'Explore properties' && rentalLoading ?\n                          <div className='property-table-loading'>\n                            <Loading />\n                          </div>\n                          : leadGenSection === 'Saved properties' ?\n                            <>\n                              <div className='results-block'>\n                                {savedProperties && savedProperties.length > 0 ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                      {userData && userData.epc_favourites && (\n                                        <>\n                                          <CSVLink\n                                            data={csvData}\n                                            className='export'\n                                            filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                                            style={{ textDecoration: 'none' }}\n                                          >\n                                            <div className='header-cta' onClick={() => archiveFavourite(userData.epc_favourites.map(fav => fav.rightmove_id))}>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        </>\n                                      )}\n                                    </div><div className='results-headers'>\n                                      <h5 id='column1' className='column'>#</h5>\n                                      <div id='column2' className='column'>\n                                        <h5>Address</h5>\n                                      </div>\n                                      <div id='column3' className='column'>\n                                        <h5>Postcode</h5>\n                                      </div>\n                                      <div id='column4' className='column'>\n                                        <h5>Added</h5>\n                                      </div>\n                                      <div id='column5' className='column'>\n                                        <h5>Reduced</h5>\n                                      </div>\n                                      <div id='column6' className='column'>\n                                        <h5>Channel</h5>\n                                      </div>\n                                      <div id='column7' className='column'>\n                                        <h5>Price</h5>\n                                      </div>\n                                      <div id='column8' className='column'>\n                                        <h5>Bedrooms</h5>\n                                      </div>\n                                      <div id='column9' className='column'>\n                                        <h5>Agent</h5>\n                                      </div>\n                                      <div id='column10' className='column'>\n                                        <h5></h5>\n                                      </div>\n                                    </div>\n                                    <hr className='property-divider' />\n                                    <div className='saved-properties'>\n\n                                      <div className='results-details'>\n                                        {savedProperties ? savedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  <button className='minus' onClick={() => deleteFavourite(item.rightmove_id)}>-</button>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n\n                                          : ' '}\n                                      </div>\n                                    </div>\n\n                                  </>\n                                  : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                }\n                              </div>\n\n\n                            </>\n                            : leadGenSection === 'Archived properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {archivedProperties && archivedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n\n\n                                      </div><div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details archive'>\n                                        {archivedProperties ? archivedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.property_type}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              : leadGenSection === 'Manual matcher' ?\n                                <ManualMatcher\n                                  increaseUsageCount={increaseUsageCount}\n                                  setErrors={setErrors}\n                                  userData={userData}\n                                  loadUserData={loadUserData}\n                                  savedProperties={savedProperties}\n                                  archivedProperties={archivedProperties}\n                                  handleVisitUrl={handleVisitUrl}\n                                  savedActionShow={savedActionShow}\n                                  setSavedActionShow={setSavedActionShow}\n                                  handleSavedActionClose={handleSavedActionClose}\n                                  setLeadGenSection={setLeadGenSection}\n                                  latestFavourites={latestFavourites}\n                                  handleSavedActionShow={handleSavedActionShow}\n                                  setLatestFavourites={setLatestFavourites}\n                                />\n                                :\n                                ''\n                    }\n                  </div>\n                </div>\n\n\n              </section>\n\n\n            </>\n\n          </section>\n        </section>\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","_Fragment","_jsxs","onClick","style","fontWeight","backgroundColor","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","Modal","show","onHide","backdrop","Body","closeAndLeave","increaseUsageCount","setErrors","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","handleSavedActionShow","setLatestFavourites","setSavedActionShow","loading","setLoading","useState","navigate","useNavigate","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","some","rightmove_id","epcData","isUserAuth","newFavourites","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","response","post","headers","Authorization","getAccessToken","addFavourite","SavedProperties","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","errors","setUserData","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","variableSide","setVariableSide","favouritedProperties","setFavouritedProperties","setSavedProperties","setArchivedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedRows","setSelectedRows","selectedSalesRows","setSelectedSalesRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","favouriteIds","setFavouriteIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","getUserToken","lead_gen_details","filteredFavourites","epc_favourites","fav","action","archivedFavourites","newFavouriteIds","dataCsv","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","allFavouriteIds","getUser","useEffect","deselectAllRows","deselectAllSalesRows","addressPostcode","property_type","date_added","postcodeValue","bedroomsMin","bedroomsMax","priceMin","priceMax","additionalRental","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","window","open","salesPrices","rentalPrices","filterPropertiesByDate","properties","days","addedDate","parseDate","property_data","reducedDate","mostRecentDate","isWithinLastDays","filtered","dateStr","day","month","year","split","date","now","pastDate","setDate","getDate","sortByPrice","sorted","priceA","parseInt","priceB","salesSorted","sortByPostcode","localeCompare","status","message","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","borderBottom","textUnderlineOffset","token","localStorage","removeItem","prevData","NumericFormat","displayType","thousandSeparator","prefix","put","CSVLink","filename","getCurrentDate","getFullYear","String","getMonth","padStart","textDecoration","favourite_ids","archiveFavourite","deleteFavourite","ManualMatcher","existingFavouriteIds","row","checked","every","Boolean","selectAllRows","existingCombinations","allRows","isRowSelected","selectedRow","handleCheckboxChange","updatedStatus","selectedProperty","prevRows","selectAllSalesRows","salesCheckboxChange","module","exports","Object","defineProperty","obj","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","_react2","__esModule","default","_core","_metaProps","CSVDownload","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","subClass","superClass","create","constructor","setPrototypeOf","_inherits","buildURI","apply","undefined","arguments","_props","separator","enclosingCharacter","uFEFF","specs","page","Component","defaultProps","assign","propTypes","_extends","source","hasOwnProperty","bind","event","isAsync","navigator","msSaveOrOpenBlob","preventDefault","blob","Blob","toCSV","msSaveBlob","_this2","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","rest","keys","indexOf","_objectWithoutProperties","href","createElement","download","ref","link","handleClick","_typeof","Symbol","iterator","_toConsumableArray","arr","arr2","from","isSafari","test","userAgent","isJsons","array","isArrays","jsonsHeaders","json","reduce","concat","jsons2arrays","jsons","headerLabels","headerKeys","header","label","object","getHeaderValue","foundValue","o","p","splice","elementOrEmpty","element","joiner","column","join","arrays2csv","jsons2csv","string2csv","csv","dataURI","URL","webkitURL","createObjectURL","_Download2","_interopRequireDefault","_Link2","PropsNotForwarded","_propTypes","oneOfType","string","func","isRequired","bool"],"sourceRoot":""}