{"version":3,"file":"static/js/873.c8744eab.chunk.js","mappings":"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","sources":["components/whiteLabel/advancedSearch/TopProperties.js","components/whiteLabel/b2bModals/KYCInput.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport KYCInput from '../b2bModals/KYCInput'\nimport ReactPaginate from 'react-paginate'\nimport ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport { set } from 'react-ga'\n\nconst TopProperties = ({ setListingSelection, fetchData, agentFavourites, loadUserData, addAgentFavourite, deleteAgentFavourite,\n  propertyFilters, setPropertyFilters, addAgentSearch, properties, setProperties, loadProperties, loading,\n  propertyInputShow, handlePropertyInputShow, handlePropertyInputClose, toggleStatus }) => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n\n\n\n\n  // set view for the table\n  const [propertyViewFormat, setPropertyViewFormat] = useState('Table')\n\n  const [selectedProperties, setSelectedProperties] = useState(null)\n\n  // states for handling the popups on the map\n  const [showPopup, setShowPopup] = useState(true)\n  const [iconId, setIconId] = useState()\n\n  // state for detail view on property\n  const [propertyDetails, setPropertyDetails] = useState('Details')\n\n  const imageRefs = useRef(new Map())\n\n\n\n  // creat\n  useEffect(() => {\n    const filters = JSON.parse(localStorage.getItem('top-property-filters'))\n    const propertyData = JSON.parse(localStorage.getItem('top-properties'))\n    if (filters) {\n      setPropertyFilters(filters)\n      setProperties(propertyData)\n    }\n  }, [])\n\n\n\n\n\n\n  const handleVisitUrl = (url) => {\n    // Create a new anchor element\n    const link = document.createElement('a')\n\n    // Set the URL\n    link.href = url\n\n    // Set the target\n    link.target = '_blank'\n\n    // Set rel to noreferrer to prevent sending the referrer\n    link.rel = 'noreferrer'\n\n    // Set window features\n    link.windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Append the link to the body\n    document.body.appendChild(link)\n\n    // Simulate a click on the link\n    link.click()\n\n    // Remove the link from the body\n    document.body.removeChild(link)\n  }\n\n  // function to move to the listings\n  const goToListing = (item) => {\n    console.log('postcode ->', item.property_data.postcode)\n    window.localStorage.setItem('listing-postcode', JSON.stringify(item.property_data.postcode))\n    window.localStorage.setItem('listing-route', JSON.stringify('On'))\n    fetchData()\n    setListingSelection('Property insights')\n    navigate('/agents/listing-generator')\n  }\n\n\n\n  // pagination on map\n  const ITEMS_PER_PAGE = 50\n  const [currentPage, setCurrentPage] = useState(0)\n  const startIndex = currentPage * ITEMS_PER_PAGE\n  const endIndex = startIndex + ITEMS_PER_PAGE\n\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 10.5,\n  })\n\n\n  // set current page when you click icon\n  const handlePropertyClick = (property) => {\n    console.log('selectd property ->', property)\n    setSelectedProperties(property)\n  }\n\n  // set pop up icon\n  const iconSetting = (e) => {\n    setShowPopup(true)\n    console.log(showPopup)\n    setIconId(parseInt(e.target.id))\n    console.log(parseInt(e.target.id))\n  }\n\n  // set current page when you clicjk button for pagination\n  const handlePageClick = (data) => {\n    const { selected } = data\n    setCurrentPage(selected)\n  }\n\n\n  const mapNumberToWord = (number) => {\n    // const value = number * 10s\n    if (number > 0.9) return 'Outstanding'\n    if (number > 0.8) return 'Excellent'\n    if (number > 0.7) return 'Very good'\n    if (number > 0.6) return 'Good'\n    if (number > 0.5) return 'Quite good'\n    if (number > 0.4) return 'Average'\n    if (number > 0.3) return 'Below average'\n    if (number > 0.2) return 'Bad'\n    if (number > 0.1) return 'Poor'\n    return 'Terrible'\n  }\n\n\n\n\n  return (\n\n    <>\n      <section className='top-properties'>\n\n        <section className='top-properties-filters'>\n          <div className='filter-block mobile'>\n            <button onClick={handlePropertyInputShow}>Edit search</button>\n          </div>\n\n        </section>\n\n        {!loading ?\n          <section className='top-property-results'>\n            <div className='top-property-title'>\n              <h3>{properties ? `${properties.length} matching properties` : ''}</h3>\n              <div className='view-selectors'>\n                <button className='edit-search' onClick={handlePropertyInputShow}>Edit search</button>\n                <div className={`icon-box ${propertyViewFormat === 'Table' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Table')}>\n                  <div className='icon' id='table'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Map' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Map')}>\n                  <div className='icon' id='map'></div>\n                </div>\n                <div className={`icon-box ${propertyViewFormat === 'Grid' ? 'active' : 'inactive'}`} onClick={() => setPropertyViewFormat('Grid')}>\n                  <div className='icon' id='grid'></div>\n                </div>\n              </div>\n            </div>\n\n\n            {propertyViewFormat === 'Table' && properties ?\n              <div className='property-table-view'>\n                <div className='top-property-table'>\n                  <div className='table-headers'>\n                    <div id='column1' className='column'>\n                      <h5>#</h5>\n                    </div>\n                    <div id='column2' className='column' >\n                      <h5>Address</h5>\n                    </div>\n                    <div id='column3' className='column'>\n                      <h5>Postcode</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column4' className='column'>\n                      <h5>Area</h5>\n                    </div>\n                    <div id='column5' className='column'>\n                      <h5>Added</h5>\n                    </div>\n                    <div id='column6' className='column'>\n                      <h5>Price</h5>\n                      {/* <h5>⬇️</h5> */}\n                    </div>\n                    <div id='column7' className='column'>\n                      <h5>Bedrooms</h5>\n                    </div>\n                    <div id='column8' className='column'>\n                      <h5>Agent</h5>\n                    </div>\n                    <div id='column9' className='column'>\n                      <h5>Score</h5>\n                    </div>\n                  </div>\n                  <hr className='property-divider' />\n                  <div className='table-detail'>\n                    {properties ? properties.map((item, index) => {\n                      return (\n                        <>\n                          <div className='table-content'>\n                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{index + 1}</h5>\n                            </div>\n                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.displayAddress}</h5>\n                            </div>\n                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.postcode}</h5>\n                            </div>\n                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.persona_data_list[0].district}</h5>\n                            </div>\n                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.added_revised === null ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised}</h5>\n                            </div>\n                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.price}</h5>\n                            </div>\n                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.bedrooms}</h5>\n                            </div>\n                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{item.property_data.agent}</h5>\n                            </div>\n                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                              <h5>{(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                            </div>\n                            <div id='column10' className='column'>\n                              <button onClick={() => goToListing(item)}>Go</button>\n                              {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n\n\n                            </div>\n                          </div>\n                          <hr className='property-divider' />\n\n                        </>\n                      )\n                    }).slice(startIndex, endIndex) : ''}\n                  </div>\n\n                </div>\n                {properties ?\n                  <ReactPaginate\n                    pageCount={Math.ceil(properties.length / 50)}\n                    onPageChange={handlePageClick}\n                    containerClassName={'pagination'}\n                    activeClassName={'active'}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    pageRangeDisplayed={0}\n                    breakLabel={'...'}\n                  />\n                  : ''}\n\n              </div>\n              : propertyViewFormat === 'Map' && properties ?\n                <div className='property-map-view'>\n                  <div className='map-block'>\n\n                    <div className='grid-list'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-content'>\n                              <div className='grid-left'>\n                                <img className='property-image' alt='property-image' loading='lazy' onClick={() => handleVisitUrl(item.property_data.url)} src={item.property_data.images} />\n                              </div>\n                              <div className='grid-right' id={item.id} onMouseEnter={iconSetting} >\n                                <h5 className='title' onClick={() => handleVisitUrl(item.property_data.url)}>{index + 1}. {item.property_data.displayAddress}</h5>\n                                <h5 className='sub-title'>Bedrooms: {item.property_data.bedrooms}</h5>\n                                <h5 className='sub-title'>Price: {item.property_data.price}</h5>\n                                <h5 className='sub-title'>Score: {(item.overall_lifestyle_score / 10).toFixed(2)}</h5>\n                                {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n\n                              </div>\n                            </div>\n                            <hr className=\"dividing-line\" />\n                          </>\n                        )\n                      }).slice(startIndex, endIndex) : ''}\n                    </div>\n\n                    <div className=\"map-section\">\n                      <ReactMapGL\n                        {...viewport}\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                        mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                        onViewportChange={viewport => {\n                          setViewport(viewport)\n                        }}\n                        center={viewport}\n                        onMove={evt => setViewport(evt.viewport)}\n                        className=\"profile-map\"\n                      >\n                        {properties &&\n                          properties.map((item, index) => (\n                            <Marker\n                              key={index}\n                              id={item.id}\n                              longitude={item.property_data.longitude}\n                              latitude={item.property_data.latitude}\n                              onClick={() => handlePropertyClick(item)}\n                            >\n                              <div className=\"poi-background\">{index + 1}</div>\n                            </Marker>\n                          )).slice(startIndex, endIndex)}\n\n                        {selectedProperties ?\n                          <Popup\n                            longitude={selectedProperties.property_data.longitude}\n                            latitude={selectedProperties.property_data.latitude}\n                            closeOnClick={false}\n                            className=\"item-popup\"\n                            onClose={() => setSelectedProperties(null)}\n\n                          >\n                            <div className=\"popup-content\">\n\n                              <div className='popup-border'>\n                                <h5 className='title'>{selectedProperties.property_data.displayAddress}</h5>\n                                {/* <p>{selectedProperties.master_cuisine}</p> */}\n                                {/* <p>{selectedProperties.rating} /5</p> */}\n                              </div>\n                            </div>\n                          </Popup>\n                          : ''\n                        }\n                      </ReactMapGL>\n                    </div>\n                  </div>\n                  {properties ?\n                    <ReactPaginate\n                      pageCount={Math.ceil(properties.length / 50)}\n                      onPageChange={handlePageClick}\n                      containerClassName={'pagination'}\n                      activeClassName={'active'}\n                      previousLabel={'<'}\n                      nextLabel={'>'}\n                      pageRangeDisplayed={0}\n                      breakLabel={'...'}\n                    />\n                    : ''}\n                </div>\n\n                : propertyViewFormat === 'Grid' && properties ?\n                  <div className='property-grid-view'>\n                    <div className='property-grid-items'>\n                      {properties ? properties.map((item, index) => {\n                        return (\n                          <>\n                            <div className='property-item'>\n                              <div className='property-item-left'>\n                                <img className='property-item-image' alt='property-image' loading='lazy' onClick={() => handleVisitUrl(item.property_data.url)} src={item.property_data.images} />\n                                <div className='property-core-info'>\n                                  {propertyFilters.channel === 'Sales' ?\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> </h3> :\n                                    <h3><NumericFormat value={item.property_data.price} displayType={'text'} thousandSeparator={true} prefix={'£'} /> pcm</h3>\n                                  }\n                                  {item.overall_lifestyle_score ? <h3 className='match-score'>🔥 {(item.overall_lifestyle_score * 10).toFixed(0)}% match</h3> : ''}\n                                  {agentFavourites && agentFavourites.some(fav => fav.rightmove_id === item.property_data.rightmove_id) ? <div className='favourite-heart' id='filled-heart' onClick={() => deleteAgentFavourite(item)}></div> : <div className='favourite-heart' id='empty-heart' onClick={() => addAgentFavourite(item)} ></div>}\n                                </div>\n                              </div>\n                              <div className='property-item-right'>\n                                <div className='detail-selections'>\n                                  <div className='key-selectors'>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Details' ? '700' : '500' }} onClick={() => setPropertyDetails('Details')}>Details</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Insights' ? '700' : '500' }} onClick={() => setPropertyDetails('Insights')}>Insights</h3>\n                                    <h3 className='detail-selector' style={{ fontWeight: propertyDetails === 'Floorplan' ? '700' : '500' }} onClick={() => setPropertyDetails('Floorplan')}>Floorplan</h3>\n                                    <button onClick={() => goToListing(item)}>Explore</button>\n\n\n                                  </div>\n                                  <div className='action'>\n                                  </div>\n                                </div>\n                                {propertyDetails === 'Details' ?\n\n                                  <div className='property-body'>\n                                    <h2 className='property-title'>{item.property_data.displayAddress}, {item.persona_data_list[0].district}</h2>\n                                    <h3 className='added-details'>{item.property_data.added_revised ? `Added on ${item.property_data.added_revised}` : `Reduced on ${item.property_data.reduced_revised}`}</h3>\n                                    <div className='key-elements'>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bed'></div>\n                                        <h3>{item.property_data.bedrooms} bedrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='bath'></div>\n                                        <h3>{item.property_data.bathrooms} bathrooms</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='size'></div>\n                                        <h3>{item.property_data.size} sq. ft</h3>\n                                      </div>\n                                      <div className='property-element-item'>\n                                        <div className='element-icon' id='type'></div>\n                                        <h3>{item.property_data.propertyType}</h3>\n                                      </div>\n                                    </div>\n                                    <div className='property-features'>\n                                      <h3 className='features-title'>Features</h3>\n                                      <div className='feature-list'>\n                                        {item.property_data.features.split(', ').map((feature, index) => (\n                                          <li key={index} className='feature-item'>{feature}</li>\n                                        ))}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  : propertyDetails === 'Insights' ?\n                                    <div className='property-body'>\n                                      <div className='insights-body'>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='primaries'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].primary_percentile)} for primary schools</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='secondaries'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].secondary_percentile)} for secondary schools</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='parks'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].park_area_percentile)} for access to parks</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='gyms'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].gym_percentile)} for access to gyms</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='pubs'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].pub_percentile)} for access to pubs</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='restaurants'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].restaurant_percentile)} for restaurants</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='crime'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].crime_percentile)} for crime rates</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='tubes'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].tube_percentile)} for tube access</h3>\n                                        </div>\n                                        <div className='insight-row'>\n                                          <div className='insight-icon' id='evs'></div>\n                                          <h3 className='insight'>{mapNumberToWord(item.persona_data_list[0].ev_percentile)} for EV access</h3>\n                                        </div>\n                                      </div>\n                                    </div>\n                                    : propertyDetails === 'Floorplan' ?\n                                      <div className='property-body'>\n                                        <div className='floorplan-body' onClick={() => handleVisitUrl(item.property_data.floorplan_url)} style={{ backgroundImage: `url(${item.property_data.floorplan_url})` }}></div>\n                                      </div>\n                                      : ''}\n\n\n\n                              </div>\n                            </div>\n                          </>\n                        )\n                      }).slice(startIndex, endIndex)\n\n                        : ''}\n\n                    </div>\n                    {properties ?\n                      <ReactPaginate\n                        pageCount={Math.ceil(properties.length / 50)}\n                        onPageChange={handlePageClick}\n                        containerClassName={'pagination'}\n                        activeClassName={'active'}\n                        previousLabel={'<'}\n                        nextLabel={'>'}\n                        pageRangeDisplayed={0}\n                        breakLabel={'...'}\n                      />\n                      : ''}\n                  </div>\n\n                  : !properties ?\n                    <div className='no-properties'>\n                      <h1>🔎 Start a search to see some properties</h1>\n                      <button className='edit-search' onClick={handlePropertyInputShow}>Start search</button>\n                    </div>\n\n                    : ''}\n\n\n          </section>\n          : loading ?\n            <div className='property-table-loading'>\n              <Loading />\n            </div>\n            : ''}\n      </section>\n      <KYCInput\n        propertyInputShow={propertyInputShow}\n        handlePropertyInputClose={handlePropertyInputClose}\n        propertyFilters={propertyFilters}\n        setPropertyFilters={setPropertyFilters}\n        loadProperties={loadProperties}\n        toggleStatus={toggleStatus}\n      />\n\n\n    </>\n\n  )\n}\n\nexport default TopProperties","/* eslint-disable camelcase */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken, getAccessToken } from '../../auth/Auth'\nimport { NumericFormat } from 'react-number-format'\nimport Loading from '../../helpers/Loading'\nimport { Modal } from 'react-bootstrap'\nimport ReactSwitch from 'react-switch'\n\n\nconst KYCInput = ({ propertyInputShow, handlePropertyInputClose, propertyFilters, setPropertyFilters, adjustedFilters, loadProperties, toggleStatus, previousLocation, editAgentSearch }) => {\n\n  const formatSize = (size) => {\n    if (size === null) return ''\n\n    const num = parseFloat(size)\n    return num % 1 === 0 ? num.toString() : num.toFixed(1)\n  }\n\n  // useEffect(() => \n  //   console.log('property filters ->', propertyFilters)\n  // )\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000', '2'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n  // borough list\n  const boroughs = ['Barking and Dagenham', 'Barnet', 'Bexley', 'Brent', 'Camden', 'Croydon', 'Ealing', 'Enfield', 'Greenwich', 'Havering', 'Kensington and Chelsea',\n    'Hertfordshire', 'Hillingdon', 'Hounslow', 'Islington', 'Lambeth', 'Lewisham', 'Merton', 'Southwark', 'Sutton', 'Waltham Forest', 'Westminster',\n    'Hackney', 'City of London', 'Hammersmith and Fulham', 'Wandsworth', 'Tower Hamlets', 'Bromley', 'Haringey', 'Kingston upon Thames', 'Newham', 'Redbridge', 'Richmond upon Thames']\n\n  // property type list\n  const propertyTypeList = ['Flat', 'Apartment', 'Terraced', 'Semi-Detached', 'Detached', 'House', 'End of Terrace', 'Maisonette', 'Studio', 'Retirement Property', 'Ground Flat',\n    'Penthouse', 'Bungalow', 'Town House', 'Detached Bungalow', 'Duplex']\n\n  return (\n\n    <>\n      <Modal show={propertyInputShow} onHide={handlePropertyInputClose} backdrop='static' className='KYC-input-modal'>\n        <Modal.Body>\n          {propertyFilters ?\n\n            <section className='overall-body'>\n              <section className='input-header'>\n                <div className='input-title'>\n                  <h1>Find a property based on what matters to you</h1>\n                  <h1 className='close-modal' onClick={handlePropertyInputClose}>X</h1>\n                </div>\n              </section>\n              <section className='input-main'>\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Search details</h2>\n                  <div className='selection-block-single'>\n                    <h3>Channel</h3>\n                    <select className='dropdown' value={propertyFilters.channel || 'Sales'} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, channel: e.target.value }))}>\n                      <option>Sales</option>\n                      <option>Lettings</option>\n                    </select>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Area</h3>\n                    <select className='dropdown' value={propertyFilters.area || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, area: e.target.value }))}>\n                      <option value=''>All</option>\n                      {boroughs.map((borough, index) => (\n                        <option key={index} value={borough}>{borough}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Property details</h2>\n                  <div className='selection-block-double'>\n                    <h3>Price</h3>\n                    {propertyFilters.channel === 'Lettings' ?\n                      <div className='double-dropdowns'>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_min || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                        >\n                          <option value={0}>No min</option>\n                          {rentalPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n                        <select\n                          className='dropdown'\n                          value={propertyFilters.rental_price_max || ''}\n                          onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                        >\n                          <option value={10000000}>No max</option>\n                          {rentalPrices.map((price, index) => (\n                            <option key={index} value={price}>\n                              <NumericFormat\n                                value={price}\n                                displayType={'text'}\n                                thousandSeparator={true}\n                                prefix={'£'}\n                              />\n                            </option>\n                          ))}\n                        </select>\n\n                      </div>\n                      : propertyFilters.channel === 'Sales' ?\n                        <div className='double-dropdowns'>\n                          <select\n                            className='dropdown'\n                            value={propertyFilters.rental_price_min || ''}\n                            onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                          >\n                            <option value={0}>No min</option>\n                            {salesPrices.map((price, index) => (\n                              <option key={index} value={price}>\n                                <NumericFormat\n                                  value={price}\n                                  displayType={'text'}\n                                  thousandSeparator={true}\n                                  prefix={'£'}\n                                />\n                              </option>\n                            ))}\n                          </select>\n                          <select\n                            className='dropdown'\n                            value={propertyFilters.rental_price_max || ''}\n                            onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                          >\n                            <option value={1000000000}>No max</option>\n                            {salesPrices.map((price, index) => (\n                              <option key={index} value={price}>\n                                <NumericFormat\n                                  value={price}\n                                  displayType={'text'}\n                                  thousandSeparator={true}\n                                  prefix={'£'}\n                                />\n                              </option>\n                            ))}\n                          </select>\n\n                        </div>\n                        : ''}\n                  </div>\n                  <div className='selection-block-double'>\n                    <h3>Bedrooms</h3>\n                    <div className='double-dropdowns'>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.bedrooms_min || null}\n                        onChange={(e) => setPropertyFilters(prevData => ({\n                          ...prevData,\n                          bedrooms_min: e.target.value ? parseInt(e.target.value, 10) : null,\n                        }))}\n                      >\n                        <option value={null}>No min</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                      </select>\n                      <select\n                        className='dropdown'\n                        value={propertyFilters.bedrooms_max || null}\n                        onChange={(e) => setPropertyFilters(prevData => ({\n                          ...prevData,\n                          bedrooms_max: e.target.value ? parseInt(e.target.value, 10) : null,\n                        }))}\n                      >\n                        <option value={null}>No max</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Property type</h3>\n                    <select className='dropdown' value={propertyFilters.propertyType || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, propertyType: e.target.value }))}>\n                      <option value=''>All</option>\n                      {propertyTypeList.map((property, index) => (\n                        <option key={index} value={property}>{property}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Features</h3>\n                    <div className='select-box'>\n                      <input type=\"checkbox\" id=\"myCheckbox\" name=\"myCheckbox\" checked={propertyFilters.garden} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, garden: e.target.checked }))} />\n                      <label htmlFor=\"myCheckbox\">Garden</label>\n                    </div>\n                  </div>\n                  <div className='selection-block-single'>\n                    <h3>Size</h3>\n                    <input placeholder='Input min size' className='dropdown' value={formatSize(propertyFilters.size)}\n                      onChange={(e) => {\n                        const value = e.target.value\n                        setPropertyFilters(prevData => ({\n                          ...prevData,\n                          size: value ? parseFloat(value) : null,\n                        }))\n                      }}></input>\n                  </div>\n                </div>\n                <div className='input-section'>\n                  <h2 className='section-sub-title'>Lifestyle details</h2>\n                  <p className='explanation'>Select what you want to include as part of your search and how much they matter</p>\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Primary schools</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.primaries === true}\n                      onChange={() => toggleStatus('primaries')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.primaries === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, primaries_score: e.target.value }))}\n                        name={propertyFilters.primaries_score}\n                        className='slider'\n                        defaultValue={propertyFilters.primaries_score ? propertyFilters.primaries_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.primaries_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Secondary schools</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.secondaries === true}\n                      onChange={() => toggleStatus('secondaries')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.secondaries === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, secondaries_score: e.target.value }))}\n                        name={propertyFilters.secondaries_score}\n                        className='slider'\n                        defaultValue={propertyFilters.secondaries_score ? propertyFilters.secondaries_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.secondaries_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Parks</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.parks === true}\n                      onChange={() => toggleStatus('parks')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.parks === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, parks_score: e.target.value }))}\n                        name={propertyFilters.parks_score}\n                        className='slider'\n                        defaultValue={propertyFilters.parks_score ? propertyFilters.parks_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.parks_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Playgrounds</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.playgrounds === true}\n                      onChange={() => toggleStatus('playgrounds')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.playgrounds === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, playgrounds_score: e.target.value }))}\n                        name={propertyFilters.playgrounds_score}\n                        className='slider'\n                        defaultValue={propertyFilters.playgrounds_score ? propertyFilters.playgrounds_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.playgrounds_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Gyms</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.gyms === true}\n                      onChange={() => toggleStatus('gyms')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.gyms === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, gyms_score: e.target.value }))}\n                        name={propertyFilters.gyms_score}\n                        className='slider'\n                        defaultValue={propertyFilters.gyms_score ? propertyFilters.gyms_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.gyms_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Restaurants</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.restaurants === true}\n                      onChange={() => toggleStatus('restaurants')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.restaurants === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, restaurants_score: e.target.value }))}\n                        name={propertyFilters.restaurants_score}\n                        className='slider'\n                        defaultValue={propertyFilters.restaurants_score ? propertyFilters.restaurants_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.restaurants_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Pubs</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.pubs === true}\n                      onChange={() => toggleStatus('pubs')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.pubs === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, pubs_score: e.target.value }))}\n                        name={propertyFilters.pubs_score}\n                        className='slider'\n                        defaultValue={propertyFilters.pubs_score ? propertyFilters.pubs_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.pubs_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Tubes</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.tubes === true}\n                      onChange={() => toggleStatus('tubes')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.tubes === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, tubes_score: e.target.value }))}\n                        name={propertyFilters.tubes_score}\n                        className='slider'\n                        defaultValue={propertyFilters.tubes_score ? propertyFilters.tubes_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.tubes_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Supermarkets</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.supermarkets === true}\n                      onChange={() => toggleStatus('supermarkets')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.supermarkets === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, supermarkets_score: e.target.value }))}\n                        name={propertyFilters.supermarkets_score}\n                        className='slider'\n                        defaultValue={propertyFilters.supermarkets_score ? propertyFilters.supermarkets_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.supermarkets_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>EVs</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.ev === true}\n                      onChange={() => toggleStatus('ev')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.ev === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, ev_score: e.target.value }))}\n                        name={propertyFilters.ev_score}\n                        className='slider'\n                        defaultValue={propertyFilters.ev_score ? propertyFilters.ev_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.ev_score}</h3>\n                    </div> : ''}\n                  <div className='selection-block-single lifestyle'>\n                    <h3>Crime</h3>\n                    <ReactSwitch\n                      checked={propertyFilters.crime === true}\n                      onChange={() => toggleStatus('crime')}\n                      onColor='#ED6B86'\n                      offColor='#D5D5D5'\n                      uncheckedIcon={null}\n                      checkedIcon={null}\n                    />\n                  </div>\n                  {propertyFilters.crime === true ?\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, crime_score: e.target.value }))}\n                        name={propertyFilters.crime_score}\n                        className='slider'\n                        defaultValue={propertyFilters.crime_score ? propertyFilters.crime_score : 0}\n                        min='0'\n                        max='10'\n                        step='1'>\n                      </input>\n                      <h3>{propertyFilters.crime_score}</h3>\n                    </div> : ''}\n                </div>\n\n              </section>\n              <section className='search-name-section'>\n                <h3>Give your search a name to save it</h3>\n                <input value={propertyFilters.search_name || ''} onChange={(e) => setPropertyFilters(prevData => ({ ...prevData, search_name: e.target.value }))}></input>\n              </section>\n\n              <section className='input-footer'>\n                {previousLocation === 'Edit' ? <button className='load-properties' onClick={editAgentSearch}>Load results</button> : <button className='load-properties' onClick={loadProperties}>Load results</button>}\n              </section>\n            </section>\n            : ''}\n\n\n        </Modal.Body>\n      </Modal >\n\n    </>\n\n  )\n}\n\nexport default KYCInput"],"names":["_ref","setListingSelection","fetchData","agentFavourites","loadUserData","addAgentFavourite","deleteAgentFavourite","propertyFilters","setPropertyFilters","addAgentSearch","properties","setProperties","loadProperties","loading","propertyInputShow","handlePropertyInputShow","handlePropertyInputClose","toggleStatus","navigate","useNavigate","propertyViewFormat","setPropertyViewFormat","useState","selectedProperties","setSelectedProperties","showPopup","setShowPopup","iconId","setIconId","propertyDetails","setPropertyDetails","useRef","Map","useEffect","filters","JSON","parse","localStorage","getItem","propertyData","handleVisitUrl","url","link","document","createElement","href","target","rel","windowFeatures","body","appendChild","click","removeChild","goToListing","item","console","log","property_data","postcode","window","setItem","stringify","currentPage","setCurrentPage","startIndex","endIndex","viewport","setViewport","latitude","longitude","zoom","iconSetting","e","parseInt","id","handlePageClick","data","selected","mapNumberToWord","number","_jsxs","_Fragment","children","className","_jsx","onClick","Loading","length","map","index","displayAddress","persona_data_list","district","added_revised","reduced_revised","price","bedrooms","agent","overall_lifestyle_score","toFixed","some","fav","rightmove_id","slice","ReactPaginate","pageCount","Math","ceil","onPageChange","containerClassName","activeClassName","previousLabel","nextLabel","pageRangeDisplayed","breakLabel","alt","src","images","onMouseEnter","ReactMapGL","mapboxApiAccessToken","process","mapStyle","onViewportChange","center","onMove","evt","Marker","handlePropertyClick","property","Popup","closeOnClick","onClose","channel","NumericFormat","value","displayType","thousandSeparator","prefix","style","fontWeight","bathrooms","size","propertyType","features","split","feature","primary_percentile","secondary_percentile","park_area_percentile","gym_percentile","pub_percentile","restaurant_percentile","crime_percentile","tube_percentile","ev_percentile","floorplan_url","backgroundImage","KYCInput","adjustedFilters","previousLocation","editAgentSearch","salesPrices","rentalPrices","Modal","show","onHide","backdrop","Body","onChange","prevData","area","borough","rental_price_min","rental_price_max","bedrooms_min","bedrooms_max","type","name","checked","garden","htmlFor","placeholder","num","parseFloat","toString","formatSize","ReactSwitch","primaries","onColor","offColor","uncheckedIcon","checkedIcon","primaries_score","defaultValue","min","max","step","secondaries","secondaries_score","parks","parks_score","playgrounds","playgrounds_score","gyms","gyms_score","restaurants","restaurants_score","pubs","pubs_score","tubes","tubes_score","supermarkets","supermarkets_score","ev","ev_score","crime","crime_score","search_name"],"sourceRoot":""}