{"version":3,"file":"static/js/135.e827deb4.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/ProfileMobileSlider.js","components/whiteLabel/EPCMatcher/LeadGenerator.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\n// import ReactMapGL, { Marker, Popup, Source, Layer } from 'react-map-gl'\nimport ReactMapGL from 'react-map-gl'\n\nimport mapboxgl from 'mapbox-gl'\nimport MapboxDraw from '@mapbox/mapbox-gl-draw'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSecton] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    area: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    price_min: null,\n    price_max: null,\n    channel: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n            setLeadGenSecton('Properties')\n            console.log('existing dtails ->', data.lead_gen_details[0])\n          }\n\n          // set favourites for the fsavd proprties tab\n          const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null)\n          setSavedProperties(filteredFavourites)\n\n          // set the data to be extracted to csv in the saved properties tab\n          const dataCsv = transformCSVData(data.epc_favourites)\n          setCsvData(dataCsv)\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null)\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addedOn: item.market_status,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n  // function for adding favourites based on relevant row\n  const addFavourite = async (property) => {\n    if (isUserAuth()) {\n      console.log(selectedRows)\n      try {\n        const response = await axios.post('/api/epc_favourite/', selectedRows, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        loadUserData()\n\n        console.log('Response:', response.data)\n        // Handle response data as needed\n        setSelectedRows([])\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  // function to delete favourites\n  const deleteFavourite = async (property) => {\n    if (isUserAuth()) {\n\n      try {\n        const { data } = await axios.delete('/api/epc_favourite/', {\n          data: {\n            postcode: property.postcode,\n            address: property.address,\n          },\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        if (data.message) {\n          setFavouritedProperties(prevState => prevState.filter(fav => fav.postcode !== property.postcode || fav.address !== property.address))\n        }\n      } catch (error) {\n        console.error('Error deleting favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n\n  function isFavourited(item) {\n    return favouritedProperties.some(fav => fav.postcode === item.postcode && fav.address === item.address)\n  }\n\n\n  const fetchFavourites = async () => {\n    try {\n      const { data } = await axios.get('/api/epc_favourite/', {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      setFavouritedProperties(data)\n    } catch (error) {\n      console.error('Error fetching favourites:', error)\n    }\n  }\n\n  useEffect(() => {\n    fetchFavourites()\n  }, [])\n\n\n\n\n  useEffect(() => {\n    if (sessionName) {\n      sessionStorage.setItem('sessionName', sessionName)\n    }\n  }, [sessionName])\n\n\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    // window.location.reload()\n\n    navigate('/login')\n  }\n\n\n\n  const loadCombinedProperties = async () => {\n    // const targetPostcode = 'SW7'\n    setLoading(true)\n\n    try {\n      const { data } = await axios.get(`/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeSubstring}`)\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  const updateCriteria = () => {\n    loadCombinedProperties()\n    setLeadGenSecton('Properties')\n  }\n\n\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n  const addSearchCriteria = async () => {\n    let response\n    if (userData.id) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n    }\n    loadCombinedProperties()\n    setLeadGenSecton('Properties')\n  }\n\n\n  const loadCombinedPropertiesFromUser = async () => {\n    // const targetPostcode = 'SW7'\n    setLoading(true)\n    const postcodeValue = userData.lead_gen_details[0].postcode\n    try {\n      const { data } = await axios.get(`/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}`)\n      console.log('combined data ->', data)\n\n      // Process and categorize the data\n      const noMatchesData = data.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = data.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = data.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n  useEffect(() => {\n    if (userData) {\n      loadCombinedPropertiesFromUser()\n    }\n  }, [userData])\n\n\n  const handleCheckboxChange = (e, item) => {\n    e.stopPropagation() // Prevent click event from propagating to the row\n\n    const propertyData = {\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    }\n\n    if (e.target.checked) {\n      setSelectedRows([...selectedRows, propertyData])\n    } else {\n      setSelectedRows(selectedRows.filter(row => row.id !== propertyData.id))\n    }\n  }\n\n  // go to url\n  const handleVisitUrl = (url) => {\n    window.open(url, '_blank') // This will open the URL in a new tab\n  }\n\n\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0') // JavaScript months are 0-indexed\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n\n\n  const draw = useRef(null)\n\n  const initializeDraw = (mapInstance) => {\n    draw.current = new MapboxDraw({\n      // Specify draw options here\n    })\n  \n    mapInstance.addControl(draw.current)\n  \n    // Set up event listeners for drawing\n    mapInstance.on('draw.create', handleDrawCreate)\n    mapInstance.on('draw.update', handleDrawUpdate)\n    mapInstance.on('draw.delete', handleDrawDelete)\n\n  }\n  \n\n  const handleDrawCreate = (e) => {\n    updatePolygonsState(draw.current.getAll().features)\n  }\n  \n  const handleDrawUpdate = (e) => {\n    updatePolygonsState(draw.current.getAll().features)\n  }\n  \n\n  const updatePolygonsState = (features) => {\n    const polygons = features.filter(feature => feature.geometry.type === 'Polygon')\n    setDrawnPolygons(polygons.map(polygon => polygon.geometry.coordinates))\n    console.log(polygons)\n    setLeadGenDetails(prevState => ({\n      ...prevState,\n      area: polygons, \n    }))\n  }\n\n  const handleDrawDelete = (e) => {\n    updatePolygonsState(draw.current.getAll().features)\n  }\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ?\n                <section className='property-finder'>\n                  <div className='listing-options'>\n                    <div className='listing-buttons'>\n                      <h5 className='no-print' onClick={() => setLeadGenSecton('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSecton('Properties')} style={{ borderBottom: leadGenSection === 'Properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Properties' ? '700' : '400' }}>Properties</h5>\n                      <h5 className='no-print' onClick={() => setLeadGenSecton('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                      {/* <h5 className='no-print' onClick={() => setLeadGenSecton('AI listing generator')} style={{ borderBottom: leadGenSection === 'AI listing generator' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'AI listing generator' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'AI listing generator' ? '700' : '400' }}>AI listing generator</h5> */}\n                    </div>\n                    <div className='logout-button' onClick={removeItemFromStorage}>\n                      <div className='logout-icon'></div>\n                    </div>\n\n\n                  </div>\n                  <hr className='title-line' />\n\n                  <div className='lead-generator'>\n\n                    <div className='property-results'>\n                      {leadGenSection === 'Home' ?\n                        <>\n                          <div className='lead-gen-inputs'>\n                            <h3 className='sub-title'>Set your search criteria</h3>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Postcode(s)</h3>\n                                <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                                <input\n                                  type=\"text\"\n                                  value={leadGenDetails.postcode}\n                                  onChange={inputPostcode}\n                                  placeholder=\"Enter postcode...\"\n                                />\n                              </div>\n                            </div>\n                            <div className='single-input-block'>\n                              <div className='input-block large'>\n                                <h3>Channel</h3>\n                                <select className='dropdown' value={leadGenDetails.channel || 'Both'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                  <option>Both</option>\n                                  <option>Lettings</option>\n                                  <option>Sales</option>\n                                </select>\n                              </div>\n                            </div>\n                            <div>\n\n                              <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                                <h3 className='sub-title'>Add some more detail</h3>\n\n                                {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                              </div>\n                              {expand ?\n                                <>\n                                  <div className='single-title-double'>\n                                    <h3>Bedrooms</h3>\n                                    <div className='double-dropdowns'>\n                                      <select className='dropdown' value={leadGenDetails.bedrooms_min || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bedrooms_min: e.target.value }))}>\n                                        <option value={0}>No min</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                        <option>6</option>\n                                      </select>\n                                      <select className='dropdown' value={leadGenDetails.bedrooms_max || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bedrooms_max: e.target.value }))}>\n                                        <option>No max</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                        <option>6</option>\n                                        <option>7</option>\n                                      </select>\n                                    </div>\n\n                                  </div>\n                                  <div className='single-title-double'>\n                                    <h3>Bathrooms</h3>\n                                    <div className='double-dropdowns'>\n                                      <select className='dropdown' value={leadGenDetails.bathrooms_min || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bathrooms_min: e.target.value }))}>\n                                        <option>No min</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                      </select>\n                                      <select className='dropdown' value={leadGenDetails.bathrooms_max || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, bathrooms_max: e.target.value }))}>\n                                        <option>No max</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                      </select>\n                                    </div>\n\n                                  </div><div className='single-title-double'>\n                                    <h3>Price</h3>\n                                    <div className='double-dropdowns'>\n                                      <select className='dropdown' value={leadGenDetails.price_min || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, price_min: e.target.value }))}>\n                                        <option>No min</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                      </select>\n                                      <select className='dropdown' value={leadGenDetails.price_max || null} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, price_max: e.target.value }))}>\n                                        <option>No max</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                      </select>\n                                    </div>\n\n                                  </div>\n\n                                </>\n                                : ''}\n                            </div>\n                            <div className='lead-gen-save'>\n                              <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                            </div>\n                          </div>\n                          {/* <div className=\"map-section\">\n                            <ReactMapGL\n                              {...viewport}\n                              mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n                              mapStyle=\"mapbox://styles/jdkuligowskii/clo8fop0l004b01pq000y65pb\"\n                              onViewportChange={viewport => {\n                                setViewport(viewport)\n                              }}\n                              center={viewport}\n                              onMove={evt => setViewport(evt.viewport)}\n                              className=\"profile-map\"\n                              onLoad={event => initializeDraw(event.target)}\n\n                            >\n                            </ReactMapGL>\n                          </div> */}\n                          {/* <div className=\"map-section\" ref={mapContainerRef}>\n\n                          </div> */}\n\n                        </>\n                        :\n                        leadGenSection === 'Properties' && !loading ?\n                          <>\n                            <div className='results-block'>\n                              <div className=\"property-insight-nav\">\n                                <div className=\"property-insight-buttons\">\n                                  <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                  <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                                </div>\n                              </div>\n                              {channelView === 'Lettings' ?\n                                <>\n                                  <div className='title-section'>\n                                    <h3 className='sub-title'>There are {singleMatches.length} rental properties that match your criteria</h3>\n\n                                    <div className='save-section'>\n                                      <div className=\"print-icon\"></div>\n\n                                      <h3 onClick={addFavourite}>Save selection</h3>\n                                    </div>\n                                  </div>\n                                  <div className='results-headers'>\n                                    <h5 id='column1' className='column'>#</h5>\n                                    <div id='column2' className='column' >\n                                      <h5>Address</h5>\n                                    </div>\n                                    <div id='column3' className='column'>\n                                      <h5>Postcode</h5>\n                                    </div>\n                                    <div id='column4' className='column'>\n                                      <h5>Added</h5>\n                                    </div>\n                                    <div id='column5' className='column'>\n                                      <h5>Property type</h5>\n                                    </div>\n                                    <div id='column6' className='column'>\n                                      <h5>Price</h5>\n                                    </div>\n                                    <div id='column7' className='column'>\n                                      <h5>Bedrooms</h5>\n                                    </div>\n                                    <div id='column8' className='column'>\n                                      <h5>Agent</h5>\n                                    </div>\n                                    <div id='column9' className='column'>\n                                      <h5>Select</h5>\n                                    </div>\n                                  </div>\n                                  <hr className='property-divider' />\n                                  <div className='results-details'>\n                                    {singleMatches ? singleMatches.map((item, index) => {\n                                      return (\n                                        <>\n                                          <div className='results-content'>\n                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{index + 1}</h5>\n                                            </div>\n                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.epc_data_list[0].address}</h5>\n                                            </div>\n                                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.postcode}</h5>\n                                            </div>\n                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.addedOn}</h5>\n                                            </div>\n                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.propertyType}</h5>\n                                            </div>\n                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.price}</h5>\n                                            </div>\n                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.bedrooms}</h5>\n                                            </div>\n                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                              <h5>{item.property_data.agent}</h5>\n                                            </div>\n                                            <div className='column' id='column9'>\n                                              <input\n                                                type=\"checkbox\"\n                                                onChange={(e) => handleCheckboxChange(e, item)}\n                                              />\n                                            </div>\n                                          </div>\n                                          <hr className='property-divider' />\n\n                                        </>\n                                      )\n                                    })\n                                      : ' '}\n                                  </div>\n\n\n                                </>\n                                : ''}\n                            </div>\n                          </>\n                          : leadGenSection === 'Properties' && loading ?\n                            <Loading />\n                            : leadGenSection === 'Saved properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {savedProperties && savedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                        {userData && userData.epc_favourites && (\n                                          <CSVLink data={csvData} className='export' filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`} style={{ textDecoration: 'none' }}>\n                                            <div className='header-cta'>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        )}\n\n                                      </div><div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                      </div><hr className='property-divider' /><div className='results-details'>\n                                        {savedProperties ? savedProperties.map((item, index) => {\n                                          return (\n                                            <>\n                                              <div className='results-content'>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.market_status}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_type}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.price}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.channel}</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              :\n                              ''\n                      }\n                    </div>\n                  </div>\n\n\n                </section>\n                : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n                  <section className='property-finder'>\n                    <h1>🙏 Thanks for enjoying Wittle!</h1>\n                    <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n                  </section>\n\n                  : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n                    <section className='property-finder'>\n                      <h1>🙏 Thanks for enjoying Wittle!</h1>\n                      <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n                    </section>\n\n                    : ''}\n\n            </>\n\n          </section>\n        </section>\n      </section>\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","_Fragment","_jsxs","onClick","style","fontWeight","backgroundColor","axios","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","loading","setLoading","search","setSearch","variableSide","setVariableSide","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","channel","setChannel","inputType","setInputType","favouritedProperties","setFavouritedProperties","savedProperties","setSavedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","setLeadGenSecton","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","postcode","area","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","price_min","price_max","selectedRows","setSelectedRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","loadUserData","isUserAuth","async","data","get","getUserToken","headers","Authorization","getAccessToken","console","log","lead_gen_details","length","filteredFavourites","epc_favourites","filter","fav","rightmove_id","dataCsv","transformCSVData","error","getUser","map","item","index","url","address","addedOn","market_status","property_type","price","bedrooms","bathrooms","let_available_date","date_added","date_added_db","agent","useEffect","fetchFavourites","setItem","loadCombinedProperties","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","postcodeValue","loadCombinedPropertiesFromUser","handleVisitUrl","window","open","useRef","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","usage_stats","package","epc_monthly_count","borderBottom","textUnderlineOffset","token","localStorage","removeItem","type","value","onChange","e","target","toUpperCase","replace","prevData","placeholder","response","id","put","post","CSVLink","filename","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","getDate","textDecoration","property_data","propertyType","handleCheckboxChange","stopPropagation","propertyData","checked","row"],"sourceRoot":""}