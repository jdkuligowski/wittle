{"version":3,"file":"static/js/968.d85747cf.chunk.js","mappings":"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","sources":["components/whiteLabel/variableSummaries/VariablesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken , getAccessToken } from '../../auth/Auth'\n\nimport PrimaryDetails from '../propertyDetails/componentDetails/PrimaryDetails'\nimport SecondaryDetails from '../propertyDetails/componentDetails/SecondaryDetails'\nimport RestaurantDetails from '../propertyDetails/componentDetails/RestaurantDetails'\nimport FitnessDetails from '../propertyDetails/componentDetails/FitnessDetails'\nimport SupermarketDetails from '../propertyDetails/componentDetails/SupermarketDetails'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport EVDetails from '../propertyDetails/componentDetails/EVDetails'\nimport PubDetails from '../propertyDetails/componentDetails/PubDetails'\n\n\n\n\nconst VariablesPage = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for property info\n  const [propertyData, setPropertyData] = useState()\n\n  // set state for company data\n  const [company, setCompany] = useState()\n\n  // set state for schools data\n  const [primaryData, setPrimaryData] = useState()\n  const [primaryData1, setPrimaryData1] = useState()\n  const [secondaryData, setSecondaryData] = useState()\n  const [secondaryData1, setSecondaryData1] = useState()\n\n  // set states for lifestyle information\n  const [restaurants, setRestaurants] = useState()\n  const [gyms, setGyms] = useState()\n  const [pubs, setPubs] = useState()\n  const [supermarkets, setSupermarkets] = useState()\n\n  // set states for lifestyle information\n  const [tubes, setTubes] = useState()\n  const [ev, setEv] = useState()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Variables')\n  const [profileDetail, setProfileDetail] = useState('Variables')  \n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(true)\n\n\n\n  // ? Section 2: load user data\n  // user data\n  const loadUserData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      try {\n        const getUser = async () => {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setCompany(data.company)\n        }\n        getUser()\n      } catch (error) {\n        setErrors(true)\n        console.log(error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n  // ? Section 3: Load primaries data\n  const loadPrimaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getPrimaries = async () => {\n        const { data } = await axios.get('/api/primaries/')\n        const sortedData = data.sort((a, b) => b.pupils_at_standard - a.pupils_at_standard)\n        setPrimaryData(sortedData)\n        console.log('all primaries ->', sortedData)\n      }\n      getPrimaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    loadPrimaryData()\n  }, [])\n\n\n  // ? Section 4: Load secondary school data  \n  const loadSecondaryData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getSecondaries = async () => {\n        const { data } = await axios.get('/api/secondaries/')\n        const sortedData = data.sort((a, b) => b.total_pass_rate - a.total_pass_rate)\n        setSecondaryData(sortedData)\n        console.log('all secondaries ->', sortedData)\n      }\n      getSecondaries()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n  \n  useEffect(() =>{\n    loadSecondaryData()\n  }, [])\n\n\n  // ? Section 5: Load and sort restaurant data\n  const loadRestaurantData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/restaurants/')\n        const sortedData = data.sort((a, b) => b.rating - a.rating)\n        setRestaurants(sortedData)\n        console.log('all restaurants ->', sortedData)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n  \n  useEffect(() =>{\n    loadRestaurantData()\n  }, [])\n\n\n  // ? Section 6: Load and sort fitness data\n  const loadFitnessData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/gyms/')\n        // console.log('gyms data ->', data)\n        setGyms(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadFitnessData()\n  }, [])\n\n\n  // ? Section 7: Load and sort supermarket data\n  const loadSupermarketData = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/supermarkets/')\n        console.log('supermarkets data ->', data)\n        setSupermarkets(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadSupermarketData()\n  }, [])\n\n\n  // ? Section 8: Load and sort EV data\n  const loadEVdata = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/evs/')\n        console.log('ev data ->', data)\n        setEv(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadEVdata()\n  }, [])\n\n\n  \n\n  // ? Section 8: Load and sort Pubs data\n  const loadPubs = () => {\n    // Assuming th user is authorised, we want to load their profile information and set states based on relevant sections of this\n    try {\n      const getData = async () => {\n        const { data } = await axios.get('/api/pubs/')\n        console.log('pubs data ->', data)\n        setPubs(data)\n      }\n      getData()\n    } catch (error) {\n      setErrors(true)\n      console.log(error)\n    }\n  }\n\n  useEffect(() =>{\n    loadPubs()\n  }, [])\n\n\n\n\n\n\n  return (\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide} \n          setProfileContent={setProfileContent} \n          setVariableSide={setVariableSide}\n          userData={userData}\n        />    \n        {profileDetail === 'Variables' ?  \n          <section className='variables-section'>\n\n            <h1>Explore the different variables</h1>\n            <div className='variables-list'>\n              <div className='variable' onClick={() => setProfileDetail('Primary schools')}>\n                <h1>🏫</h1>\n                <h3>Primary schools</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Secondary schools')}>\n                <h1>👨‍🏫</h1>\n                <h3>Secondary schools</h3>\n              </div>\n              <div className='variable'>\n                <h1>🎓</h1>\n                <h3>6th form colleges</h3>\n              </div>\n              <div className='variable'>\n                <h1>🌳</h1>\n                <h3>Green space</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Restaurants')}>\n                <h1>🍽</h1>\n                <h3>Restaurants</h3>\n              </div>\n              <div className='variable'>\n                <h1>🚇</h1>\n                <h3>Tube stations</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('EVs')}>\n                <h1>⛽️</h1>\n                <h3>Electric vehicles</h3>\n              </div>\n              <div className='variable'onClick={() => setProfileDetail('Pubs')}>\n                <h1>🍻</h1>\n                <h3>Pubs</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Fitness')}>\n                <h1>🏋️‍♂️</h1>\n                <h3>Fitness</h3>\n              </div>\n              <div className='variable' onClick={() => setProfileDetail('Supermarkets')}>\n                <h1>🛒</h1>\n                <h3>Supermarkets</h3>\n              </div>\n            </div>\n\n          </section>\n          : profileDetail === 'Primary schools' ?\n            <section  className='variables-single-section'>\n              <PrimaryDetails\n                primaryData1={primaryData}\n                setPrimaryData1={setPrimaryData}\n                listType={'long list'}\n                setProfileDetail={setProfileDetail}\n              />\n\n            </section>\n\n            : profileDetail === 'Secondary schools' ?\n              <section  className='variables-single-section'>\n                <SecondaryDetails\n                  secondaryData1={secondaryData}\n                  setSecondaryData1={setSecondaryData}\n                  listType={'long list'}\n                />\n\n              </section>\n\n              : profileDetail === 'Restaurants' ?\n                <section  className='variables-single-section'>\n                  <RestaurantDetails\n                    restaurants1={restaurants}\n                    setRestaurants1={setRestaurants}\n                    listType={'long list'}\n                  />\n\n                </section>\n\n                : profileDetail === 'Fitness' ?\n                  <section  className='variables-single-section'>\n                    <FitnessDetails\n                      gyms1={gyms}\n                      setGyms1={setGyms}\n                      listType={'long list'}\n                    />\n\n                  </section>\n\n                  : profileDetail === 'Supermarkets' ?\n                    <section className='variables-single-section'>\n                      <SupermarketDetails\n                        supermarkets1={supermarkets}\n                        setSupermarkets1={setSupermarkets}\n                        listType={'long list'}\n                      />\n\n                    </section>\n\n                    : profileDetail === 'EVs' ?\n                      <section className='variables-single-section'>\n                        <EVDetails\n                          ev1={ev}\n                          setEv1={setEv}\n                          listType={'long list'}\n                        />\n\n                      </section>\n\n                      : profileDetail === 'Pubs' ?\n                        <section className='variables-single-section'>\n                          <PubDetails\n                            pubs1={pubs}\n                            setPubs1={setPubs}\n                            listType={'long list'}\n                          />\n\n                        </section>\n\n\n\n                        : ''}\n    \n\n      </section>\n    </>\n  )\n}\n\nexport default VariablesPage"],"names":["VariablesPage","navigate","useNavigate","errors","setErrors","useState","userData","setUserData","propertyData","setPropertyData","company","setCompany","primaryData","setPrimaryData","primaryData1","setPrimaryData1","secondaryData","setSecondaryData","secondaryData1","setSecondaryData1","restaurants","setRestaurants","gyms","setGyms","pubs","setPubs","supermarkets","setSupermarkets","tubes","setTubes","ev","setEv","profileContent","setProfileContent","profileDetail","setProfileDetail","variableSide","setVariableSide","useEffect","loadUserData","isUserAuth","async","data","axios","get","getUserToken","headers","Authorization","getAccessToken","console","log","getUser","error","loadPrimaryData","sortedData","sort","a","b","pupils_at_standard","getPrimaries","loadSecondaryData","total_pass_rate","getSecondaries","loadRestaurantData","rating","getData","loadFitnessData","loadSupermarketData","loadEVdata","loadPubs","_jsx","_Fragment","children","_jsxs","className","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","onClick","PrimaryDetails","listType","SecondaryDetails","RestaurantDetails","restaurants1","setRestaurants1","FitnessDetails","gyms1","setGyms1","SupermarketDetails","supermarkets1","setSupermarkets1","EVDetails","ev1","setEv1","PubDetails","pubs1","setPubs1"],"sourceRoot":""}