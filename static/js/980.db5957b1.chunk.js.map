{"version":3,"file":"static/js/980.db5957b1.chunk.js","mappings":"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","sources":["components/tools/Timeline3.js","components/tools/WhiteNavbar.js","components/wittleSearch/Lifestyle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\n\n\n\nconst Timeline3 = () => {\n\n\n\n\n  return (\n    <section className='property-search-wrapper'>\n      <div className='timeline-bar-3'>\n        <div className='progress-circles-3'>\n          <div className='milestone-1'>\n            <h1></h1>\n          </div>\n          <div className='milestone-2'>\n            <h1></h1>\n          </div>\n          <div className='milestone-3'>\n            <h1></h1>\n          </div>\n          <div className='milestone-4'>\n            <h1></h1>\n          </div>\n          <div className='milestone-5'>\n            <h1></h1>\n          </div>\n        </div>\n      </div>\n      <div className='timeline-background-3'>\n        {/* <h1>.</h1> */}\n      </div>\n    </section>\n  )\n\n}\n\nexport default Timeline3","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport Modal from 'react-modal'\n\nimport Timeline3 from '../tools/Timeline3'\nimport NavBar from '../tools/NavBar'\nimport WhiteNavbar from '../tools/WhiteNavbar'\n\n\n\nconst Lifestyle = () => {\n\n  // set states for buttons being activated \n  const [anySupermarket, setAnySupermarket] = useState(true)\n  const [specificSupermarket, setSpecificSupermarket] = useState(false)\n\n  // set state for the number of true values in hospitality\n  const [truths, setTruths] = useState()\n\n\n  // states for filling out the form\n  const [formData, setFormData] = useState({\n    start_search: true,\n    search_name: '',\n    search_type: 'Wittle',\n    search_channel: 'Buying',\n    restaurant_selection: false,\n    restaurant_decision: '',\n    restaurant_distance: 10,\n    restaurant_cuisine_1: '',\n    restaurant_cuisine_2: '',\n    takeaway_selection: false,\n    takeaway_decision: '',\n    takeaway_distance: 10,\n    takeaway_cuisine_1: '',\n    takeaway_cuisine_2: '',\n    pubs_selection: false,\n    pubs_distance: 10,\n    cafes_selection: '',\n    cafes_decision: '',\n    cafes_detail: '',\n    cafes_distance: 10,\n    tube_selection: false,\n    tube_decision: '',\n    tube_detail: '',\n    tube_distance: 10,\n    train_selection: false,\n    train_decision: '',\n    train_detail: '',\n    train_distance: 10,\n    primary_selection: false,\n    primary_religion: '',\n    primary_mode: '',\n    primary_distance: 10,\n    college_selection: false,\n    college_religion: '',\n    college_mode: '',\n    college_distance: 10,\n    secondary_selection: false,\n    secondary_religion: '',\n    secondary_mode: '',\n    secondary_distance: 10,\n    supermarket_selection: false,\n    supermarket_decision: '',\n    supermarket_segment: '',\n    supermarket_size: '',\n    supermarket_distance: 10,\n    gym_selection: false,\n    gym_studio_name: '',\n    gym_class_type: '',\n    gym_distance: 10,\n    park_selection: false,\n    park_type: '',\n    park_distance: 10,\n    workplace_selection: false,\n    workplace_detail: '',\n    workplace_transport: '',\n    workplace_distance: 10,\n    family_selection: false,\n    family_detail_1: '',\n    family_distance_1: 10,\n    family_detail_2: '',\n    family_distance_2: 0,\n    family_detail_3: '',\n    family_distance_3: 0,\n    family_mode_1: '',\n    family_mode_2: '',\n    family_mode_3: '',\n    property_price_min: '0',\n    property_price_max: '10000000',\n    property_bed_min: '0',\n    property_bed_max: '5',\n    property_type: 'Any',\n    owner: 31,\n  })\n\n  // get form data from storage\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('wittle-form-input'))\n    if (data) setFormData(data)\n  }, [])\n\n  // check the number of elements populated - to be used in the logic to fill the page\n  const checkingState = () => {\n    const array = [formData.supermarket_selection, formData.gym_selection, formData.park_selection, formData.workplace_selection]\n    const count = array.filter(Boolean).length\n    setTruths(count)\n  }\n\n  // carry out the calculation for checking the number of true elements populated\n  useEffect(() => {\n    checkingState()\n  })\n\n  // general update for drop down menus and text fields\n  const handleChange = e => {\n    if (e.target.name === 'workplace_detail') {\n      const removeSpace = e.target.value.replace(/\\s+/g, '')\n      setFormData({ ...formData, [e.target.name]: removeSpace })\n    } else {\n      setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n  }\n\n  // define function to set state to storage\n  const setStateToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-form-input', JSON.stringify(formData))\n  }\n\n  // execute setting state to local storage\n  useEffect(() => {\n    // if (formData) {\n    setStateToLocalStorage()\n    // }\n  }, [formData])\n\n\n  return (\n    <section className='main-form-pages'>\n      <NavBar />\n      <section className='form-input-page'>\n        {/* Top section of the page with header and timeline bar */}\n        <section className='title-section'>\n          <h1>Now for the detail</h1>\n          <Timeline3 />\n          <div className='form-selections-large'>\n            {formData.restaurant_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Restaurants</button> : ''}\n            {formData.cafes_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Cafes</button> : ''}\n            {formData.takeaway_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Takeaways</button> : ''}\n            {formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Pubs & Bars</button> : ''}\n            {formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Tubes</button> : ''}\n            {formData.train_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Trains</button> : ''}\n            {formData.supermarket_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Supermarkets</button> : ''}\n            {formData.gym_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Gyms</button> : ''}\n            {formData.park_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Parks</button> : ''}\n            {formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Workplace</button> : ''}\n            {formData.primary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Primary Schools</button> : ''}\n            {formData.secondary_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Secondary Schools</button> : ''}\n            {formData.college_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>6th Forms</button> : ''}\n            {formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Friends & Family</button> : ''}\n          </div>\n          <div className='form-selections-small'>\n            {formData.restaurant_selection || formData.cafes_selection || formData.takeaway_selection || formData.pubs_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Hospitality</button> : ''}\n            {formData.train_selection || formData.tube_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Travel</button> : ''}\n            {formData.supermarket_selection || formData.gym_selection || formData.park_selection || formData.workplace_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 1)' }}>Lifestyle</button> : ''}\n            {formData.primary_selection || formData.secondary_selection || formData.college_selection || formData.family_selection ? <button className='selectors' style={{ backgroundColor: 'rgba(255, 167, 229, 0.2)' }}>Family</button> : ''}\n\n          </div>\n        </section>\n        <section className='main-content-detail'>\n          <div className='form-selection'>\n            <h1>Lifestyle</h1>\n\n            {/* Split out logic for when different lifestyle options are selected */}\n            {/* Supermarkets selected or not */}\n            {formData.supermarket_selection ?\n              <div className='form-filling-section-1' id='supermarket-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Supermarkets</h3>\n                    <p>Do you care where you do your shopping, or just want to get it done asap?</p>\n                    <div className='button-selectors' name='supermarket_decision' onClick={() => {\n                      setAnySupermarket(!anySupermarket); setSpecificSupermarket(!specificSupermarket)\n                    }}>\n                      <button id='any' style={{ backgroundColor: !anySupermarket ? 'rgba(255, 167, 229, 0.2)' : 'rgba(255, 167, 229, 1)' }}>Any supermarket</button>\n                      <button id='specific' style={{ backgroundColor: !specificSupermarket ? 'rgba(255, 167, 229, 0.2)' : 'rgba(255, 167, 229, 1)' }}>Specific supermarket</button>\n                    </div>\n                    {specificSupermarket ?\n                      <>\n                        <p className='cuisine-choice'>Choose the type of supermarket</p><div className='cuisine-dropdowns'>\n                          <select className='form-control' id='cuisine-drop-1' placeholder='Pick cuisine' name='supermarket_segment' onChange={handleChange}>Pick supermarket\n                            <option>Pick supermarket</option>\n                            <option>Budget</option>\n                            <option>Convenience</option>\n                            <option>Mainstream</option>\n                            <option>Premium</option>\n                          </select>\n                        </div>\n                      </>\n                      : ''}\n                    <p className='distance-text'>Do you mind how big the store is?</p>\n                    <select className='form-control' id='cuisine-drop-2' placeholder='Pick cuisine' name='supermarket_size' onChange={handleChange}>Pick supermarket\n                      <option>Select option</option>\n                      <option>Don&apos;t mind</option>\n                      <option>Small </option>\n                      <option>Medium</option>\n                      <option>Large</option>\n                    </select>\n                    <p className='distance-text'>How far do you want to walk to get to it?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, supermarket_distance: e.target.value })}\n                        name={formData.supermarket_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.supermarket_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='supermarket-image'>\n\n                  </div>\n                </div>\n              </div>\n\n              : ''}\n\n            {/* Gyms selected or not */}\n            {/* Gyms and supermarkets selected - gym needs to sit on right */}\n            {formData.gym_selection & formData.supermarket_selection ?\n              <div className='form-filling-section-2' id='gym-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right'>\n                    <h3>Gyms</h3>\n                    <p>Where do you like to train?</p>\n                    {/* <p className='cuisine-choice'>Select a gym/studio</p> */}\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick cafe' name='gym_studio_name' onChange={handleChange}>Pick gym/ studio\n                        <option>Select option</option>\n                        <option>No preference</option>\n                        <option>1Rebel</option>\n                        <option>Barry&apos;s</option>\n                        <option>Fitness First</option>\n                        <option>Gymbox</option>\n                        <option>MoreYoga</option>\n                        <option>Nuffield Health</option>\n                        <option>Pure Gym</option>\n                        <option>The Gym Group</option>\n                        <option>Third Space</option>\n                        <option>Virgin</option>\n                      </select>\n                    </div>\n                    <p className='distance-text'>There&apos;s nothing worse than missing your class. How close do you want to be to the gym?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, gym_distance: e.target.value })}\n                        name={formData.gym_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.gym_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='gyms-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {/* Otherwise gyms should sit on the left */}\n            {(formData.gym_selection & !formData.supermarket_selection) ?\n              <div className='form-filling-section-1' id='gym-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Gyms</h3>\n                    <p>Where do you like to train?</p>\n                    {/* <p className='cuisine-choice'>Select a gym/studio</p> */}\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Pick cafe' name='gym_studio_name' onChange={handleChange}>Pick gym/ studio\n                        <option>Select option</option>\n                        <option>No preference</option>\n                        <option>1Rebel</option>\n                        <option>Barry&apos;s</option>\n                        <option>Fitness First</option>\n                        <option>Gymbox</option>\n                        <option>MoreYoga</option>\n                        <option>Nuffield Health</option>\n                        <option>Pure Gym</option>\n                        <option>The Gym Group</option>\n                        <option>Third Space</option>\n                        <option>Virgin</option>\n                      </select>\n                    </div>\n                    <p className='distance-text'>What is the furthest distance you would like to walk to get there?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, gym_distance: e.target.value })}\n                        name={formData.gym_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.gym_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='gyms-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n\n            {/* Are parks selected or not */}\n            {/* Either two things selected or none - parks sits on the left */}\n            {(formData.park_selection & (truths === 1 || truths === 4 || (formData.supermarket_selection & formData.gym_selection) || (formData.workplace_selection & truths === 2))) ?\n              <div className='form-filling-section-1' id='park-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left'>\n                    <h3>Parks</h3>\n                    <p>We&apos;ve listed three types of park depending on your needs. Which one&apos;s the best for you?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select park type' name='park_type' onChange={handleChange}>Choose green space\n                        <option>Pick green space</option>\n                        <option>Large park &#40;long walks or runs&#41;</option>\n                        <option>Medium sized park &#40;big enough for activities&#41;</option>\n                        <option>Small square &#40;read a book&#41;</option>\n                      </select>\n\n                    </div>\n                    <p className='distance-text'>How far do you want to walk to get there?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, park_distance: e.target.value })}\n                        name={formData.park_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.park_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='park-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {/* Otherwise parks sit on the right */}\n            {(formData.park_selection & (((!formData.gym_selection) & truths === 3) || (formData.gym_selection & formData.workplace_selection & truths === 3) || (!formData.gym_selection & formData.supermarket_selection & truths === 2) || (formData.gym_selection & truths === 2))) ?\n              <div className='form-filling-section-2' id='park-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right'>\n                    <h3>Parks</h3>\n                    <p>What kind of green space do you want to be near?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select park type' name='park_type' onChange={handleChange}>Choose green space\n                        <option>Pick green space</option>\n                        <option>Large park &#40;long walks or runs&#41;</option>\n                        <option>Medium sized park &#40;big enough for activities&#41;</option>\n                        <option>Small square &#40;read a book&#41;</option>\n                      </select>\n\n                    </div>\n                    <p className='distance-text'>What is the furthest distance you would like to walk to a park?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, park_distance: e.target.value })}\n                        name={formData.park_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='20'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.park_distance} minutes</p>\n                  </div>\n                  <div className='form-filling-image-right' id='park-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n\n            {/* Is workplace selected or not */}\n            {/* Either 3 things selected or one - workplace will sit on the right */}\n            {(formData.workplace_selection & (truths === 2 || truths === 4)) ?\n              <div className='form-filling-section-2' id='work-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-right' id='work'>\n                    <h3>Workplace</h3>\n                    <p className='distance-text'>What&apos;s the postcode of your work? (don&apos;t worry, we&apos;ll only use this to search for properties for you)</p>\n                    <div className='form-detail-address'>\n                      <input type=\"text\" name='workplace_detail' onChange={handleChange} style={{ textTransform: 'uppercase' }} />\n                    </div>\n                    <p className='distance-text'>How would you like to travel to get there?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select transport' name='workplace_transport' onChange={handleChange}>Choose mode of transport\n                        <option>Choose mode of transport</option>\n                        <option>Walking</option>\n                        <option>Cycling</option>\n                        <option>Driving/ transport</option>\n                      </select>\n\n                    </div>\n                    <p className='distance-text'>What is the maximum time you want to spend on your journey?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, workplace_distance: e.target.value })}\n                        name={formData.workplace_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='40'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.workplace_distance} minutes</p>\n\n                  </div>\n                  <div className='form-filling-image-right' id='work-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {(formData.workplace_selection & (truths === 1 || truths === 3)) ?\n\n              // Only 2 things or no things selected\n              <div className='form-filling-section-1' id='work-grid'>\n                <div className='form-filling-grid'>\n                  <div className='form-filling-detail-left' id='work'>\n                    <h3>Workplace</h3>\n                    <p className='distance-text'>What&apos;s the postcode of your work? (don&apos;t worry, we&apos;ll only use this to search for properties for you)</p>\n                    <div className='form-detail-address'>\n                      <input type=\"text\" name='workplace_detail' onChange={handleChange} style={{ textTransform: 'uppercase' }} />\n                    </div>\n                    <p className='distance-text'>How would you like to travel to get there?</p>\n                    <div className='cuisine-dropdowns'>\n                      <select className='form-control' id='cuisine-drop-1' placeholder='Select transport' name='workplace_transport' onChange={handleChange}>Choose mode of transport\n                        <option>Choose mode of transport</option>\n                        <option>Walking</option>\n                        <option>Cycling</option>\n                        <option>Driving/ transport</option>\n                      </select>\n\n                    </div>\n                    <p className='distance-text'>What is the maximum time you want to spend on your journey?</p>\n                    <div className='slider-container'>\n                      <input\n                        type='range'\n                        onChange={(e) => setFormData({ ...formData, workplace_distance: e.target.value })}\n                        name={formData.workplace_distance}\n                        className='slider'\n                        defaultValue='10'\n                        min='1'\n                        max='40'\n                        step='1'>\n                      </input>\n                    </div>\n                    <p>{formData.workplace_distance} minutes</p>\n\n                  </div>\n                  <div className='form-filling-image-right' id='work-image'>\n\n                  </div>\n                </div>\n              </div>\n              : ''}\n            {formData.primary_selection || formData.secondary_selection || formData.college_selection || formData.family_selection ?\n              <Link to={'/wittle-search/family'}><button className='next' >Next</button></Link>\n              :\n              <Link to={'/wittle-search/property'}><button className='next' >Next</button></Link>\n            }          </div>\n\n\n        </section>\n      </section>\n    </section>\n  )\n\n}\n\nexport default Lifestyle"],"names":["Timeline3","_jsxs","className","children","_jsx","_ref","navbarColour","navigate","useNavigate","_Fragment","style","backgroundColor","onClick","isUserAuth","token","localStorage","removeItem","window","location","reload","Lifestyle","anySupermarket","setAnySupermarket","useState","specificSupermarket","setSpecificSupermarket","truths","setTruths","formData","setFormData","start_search","search_name","search_type","search_channel","restaurant_selection","restaurant_decision","restaurant_distance","restaurant_cuisine_1","restaurant_cuisine_2","takeaway_selection","takeaway_decision","takeaway_distance","takeaway_cuisine_1","takeaway_cuisine_2","pubs_selection","pubs_distance","cafes_selection","cafes_decision","cafes_detail","cafes_distance","tube_selection","tube_decision","tube_detail","tube_distance","train_selection","train_decision","train_detail","train_distance","primary_selection","primary_religion","primary_mode","primary_distance","college_selection","college_religion","college_mode","college_distance","secondary_selection","secondary_religion","secondary_mode","secondary_distance","supermarket_selection","supermarket_decision","supermarket_segment","supermarket_size","supermarket_distance","gym_selection","gym_studio_name","gym_class_type","gym_distance","park_selection","park_type","park_distance","workplace_selection","workplace_detail","workplace_transport","workplace_distance","family_selection","family_detail_1","family_distance_1","family_detail_2","family_distance_2","family_detail_3","family_distance_3","family_mode_1","family_mode_2","family_mode_3","property_price_min","property_price_max","property_bed_min","property_bed_max","property_type","owner","useEffect","data","JSON","parse","getItem","checkingState","count","filter","Boolean","length","handleChange","e","target","name","removeSpace","value","replace","setItem","stringify","NavBar","id","placeholder","onChange","type","defaultValue","min","max","step","textTransform","Link","to"],"sourceRoot":""}