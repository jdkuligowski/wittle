{"version":3,"file":"static/js/645.890a7f00.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/NavBarRevised.js","components/tools/WhiteNavbar.js","components/whiteLabel/WhiteSidebar.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#051885')\n  const [titleColour, setTitleColour] = useState('#FFA7E5')\n  const [textColour, setTextColour] = useState('#FFA7E5')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('My properties')\n    setProfileDetail('My properties')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const searchSelect = () => {\n    setProfileContent('Variables')\n    setProfileDetail('Variables')\n    navigate('/agents/explore')\n\n  }\n\n  // function for selecting wittle lifestyle\n  const lifestyleSelect = () => {\n    setProfileContent('Comparison')\n    setProfileDetail('Comparison')\n    navigate('/agents/compare')\n  }\n\n  // function for selecting wittle lifestyle\n  // const adminSelect = () => {\n  //   setProfileContent('My household')\n  //   setProfileDetail('Admin dashboard')\n  // }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <h2 style={{ color: titleColour }} onClick={() => navigate('/')}>Wittle</h2>\n            {/* {profileContent === 'Home' ? <h3 style={{ color: titleColour }}>Home</h3> :\n              profileContent === 'Variables' ? <h3 style={{ color: titleColour }}>Variables</h3> :\n                profileContent === 'Lifestyle' ? <h3 style={{ color: titleColour }}>Lifestyle</h3> :\n                  profileContent === 'Admin' ? <h3 style={{ color: titleColour }}>Admin</h3> :\n                    profileContent === 'Account' ? <h3 style={{ color: titleColour }}>Account</h3> : ''} */}\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'My properties' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'My properties' ? '5px' : '' }} onClick={homeSelect}>MY PROPERTIES</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Variables' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Variables' ? '5px' : '' }} onClick={searchSelect}>EXPLORE</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Comparison' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Comparison' ? '5px' : '' }} onClick={lifestyleSelect}>COMPARISON</h4>\n          <h4 style={{ color: textColour, textDecoration: profileContent === 'Account' ? `underline 3px ${textColour}` : '', textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n     \n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>My properties</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}>Wittle</h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\nimport axios from 'axios'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // userdata state\n  const [userData, setUserData] = useState()\n\n  // errors\n  const [errors, setErrors] = useState()\n\n\n  const [activeItem, setActiveItem] = useState('')\n\n  // state for changing the view to insights results\n  const [insightView, setInsightView] = useState('Search')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (activeItem === 'Home') {\n        navigate('/agents/profile')\n      } else if (activeItem === 'Saved items') {\n        navigate('/agents/favourites')\n      }\n      // ... other conditions\n    }, 100)\n  }, [activeItem])\n\n  // useEffect(() => {\n  //   loadUserData()\n  // }, [])\n\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo-section'>\n          <div className='logo' onClick={() => navigate('/')}>\n            {/* <h2 onClick={() => navigate('/')}>Wittle</h2> */}\n          </div>\n        </div>\n\n\n        <div className='profile-buttons'>\n          <div className={`profile-button-title ${activeItem === 'Home' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Home')\n              setTimeout(() => {\n                setProfileDetail('Home')\n                setProfileContent('Home')\n              }, 0)\n            }}>\n            <div className='icon' id='home-icon' ></div>\n            <h2>Wittle home</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Listing generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Listing generator')\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>\n            <div className='icon' id='listing-icon'></div>\n            <h2>Listing generator</h2>\n          </div>\n          {/* <div className={`profile-button-title ${activeItem === 'Lead generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator')\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div> */}\n          <div className={`profile-button-title ${activeItem === 'Lead generator test' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator test')\n              setProfileContent('Lead generator test')\n              setProfileDetail('Lead generator test')\n              navigate('/agents/lead-gen')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Saved items' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Saved items')\n              setTimeout(() => {\n                setProfileDetail('Saved items')\n                setProfileContent('Saved items')\n                // navigate('/agents/favourites')\n              }, 0)\n            }}>\n            <div className='icon' id='saved-icon'></div>\n            <h2 >My saved items</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Account' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Account')\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n            }}>\n            <div className='icon' id='account-icon'></div>\n            <h2>Account details</h2>\n          </div>\n\n\n\n        </div>\n\n\n\n\n        {/* <div className='profile-buttons'>\n          <div className='profile-button-title' >\n            <h2 onClick={() => {\n              setProfileDetail('Home')\n              setProfileContent('Home')\n              navigate('/agents/profile')\n            }}>🧘‍♂️ Wittle home</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('Saved items')\n              setProfileContent('Saved items')\n              navigate('/agents/favourites')\n            }}>🏡 Saved items</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>🧠 Listing generator</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileDetail('AI listing generator')\n              setProfileContent('AI listing generator')\n              navigate('/agents/ai-listing-generator')\n            }}>🧠 AI Listing generator</h2>\n          </div>\n\n\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>🔎 Lead generator</h2>\n          </div>\n          <div className='profile-button-title' id='second-title'>\n            <h2 onClick={() => {\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n\n            }}>🖥 Account details</h2>\n          </div>\n        </div> */}\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","_Fragment","_jsxs","style","backgroundColor","color","onClick","textDecoration","textUnderlineOffset","homeSelect","searchSelect","lifestyleSelect","accountSelect","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","variableSide","setVariableSide","userData","setUserData","activeItem","setActiveItem","insightView","setInsightView","useEffect","setTimeout","id"],"sourceRoot":""}