{"version":3,"file":"static/js/115.21358b26.chunk.js","mappings":"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","sources":["components/whiteLabel/WhiteHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { isUserAuth, getUserToken , getAccessToken } from '../auth/Auth'\n\n\n\nimport NavBarRevised from '../tools/NavBarRevised'\nimport WhiteNavbar from '../tools/WhiteNavbar'\nimport WhiteSidebar from './WhiteSidebar'\n\n\n\n\n\nconst WhiteHome = () => {\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('My properties')\n  const [profileDetail, setProfileDetail] = useState('My properties')  \n\n  // set state for user data\n  const [userData, setUserData] = useState()\n\n  // set state for company data\n  const [companyData, setCompany] = useState()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n          setCompany(data.company)\n          console.log('company ->', data.company)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n  \n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar \n          setProfileDetail={setProfileDetail}\n          setProfileContent={setProfileContent} \n        />\n        {/* {profileContent === 'My properties' ? */}\n        <>\n          <section className='main-body'>\n            <section className='main-body-details'>\n\n              <section className='profile-summary'>\n                <div className='welcome'>\n                  <>\n                    <h1>Welcome back <span>{userData ? userData.first_name : ''}!</span></h1>\n                    {userData && userData.usage_stats[0].package === 'Trial expired' ? <h3>Your trial period has ended, please get in touch to upgrade your plan.</h3> : <h3>Thanks for being part of Wittle! Please keep us in the loop with how you&apos;re enjoying our products.</h3>}\n                  </>\n\n\n                </div>\n              </section>\n              <section className='product-section'>\n                <div className='product-suite'>\n                  <div className='product-card' onClick={() => navigate('/agents/listing-generator')}>\n                    <div className='summary-icon' id='icon1'></div>\n                    <h1>Property listing generator</h1>\n                    <h3>Build a property listing in less than 2 minutes. Save hours of time curating your listings and get access to the data you need to attract buyers.</h3>\n                  </div>\n                  <div className='product-card' onClick={() => navigate('/agents/finder')}>\n                    <div className='summary-icon' id='icon2'></div>\n                    <h1>Lead generator</h1>\n                    <h3>Find the full details about properties on the market in seconds. Everything you need to know about the properties you want on your books, helping you optimise your lead gen.</h3>\n                  </div>\n                  <div className='product-card' id='coming-soon'>\n                    <div className='coming-soon-banner'>\n                      <h3>Coming soon</h3>\n                    </div>\n                    <div className='summary-icon' id='icon3'></div>\n                    <h1>Valuation guide</h1>\n                    <h3>Get property valuation in seconds and see insights into what is driving the valuation.</h3>\n                  </div>\n                </div>\n              </section>\n            </section>\n          </section>\n\n        </>\n      </section>\n\n\n\n\n    </>\n\n\n\n  )\n}\n\nexport default WhiteHome"],"names":["WhiteHome","navigate","useNavigate","profileContent","setProfileContent","useState","profileDetail","setProfileDetail","userData","setUserData","companyData","setCompany","errors","setErrors","useEffect","isUserAuth","async","data","axios","get","getUserToken","headers","Authorization","getAccessToken","console","log","company","error","getUser","_jsx","_Fragment","children","_jsxs","className","WhiteNavbar","navbarColour","NavBarRevised","WhiteSidebar","first_name","usage_stats","package","onClick","id"],"sourceRoot":""}