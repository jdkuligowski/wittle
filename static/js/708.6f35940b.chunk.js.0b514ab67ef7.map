{"version":3,"file":"static/js/708.6f35940b.chunk.js","mappings":"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","sources":["components/helpers/Loading.js","components/tools/NavBarRevised.js","components/tools/ProfileMobileSlider.js","components/tools/WhiteNavbar.js","components/whiteLabel/b2bModals/SavedProperties.js","components/whiteLabel/EPCMatcher/ManualMatcher.js","components/whiteLabel/b2bModals/RemoveProperties.js","components/whiteLabel/EPCMatcher/LeadGenerator.js","components/whiteLabel/WhiteSidebar.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/metaProps.js"],"sourcesContent":["import React from 'react'\n\nconst Loading = () => (\n  <div className=\"loading-gif\">\n    <img src={require('../../styles/new-loading.gif')} alt=\"loading gif\"/>\n  </div>\n)\n\nexport default Loading","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { useDetectOutsideClick } from './ClickDropdown'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\n\nconst NavBarRevised = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n    setIsActive(false)\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  const dropdownRef = useRef(null)\n  // const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false)\n  const [isActive, setIsActive] = useState(false)\n  const openDropdown = () => setIsActive(!isActive)\n\n\n  // ? Section for login form detail within navbar\n  // set form data required for login\n\n  const [errors, setErrors] = useState({\n    email: '',\n    // username: '',\n    password: '',\n    passwordConfirmation: '',\n    // first_name: '',\n    // last_name: '',\n  })\n\n  // function for setting user to local storage when log in is successful\n  const setUserTokenToLocalStorage = (token) => {\n    window.localStorage.setItem('wittle-user-token', token)\n  }\n\n  // send form to back end to log in\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      console.log(registerData)\n      setUserTokenToLocalStorage(data.token)\n      //console.log(data.token)\n      console.log({ data })\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      navigate('/')\n    } catch (error) {\n      setErrors(true)\n    }\n  }\n\n  // update form dtail when logging in\n  const handleChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    setErrors(false)\n  }\n\n  // state for determining password state type\n  const [loginPasswordType, setLoginPasswordType] = useState('password')\n  const [registerPasswordType, setRegisterPasswordType] = useState('password')\n\n  // password reveal button\n  const passwordReveal = () => {\n    if (loginPasswordType === 'password') {\n      setLoginPasswordType('text')\n    } else {\n      setLoginPasswordType('password')\n    }\n  }\n\n  // password reveal button\n  const passwordRegisterReveal = () => {\n    if (registerPasswordType === 'password') {\n      setRegisterPasswordType('text')\n    } else {\n      setRegisterPasswordType('password')\n    }\n  }\n\n  // ? Menu modal\n  // state for the menu modal\n  const [menuShow, setMenuShow] = useState(false)\n\n  // close modal\n  const handleMenuClose = () => {\n    setMenuShow(false)\n  }\n\n  // open modal\n  const handleMenuShow = () => {\n    setMenuShow(true)\n  }\n\n  // ? Registration modal\n  // set state for showing insights modal\n  const [registerShow, setRegisterShow] = useState(false)\n\n  // close modal\n  const handleRegisterClose = () => {\n    setRegisterShow(false)\n  }\n\n  // show the modal\n  const handleRegisterShow = () => {\n    setRegisterShow(true)\n  }\n\n  // register data\n  const [registerData, setRegisterData] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  // register data erros\n  const [registerError, setRegisterError] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    first_name: '',\n    last_name: '',\n    post: '',\n  })\n\n  // function to validate the password\n  const validatePassword = (password) => {\n    const minLength = 8\n    const hasUppercase = matches(password, /[A-Z]/)\n    const hasLowercase = matches(password, /[a-z]/)\n    const hasDigit = matches(password, /\\d/)\n    const hasSpecialChar = matches(password, /[^A-Za-z0-9]/)\n\n    if (!isLength(password, { min: minLength })) {\n      return 'Password must be at least 8 characters long'\n    }\n    if (!hasUppercase) {\n      return 'Password must contain at least one uppercase letter'\n    }\n    if (!hasLowercase) {\n      return 'Password must contain at least one lowercase letter'\n    }\n    if (!hasDigit) {\n      return 'Password must contain at least one digit'\n    }\n    if (!hasSpecialChar) {\n      return 'Password must contain at least one special character'\n    }\n    return ''\n  }\n\n  // update registration data and enter errors where relevant\n  const registerChange = (e) => {\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value })\n    if (!isEmail(registerData.email)) {\n      setRegisterError({ ...registerError, email: 'Invalid email address' })\n\n    } else if (e.target.name === 'first_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, first_name: 'Add first name' })\n      } else {\n        setRegisterError({ ...registerError, first_name: '' })\n      }\n\n    } else if (e.target.name === 'last_name') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, last_name: 'Add last name' })\n      } else {\n        setRegisterError({ ...registerError, last_name: '' })\n      }\n\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 1) {\n        setRegisterError({ ...registerError, username: 'Add username' })\n      } else {\n        setRegisterError({ ...registerError, username: '' })\n      }\n\n    } else if (e.target.name === 'password') {\n      const passwordError = validatePassword(e.target.value)\n      setRegisterError({ ...registerError, password: passwordError })\n\n    } else if (e.target.name === 'password_confirmation') {\n      if (e.target.value !== registerData.password) {\n        setRegisterError({ ...registerError, password_confirmation: 'Passwords don\\'t match' })\n      } else {\n        setRegisterError({ ...registerError, password_confirmation: '' })\n      }\n    }\n  }\n\n  // submit registration form\n  const registerSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await axios.post('/api/auth/register/', registerData)\n      const { data } = await axios.post('/api/auth/login/', registerData)\n      setUserTokenToLocalStorage(data.token)\n      window.localStorage.setItem('wittle-username', data.username)\n      console.log('username ->', data.username)\n      handleRegisterClose()\n      setRegisterData()\n    } catch (err) {\n      console.log(err)\n      setRegisterError({ ...registerError, post: 'Wittle account with this email already exists' })\n    }\n  }\n\n\n  // ? Section 3: controlling the state and functions for the nav bar changing color and section\n  // state for colour of navbar\n  const [navColour, setNavColour] = useState('#1A276C')\n  const [titleColour, setTitleColour] = useState('#FDF7F0')\n  const [textColour, setTextColour] = useState('#ED6B86')\n\n  // function for selecting home page\n  const homeSelect = () => {\n    setProfileContent('Home')\n    setProfileDetail('Home')\n    navigate('/agents/profile')\n  }\n\n  // function for selecting wittle search\n  const listingGeneratorSelect = () => {\n    setProfileDetail('Listing generator')\n    setProfileContent('Listing generator')\n    navigate('/agents/listing-generator')\n  }\n\n  // function for selecting wittle lifestyle\n  const leadGeneratorSelect = () => {\n    setProfileContent('Lead generator test')\n    setProfileDetail('Lead generator test')\n    navigate('/agents/lead-gen')\n  }\n\n  // function for selecting wittle lifestyle\n  const howToSelect = () => {\n    setProfileContent('How to guide')\n    setProfileDetail('How to guide')\n    navigate('/agents/guide')\n  }\n\n  // function for selecting wittle lifestyle\n  const accountSelect = () => {\n    setProfileContent('Account')\n    setProfileDetail('Account')\n    navigate('/agents/account')\n\n  }\n\n  return (\n    <>\n      <section className='centered-nav-bar' style={{ backgroundColor: navColour }}>\n        <section className='top-section'>\n\n          <div className='logo'>\n            <div className='wittle-logo' onClick={() => navigate('/')}></div>\n          </div>\n        </section>\n        <section className='nav-slider'>\n          <h4 style={{ color: profileContent === 'Home' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Home' ? '5px' : '' }} onClick={homeSelect}>HOME</h4>\n          <h4 style={{ color: profileContent === 'Listing generator' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Listing generator' ? '5px' : '' }} onClick={listingGeneratorSelect}>LISTING GENERATOR</h4>\n          <h4 style={{ color: profileContent === 'Lead generator' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Lead generator' ? '5px' : '' }} onClick={leadGeneratorSelect}>LEAD GENERATOR</h4>\n          <h4 style={{ color: profileContent === 'How to guide' ? titleColour : textColour, textUnderlineOffset: profileContent === 'How to guide' ? '5px' : '' }} onClick={howToSelect}>HOW TO GUIDE</h4>\n          <h4 style={{ color: profileContent === 'Account' ? titleColour : textColour, textUnderlineOffset: profileContent === 'Account' ? '5px' : '' }} onClick={accountSelect}>ACCOUNT</h4>\n        </section>\n      </section>\n      {/* <MenuModal\n        menuShow={menuShow}\n        setMenuShow={setMenuShow}\n        handleMenuClose={handleMenuClose}\n        removeItemFromStorage={removeItemFromStorage}\n      /> */}\n    </>\n  )\n}\n\nexport default NavBarRevised\n\n\n\n\n// {isUserAuth() ?\n//   <div className=\"menu-container\" onClick={handleMenuShow} >\n//     <div className=\"menu-trigger\" >\n//       <span>\n//         <div className='burger-icon'>\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//           <hr className='burger-icon-line' />\n//         </div>\n//       </span>\n//     </div>\n//     <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//       <ul>\n//         <li className='dropdowns'><a href=\"/property-search\">New property search</a></li>\n//         <li className='dropdowns'><a href=\"/wittle-search\">New Wittle search</a></li>\n//         <li className='dropdowns'><a onClick={() => navigate(`/profile/${getUserToken()}`)}>Home</a></li>\n//         <li className='dropdowns' onClick={removeItemFromStorage}><a>Sign out</a></li>\n//       </ul>\n//     </nav>\n//   </div>\n//   :\n//   <>\n//     <div className='menu-container' onClick={handleMenuShow} >\n//       <div className=\"menu-trigger\" >\n//         <span>\n//           <div className='burger-icon'>\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//             <hr className='burger-icon-line' />\n//           </div>\n//         </span>\n//       </div>\n//       <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n//         <form className='form-detail' onSubmit={handleSubmit}>\n//           <p>Log in to your account</p>\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={handleChange} />\n//           <div className='login-input'>\n//             <input type={loginPasswordType} name='password' className='password-input' placeholder='Password' value={registerData.password} onChange={handleChange} />\n//             <div className='password-icon-container' onClick={passwordReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           <button onClick={openDropdown} className='sign-up' type='submit'>\n//             <span>\n//               <div className='burger-icon'>\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//                 <hr style={{ border: `1.5px solid ${titleColour}` }} className='burger-icon-line' />\n//               </div>\n//             </span>\n//           </button>\n//           {/* <GoogleLogin onSuccess={googleLogin} onError={errorMessage} /> */}\n\n//           <h5>New to Wittle?\n//             <span onClick={handleRegisterShow}> Join us</span>\n//           </h5>\n//         </form>\n//       </nav>\n//     </div>\n//     {/* <div className='register-modal-container'> */}\n//     <Modal show={registerShow} onHide={handleRegisterClose} backdrop='static' className='register-modal'>\n//       <Modal.Body>\n//         <form className='form-detail' onSubmit={registerSubmit} >\n//           <div className='register-title'>\n//             <h1>Unlock the benefits of Wittle</h1>\n//             <h1 className='x-close' onClick={handleRegisterClose}>x</h1>\n//           </div>\n//           <p className='form-overview'>Set up an account to help you find the perfect home</p>\n//           <hr />\n//           {/* First name */}\n//           <input type='text' name='first_name' className='input' placeholder='First name' value={registerData.first_name} onChange={registerChange} />\n//           {registerError.first_name && <p className=\"error\">* {registerError.first_name}</p>}\n//           {/* Last namee */}\n//           <input type='text' name='last_name' className='input' placeholder='Last name' value={registerData.last_name} onChange={registerChange} />\n//           {registerError.last_name && <p className=\"error\">* {registerError.last_name}</p>}\n//           {/* Email */}\n//           <input type='email' name='email' className='input' placeholder='Email' value={registerData.email} onChange={registerChange} />\n//           {registerError.email && <p className=\"error\">* {registerError.email}</p>}\n//           {/* Username */}\n//           <input type='text' name='username' className='input' placeholder='Username' value={registerData.username} onChange={registerChange} />\n//           {registerError.username && <p className=\"error\">* {registerError.username}</p>}\n//           {/* Password */}\n//           <div className='login-input'>\n//             <input type={registerPasswordType} name='password' className='password-input-register' placeholder='Password' value={registerData.password} onChange={registerChange} />\n//             <div className='password-icon-container' onClick={passwordRegisterReveal}>\n//               <div className='password-icon'></div>\n//             </div>\n//           </div>\n//           {registerError.password && <p className=\"error\">* {registerError.password}</p>}\n//           {/* Password confirmation */}\n//           <input type='password' name='password_confirmation' className='input' placeholder='Password confirmation' value={registerData.password_confirmation} onChange={registerChange} />\n//           {registerError.password_confirmation && <p className=\"error\">* {registerError.password_confirmation}</p>}\n\n//           <button type='submit'>Register</button>\n//           {registerError.post && <p className=\"error\">* {registerError.post}</p>}\n\n//         </form>\n//         <div className='register-bottom'>\n//           <button className='register-close' onClick={handleRegisterClose}>Close</button>\n//         </div>\n//       </Modal.Body>\n//     </Modal>\n//     {/* </div> */}\n\n//   </>\n// }\n\n","import React, { useState, useEffect, useRef } from 'react'\n\n\nconst ProfileMobileSlider = ({ setProfileContent, profileContent, profileDetail, setProfileDetail }) => {\n\n  return (\n    <>\n      <div className='mobile-selector-section'>\n        <div className='mobile-title-slider'>\n          {profileContent === 'Search' ?\n            <>\n              <h2 className='pills' onClick={() => setProfileDetail('Wittle search')} style={{ fontWeight: profileDetail === 'Wittle search' ? '700' : '500', backgroundColor: profileDetail === 'Wittle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Wittle search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property search')} style={{ fontWeight: profileDetail === 'Property search' ? '700' : '500', backgroundColor: profileDetail === 'Property search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property search</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved properties')} style={{ fontWeight: profileDetail === 'Saved properties' ? '700' : '500', backgroundColor: profileDetail === 'Saved properties' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved properties</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Saved searches')} style={{ fontWeight: profileDetail === 'Saved searches' ? '700' : '500', backgroundColor: profileDetail === 'Saved searches' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved searches</h2>\n              <h2 className='pills' onClick={() => setProfileDetail('Property comparison')} style={{ fontWeight: profileDetail === 'Property comparison' ? '700' : '500', backgroundColor: profileDetail === 'Property comparison' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Property comparison</h2>\n            </>\n            :\n            profileContent === 'Lifestyle' ?\n              <>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle search')} style={{ fontWeight: profileDetail === 'Lifestyle search' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle search' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Search</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('List')} style={{ fontWeight: profileDetail === 'List' ? '700' : '500', backgroundColor: profileDetail === 'List' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Saved places</h2>\n                <h2 className='pills' onClick={() => setProfileDetail('Lifestyle insights')} style={{ fontWeight: profileDetail === 'Lifestyle insights' ? '700' : '500', backgroundColor: profileDetail === 'Lifestyle insights' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Insights</h2>\n              </>\n              :\n              profileContent === 'Admin' ?\n                <>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin dashboard')} style={{ fontWeight: profileDetail === 'Admin dashboard' ? '700' : '500', backgroundColor: profileDetail === 'Admin dashboard' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Dashboard</h2>\n                  <h2 className='pills' onClick={() => setProfileDetail('Admin opportunities')} style={{ fontWeight: profileDetail === 'Admin opportunities' ? '700' : '500', backgroundColor: profileDetail === 'Admin opportunities' ? '#FFA7E5' : 'rgba(255, 167, 229, 0.1)' }}>Opportunity</h2>\n                </>\n                :\n                ''\n          }\n        </div>\n        {/* } */}\n      </div>\n\n\n    </>\n  )\n}\n\nexport default ProfileMobileSlider","import { useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { isUserAuth, getUserToken, getAccessToken } from '../auth/Auth'\nimport Select from 'react-select'\nimport { Modal } from 'react-bootstrap'\nimport { GoogleLogin } from '@react-oauth/google'\nimport { isEmail, isLength, matches } from 'validator'\nimport MenuModal from '../helpers/modals/MenuModal'\n\n\nconst WhiteNavbar = ({ navbarColour }) => {\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    window.location.reload()\n  }\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n\n  return (\n    <>\n      <section className='nav-section no-print' style={{ backgroundColor: navbarColour }}>\n        <div className='left-section'>\n          <div className='logo'>\n            <h2 onClick={() => navigate('/')}></h2>\n            {/* <div className='logo-image'></div> */}\n          </div>\n        </div>\n    \n        {isUserAuth() ?\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={removeItemFromStorage}><a>Sign out</a></h3>\n          </div>\n\n          :\n          <div className=\"menu-container\" >\n            <h3 className='cta' onClick={() => navigate('/login')}><a>Sign in</a></h3>\n          </div>\n\n        }\n      </section>\n\n    </>\n  )\n\n}\n\nexport default WhiteNavbar","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst SavedProperties = ({ savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites }) => {\n\n  const closeAndLeave = () => {\n    setLeadGenSection('Saved properties')\n    handleSavedActionClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={savedActionShow} onHide={handleSavedActionClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleSavedActionClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>We&apos;ve added {latestFavourites === 1 ? `${latestFavourites} property` : `${latestFavourites} properties`} to your saved list!</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={closeAndLeave}>Go to saved</button>\n                <button className='stay' onClick={handleSavedActionClose}>Stay here</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default SavedProperties","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport Loading from '../../helpers/Loading'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport { CarouselItem } from 'react-bootstrap'\n\n\n\nconst ManualMatcher = ({ increaseUsageCount, setErrors, userData, loadUserData, savedProperties, archivedProperties, handleVisitUrl,\n  savedActionShow, handleSavedActionClose, setLeadGenSection, latestFavourites, handleSavedActionShow, setLatestFavourites, setSavedActionShow }) => {\n\n\n  // set state for loading\n  const [loading, setLoading] = useState()\n\n  // navigation\n  const navigate = useNavigate()\n\n  // form inputs\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  const [channel, setChannel] = useState('Lettings')\n\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n  const [expandedItems, setExpandedItems] = useState(new Set()) // State to keep track of expanded items\n\n  const [matchingProperties, setMatchingProperties] = useState({}) // State to store matching properties\n\n\n\n  const toggleExpandedItem = async (index) => {\n    const newExpandedItems = new Set(expandedItems)\n    const property = propertyList[index]\n\n    if (newExpandedItems.has(index)) {\n      newExpandedItems.delete(index)\n    } else {\n      newExpandedItems.add(index)\n      // Fetch matching properties if not already fetched for this item\n      if (!matchingProperties[index] && channel === 'Lettings') {\n        const matches = await liveProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      } else if (!matchingProperties[index] && channel === 'Sales') {\n        const matches = await liveSalesProperties(property.postcode)\n        console.log('matches ->', matches)\n        setMatchingProperties({ ...matchingProperties, [index]: matches })\n      }\n    }\n    setExpandedItems(newExpandedItems)\n  }\n\n\n  // ? Section 2: loading properties\n  // function to load properties from EPC database\n  const loadProperties = async () => {\n    setMatchingProperties({})\n    setExpandedItems(new Set())\n    setLoading(true)\n    setSearch(false)\n\n\n    const sanitizedPostcode = postcodeSubstring.replace(/\\s+/g, '')\n\n    try {\n      const { data } = await axios.get(`/api/epc/${sanitizedPostcode}`)\n      console.log('Postcode data ->', data)\n      setLongPropertyList(data)\n\n      if (data && Array.isArray(data) && data.length > 0) {\n        let filteredData = data\n\n        if (inputType === 'Efficiency') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_efficiency === Number(currentEnergy)) &&\n            (!potentialEnergy || property.potential_energy_efficiency === Number(potentialEnergy))\n          )\n        } else if (inputType === 'Rating') {\n          filteredData = filteredData.filter(property =>\n            (!roadSubstring || property.address.toLowerCase().includes(roadSubstring.toLowerCase())) &&\n            (!currentEnergy || property.current_energy_rating === currentEnergy.toUpperCase()) &&\n            (!potentialEnergy || property.potential_energy_rating === potentialEnergy.toUpperCase())\n          )\n        }\n\n        filteredData = filteredData.sort((a, b) => new Date(b.inspection_date) - new Date(a.inspection_date))\n\n        if (filteredData.length > 0) {\n          setPropertyList(filteredData)\n          console.log('filtered data->', filteredData)\n          increaseUsageCount()\n        } else if (filteredData.length === 0) {\n          setPropertyList('')\n        }\n\n        setLoading(false)\n      } else {\n        console.log('No postcode data available')\n        setLoading(false)\n      }\n    } catch (error) {\n      setPropertyList('')\n      setErrors(true)\n      console.log(error)\n      setLoading(false)\n    }\n\n    setSearch(true)\n  }\n\n\n  const liveProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties_rental/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n  const liveSalesProperties = async (postcode) => {\n    try {\n      console.log(postcode)\n      const { data } = await axios.get(`/api/epc_properties/${postcode}`)\n      return data // Returns the list of matching properties\n    } catch (error) {\n      console.log(error)\n      return [] // Return an empty array in case of an error\n    }\n  }\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async (matchingProperties, epcData) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.rightmove_id,\n        'postcode': matchingProperties.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.agent,\n        'type': matchingProperties.type,\n        'addedOn': matchingProperties.addedOn,\n        'propertyType': matchingProperties.propertyType,\n        'price': matchingProperties.price,\n        'bathrooms': matchingProperties.bathrooms,\n        'bedrooms': matchingProperties.bedrooms,\n        'let_available_date': matchingProperties.let_available_date,\n        'date_added_db': matchingProperties.date_added_db,\n        'url': matchingProperties.url,\n        'current_epc': matchingProperties.current_epc,\n        'potential_epc': matchingProperties.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.added_revised,\n        'reduced_revised': matchingProperties.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function for adding favourites based on relevant row\n  const addPartialFavourite = async (epcData) => {\n    if (isUserAuth()) {\n      const random12DigitNumber = Math.floor(Math.random() * 1e12)\n      const newFavourites = [{\n        'rightmove_id': random12DigitNumber.toString(),\n        'postcode': epcData.postcode,\n        'address': epcData.address,\n        'agent': '',\n        'type': '',\n        'addedOn': '',\n        'propertyType': '',\n        'price': null,\n        'bathrooms': null,\n        'bedrooms': null,\n        'let_available_date': null,\n        'date_added_db': null,\n        'url': '',\n        'current_epc': epcData.current_energy_efficiency,\n        'potential_epc': epcData.potential_energy_efficiency,\n        'action': 'Saved',\n        'added_revised': null,\n        'reduced_revised': null,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setExpandedItems(new Set())\n\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n\n\n  return (\n\n    <>\n      <div className='epc-matcher'>\n        <div className='input-section'>\n          <h3 className='sub-title'>Input property details to find  details about live listings</h3>\n          {!loading ?\n            <>\n              <div className='double-input-block'>\n\n                <div className='input-block half'>\n                  <h3>Postcode</h3>\n                  <input\n                    type=\"text\"\n                    value={postcodeSubstring}\n                    onChange={e => setPostcodeSubstring(e.target.value)}\n                    placeholder=\"Enter postcode...\"></input>\n                </div>\n                <div className='input-block half'>\n                  <h3>Road name</h3>\n                  <input\n                    type=\"text\"\n                    value={roadSubstring}\n                    onChange={e => setRoadSubstring(e.target.value)}\n                  ></input>\n                </div>\n              </div>\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Efficiency (numbers) or Rating (letters)</h3>\n                  <select onChange={(e) => setInputType(e.target.value)}>\n                    <option>Efficiency</option>\n                    <option>Rating</option>\n                  </select>\n                </div>\n              </div>\n              {inputType === 'Efficiency' ?\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Efficiency</h3>\n                      <input\n                        type=\"number\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n                :\n                <>\n                  <div className='double-input-block'>\n\n                    <div className='input-block half'>\n                      <h3>Current Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={currentEnergy}\n                        onChange={e => setCurrentEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                    <div className='input-block half'>\n                      <h3>Potential Energy Rating</h3>\n                      <input\n                        type=\"text\"\n                        value={potentialEnergy}\n                        onChange={e => setPotentialEnergy(e.target.value)}\n                      ></input>\n                    </div>\n                  </div>\n                </>\n              }\n              <div className='single-input-block'>\n\n                <div className='input-block large'>\n                  <h3>Property category</h3>\n                  <select className='dropdown' value={channel || 'Lettings'} onChange={(e) => setChannel(e.target.value)}>\n                    <option>Lettings</option>\n                    <option>Sales</option>\n                  </select>\n                </div>\n              </div>\n              <div className='search-section'>\n                <button className='load-insights' onClick={loadProperties}>Load Properties</button>\n\n              </div>\n            </>\n            :\n            <Loading />}\n        </div>\n\n\n        <div className='manual-property-results'>\n          <div className='results-block'>\n            {longPropertyList.length === 0 && !search ? <h3 className='sub-title'>Start new search to see results</h3> :\n              search && propertyList.length === 0 ? <h3 className='sub-title'>We couldn&apos;t find anything that matched your search</h3> :\n                search && propertyList.length > 0 ?\n                  <>\n                    <h3 className='sub-title'>You have {propertyList.length} matching results</h3>\n                    <div className='results-details'>\n                      {propertyList ? propertyList\n                        .map((item, index) => {\n                          return (\n                            <>\n                              <div className='results-content' key={index}>\n                                <h5 className='row-value'>{index + 1}</h5>\n                                <div className='results-items'>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='catchment'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title' >Address: </h5>\n                                      <h5 className='text-result'>{item.address}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='house'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor area: </h5>\n                                      <h5 className='text-result'>{item.floor_area} sq.m</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='location'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Postcode: </h5>\n                                      <h5 className='text-result'>{item.postcode}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='building'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>Floor level: </h5>\n                                      <h5 className='text-result'>{item.final_floor_level}</h5>\n                                    </div>\n                                  </div>\n                                  <div className='results-line'>\n                                    <div className='result-icon' id='search'></div>\n                                    <div className='results-text'>\n                                      <h5 className='text-title'>last inspection: </h5>\n                                      <h5 className='text-result'>{item.inspection_date}</h5>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className='buttons'>\n                                  {savedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                    <div className='saved-message'>\n                                      <h3>Saved</h3>\n                                    </div>\n                                    :\n                                    archivedProperties.some(property => property.address === item.address && property.postcode === item.postcode) ?\n                                      <div className='saved-message'>\n                                        <h3>Archived</h3>\n                                      </div>\n                                      :\n                                      <>\n                                        <div className='heart-icon' onClick={() => addPartialFavourite(item)} ></div>\n                                        <button className='expansion' style={{ backgroundColor: expandedItems.has(index) ? '#1A276C' : '#1A276C' }} onClick={() => toggleExpandedItem(index)}>\n                                          {expandedItems.has(index) ? '-' : '+'}\n                                        </button>\n                                      </>\n                                  }\n                                </div>\n\n                              </div>\n\n\n                              {expandedItems.has(index) && (\n                                <>\n                                  <hr className='property-divider' />\n\n                                  {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                    <>\n                                      <h3 className='matching-title'>Matching properties</h3>\n                                      <div className='expanded-section-titles'>\n                                        <p className='column' id='column1'>#</p>\n                                        <p className='column' id='column2'>Address</p>\n                                        <p className='column' id='column3'>Postcode</p>\n                                        <p className='column' id='column4'>Price</p>\n                                        <p className='column' id='column5'>Bedrooms</p>\n                                        <p className='column' id='column6'></p>\n                                      </div>\n\n                                    </>\n                                    : ''}\n\n                                  <div className='expanded-section'>\n                                    {matchingProperties[index] && matchingProperties[index].length > 0 ?\n                                      matchingProperties[index].map((matchingItem, matchingIndex) => (\n                                        // Render each matching property here\n                                        <div className='expanded-content' key={matchingIndex} >\n                                          <p className='column' id='column1' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingIndex + 1} </p>\n                                          <p className='column' id='column2' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.displayAddress}</p>\n                                          <p className='column' id='column3' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.postcode}</p>\n                                          <p className='column' id='column4' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.price}</p>\n                                          <p className='column' id='column5' onClick={() => handleVisitUrl(matchingItem.url)}>{matchingItem.bedrooms}</p>\n                                          <div className='column' id='column6' >\n                                            {savedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                              <div className='saved-message'>\n                                                <h3>Saved</h3>\n                                              </div>\n                                              :\n                                              archivedProperties.some(property => property.rightmove_id === matchingItem.rightmove_id) ?\n                                                <div className='saved-message'>\n                                                  <h3>Archived</h3>\n                                                </div>\n                                                :\n\n                                                <div className='heart-icon' onClick={() => addFavourite(matchingItem, item)} ></div>\n                                            }\n                                          </div>\n\n                                        </div>\n                                      )) :\n                                      <p className='denied'>No matching properties found for {item.address}.</p>\n                                    }\n                                  </div>\n                                </>\n                              )}\n                              <hr className='property-divider' />\n\n                            </>\n                          )\n                        })\n                        : ''}\n\n                    </div>\n                  </>\n                  : ''}\n          </div>\n\n\n        </div>\n      </div>\n      <SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n    </>\n  )\n}\n\n\nexport default ManualMatcher","\nimport React, { useState, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport axios from 'axios'\n\n\n\nconst RemoveProperties = ({ propertyRemoveShow, handleRemovePropertyClose, removeProperty }) => {\n\n  const closeAndLeave = () => {\n    // setLeadGenSection('Saved properties')\n    handleRemovePropertyClose()\n  }\n\n  // useEffect(() => {\n  //   console.log('passed favourite ->', latestFavourites)\n  // })\n\n  return (\n    <>\n      <Modal show={propertyRemoveShow} onHide={handleRemovePropertyClose} backdrop='static' className='saved-action-modal'>\n        <Modal.Body>\n          <>\n            <div className='inner-wrapper'>\n              <div className='header-section'>\n                <h1 onClick={handleRemovePropertyClose}>X</h1>\n              </div>\n              <div className='core-body'>\n                <h3 className='message'>Are you sure you don&apos;t want to see these properties any more?</h3>\n                <h3 className='sub-message'>Once you do this, they won&apos;t appear in your latest or saved properties.</h3>\n              </div>\n              <div className='cta-section'>\n                <button className='saved' onClick={removeProperty}>Remove</button>\n                <button className='stay' onClick={handleRemovePropertyClose}>Go back</button>\n              </div>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nexport default RemoveProperties","import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { getUserToken, isUserAuth, getAccessToken } from '../../auth/Auth'\nimport { Modal } from 'react-bootstrap'\nimport { NumericFormat } from 'react-number-format'\nimport NavBar from '../../tools/NavBar'\nimport ProfileMobileSlider from '../../tools/ProfileMobileSlider'\nimport WhiteNavbar from '../../tools/WhiteNavbar'\nimport WhiteSidebar from '../WhiteSidebar'\nimport NavBarRevised from '../../tools/NavBarRevised'\nimport Loading from '../../helpers/Loading'\nimport { CSVLink } from 'react-csv'\nimport SavedProperties from '../b2bModals/SavedProperties'\nimport ManualMatcher from '../EPCMatcher/ManualMatcher'\nimport RemoveProperty from '../b2bModals/RemoveProperties'\nimport RemoveProperties from '../b2bModals/RemoveProperties'\n\n\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst LeadGenerator = () => {\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // set state for errors\n  const [errors, setErrors] = useState()\n\n  // set state for user\n  const [userData, setUserData] = useState()\n\n  // set state for rentalLoading\n  const [rentalLoading, setRentalLoading] = useState()\n  const [salesLoading, setSalesLoading] = useState()\n\n  // set state for completing a search\n  const [search, setSearch] = useState(false)\n\n  // state for determining what content shows\n  const [profileContent, setProfileContent] = useState('Comparison')\n  const [profileDetail, setProfileDetail] = useState('Comparison')\n\n  // states for pop outs on the side\n  const [variableSide, setVariableSide] = useState(false)\n\n  const [postcodeSubstring, setPostcodeSubstring] = useState('')\n  const [subcodeSubstring, setSubcodeString] = useState('')\n  const [roadSubstring, setRoadSubstring] = useState('')\n  const [currentEnergy, setCurrentEnergy] = useState()\n  const [potentialEnergy, setPotentialEnergy] = useState()\n  const [longPropertyList, setLongPropertyList] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [channel, setChannel] = useState('')\n\n  const [inputType, setInputType] = useState('Efficiency')\n\n\n  const [favouritedProperties, setFavouritedProperties] = useState([])\n\n  const [savedProperties, setSavedProperties] = useState()\n  const [archivedProperties, setArchivedProperties] = useState()\n\n  const [sessionName, setSessionName] = useState(sessionStorage.getItem('sessionName') || '')\n\n  const [targetPostcode, setTargetPostcode] = useState(['SW8'])\n  const [combiniedProperties, setCombinedProperties] = useState()\n\n  const [leadGenSection, setLeadGenSection] = useState('Home')\n\n  const [noMatches, setNoMatches] = useState([])\n  const [singleMatches, setSingleMatches] = useState([])\n  const [multipleMatches, setMultipleMatches] = useState([])\n\n  const [salesNoMatches, setSalesNoMatches] = useState([])\n  const [salesSingleMatches, setSalesSingleMatches] = useState([])\n  const [salesMultipleMatches, setSalesMultipleMatches] = useState([])\n\n  const [channelView, setChannelView] = useState('Lettings')\n\n  const [expand, setExpand] = useState(false)\n\n  const [leadGenDetails, setLeadGenDetails] = useState({\n    postcode: '',\n    subcode: '',\n    bathrooms_min: null,\n    bathrooms_max: null,\n    bedrooms_min: null,\n    bedrooms_max: null,\n    rental_price_min: null,\n    rental_price_max: null,\n    sales_price_min: null,\n    sales_price_max: null,\n    channel: '',\n    rental_additional: '',\n  })\n\n\n  const [selectedRows, setSelectedRows] = useState([])\n  const [selectedSalesRows, setSelectedSalesRows] = useState([])\n\n  // set state for csv data\n  const [csvData, setCsvData] = useState()\n\n  // control the states for maps\n  const [viewport, setViewport] = useState({\n    latitude: 51.515419,\n    longitude: -0.141099,\n    zoom: 11.5,\n  })\n\n  const [drawnPolygons, setDrawnPolygons] = useState([])\n\n  const [checkboxStatus, setCheckboxStatus] = useState(singleMatches.map(() => false))\n  const [salesCheckboxStatus, setSalesCheckboxStatus] = useState(salesSingleMatches.map(() => false))\n\n  const [dateFilter, setDateFilter] = useState('2days')\n\n  const [favouriteIds, setFavouriteIds] = useState([])\n  const [removedIds, setRemovedIds] = useState([])\n\n  const [filteredProperties, setFilteredProperties] = useState([])\n  const [flteredSalesProperties, setFilteredSalesProperties] = useState([])\n  const [filteredMatchingProperties, setFilteredMatchingProperties] = useState([])\n  const [filteredSalesMatchingProperties, setFilteredSalesMatchingProperties] = useState([])\n  const [filteredNoProperties, setFiltedNoProperties] = useState([])\n  const [filteredSalesNoProperties, setFiltedSalesNoProperties] = useState([])\n\n  // State variables for sorting\n  const [sortPriceOrder, setSortPriceOrder] = useState('asc')\n  const [sortPostcodeOrder, setSortPostcodeOrder] = useState('asc')\n\n  const [latestFavourites, setLatestFavourites] = useState()\n\n  const [matchType, setMatchType] = useState('Matching')\n  const [salesMatchType, setSalesMatchType] = useState('Matching')\n  const [expandedMultipleMatches, setExpandedMultpleMatches] = useState(new Set())\n  const [expandedSalesMultipleMatches, setExpandedSalesMultpleMatches] = useState(new Set())\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n\n\n          // for the inputs page, sdetermine whether the user has already added them, if they have then set these values\n          if (data.lead_gen_details.length > 0) {\n            setLeadGenDetails(data.lead_gen_details[0])\n\n            const filteredFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n            const archivedFavourites = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Extracted')\n            const removedProperties = data.epc_favourites.filter(fav => fav.rightmove_id !== null && fav.action === 'Removed')\n            const newFavouriteIds = [...filteredFavourites, ...archivedFavourites, ...removedProperties].map(fav => fav.rightmove_id)\n\n            setFavouriteIds(newFavouriteIds)\n            setRemovedIds(removedProperties)\n            console.log('removed properties ->', removedProperties)\n            const dataCsv = transformCSVData(data.epc_favourites)\n\n            if (data.lead_gen_details[0].channel === 'Lettings') {\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Sales') {\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n            } else if (data.lead_gen_details[0].channel === 'Both') {\n              loadCombinedSalesFromUser(data, removedProperties, dateFilter)\n              loadCombinedPropertiesFromUser(data, removedProperties, dateFilter)\n            }\n            setSavedProperties(filteredFavourites)\n            console.log('saved properties ->', savedProperties)\n            setArchivedProperties(archivedFavourites)\n            setCsvData(dataCsv)\n            console.log('existing dtails ->', data.lead_gen_details[0])\n            increaseUsageCount()\n\n          } else {\n            const allFavouriteIds = []\n            // loadCombinedPropertiesFromUser(data, allFavouriteIds, dateFilter)\n            // loadCombinedSalesFromUser(data, allFavouriteIds, dateFilter)\n            console.log('date -> ', dateFilter)\n\n          }\n\n\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n\n  // carry out calculation to load user data\n  useEffect(() => {\n    loadUserData()\n  }, [])\n\n\n\n\n\n  // ? Section 3: Handling favourites data - selecting, adding, editing and  deleting\n  // function for adding favourites based on relevant row\n  const addFavourite = async () => {\n    if (isUserAuth()) {\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        handleSavedActionShow()\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to setting the favurites to the archives: \n  const archiveFavourite = async (favouriteIds) => {\n    if (isUserAuth()) {\n      try {\n        const response = await axios.put('/api/epc_favourite/update_favourites/', { favourite_ids: favouriteIds }, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favorite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n  // function to setting the favurites to the archives: \n  const removeProperty = async () => {\n    if (isUserAuth()) {\n      console.log(selectedRows)\n      // get a list of existing favourite ids from the user schema\n      const existingFavouriteIds = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n      // create a list of new unique favourites so we don't have any duplicates in the database\n      // console.log(selectedRows)\n      const combinedFavourites = [...selectedRows, ...selectedSalesRows]\n      console.log(combinedFavourites)\n\n\n      const newFavourites = combinedFavourites.filter(row => !existingFavouriteIds.has(row.rightmove_id))\n\n      console.log(newFavourites)\n\n      if (newFavourites.length === 0) {\n        console.log('No new favourites to add')\n        return\n      }\n\n      try {\n        const response = await axios.post('/api/epc_favourite/remove_property/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        setLatestFavourites(newFavourites.length)\n        loadUserData()\n        setMatchType('Matching')\n        setSelectedRows([])\n        setSelectedSalesRows([])\n        setCheckboxStatus(singleMatches.map(() => false))\n        setSalesCheckboxStatus(salesSingleMatches.map(() => false))\n        handleRemovePropertyClose()\n\n\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // function to remove favourite from the saved list in case user doesn't want it in there anymore\n  const deleteFavourite = async (id) => {\n    if (isUserAuth()) {\n\n      try {\n        const response = await axios.delete('/api/epc_favourite/delete_favourite/', {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n          data: { rightmove_id: id },\n        })\n        loadUserData()\n      } catch (error) {\n        console.error('Error updating favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  // select rows that will be added to the favourites then saved to file\n  const handleCheckboxChange = (e, index) => {\n    const updatedStatus = [...checkboxStatus]\n    updatedStatus[index] = e.target.checked\n    setCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...filteredProperties[index].property_data,\n      address: filteredProperties[index].epc_data_list[0].address,\n    }\n\n    console.log('selected property->', selectedProperty)\n    if (e.target.checked) {\n      console.log('checked')\n      setSelectedRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = filteredProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setCheckboxStatus(filteredProperties.map(() => true))\n\n    setSelectedRows(allRows)\n  }\n\n  const handleSelectAllChange = (e) => {\n    if (e.target.checked) {\n      selectAllRows() // Function that selects all rows\n    } else {\n      deselectAllRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllRows = () => {\n    setCheckboxStatus(filteredProperties.map(() => false))\n    setSelectedRows([])\n  }\n\n  // select rows that will be added to the favourites then saved to file\n  const salesCheckboxChange = (e, index) => {\n    const updatedStatus = [...salesCheckboxStatus]\n    updatedStatus[index] = e.target.checked\n    setSalesCheckboxStatus(updatedStatus)\n\n\n    const selectedProperty = {\n      ...flteredSalesProperties[index].property_data,\n      address: flteredSalesProperties[index].epc_data_list[0].address,\n    }\n\n    console.log(selectedProperty)\n    if (e.target.checked) {\n      setSelectedSalesRows(prevRows => [...prevRows, selectedProperty])\n    } else {\n      // Assuming 'rightmove_id' is a unique identifier\n      setSelectedSalesRows(prevRows => prevRows.filter(row => row.rightmove_id !== selectedProperty.rightmove_id))\n    }\n  }\n\n\n  // create function to select all rows\n  const selectAllSalesRows = () => {\n    const existingCombinations = new Set(userData.epc_favourites.map(fav => fav.rightmove_id))\n\n    const allRows = flteredSalesProperties.map(item => ({\n      ...item.property_data,\n      address: item.epc_data_list[0].address,\n      // Add any other fields from epc_data_list you need\n    })).filter(row => !existingCombinations.has(row.rightmove_id))\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => true))\n\n    setSelectedSalesRows(allRows)\n  }\n\n  const handleSelectAllSalesChange = (e) => {\n    if (e.target.checked) {\n      selectAllSalesRows() // Function that selects all rows\n    } else {\n      deselectAllSalesRows() // Function that deselects all rows\n    }\n  }\n\n  // Function to deselect all rows\n  const deselectAllSalesRows = () => {\n    setSalesCheckboxStatus(flteredSalesProperties.map(() => false))\n    setSelectedSalesRows([])\n  }\n\n\n  // function to populate the csv data that will eb extracted to file\n  const transformCSVData = (data) => {\n    const filteredData = data.filter(fav => fav.rightmove_id !== null && fav.action === 'Saved')\n    return filteredData.map((item, index) => {\n      return {\n        item: index + 1,\n        url: item.url,\n        address: item.address,\n        postcode: item.postcode,\n        addressPostcode: `${item.address}, ${item.postcode}`,\n        addedOn: item.added_revised,\n        property_type: item.property_type,\n        price: item.price,\n        bedrooms: item.bedrooms,\n        bathrooms: item.bathrooms,\n        let_available_date: item.let_available_date,\n        date_added: item.date_added_db,\n        agent: item.agent,\n        channel: item.channel,\n      }\n    })\n  }\n\n\n  // ? Section 4: Property data rentalLoading\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedPropertiesFromUser = async (data, deletedProperties, dateFilter) => {\n    setRentalLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].rental_price_min\n    const priceMax = data.lead_gen_details[0].rental_price_max\n    const additionalRental = data.lead_gen_details[0].rental_additional\n\n    try {\n      const url = `/api/epc_properties_rental/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&rental_price_min=${priceMin}&rental_price_max=${priceMax}&rental_additional=${additionalRental}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id))\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sngle matches ->', singleMatchesData)\n      console.log('no matches ->', noMatchesData)\n      console.log('multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setNoMatches(noMatchesData)\n      setSingleMatches(singleMatchesData)\n      setMultipleMatches(multipleMatchesData)\n      setRentalLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n  //  Loading latest data from the database based on the postcode areas applied by the user\n  const loadCombinedSalesFromUser = async (data, deletedProperties, dateFilter) => {\n    setSalesLoading(true)\n    const postcodeValue = data.lead_gen_details[0].postcode\n    const subcodeValue = data.lead_gen_details[0].subcode\n    const bedroomsMin = data.lead_gen_details[0].bedrooms_min\n    const bedroomsMax = data.lead_gen_details[0].bedrooms_max\n    const priceMin = data.lead_gen_details[0].sales_price_min\n    const priceMax = data.lead_gen_details[0].sales_price_max\n\n    try {\n      const url = `/api/epc_properties/combined-epc-results/?postcode=${postcodeValue}&subcode=${subcodeValue}&min_bedrooms=${bedroomsMin}&max_bedrooms=${bedroomsMax}&sales_price_min=${priceMin}&sales_price_max=${priceMax}`\n\n      // extract data based on url\n      const { data } = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      console.log('combined data ->', data)\n\n      const deletedPropertyIds = deletedProperties.map(property => property.rightmove_id)\n      const filteredData = data.filter(item => !deletedPropertyIds.includes(item.property_data.rightmove_id))\n\n      // Process and categorize the data\n      const noMatchesData = filteredData.filter(item => item.epc_data_list.length === 0)\n      const singleMatchesData = filteredData.filter(item => item.epc_data_list.length === 1)\n      const multipleMatchesData = filteredData.filter(item => item.epc_data_list.length > 1)\n\n      console.log('sales single matches ->', singleMatchesData)\n      console.log('sales no matches ->', noMatchesData)\n      console.log('sales multiple matches ->', multipleMatchesData)\n\n      // Update states\n      setSalesNoMatches(noMatchesData)\n      setSalesSingleMatches(singleMatchesData)\n      setSalesMultipleMatches(multipleMatchesData)\n      setSalesLoading(false)\n\n    } catch (error) {\n      console.error('can\\'t access combined data ->', error)\n    }\n  }\n\n\n\n\n\n\n\n  // ? Section 5: Inputting seach criteria\n  // post search criteria from the form to the database\n  const addSearchCriteria = async () => {\n    let response\n\n    // Check if userData exists and has lead_gen_details\n    if (userData && userData.lead_gen_details && userData.lead_gen_details.length > 0) {\n      // PUT request for existing details\n      response = await axios.put(`/api/lead_gen_details/${userData.id}/`, leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n\n    } else {\n      // POST request for new details\n      response = await axios.post('/api/lead_gen_details/', leadGenDetails, {\n        headers: {\n          Authorization: `Bearer ${getAccessToken()}`,\n        },\n      })\n      if (userData.lead_gen_details.channel === 'Lettings') {\n        setRentalLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Sales') {\n        setSalesLoading(true)\n      } else if (userData.lead_gen_details.channel === 'Both') {\n        setRentalLoading(true)\n        setSalesLoading(true)\n      }\n      setLeadGenSection('Explore properties')\n    }\n    loadUserData()\n  }\n\n  // input the postcode on the form\n  const inputPostcode = (e) => {\n    setPostcodeSubstring(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, postcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n  // input the sub postcode on the form\n  const inputSubcode = (e) => {\n    setSubcodeString(e.target.value.toUpperCase().replace(/\\s+/g, ''))\n    setLeadGenDetails(prevData => ({ ...prevData, subcode: e.target.value.toUpperCase().replace(/\\s+/g, '') }))\n  }\n\n\n\n\n\n  // ? Section 6: Addtional extra functions\n  // go to url in table\n  const handleVisitUrl = (url) => {\n    // window.open(url, '_blank') // This will open the URL in a new tab\n\n    const windowFeatures = 'width=1200,height=800,resizable=yes,scrollbars=yes,status=yes'\n\n    // Open the URL in a new window\n    window.open(url, '_blank', windowFeatures)\n  }\n\n\n\n  // extract current date to be sued as part of csv file\n  const getCurrentDate = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    return `${day}-${month}-${year}`\n  }\n\n  // remove login token from storage\n  const removeItemFromStorage = (token) => {\n    localStorage.removeItem('wittle-user-token')\n    localStorage.removeItem('wittle-username')\n    navigate('/login')\n  }\n\n\n  // sales prices\n  const salesPrices = [\n    '200000', '300000', '400000', '500000', '600000', '700000', '800000', '900000', '1000000', '1250000', '1500000', '1750000', '2000000', '2250000', '2500000',\n    '2750000', '3000000', '3500000', '4000000', '5000000', '7500000', '10000000', '12500000', '15000000', '20000000', '30000000', '40000000', '50000000'\n  ]\n\n  // rental prices\n  const rentalPrices = [\n    '500', '600', '700', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2250', '2500', '2750', '3000', '3250', '3500',\n    '4000', '4500', '5000', '5500', '6000', '7000', '8000', '9000', '10000', '12500', '15000', '20000', '25000', '30000', '40000', '50000', '60000'\n  ]\n\n\n\n  // function to filter properties\n  const filterPropertiesByDate = (properties, dateFilter) => {\n    if (!dateFilter || dateFilter === 'all') {\n      return properties\n    }\n\n    let days\n    let filterType = 'within' // Default filter type\n\n    switch (dateFilter) {\n      case '1day': days = 1; break\n      case '2days': days = 2; break\n      case '3days': days = 3; break\n      case '7days': days = 7; break\n      case '4weeks': days = 28; break\n      case '8weeks': days = 56; break\n      case '12weeks': days = 84; break\n      case '16weeks': days = 112; break\n      case '>8weeks': days = 56; filterType = 'beyond'; break\n      case '>12weeks': days = 84; filterType = 'beyond'; break\n      case '>16weeks': days = 112; filterType = 'beyond'; break\n      default: return properties\n    }\n\n    return properties.filter(property => {\n      const addedDate = parseDate(property.property_data.added_revised)\n      const reducedDate = parseDate(property.property_data.reduced_revised)\n\n      const mostRecentDate = addedDate || reducedDate // Use the non-null date\n      if (!mostRecentDate) {\n        return false // Skip this property if both dates are null\n      }\n\n      return filterType === 'within' ? isWithinLastDays(mostRecentDate, days) : isBeyondDays(mostRecentDate, days)\n    })\n  }\n\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(singleMatches, dateFilter)\n    setFilteredProperties(filtered)\n  }, [singleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesSingleMatches, dateFilter)\n    setFilteredSalesProperties(filtered)\n  }, [salesSingleMatches, dateFilter])\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(multipleMatches, dateFilter)\n    setFilteredMatchingProperties(filtered)\n  }, [multipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesMultipleMatches, dateFilter)\n    setFilteredSalesMatchingProperties(filtered)\n  }, [salesMultipleMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(noMatches, dateFilter)\n    setFiltedNoProperties(filtered)\n  }, [noMatches, dateFilter])\n\n\n  useEffect(() => {\n    const filtered = filterPropertiesByDate(salesNoMatches, dateFilter)\n    setFiltedSalesNoProperties(filtered)\n  }, [salesNoMatches, dateFilter])\n\n\n\n  const parseDate = (dateStr) => {\n    if (!dateStr) return null\n    const [day, month, year] = dateStr.split('/')\n    return new Date(year, month - 1, day)\n  }\n\n  const isWithinLastDays = (date, days) => {\n    const now = new Date()\n    return date >= new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n  const isBeyondDays = (date, days) => {\n    const now = new Date()\n    return date < new Date(now.getFullYear(), now.getMonth(), now.getDate() - days)\n  }\n\n\n  // Function to sort by price for letting\n  const sortByPrice = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      const priceA = parseInt(a.property_data.price.replace(/[^\\d.]/g, ''))\n      const priceB = parseInt(b.property_data.price.replace(/[^\\d.]/g, ''))\n      return sortPriceOrder === 'asc' ? priceA - priceB : priceB - priceA\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPriceOrder(sortPriceOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // Function to sort by postcode\n  const sortByPostcode = () => {\n    const sorted = [...filteredProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const salesSorted = [...flteredSalesProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleRentalSorted = [...filteredMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const multipleSalesSorted = [...filteredSalesMatchingProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noRentalSorted = [...filteredNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    const noSalesSorted = [...filteredSalesNoProperties].sort((a, b) => {\n      return sortPostcodeOrder === 'asc' ? a.property_data.postcode.localeCompare(b.property_data.postcode) : b.property_data.postcode.localeCompare(a.property_data.postcode)\n    })\n    setFilteredProperties(sorted)\n    setFilteredSalesProperties(salesSorted)\n    setFilteredMatchingProperties(multipleRentalSorted)\n    setFilteredSalesMatchingProperties(multipleSalesSorted)\n    setFiltedNoProperties(noRentalSorted)\n    setFiltedSalesNoProperties(noSalesSorted)\n    setSortPostcodeOrder(sortPostcodeOrder === 'asc' ? 'desc' : 'asc')\n  }\n\n\n  // ? Section 7: Modals\n\n  // manageing modal for saved iitems added \n  const [savedActionShow, setSavedActionShow] = useState(false)\n\n  // close modal\n  const handleSavedActionClose = () => {\n    setSavedActionShow(false)\n  }\n\n  // show the modal\n  const handleSavedActionShow = (e) => {\n    setSavedActionShow(true)\n    setSelectedRows([])\n  }\n\n  // managing modal for properties to be removed from list\n  const [propertyRemoveShow, setPropertyRemoveShow] = useState(false)\n\n  // close modal\n  const handleRemovePropertyClose = () => {\n    setPropertyRemoveShow(false)\n  }\n\n  // show the modal\n  const handlePropertyRemoveShow = (e) => {\n    setPropertyRemoveShow(true)\n  }\n\n  // increase value in db based on successful response\n  const increaseUsageCount = async () => {\n    if (isUserAuth()) {\n      console.log('trying to increase')\n      try {\n        const { data } = await axios.post('/api/usage/', {}, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n        console.log(data)\n        if (data.status === 'success') {\n          console.log('Usage count increased successfully')\n        } else {\n          console.error('Failed to increase usage count:', data.message)\n        }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n  const toggleRowExpansion = (index) => {\n    setExpandedMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const toggleSalesRowExpansion = (index) => {\n    setExpandedSalesMultpleMatches(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows)\n      if (newExpandedRows.has(index)) {\n        newExpandedRows.delete(index)\n      } else {\n        newExpandedRows.add(index)\n      }\n      return newExpandedRows\n    })\n  }\n\n  const addManualFavourite = async (matchingProperties, epcData, index) => {\n    if (isUserAuth()) {\n\n\n      const newFavourites = [{\n        'rightmove_id': matchingProperties.property_data.rightmove_id,\n        'postcode': matchingProperties.property_data.postcode,\n        'address': epcData.address,\n        'agent': matchingProperties.property_data.agent,\n        'type': matchingProperties.property_data.type,\n        'addedOn': matchingProperties.property_data.addedOn,\n        'propertyType': matchingProperties.property_data.propertyType,\n        'price': matchingProperties.property_data.price,\n        'bathrooms': matchingProperties.property_data.bathrooms,\n        'bedrooms': matchingProperties.property_data.bedrooms,\n        'let_available_date': matchingProperties.property_data.let_available_date,\n        'date_added_db': matchingProperties.property_data.date_added_db,\n        'url': matchingProperties.property_data.url,\n        'current_epc': matchingProperties.property_data.current_epc,\n        'potential_epc': matchingProperties.property_data.potential_epc,\n        'action': 'Saved',\n        'added_revised': matchingProperties.property_data.added_revised,\n        'reduced_revised': matchingProperties.property_data.reduced_revised,\n\n      }]\n\n      try {\n        const response = await axios.post('/api/epc_favourite/', newFavourites, {\n          headers: {\n            Authorization: `Bearer ${getAccessToken()}`,\n          },\n        })\n\n        console.log('Response:', response.data)\n        toggleRowExpansion(index)\n        toggleSalesRowExpansion(index)\n        setLatestFavourites(1)\n        handleSavedActionShow()\n        loadUserData()\n\n\n      } catch (error) {\n        console.error('Error saving favourite:', error)\n      }\n    } else {\n      navigate('/access-denied')\n      console.log('logged out')\n    }\n  }\n\n\n\n  return (\n\n    <>\n      <section className='agent-profile-page'>\n        <div className='desktop-nav'>\n          <WhiteNavbar\n            navbarColour='#FDF7F0'\n          />\n        </div>\n        <div className='mobile-nav'>\n          <NavBarRevised\n            setProfileContent={setProfileContent}\n            profileContent={profileContent}\n            profileDetail={profileDetail}\n            setProfileDetail={setProfileDetail}\n          />\n        </div>\n        <WhiteSidebar\n          setProfileDetail={setProfileDetail}\n          variableSide={variableSide}\n          setProfileContent={setProfileContent}\n          setVariableSide={setVariableSide}\n          userData={userData}\n        />\n        <section className='main-body'>\n          <section className='main-body-details'  >\n\n            <>\n              {/*             \n              {userData && userData.usage_stats[0] &&\n                ((userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count < 11) ||\n                  (userData.usage_stats[0].package === 'Unlimited') ||\n                  (userData.usage_stats[0].package === 'Advanced Pilot' && userData.usage_stats[0].epc_monthly_count < 101)) ? */}\n              <section className='property-finder'>\n                <div className='listing-options'>\n                  <div className='listing-buttons'>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Home')} style={{ borderBottom: leadGenSection === 'Home' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Home' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Home' ? '700' : '400' }}>Home</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Explore properties')} style={{ borderBottom: leadGenSection === 'Explore properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Explore properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Explore properties' ? '700' : '400' }}>Explore properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Saved properties')} style={{ borderBottom: leadGenSection === 'Saved properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Saved properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Saved properties' ? '700' : '400' }}>Saved properties</h5>\n                    <h5 className='no-print' onClick={() => setLeadGenSection('Archived properties')} style={{ borderBottom: leadGenSection === 'Archived properties' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Archived properties' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Archived properties' ? '700' : '400' }}>Archived properties</h5>\n                    <h5 className='no-print' id='manual-matcher' onClick={() => setLeadGenSection('Manual matcher')} style={{ borderBottom: leadGenSection === 'Manual matcher' ? '3px solid #ED6B86' : 'none', textUnderlineOffset: leadGenSection === 'Manual matcher' ? '0.5em' : 'initial', fontWeight: leadGenSection === 'Manual matcher' ? '700' : '400' }}>Manual matcher</h5>\n                  </div>\n                  <div className='logout-button' onClick={removeItemFromStorage}>\n                    <div className='logout-icon'></div>\n                  </div>\n\n\n                </div>\n                <hr className='title-line' />\n\n                <div className='lead-generator'>\n\n                  <div className='property-results'>\n                    {leadGenSection === 'Home' ?\n                      <>\n                        <div className='lead-gen-inputs'>\n                          <h3 className='sub-title'>Set your search criteria</h3>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Postcode(s)</h3>\n                              <p>Add multiple postcodes by separating with a comma, and include any part of the postcode, e.g. &ldquo;SW4,SW5&rdquo;</p>\n                              <input\n                                type=\"text\"\n                                value={leadGenDetails.postcode}\n                                onChange={inputPostcode}\n                                placeholder=\"Enter postcode...\"\n                              />\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Sub postcode(s)</h3>\n                              <p>Add sub postcodes, e.g. &ldquo;SW4 0,SW5 0&rdquo;. You can also chain these.</p>\n                              <input\n                                type=\"text\"\n                                value={leadGenDetails.subcode}\n                                onChange={inputSubcode}\n                                placeholder=\"Enter subcode...\"\n                              />\n                            </div>\n                          </div>\n                          <div className='single-input-block'>\n                            <div className='input-block large'>\n                              <h3>Channel</h3>\n                              <select className='dropdown' value={leadGenDetails.channel || 'Lettings'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, channel: e.target.value }))}>\n                                <option>Lettings</option>\n                                <option>Sales</option>\n                                <option>Both</option>\n\n                              </select>\n                            </div>\n                          </div>\n                          <div>\n\n                            <div className='see-more-section' onClick={() => setExpand(!expand)}>\n                              <h3 className='sub-title'>Add some more detail</h3>\n\n                              {expand ? <h3 className='sub-title'>^</h3> : <h3 className='sub-title'>v</h3>}\n                            </div>\n                            {expand ?\n                              <>\n                                <div className='single-title-double'>\n                                  <h3>Bedrooms</h3>\n                                  <div className='double-dropdowns'>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_min || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_min: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No min</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                    </select>\n                                    <select\n                                      className='dropdown'\n                                      value={leadGenDetails.bedrooms_max || ''}\n                                      onChange={(e) => setLeadGenDetails(prevData => ({\n                                        ...prevData,\n                                        bedrooms_max: e.target.value === '' ? null : e.target.value,\n                                      }))}\n                                    >\n                                      <option value=''>No max</option>\n                                      <option value=\"1\">1</option>\n                                      <option value=\"2\">2</option>\n                                      <option value=\"3\">3</option>\n                                      <option value=\"4\">4</option>\n                                      <option value=\"5\">5</option>\n                                      <option value=\"6\">6</option>\n                                      <option value=\"7\">7</option>\n                                    </select>\n                                  </div>\n\n                                </div>\n                                {\n                                  leadGenDetails.channel === 'Lettings' ?\n                                    <>\n                                      <div className='single-title-double'>\n                                        <h3>Price</h3>\n                                        <div className='double-dropdowns'>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_min || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                          >\n                                            <option value={0}>No min</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n                                          <select\n                                            className='dropdown'\n                                            value={leadGenDetails.rental_price_max || ''}\n                                            onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                          >\n                                            <option value={10000000}>No max</option>\n                                            {rentalPrices.map((price, index) => (\n                                              <option key={index} value={price}>\n                                                <NumericFormat\n                                                  value={price}\n                                                  displayType={'text'}\n                                                  thousandSeparator={true}\n                                                  prefix={'£'}\n                                                />\n                                              </option>\n                                            ))}\n                                          </select>\n\n                                        </div>\n\n                                      </div>\n                                      <div className='single-input-block'>\n                                        <div className='input-block large'>\n                                          <h3>Furnishing status</h3>\n                                          <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                            <option>Either furnished or unfurnished</option>\n                                            <option>Furnished</option>\n                                            <option>Unfurnished</option>\n                                          </select>\n                                        </div>\n                                      </div>\n                                    </>\n                                    :\n                                    leadGenDetails.channel === 'Sales' ?\n                                      <>\n                                        <div className='single-title-double'>\n                                          <h3>Price</h3>\n                                          <div className='double-dropdowns'>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_min || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                            >\n                                              <option value={0}>No min</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n                                            <select\n                                              className='dropdown'\n                                              value={leadGenDetails.sales_price_max || ''}\n                                              onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                            >\n                                              <option value={100000000}>No max</option>\n                                              {salesPrices.map((price, index) => (\n                                                <option key={index} value={price}>\n                                                  <NumericFormat\n                                                    value={price}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    prefix={'£'}\n                                                  />\n                                                </option>\n                                              ))}\n                                            </select>\n\n                                          </div>\n\n                                        </div>\n                                      </>\n                                      :\n                                      leadGenDetails.channel === 'Both' ?\n                                        <>\n                                          <div className='single-title-double'>\n                                            <h3>Rental price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.rental_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_price_max: e.target.value }))}\n                                              >\n                                                <option value={10000000}>No max</option>\n                                                {rentalPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                          <div className='single-input-block'>\n                                            <div className='input-block large'>\n                                              <h3>Rental furnishing status</h3>\n                                              <select className='dropdown' value={leadGenDetails.rental_additional || 'Either furnished or unfurnished'} onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, rental_additional: e.target.value }))}>\n                                                <option>Either furnished or unfurnished</option>\n                                                <option>Furnished</option>\n                                                <option>Unfurnished</option>\n                                              </select>\n                                            </div>\n                                          </div>\n                                          <div className='single-title-double'>\n                                            <h3>Sales price</h3>\n                                            <div className='double-dropdowns'>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_min || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_min: e.target.value }))}\n                                              >\n                                                <option value={0}>No min</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n                                              <select\n                                                className='dropdown'\n                                                value={leadGenDetails.sales_price_max || ''}\n                                                onChange={(e) => setLeadGenDetails(prevData => ({ ...prevData, sales_price_max: e.target.value }))}\n                                              >\n                                                <option value={100000000}>No max</option>\n                                                {salesPrices.map((price, index) => (\n                                                  <option key={index} value={price}>\n                                                    <NumericFormat\n                                                      value={price}\n                                                      displayType={'text'}\n                                                      thousandSeparator={true}\n                                                      prefix={'£'}\n                                                    />\n                                                  </option>\n                                                ))}\n                                              </select>\n\n                                            </div>\n\n                                          </div>\n                                        </>\n\n\n                                        : ''}\n\n                              </>\n                              : ''}\n                          </div>\n                          <div className='lead-gen-save'>\n                            <button className='save-details' onClick={addSearchCriteria}>Save details</button>\n                          </div>\n                        </div>\n\n                      </>\n                      :\n                      leadGenSection === 'Explore properties' && !rentalLoading ?\n                        <>\n                          <div className='results-block'>\n                            <div className=\"property-insight-nav\">\n                              <div className=\"property-insight-buttons\">\n                                <h3 className={`insight-button ${channelView === 'Lettings' ? 'active' : 'inactive'}`} id='left' onClick={() => setChannelView('Lettings')}>Lettings</h3>\n                                <h3 className={`insight-button ${channelView === 'Sales' ? 'active' : 'inactive'}`} id='right' onClick={() => setChannelView('Sales')}>Sales</h3>\n                              </div>\n                              <div className='action-section'>\n                                <div className='save-section'>\n                                  <div className=\"bin-icon\"></div>\n                                  <h3 onClick={handlePropertyRemoveShow}>Remove selection</h3>\n                                </div>\n                                <div className='save-section'>\n                                  <div className=\"print-icon\"></div>\n                                  <h3 onClick={addFavourite}>Save selection</h3>\n                                </div>\n\n                              </div>\n\n                            </div>\n                            {channelView === 'Lettings' ?\n                              <>\n                                <div className='filter-section'>\n                                  <h3>Filter properties</h3>\n                                  <select\n                                    className='dropdown'\n                                    value={dateFilter}\n                                    onChange={(e) => setDateFilter(e.target.value)}\n                                  >\n                                    <option value=\"1day\">Updated in the last 24 hours</option>\n                                    <option value=\"2days\">Updated in the last 48 hours</option>\n                                    <option value=\"3days\">Updated in the last 72 hours</option>\n                                    <option value=\"7days\">Updated in the last week</option>\n                                    <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                    <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                    <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                    <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                    <option value=\"all\">All properties</option>\n                                    <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                    <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                    <option value=\">16weeks\">Added over 16 weeks ago</option>\n                                  </select>\n                                </div>\n                                <div className='matching-status'>\n                                  <h3 className='matching-pill' onClick={() => setMatchType('Matching')} style={{ color: matchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: matchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                  <h3 className='matching-pill' onClick={() => setMatchType('Multiple matches')} style={{ color: matchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                  <h3 className='matching-pill' onClick={() => setMatchType('No matches')} style={{ color: matchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: matchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                </div>\n\n                                {matchType === 'Matching' ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>There are {filteredProperties.length} rental properties that match your criteria</h3>\n                                      <div className='select-all-box'>\n                                        {/* <h5>Select all</h5> */}\n                                        <div className='custom-checkbox'>\n                                          <input\n                                            className='checkbox'\n                                            type=\"checkbox\"\n                                            checked={checkboxStatus.length > 0 && checkboxStatus.every(Boolean)}\n                                            onChange={handleSelectAllChange}\n                                          />\n                                          <label className='label'>\n\n                                          </label>\n\n                                        </div>\n                                      </div>\n                                    </div>\n                                    <div className='results-table'>\n\n                                      <div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column' >\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column' onClick={sortByPostcode}>\n                                          <h5>Postcode</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Property type</h5>\n                                        </div>\n                                        <div id='column7' className='column' onClick={sortByPrice}>\n                                          <h5>Price</h5>\n                                          <h5>⬇️</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5>Select</h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='results-details'>\n                                        {filteredProperties ? filteredProperties.map((item, index) => {\n                                          const isRowSelected = selectedRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                          return (\n                                            <>\n                                              <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{index + 1}</h5>\n                                                </div>\n                                                <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.epc_data_list[0].address}</h5>\n                                                </div>\n                                                <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.postcode}</h5>\n                                                </div>\n                                                <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                </div>\n                                                <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.propertyType}</h5>\n                                                </div>\n                                                <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.price}</h5>\n                                                </div>\n                                                <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.bedrooms}</h5>\n                                                </div>\n                                                <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                  <h5>{item.property_data.agent}</h5>\n                                                </div>\n                                                <div className='column' id='column10'>\n                                                  {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                    <div className='saved-message'>\n                                                      {/* <h3>❤️</h3> */}\n                                                      <h3>Saved</h3>\n                                                    </div>\n                                                    :\n                                                    archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        {/* <h3>⭐️</h3> */}\n                                                        <h3>Archived</h3>\n                                                      </div>\n                                                      :\n                                                      <div className='custom-checkbox'>\n\n                                                        <input\n                                                          className='checkbox'\n                                                          type=\"checkbox\"\n                                                          checked={checkboxStatus[index]}\n                                                          onChange={(e) => handleCheckboxChange(e, index)}\n                                                        />\n                                                        <label className='label'>\n\n                                                        </label>\n                                                      </div>\n                                                  }\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n\n                                            </>\n                                          )\n                                        })\n                                          : ' '}\n                                      </div>\n                                    </div>\n\n\n                                  </>\n                                  : matchType === 'Multiple matches' ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>There are {filteredMatchingProperties.length} rental properties that we do not have an exact match for</h3>\n                                      </div>\n                                      <div className='results-table'>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column' >\n                                            <h5>Listed address</h5>\n                                          </div>\n                                          <div id='column3' className='column' onClick={sortByPostcode}>\n                                            <h5>Postcode</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Size (sq. m)</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column' onClick={sortByPrice}>\n                                            <h5>Price</h5>\n                                            <h5>⬇️</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Action</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details'>\n                                          {filteredMatchingProperties ? filteredMatchingProperties.map((item, index) => {\n                                            const isExpanded = expandedMultipleMatches.has(index)\n                                            return (\n                                              <>\n                                                <div className={'results-content'}>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.displayAddress}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.propertyType}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                    <h5>{item.property_data.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        {/* <h3>❤️</h3> */}\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          {/* <h3>⭐️</h3> */}\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n\n                                                        <h3 className='expansion' onClick={() => toggleRowExpansion(index)}>\n                                                          {expandedMultipleMatches.has(index) ? '^' : 'v'}\n                                                        </h3>}\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n                                                {isExpanded && (\n                                                  <>\n                                                    <h3 className='matching-title'>Matching properties</h3>\n                                                    <div className='expanded-section-titles'>\n                                                      <p className='column' id='column1'>#</p>\n                                                      <p className='column' id='column2'>Address</p>\n                                                      <p className='column' id='column3'>Postcode</p>\n                                                      <p className='column' id='column4'>Current EPC</p>\n                                                      <p className='column' id='column5'>Potential EPC</p>\n                                                      <p className='column' id='column6'>Floor</p>\n                                                      <p className='column' id='column7'>Size</p>\n                                                      <p className='column' id='column8'></p>\n                                                    </div>\n\n                                                    {item.epc_data_list.map((epcItem, epcIndex) => (\n\n\n                                                      <div className='expanded-content' key={epcIndex} >\n                                                        <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                        <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                        <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                        <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                        <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                        <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                        <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                        <div className='column' id='column8' >\n                                                          {/* <div className='heart-icon' onClick={() => addManualFavourite(item, epcItem, index)} ></div> */}\n                                                          <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                        </div>\n\n                                                      </div>\n                                                    ))}\n                                                  </>\n\n\n\n\n                                                )}\n\n\n\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n                                      </div>\n\n                                    </>\n\n                                    : matchType === 'No matches' ?\n                                      <>\n                                        <div className='title-section'>\n                                          <h3 className='sub-title'>There are {filteredNoProperties.length} rental properties that we do not have any match for</h3>\n                                        </div>\n                                        <div className='results-table'>\n\n                                          <div className='results-headers'>\n                                            <h5 id='column1' className='column'>#</h5>\n                                            <div id='column2' className='column' >\n                                              <h5>Listed address</h5>\n                                            </div>\n                                            <div id='column3' className='column' onClick={sortByPostcode}>\n                                              <h5>Postcode</h5>\n                                              <h5>⬇️</h5>\n                                            </div>\n                                            <div id='column4' className='column'>\n                                              <h5>Added</h5>\n                                            </div>\n                                            <div id='column5' className='column'>\n                                              <h5>Reduced</h5>\n                                            </div>\n                                            <div id='column6' className='column'>\n                                              <h5>Property type</h5>\n                                            </div>\n                                            <div id='column7' className='column' onClick={sortByPrice}>\n                                              <h5>Price</h5>\n                                              <h5>⬇️</h5>\n                                            </div>\n                                            <div id='column8' className='column'>\n                                              <h5>Bedrooms</h5>\n                                            </div>\n                                            <div id='column9' className='column'>\n                                              <h5>Agent</h5>\n                                            </div>\n                                            {/* <div id='column10' className='column'>\n                                            <h5>Select</h5>\n                                          </div> */}\n                                          </div>\n                                          <hr className='property-divider' />\n                                          <div className='results-details'>\n                                            {filteredNoProperties ? filteredNoProperties.map((item, index) => {\n\n                                              return (\n                                                <>\n                                                  <div className={'results-content'}>\n                                                    <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{index + 1}</h5>\n                                                    </div>\n                                                    <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.displayAddress}</h5>\n                                                    </div>\n                                                    <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.postcode}</h5>\n                                                    </div>\n                                                    <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                    </div>\n                                                    <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                    </div>\n                                                    <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.propertyType}</h5>\n                                                    </div>\n                                                    <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.price}</h5>\n                                                    </div>\n                                                    <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.bedrooms}</h5>\n                                                    </div>\n                                                    <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                      <h5>{item.property_data.agent}</h5>\n                                                    </div>\n                                                    {/* <div className='column' id='column10'>\n                                                    {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                      <div className='saved-message'>\n                                                        // <h3>❤️</h3>\n                                                        <h3>Saved</h3>\n                                                      </div>\n                                                      :\n                                                      archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                        <div className='saved-message'>\n                                                          // <h3>⭐️</h3>\n                                                          <h3>Archived</h3>\n                                                        </div>\n                                                        :\n\n                                                        ''\n                                                    }\n                                                  </div> */}\n                                                  </div>\n                                                  <hr className='property-divider' />\n\n                                                </>\n                                              )\n                                            })\n                                              : ' '}\n                                          </div>\n                                        </div>\n\n                                      </>\n\n                                      : ''\n                                }\n\n\n                              </>\n                              : channelView === 'Sales' ?\n                                <>\n                                  <div className='filter-section'>\n                                    <h3>Filter properties</h3>\n                                    <select\n                                      className='dropdown'\n                                      value={dateFilter}\n                                      onChange={(e) => setDateFilter(e.target.value)}\n                                    >\n                                      <option value=\"1day\">Updated in the last 24 hours</option>\n                                      <option value=\"2days\">Updated in the last 48 hours</option>\n                                      <option value=\"3days\">Updated in the last 72 hours</option>\n                                      <option value=\"7days\">Updated in the last week</option>\n                                      <option value=\"4weeks\">Updated in the last 4 weeks</option>\n                                      <option value=\"8weeks\">Updated in the last 8 weeks</option>\n                                      <option value=\"12weeks\">Updated in the last 12 weeks</option>\n                                      <option value=\"16weeks\">Updated in the last 16 weeks</option>\n                                      <option value=\"all\">All properties</option>\n                                      <option value=\">8weeks\">Added over 8 weeks ago</option>\n                                      <option value=\">12weeks\">Added over 12 weeks ago</option>\n                                      <option value=\">16weeks\">Added over 16 weeks ago</option>\n\n                                    </select>\n                                  </div>\n                                  <div className='matching-status'>\n                                    <h3 className='matching-pill' onClick={() => setSalesMatchType('Matching')} style={{ color: salesMatchType === 'Matching' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Matching' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Matching</h3>\n                                    <h3 className='matching-pill' onClick={() => setSalesMatchType('Multiple matches')} style={{ color: salesMatchType === 'Multiple matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'Multiple matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>Multiple matches</h3>\n                                    <h3 className='matching-pill' onClick={() => setSalesMatchType('No matches')} style={{ color: salesMatchType === 'No matches' ? 'white' : '#1A276C', backgroundColor: salesMatchType === 'No matches' ? '#ED6B86' : 'rgba(26, 39, 108, 0.15)' }}>No matches</h3>\n                                  </div>\n                                  {salesLoading ?\n                                    <div className='property-table-loading'>\n                                      <Loading />\n                                    </div>\n                                    : !salesLoading ?\n                                      <>\n                                        {salesMatchType === 'Matching' ?\n                                          <>\n                                            <div className='title-section'>\n                                              <h3 className='sub-title'>There are {flteredSalesProperties.length} properties for sale that match your criteria</h3>\n                                              <div className='select-all-box'>\n                                                {/* <h5>Select all</h5> */}\n                                                <div className='custom-checkbox'>\n                                                  <input\n                                                    className='checkbox'\n                                                    type=\"checkbox\"\n                                                    checked={salesCheckboxStatus.length > 0 && salesCheckboxStatus.every(Boolean)}\n                                                    onChange={handleSelectAllSalesChange}\n                                                  />\n                                                  <label className='label'>\n\n                                                  </label>\n\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div className='results-table'>\n\n                                              <div className='results-headers'>\n                                                <h5 id='column1' className='column'>#</h5>\n                                                <div id='column2' className='column' >\n                                                  <h5>Address</h5>\n                                                </div>\n                                                <div id='column3' className='column' onClick={sortByPostcode}>\n                                                  <h5>Postcode</h5>\n                                                  <h5>⬇️</h5>\n                                                </div>\n                                                <div id='column4' className='column'>\n                                                  <h5>Added</h5>\n                                                </div>\n                                                <div id='column5' className='column'>\n                                                  <h5>Reduced</h5>\n                                                </div>\n                                                <div id='column6' className='column'>\n                                                  <h5>Property type</h5>\n                                                </div>\n                                                <div id='column7' className='column' onClick={sortByPrice}>\n                                                  <h5>Price</h5>\n                                                  <h5>⬇️</h5>\n                                                </div>\n                                                <div id='column8' className='column'>\n                                                  <h5>Bedrooms</h5>\n                                                </div>\n                                                <div id='column9' className='column'>\n                                                  <h5>Agent</h5>\n                                                </div>\n                                                <div id='column10' className='column'>\n                                                  <h5>Select</h5>\n                                                </div>\n                                              </div>\n                                              <hr className='property-divider' />\n                                              <div className='results-details'>\n                                                {flteredSalesProperties ? flteredSalesProperties.map((item, index) => {\n                                                  const isRowSelected = selectedSalesRows.some(selectedRow => selectedRow.rightmove_id === item.property_data.rightmove_id)\n\n                                                  return (\n                                                    <>\n                                                      <div className={`results-content ${isRowSelected ? 'highlighted-row' : ''}`}>\n                                                        <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{index + 1}</h5>\n                                                        </div>\n                                                        <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.epc_data_list[0].address}</h5>\n                                                        </div>\n                                                        <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.postcode}</h5>\n                                                        </div>\n                                                        <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                        </div>\n                                                        <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                        </div>\n                                                        <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.propertyType}</h5>\n                                                        </div>\n                                                        <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.price}</h5>\n                                                        </div>\n                                                        <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.bedrooms}</h5>\n                                                        </div>\n                                                        <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                          <h5>{item.property_data.agent}</h5>\n                                                        </div>\n                                                        <div className='column' id='column10'>\n                                                          {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                            <div className='saved-message'>\n                                                              {/* <h3>❤️</h3> */}\n                                                              <h3>Saved</h3>\n                                                            </div>\n                                                            :\n                                                            archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                              <div className='saved-message'>\n                                                                {/* <h3>⭐️</h3> */}\n                                                                <h3>Archived</h3>\n                                                              </div>\n                                                              :\n                                                              <div className='custom-checkbox'>\n\n                                                                <input\n                                                                  className='checkbox'\n                                                                  type=\"checkbox\"\n                                                                  checked={salesCheckboxStatus[index]}\n                                                                  onChange={(e) => salesCheckboxChange(e, index)} // Pass the index here\n                                                                />\n                                                                <label className='label'>\n\n                                                                </label>\n                                                              </div>\n                                                          }\n                                                        </div>\n                                                      </div>\n                                                      <hr className='property-divider' />\n\n                                                    </>\n                                                  )\n                                                })\n                                                  : ' '}\n                                              </div>\n                                            </div>\n\n                                          </>\n\n                                          : salesMatchType === 'Multiple matches' ?\n\n                                            <>\n                                              <div className='title-section'>\n                                                <h3 className='sub-title'>There are {filteredSalesMatchingProperties.length} properties for sale that we do not have an exact match for</h3>\n                                              </div>\n                                              <div className='results-table'>\n                                                <div className='results-headers'>\n                                                  <h5 id='column1' className='column'>#</h5>\n                                                  <div id='column2' className='column' >\n                                                    <h5>Listed address</h5>\n                                                  </div>\n                                                  <div id='column3' className='column' onClick={sortByPostcode}>\n                                                    <h5>Postcode</h5>\n                                                    <h5>⬇️</h5>\n                                                  </div>\n                                                  <div id='column4' className='column'>\n                                                    <h5>Added</h5>\n                                                  </div>\n                                                  <div id='column5' className='column'>\n                                                    <h5>Size (sq. m)</h5>\n                                                  </div>\n                                                  <div id='column6' className='column'>\n                                                    <h5>Property type</h5>\n                                                  </div>\n                                                  <div id='column7' className='column' onClick={sortByPrice}>\n                                                    <h5>Price</h5>\n                                                    <h5>⬇️</h5>\n                                                  </div>\n                                                  <div id='column8' className='column'>\n                                                    <h5>Bedrooms</h5>\n                                                  </div>\n                                                  <div id='column9' className='column'>\n                                                    <h5>Agent</h5>\n                                                  </div>\n                                                  <div id='column10' className='column'>\n                                                    <h5>Action</h5>\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n                                                <div className='results-details'>\n                                                  {filteredSalesMatchingProperties ? filteredSalesMatchingProperties.map((item, index) => {\n                                                    const isExpanded = expandedSalesMultipleMatches.has(index)\n                                                    return (\n                                                      <>\n                                                        <div className={'results-content'}>\n                                                          <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{index + 1}</h5>\n                                                          </div>\n                                                          <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.displayAddress}</h5>\n                                                          </div>\n                                                          <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.postcode}</h5>\n                                                          </div>\n                                                          <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.added_revised === null && item.property_data.reduced_revised ? `Reduced ${item.property_data.reduced_revised}` : item.property_data.added_revised && item.property_data.reduced_revised === null ? item.property_data.added_revised : 'N/a'}</h5>\n                                                          </div>\n                                                          <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.size === 'nan' ? '' : (item.property_data.size * 0.092903).toFixed(1)}</h5>\n                                                          </div>\n                                                          <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.propertyType}</h5>\n                                                          </div>\n                                                          <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.price}</h5>\n                                                          </div>\n                                                          <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.bedrooms}</h5>\n                                                          </div>\n                                                          <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                            <h5>{item.property_data.agent}</h5>\n                                                          </div>\n                                                          <div className='column' id='column10'>\n                                                            {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                              <div className='saved-message'>\n                                                                {/* <h3>❤️</h3> */}\n                                                                <h3>Saved</h3>\n                                                              </div>\n                                                              :\n                                                              archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                                <div className='saved-message'>\n                                                                  {/* <h3>⭐️</h3> */}\n                                                                  <h3>Archived</h3>\n                                                                </div>\n                                                                :\n\n                                                                <h3 className='expansion' onClick={() => toggleSalesRowExpansion(index)}>\n                                                                  {expandedSalesMultipleMatches.has(index) ? '^' : 'v'}\n                                                                </h3>}\n                                                          </div>\n                                                        </div>\n                                                        <hr className='property-divider' />\n                                                        {isExpanded && (\n                                                          <>\n                                                            <h3 className='matching-title'>Matching properties</h3>\n                                                            <div className='expanded-section-titles'>\n                                                              <p className='column' id='column1'>#</p>\n                                                              <p className='column' id='column2'>Address</p>\n                                                              <p className='column' id='column3'>Postcode</p>\n                                                              <p className='column' id='column4'>Current EPC</p>\n                                                              <p className='column' id='column5'>Potential EPC</p>\n                                                              <p className='column' id='column6'>Floor</p>\n                                                              <p className='column' id='column7'>Size</p>\n                                                              <p className='column' id='column8'></p>\n                                                            </div>\n\n                                                            {item.epc_data_list.map((epcItem, epcIndex) => (\n\n\n\n\n                                                              <div className='expanded-content' key={epcIndex} >\n                                                                <p className='column' id='column1' onClick={() => handleVisitUrl(epcItem.url)}>{epcIndex + 1} </p>\n                                                                <p className='column' id='column2' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.address}</p>\n                                                                <p className='column' id='column3' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.postcode}</p>\n                                                                <p className='column' id='column4' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.current_energy_efficiency}</p>\n                                                                <p className='column' id='column5' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.potential_energy_efficiency}</p>\n                                                                <p className='column' id='column6' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.final_floor_level}</p>\n                                                                <p className='column' id='column7' onClick={() => handleVisitUrl(epcItem.url)}>{epcItem.floor_area}</p>\n                                                                <div className='column' id='column8' >\n                                                                  <button className='add-property' onClick={() => addManualFavourite(item, epcItem, index)} >+</button>\n                                                                </div>\n\n                                                              </div>\n                                                            ))}\n                                                          </>\n\n\n\n\n                                                        )}\n\n\n\n\n                                                      </>\n                                                    )\n                                                  })\n                                                    : ' '}\n                                                </div>\n                                              </div>\n\n                                            </>\n                                            : salesMatchType === 'No matches' ?\n                                              <>\n                                                <div className='title-section'>\n                                                  <h3 className='sub-title'>There are {filteredSalesNoProperties.length} properties for sale that we do not have any match for</h3>\n                                                </div>\n                                                <div className='results-table'>\n\n                                                  <div className='results-headers'>\n                                                    <h5 id='column1' className='column'>#</h5>\n                                                    <div id='column2' className='column' >\n                                                      <h5>Listed address</h5>\n                                                    </div>\n                                                    <div id='column3' className='column' onClick={sortByPostcode}>\n                                                      <h5>Postcode</h5>\n                                                      <h5>⬇️</h5>\n                                                    </div>\n                                                    <div id='column4' className='column'>\n                                                      <h5>Added</h5>\n                                                    </div>\n                                                    <div id='column5' className='column'>\n                                                      <h5>Reduced</h5>\n                                                    </div>\n                                                    <div id='column6' className='column'>\n                                                      <h5>Property type</h5>\n                                                    </div>\n                                                    <div id='column7' className='column' onClick={sortByPrice}>\n                                                      <h5>Price</h5>\n                                                      <h5>⬇️</h5>\n                                                    </div>\n                                                    <div id='column8' className='column'>\n                                                      <h5>Bedrooms</h5>\n                                                    </div>\n                                                    <div id='column9' className='column'>\n                                                      <h5>Agent</h5>\n                                                    </div>\n                                                    {/* <div id='column10' className='column'>\n                                                <h5>Select</h5>\n                                              </div> */}\n                                                  </div>\n                                                  <hr className='property-divider' />\n                                                  <div className='results-details'>\n                                                    {filteredSalesNoProperties ? filteredSalesNoProperties.map((item, index) => {\n\n                                                      return (\n                                                        <>\n                                                          <div className={'results-content'}>\n                                                            <div className='column' id='column1' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{index + 1}</h5>\n                                                            </div>\n                                                            <div className='column' id='column2' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.displayAddress}</h5>\n                                                            </div>\n                                                            <div className='column' id='column3' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.postcode}</h5>\n                                                            </div>\n                                                            <div className='column' id='column4' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.added_revised === null ? 'N/a' : item.property_data.added_revised}</h5>\n                                                            </div>\n                                                            <div className='column' id='column5' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.reduced_revised === null ? 'N/a' : item.property_data.reduced_revised}</h5>\n                                                            </div>\n                                                            <div className='column' id='column6' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.propertyType}</h5>\n                                                            </div>\n                                                            <div className='column' id='column7' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.price}</h5>\n                                                            </div>\n                                                            <div className='column' id='column8' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.bedrooms}</h5>\n                                                            </div>\n                                                            <div className='column' id='column9' onClick={() => handleVisitUrl(item.property_data.url)}>\n                                                              <h5>{item.property_data.agent}</h5>\n                                                            </div>\n                                                            {/* <div className='column' id='column10'>\n                                                        {savedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                          <div className='saved-message'>\n                                                            // <h3>❤️</h3>\n                                                            <h3>Saved</h3>\n                                                          </div>\n                                                          :\n                                                          archivedProperties.some(property => property.rightmove_id === item.property_data.rightmove_id) ?\n                                                            <div className='saved-message'>\n                                                              // <h3>⭐️</h3>\n                                                              <h3>Archived</h3>\n                                                            </div>\n                                                            :\n    \n                                                            ''\n                                                        }\n                                                      </div> */}\n                                                          </div>\n                                                          <hr className='property-divider' />\n\n                                                        </>\n                                                      )\n                                                    })\n                                                      : ' '}\n                                                  </div>\n                                                </div>\n\n                                              </>\n                                              : ''}\n\n\n                                      </>\n                                      : ''}\n                                </>\n                                :\n\n                                ''}\n                          </div>\n                        </>\n                        : leadGenSection === 'Explore properties' && rentalLoading ?\n                          <div className='property-table-loading'>\n                            <Loading />\n                          </div>\n                          : leadGenSection === 'Saved properties' ?\n                            <>\n                              <div className='results-block'>\n                                {savedProperties && savedProperties.length > 0 ?\n                                  <>\n                                    <div className='title-section'>\n                                      <h3 className='sub-title'>You have {savedProperties.length} properties ready to be extracted</h3>\n                                      {userData && userData.epc_favourites && (\n                                        <>\n                                          <CSVLink\n                                            data={csvData}\n                                            className='export'\n                                            filename={`Wittle Lead Generator Extract - ${getCurrentDate()}.csv`}\n                                            style={{ textDecoration: 'none' }}\n                                          >\n                                            <div className='header-cta' onClick={() => archiveFavourite(userData.epc_favourites.map(fav => fav.rightmove_id))}>\n                                              <div className='copy-button'>\n                                                <div className='export-icon'></div>\n                                                <h3 style={{ textDecoration: 'none' }}>Export</h3>\n                                              </div>\n                                            </div>\n                                          </CSVLink>\n                                        </>\n                                      )}\n                                    </div>\n                                    <div className='results-table'>\n\n                                      <div className='results-headers'>\n                                        <h5 id='column1' className='column'>#</h5>\n                                        <div id='column2' className='column'>\n                                          <h5>Address</h5>\n                                        </div>\n                                        <div id='column3' className='column'>\n                                          <h5>Postcode</h5>\n                                        </div>\n                                        <div id='column4' className='column'>\n                                          <h5>Added</h5>\n                                        </div>\n                                        <div id='column5' className='column'>\n                                          <h5>Reduced</h5>\n                                        </div>\n                                        <div id='column6' className='column'>\n                                          <h5>Channel</h5>\n                                        </div>\n                                        <div id='column7' className='column'>\n                                          <h5>Price</h5>\n                                        </div>\n                                        <div id='column8' className='column'>\n                                          <h5>Bedrooms</h5>\n                                        </div>\n                                        <div id='column9' className='column'>\n                                          <h5>Agent</h5>\n                                        </div>\n                                        <div id='column10' className='column'>\n                                          <h5></h5>\n                                        </div>\n                                      </div>\n                                      <hr className='property-divider' />\n                                      <div className='saved-properties'>\n\n                                        <div className='results-details'>\n                                          {savedProperties ? savedProperties.map((item, index) => {\n                                            return (\n                                              <>\n                                                <div className='results-content'>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.added_revised === null ? 'N/a' : item.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.reduced_revised === null ? 'N/a' : item.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.channel}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10'>\n                                                    <button className='minus' onClick={() => deleteFavourite(item.rightmove_id)}>-</button>\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n\n                                              </>\n                                            )\n                                          })\n\n                                            : ' '}\n                                        </div>\n                                      </div>\n                                    </div>\n\n                                  </>\n                                  : <h3 className='sub-title'>You haven&apos;t saved any properties yet! Once you&apos;ve saved some properties, you&apos;ll be able to extract them.</h3>\n                                }\n                              </div>\n\n\n                            </>\n                            : leadGenSection === 'Archived properties' ?\n                              <>\n                                <div className='results-block'>\n                                  {archivedProperties && archivedProperties.length > 0 ?\n                                    <>\n                                      <div className='title-section'>\n                                        <h3 className='sub-title'>You have archived {archivedProperties.length} properties</h3>\n\n\n                                      </div>\n                                      <div className='results-table'>\n\n                                        <div className='results-headers'>\n                                          <h5 id='column1' className='column'>#</h5>\n                                          <div id='column2' className='column'>\n                                            <h5>Address</h5>\n                                          </div>\n                                          <div id='column3' className='column'>\n                                            <h5>Postcode</h5>\n                                          </div>\n                                          <div id='column4' className='column'>\n                                            <h5>Added</h5>\n                                          </div>\n                                          <div id='column5' className='column'>\n                                            <h5>Reduced</h5>\n                                          </div>\n                                          <div id='column6' className='column'>\n                                            <h5>Property type</h5>\n                                          </div>\n                                          <div id='column7' className='column'>\n                                            <h5>Price</h5>\n                                          </div>\n                                          <div id='column8' className='column'>\n                                            <h5>Bedrooms</h5>\n                                          </div>\n                                          <div id='column9' className='column'>\n                                            <h5>Agent</h5>\n                                          </div>\n                                          <div id='column10' className='column'>\n                                            <h5>Channel</h5>\n                                          </div>\n                                        </div>\n                                        <hr className='property-divider' />\n                                        <div className='results-details archive'>\n                                          {archivedProperties ? archivedProperties.map((item, index) => {\n                                            return (\n                                              <>\n                                                <div className='results-content'>\n                                                  <div className='column' id='column1' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{index + 1}</h5>\n                                                  </div>\n                                                  <div className='column' id='column2' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.address}</h5>\n                                                  </div>\n                                                  <div className='column' id='column3' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.postcode}</h5>\n                                                  </div>\n                                                  <div className='column' id='column4' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.added_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column5' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.reduced_revised}</h5>\n                                                  </div>\n                                                  <div className='column' id='column6' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.property_type}</h5>\n                                                  </div>\n                                                  <div className='column' id='column7' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.price}</h5>\n                                                  </div>\n                                                  <div className='column' id='column8' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.bedrooms}</h5>\n                                                  </div>\n                                                  <div className='column' id='column9' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.agent}</h5>\n                                                  </div>\n                                                  <div className='column' id='column10' onClick={() => handleVisitUrl(item.url)}>\n                                                    <h5>{item.channel}</h5>\n                                                  </div>\n                                                </div>\n                                                <hr className='property-divider' />\n\n\n                                              </>\n                                            )\n                                          })\n                                            : ' '}\n                                        </div>\n                                      </div>\n                                    </>\n                                    : <h3 className='sub-title'>You haven&apos;t archived any properties yet! Once you&apos;ve extracted properties to your files, you&apo;ll see them here.</h3>\n                                  }\n                                </div>\n\n\n                              </>\n                              : leadGenSection === 'Manual matcher' ?\n                                <ManualMatcher\n                                  increaseUsageCount={increaseUsageCount}\n                                  setErrors={setErrors}\n                                  userData={userData}\n                                  loadUserData={loadUserData}\n                                  savedProperties={savedProperties}\n                                  archivedProperties={archivedProperties}\n                                  handleVisitUrl={handleVisitUrl}\n                                  savedActionShow={savedActionShow}\n                                  setSavedActionShow={setSavedActionShow}\n                                  handleSavedActionClose={handleSavedActionClose}\n                                  setLeadGenSection={setLeadGenSection}\n                                  latestFavourites={latestFavourites}\n                                  handleSavedActionShow={handleSavedActionShow}\n                                  setLatestFavourites={setLatestFavourites}\n                                />\n                                :\n                                ''\n                    }\n                  </div>\n                </div>\n\n\n              </section>\n\n\n            </>\n\n          </section>\n        </section>\n      </section >\n\n      {/* Modals */}\n      < SavedProperties\n        savedActionShow={savedActionShow}\n        handleSavedActionClose={handleSavedActionClose}\n        setLeadGenSection={setLeadGenSection}\n        latestFavourites={latestFavourites}\n      />\n      < RemoveProperties\n        propertyRemoveShow={propertyRemoveShow}\n        handleRemovePropertyClose={handleRemovePropertyClose}\n        removeProperty={removeProperty}\n      />\n\n\n\n\n    </>\n  )\n}\n\nexport default LeadGenerator\n\n\n// : userData && userData.usage_stats[0].package === 'Basic' && userData.usage_stats[0].epc_monthly_count >= 11 ?\n//   <section className='property-finder'>\n//     <h1>🙏 Thanks for enjoying Wittle!</h1>\n//     <h3 className='limit-reached'>You have reached the free limit of matches for this month, get in touch to unlock another 90 matches.</h3>\n//   </section>\n\n//   : userData && userData.usage_stats[0].package === 'Advanced pilot' && userData.usage_stats[0].epc_monthly_count >= 101 ?\n//     <section className='property-finder'>\n//       <h1>🙏 Thanks for enjoying Wittle!</h1>\n//       <h3 className='limit-reached'>You have carried out 100 matches this month, get in touch to discuss increasing your limit.</h3>\n//     </section>\n\n//     : ''}","import { useParams, useNavigate, Link } from 'react-router-dom'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getAccessToken, getUserToken, isUserAuth } from '../auth/Auth'\nimport axios from 'axios'\n\n\nconst WhiteSidebar = ({ setProfileDetail, variableSide, setProfileContent, setVariableSide }) => {\n\n\n\n  // state to enable navigation between pages\n  const navigate = useNavigate()\n\n  // userdata state\n  const [userData, setUserData] = useState()\n\n  // errors\n  const [errors, setErrors] = useState()\n\n\n  const [activeItem, setActiveItem] = useState('')\n\n  // state for changing the view to insights results\n  const [insightView, setInsightView] = useState('Search')\n\n\n\n  // ? Section 2: Load user information\n  const loadUserData = () => {\n    // Assuming the user is authorized, we want to load their profile information and set states based on relevant sections of this\n    if (isUserAuth()) {\n      const getUser = async () => {\n        try {\n          const { data } = await axios.get(`/api/auth/profile/${getUserToken()}/`, {\n            headers: {\n              Authorization: `Bearer ${getAccessToken()}`,\n            },\n          })\n          console.log('user data ->', data)\n          setUserData(data)\n        } catch (error) {\n          setErrors(true)\n          console.log(error)\n        }\n      }\n      getUser()\n    } else {\n      navigate('/access-denied')\n      console.log('no account')\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (activeItem === 'Home') {\n        navigate('/agents/profile')\n      } else if (activeItem === 'Saved items') {\n        navigate('/agents/favourites')\n      }\n      // ... other conditions\n    }, 100)\n  }, [activeItem])\n\n  // useEffect(() => {\n  //   loadUserData()\n  // }, [])\n\n\n\n  return (\n    <>\n      <section className='profile-sidebar-open no-print remove-margin'>\n        <div className='logo-section'>\n          <div className='logo' onClick={() => navigate('/')}>\n            {/* <h2 onClick={() => navigate('/')}>Wittle</h2> */}\n          </div>\n        </div>\n\n\n        <div className='profile-buttons'>\n          <div className={`profile-button-title ${activeItem === 'Home' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Home')\n              setTimeout(() => {\n                setProfileDetail('Home')\n                setProfileContent('Home')\n              }, 0)\n            }}>\n            <div className='icon' id='home-icon' ></div>\n            <h2>Wittle home</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Listing generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Listing generator')\n              setProfileDetail('Listing generator')\n              setProfileContent('Listing generator')\n              navigate('/agents/listing-generator')\n            }}>\n            <div className='icon' id='listing-icon'></div>\n            <h2>Listing generator</h2>\n          </div>\n          {/* <div className={`profile-button-title ${activeItem === 'Lead generator' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator')\n              setProfileContent('Lead generator')\n              setProfileDetail('Lead generator')\n              navigate('/agents/finder')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div> */}\n          <div className={`profile-button-title ${activeItem === 'Lead generator test' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Lead generator test')\n              setProfileContent('Lead generator test')\n              setProfileDetail('Lead generator test')\n              navigate('/agents/lead-gen')\n            }}>\n            <div className='icon' id='finder-icon'></div>\n            <h2>Lead generator</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'How to guide' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('How to guide')\n              setProfileContent('How to guide')\n              setProfileDetail('How to guide')\n              navigate('/agents/guide')\n            }}>\n            <div className='icon' id='help-icon'></div>\n            <h2>How-to guide</h2>\n          </div>\n          <div className={`profile-button-title ${activeItem === 'Account' ? 'active' : ''}`}\n            onClick={() => {\n              setActiveItem('Account')\n              setProfileContent('Account')\n              setProfileDetail('Account')\n              navigate('/agents/account')\n            }}>\n            <div className='icon' id='account-icon'></div>\n            <h2>Account details</h2>\n          </div>\n\n        </div>\n\n      </section>\n    </>\n  )\n}\n\nexport default WhiteSidebar","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props = this.props,\n            data = _props.data,\n            headers = _props.headers,\n            separator = _props.separator,\n            filename = _props.filename,\n            enclosingCharacter = _props.enclosingCharacter,\n            uFEFF = _props.uFEFF;\n\n\n        var csvData = isAsync && typeof data === 'function' ? data() : data;\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(csvData, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event, true);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          data = _props2.data,\n          headers = _props2.headers,\n          separator = _props2.separator,\n          filename = _props2.filename,\n          uFEFF = _props2.uFEFF,\n          children = _props2.children,\n          onClick = _props2.onClick,\n          asyncOnClick = _props2.asyncOnClick,\n          enclosingCharacter = _props2.enclosingCharacter,\n          rest = _objectWithoutProperties(_props2, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      var isNodeEnvironment = typeof window === 'undefined';\n      var href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    var value = o[p];\n    if (value === undefined || value === null) {\n      arr.splice(1);\n    } else {\n      return value;\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return typeof element === 'undefined' || element === null ? '' : element;\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data.replace(/\"/g, '\"\"');\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array, _propTypes.func]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool,\n  enclosingCharacter: _propTypes.string\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];"],"names":["Loading","_jsx","className","children","src","require","alt","_ref","setProfileContent","profileContent","profileDetail","setProfileDetail","navigate","useNavigate","isActive","setIsActive","useRef","useState","errors","setErrors","email","password","passwordConfirmation","loginPasswordType","setLoginPasswordType","registerPasswordType","setRegisterPasswordType","menuShow","setMenuShow","registerShow","setRegisterShow","registerData","setRegisterData","username","password_confirmation","first_name","last_name","registerError","setRegisterError","post","navColour","setNavColour","titleColour","setTitleColour","textColour","setTextColour","_Fragment","_jsxs","style","backgroundColor","onClick","color","textUnderlineOffset","homeSelect","listingGeneratorSelect","leadGeneratorSelect","howToSelect","accountSelect","fontWeight","navbarColour","isUserAuth","token","localStorage","removeItem","window","location","reload","savedActionShow","handleSavedActionClose","setLeadGenSection","latestFavourites","Modal","show","onHide","backdrop","Body","closeAndLeave","increaseUsageCount","userData","loadUserData","savedProperties","archivedProperties","handleVisitUrl","handleSavedActionShow","setLatestFavourites","setSavedActionShow","loading","setLoading","postcodeSubstring","setPostcodeSubstring","roadSubstring","setRoadSubstring","currentEnergy","setCurrentEnergy","potentialEnergy","setPotentialEnergy","longPropertyList","setLongPropertyList","propertyList","setPropertyList","search","setSearch","channel","setChannel","inputType","setInputType","expandedItems","setExpandedItems","Set","matchingProperties","setMatchingProperties","liveProperties","async","console","log","postcode","data","axios","get","error","liveSalesProperties","type","value","onChange","e","target","placeholder","sanitizedPostcode","replace","Array","isArray","length","filteredData","filter","property","address","toLowerCase","includes","current_energy_efficiency","Number","potential_energy_efficiency","current_energy_rating","toUpperCase","potential_energy_rating","sort","a","b","Date","inspection_date","map","item","index","id","floor_area","final_floor_level","some","newFavourites","Math","floor","random","toString","epcData","response","headers","Authorization","getAccessToken","addPartialFavourite","has","newExpandedItems","delete","add","matches","toggleExpandedItem","matchingItem","matchingIndex","url","displayAddress","price","bedrooms","rightmove_id","agent","addedOn","propertyType","bathrooms","let_available_date","date_added_db","current_epc","potential_epc","added_revised","reduced_revised","addFavourite","SavedProperties","propertyRemoveShow","handleRemovePropertyClose","removeProperty","defaults","xsrfCookieName","xsrfHeaderName","LeadGenerator","setUserData","rentalLoading","setRentalLoading","salesLoading","setSalesLoading","variableSide","setVariableSide","subcodeSubstring","setSubcodeString","favouritedProperties","setFavouritedProperties","setSavedProperties","setArchivedProperties","sessionName","setSessionName","sessionStorage","getItem","targetPostcode","setTargetPostcode","combiniedProperties","setCombinedProperties","leadGenSection","noMatches","setNoMatches","singleMatches","setSingleMatches","multipleMatches","setMultipleMatches","salesNoMatches","setSalesNoMatches","salesSingleMatches","setSalesSingleMatches","salesMultipleMatches","setSalesMultipleMatches","channelView","setChannelView","expand","setExpand","leadGenDetails","setLeadGenDetails","subcode","bathrooms_min","bathrooms_max","bedrooms_min","bedrooms_max","rental_price_min","rental_price_max","sales_price_min","sales_price_max","rental_additional","selectedRows","setSelectedRows","selectedSalesRows","setSelectedSalesRows","csvData","setCsvData","viewport","setViewport","latitude","longitude","zoom","drawnPolygons","setDrawnPolygons","checkboxStatus","setCheckboxStatus","salesCheckboxStatus","setSalesCheckboxStatus","dateFilter","setDateFilter","favouriteIds","setFavouriteIds","removedIds","setRemovedIds","filteredProperties","setFilteredProperties","flteredSalesProperties","setFilteredSalesProperties","filteredMatchingProperties","setFilteredMatchingProperties","filteredSalesMatchingProperties","setFilteredSalesMatchingProperties","filteredNoProperties","setFiltedNoProperties","filteredSalesNoProperties","setFiltedSalesNoProperties","sortPriceOrder","setSortPriceOrder","sortPostcodeOrder","setSortPostcodeOrder","matchType","setMatchType","salesMatchType","setSalesMatchType","expandedMultipleMatches","setExpandedMultpleMatches","expandedSalesMultipleMatches","setExpandedSalesMultpleMatches","getUserToken","lead_gen_details","filteredFavourites","epc_favourites","fav","action","archivedFavourites","removedProperties","newFavouriteIds","dataCsv","transformCSVData","loadCombinedPropertiesFromUser","loadCombinedSalesFromUser","getUser","useEffect","deselectAllRows","deselectAllSalesRows","addressPostcode","property_type","date_added","deletedProperties","postcodeValue","subcodeValue","bedroomsMin","bedroomsMax","priceMin","priceMax","additionalRental","deletedPropertyIds","property_data","noMatchesData","epc_data_list","singleMatchesData","multipleMatchesData","open","salesPrices","rentalPrices","filterPropertiesByDate","properties","days","filterType","addedDate","parseDate","reducedDate","mostRecentDate","isWithinLastDays","isBeyondDays","filtered","dateStr","day","month","year","split","date","now","getFullYear","getMonth","getDate","sortByPrice","sorted","priceA","parseInt","priceB","salesSorted","multipleRentalSorted","multipleSalesSorted","noRentalSorted","noSalesSorted","sortByPostcode","localeCompare","setPropertyRemoveShow","status","message","toggleRowExpansion","prevExpandedRows","newExpandedRows","toggleSalesRowExpansion","addManualFavourite","WhiteNavbar","NavBarRevised","WhiteSidebar","borderBottom","prevData","NumericFormat","displayType","thousandSeparator","prefix","put","CSVLink","filename","getCurrentDate","String","padStart","textDecoration","favourite_ids","archiveFavourite","deleteFavourite","ManualMatcher","existingFavouriteIds","row","checked","every","Boolean","selectAllRows","existingCombinations","allRows","isRowSelected","selectedRow","handleCheckboxChange","updatedStatus","selectedProperty","prevRows","isExpanded","size","toFixed","epcItem","epcIndex","selectAllSalesRows","salesCheckboxChange","RemoveProperties","combinedFavourites","activeItem","setActiveItem","insightView","setInsightView","setTimeout","module","exports","Object","defineProperty","obj","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","_react2","__esModule","default","_core","_metaProps","CSVDownload","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","subClass","superClass","create","constructor","setPrototypeOf","_inherits","buildURI","apply","undefined","arguments","_props","separator","enclosingCharacter","uFEFF","specs","page","Component","defaultProps","assign","propTypes","_extends","source","hasOwnProperty","bind","event","isAsync","navigator","msSaveOrOpenBlob","preventDefault","blob","Blob","toCSV","msSaveBlob","_this2","proceed","handleLegacy","_this3","asyncOnClick","handleAsyncClick","handleSyncClick","_this4","_props2","rest","keys","indexOf","_objectWithoutProperties","href","createElement","download","ref","link","handleClick","_typeof","Symbol","iterator","_toConsumableArray","arr","arr2","from","isSafari","test","userAgent","isJsons","array","isArrays","jsonsHeaders","json","reduce","concat","jsons2arrays","jsons","headerLabels","headerKeys","header","label","object","getHeaderValue","foundValue","o","p","splice","elementOrEmpty","element","joiner","column","join","arrays2csv","jsons2csv","string2csv","csv","dataURI","URL","webkitURL","createObjectURL","_Download2","_interopRequireDefault","_Link2","PropsNotForwarded","_propTypes","oneOfType","string","func","isRequired","bool"],"sourceRoot":""}